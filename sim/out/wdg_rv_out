#! /home/user/open_tools/oss-cad-suite/bin/vvp
:ivl_version "13.0 (devel)" "(s20250103-60-gdb82380ce)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision - 9;
:vpi_module "/home/user/open_tools/oss-cad-suite/lib/ivl/system.vpi";
:vpi_module "/home/user/open_tools/oss-cad-suite/lib/ivl/vhdl_sys.vpi";
:vpi_module "/home/user/open_tools/oss-cad-suite/lib/ivl/vhdl_textio.vpi";
:vpi_module "/home/user/open_tools/oss-cad-suite/lib/ivl/v2005_math.vpi";
:vpi_module "/home/user/open_tools/oss-cad-suite/lib/ivl/va_math.vpi";
S_0x5555804bd8e0 .scope module, "wdg_tb" "wdg_tb" 2 3;
 .timescale -8 -9;
P_0x5555804fa100 .param/l "WB_ADDR_WIDTH" 0 2 6, +C4<00000000000000000000000000100000>;
P_0x5555804fa140 .param/l "WB_DATA_WIDTH" 0 2 5, +C4<00000000000000000000000000100000>;
P_0x5555804fa180 .param/l "WB_WDG_BASE" 0 2 9, +C4<00000000000000000000000000000000>;
P_0x5555804fa1c0 .param/l "WDG_TICK_BIT" 0 2 14, +C4<00000000000000000000000000000010>;
L_0x5555807142d0 .functor AND 1, v0x55558075c690_0, L_0x55558077b790, C4<1>, C4<1>;
L_0x55558071d470 .functor NOT 1, v0x55558075c510_0, C4<0>, C4<0>, C4<0>;
L_0x5555806fc170 .functor OR 1, L_0x55558077b6f0, L_0x55558071d470, C4<0>, C4<0>;
L_0x55558075d170 .functor AND 1, v0x55558075c690_0, L_0x5555806fc170, C4<1>, C4<1>;
v0x55558075c100_0 .net *"_ivl_2", 0 0, L_0x55558071d470;  1 drivers
v0x55558075c200_0 .net *"_ivl_4", 0 0, L_0x5555806fc170;  1 drivers
v0x55558075c2e0_0 .var "clk_tb", 0 0;
v0x55558075c380_0 .net "core_res_en_n", 0 0, L_0x55558077b6f0;  1 drivers
v0x55558075c420_0 .net "core_res_n", 0 0, L_0x55558075d170;  1 drivers
v0x55558075c510_0 .var "gpo", 0 0;
v0x55558075c5b0_0 .var "rd_data", 31 0;
v0x55558075c690_0 .var "res_n_tb", 0 0;
v0x55558075c730_0 .var/i "timeout", 31 0;
v0x55558075c7f0_0 .net "wb_ack_tb", 0 0, L_0x555580777480;  1 drivers
v0x55558075c890_0 .var "wb_adr_tb", 31 0;
v0x55558075c950_0 .var "wb_cyc_tb", 0 0;
v0x55558075c9f0_0 .net "wb_dat_r_tb", 31 0, L_0x555580777680;  1 drivers
v0x55558075cab0_0 .var "wb_dat_w_tb", 31 0;
v0x55558075cb70_0 .var "wb_sel_tb", 3 0;
v0x55558075cc30_0 .net "wb_stall_tb", 0 0, L_0x555580777320;  1 drivers
v0x55558075ccd0_0 .var "wb_stb_tb", 0 0;
v0x55558075cd70_0 .var "wb_we_tb", 0 0;
v0x55558075ce10_0 .net "wdg_res_en_n", 0 0, L_0x55558077b790;  1 drivers
v0x55558075ceb0_0 .net "wdg_res_n", 0 0, L_0x5555807142d0;  1 drivers
v0x55558075cf50_0 .net "wdg_to", 0 0, L_0x55558077b550;  1 drivers
S_0x555580664ad0 .scope module, "reset_ctrl_inst" "reset_ctrl" 2 82, 3 12 0, S_0x5555804bd8e0;
 .timescale -8 -9;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /INPUT 1 "sys_res_n";
    .port_info 2 /INPUT 1 "wdg_to";
    .port_info 3 /OUTPUT 1 "wdg_res_n";
    .port_info 4 /OUTPUT 1 "core_res_n";
P_0x5555804b9b00 .param/l "CORE_RST_CYCLES" 0 3 13, +C4<00000000000000000000000000111100>;
P_0x5555804b9b40 .param/l "MAX_COUNT_CYCLES" 1 3 25, +C4<0000000000000000000000000001000010>;
P_0x5555804b9b80 .param/l "PADDING_CYCLES" 0 3 14, +C4<00000000000000000000000000000001>;
P_0x5555804b9bc0 .param/l "S_CORE_RST" 1 3 40, C4<011>;
P_0x5555804b9c00 .param/l "S_IDLE" 1 3 39, C4<110>;
P_0x5555804b9c40 .param/l "S_PADDING" 1 3 41, C4<111>;
P_0x5555804b9c80 .param/l "S_WDG_RST" 1 3 42, C4<101>;
P_0x5555804b9cc0 .param/l "WDG_RST_CYCLES" 0 3 15, +C4<00000000000000000000000000000101>;
L_0x7eff798d1f98 .functor BUFT 1, C4<0000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x5555806fbe20_0 .net *"_ivl_11", 24 0, L_0x7eff798d1f98;  1 drivers
L_0x7eff798d1fe0 .functor BUFT 1, C4<00000000000000000000000000111011>, C4<0>, C4<0>, C4<0>;
v0x555580547330_0 .net/2u *"_ivl_12", 31 0, L_0x7eff798d1fe0;  1 drivers
v0x555580475c50_0 .net *"_ivl_14", 0 0, L_0x55558077bb30;  1 drivers
L_0x7eff798d2028 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v0x5555803b1cf0_0 .net/2u *"_ivl_16", 0 0, L_0x7eff798d2028;  1 drivers
L_0x7eff798d2070 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x5555803b0c50_0 .net/2u *"_ivl_18", 0 0, L_0x7eff798d2070;  1 drivers
v0x55558050db10_0 .net *"_ivl_22", 31 0, L_0x55558077bec0;  1 drivers
L_0x7eff798d20b8 .functor BUFT 1, C4<0000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x55558047ef40_0 .net *"_ivl_25", 24 0, L_0x7eff798d20b8;  1 drivers
L_0x7eff798d2100 .functor BUFT 1, C4<00000000000000000000000000111101>, C4<0>, C4<0>, C4<0>;
v0x555580697340_0 .net/2u *"_ivl_26", 31 0, L_0x7eff798d2100;  1 drivers
v0x5555803cf8e0_0 .net *"_ivl_28", 0 0, L_0x55558077c050;  1 drivers
L_0x7eff798d2148 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v0x5555803cdc00_0 .net/2u *"_ivl_30", 0 0, L_0x7eff798d2148;  1 drivers
L_0x7eff798d2190 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x5555806552e0_0 .net/2u *"_ivl_32", 0 0, L_0x7eff798d2190;  1 drivers
v0x5555806fed70_0 .net *"_ivl_36", 31 0, L_0x55558077c380;  1 drivers
L_0x7eff798d21d8 .functor BUFT 1, C4<0000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x55558070c9a0_0 .net *"_ivl_39", 24 0, L_0x7eff798d21d8;  1 drivers
L_0x7eff798d2220 .functor BUFT 1, C4<00000000000000000000000001000010>, C4<0>, C4<0>, C4<0>;
v0x55558070b840_0 .net/2u *"_ivl_40", 31 0, L_0x7eff798d2220;  1 drivers
v0x5555806a9a00_0 .net *"_ivl_42", 0 0, L_0x55558077c470;  1 drivers
L_0x7eff798d2268 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v0x5555806c7e50_0 .net/2u *"_ivl_44", 0 0, L_0x7eff798d2268;  1 drivers
L_0x7eff798d22b0 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x5555806f6a30_0 .net/2u *"_ivl_46", 0 0, L_0x7eff798d22b0;  1 drivers
v0x555580691c00_0 .net *"_ivl_7", 2 0, v0x55558057a410_0;  1 drivers
v0x5555806da2d0_0 .net *"_ivl_8", 31 0, L_0x55558077ba00;  1 drivers
v0x5555806d8cf0_0 .net "clk", 0 0, v0x55558075c2e0_0;  1 drivers
v0x5555806a4320_0 .var "cnt", 6 0;
v0x5555806b69e0_0 .net "core_res_n", 0 0, L_0x55558077b6f0;  alias, 1 drivers
v0x5555806816c0_0 .net "do_cnt", 0 0, L_0x55558077b830;  1 drivers
v0x555580579880_0 .net "done_padding", 0 0, L_0x55558077c190;  1 drivers
v0x5555805626e0_0 .net "done_reset_core", 0 0, L_0x55558077bce0;  1 drivers
v0x555580562400_0 .net "done_reset_wdg", 0 0, L_0x55558077c620;  1 drivers
v0x555580562570_0 .net "inp", 3 0, L_0x55558077b5c0;  1 drivers
v0x555580562290_0 .var "next_state", 2 0;
v0x55558057a410_0 .var "state", 2 0;
v0x55558057a2a0_0 .net "sys_res_n", 0 0, v0x55558075c690_0;  1 drivers
v0x555580579e00_0 .net "wdg_res_n", 0 0, L_0x55558077b790;  alias, 1 drivers
v0x555580562120_0 .net "wdg_to", 0 0, L_0x55558077b550;  alias, 1 drivers
E_0x55558059e470 .event posedge, v0x5555806d8cf0_0;
E_0x55558059ebb0 .event anyedge, v0x555580562570_0, v0x55558057a410_0;
L_0x55558077b5c0 .concat [ 1 1 1 1], L_0x55558077c620, L_0x55558077c190, L_0x55558077bce0, L_0x55558077b550;
L_0x55558077b6f0 .part v0x55558057a410_0, 2, 1;
L_0x55558077b790 .part v0x55558057a410_0, 1, 1;
L_0x55558077b830 .part v0x55558057a410_0, 0, 1;
L_0x55558077ba00 .concat [ 7 25 0 0], v0x5555806a4320_0, L_0x7eff798d1f98;
L_0x55558077bb30 .cmp/eq 32, L_0x55558077ba00, L_0x7eff798d1fe0;
L_0x55558077bce0 .functor MUXZ 1, L_0x7eff798d2070, L_0x7eff798d2028, L_0x55558077bb30, C4<>;
L_0x55558077bec0 .concat [ 7 25 0 0], v0x5555806a4320_0, L_0x7eff798d20b8;
L_0x55558077c050 .cmp/eq 32, L_0x55558077bec0, L_0x7eff798d2100;
L_0x55558077c190 .functor MUXZ 1, L_0x7eff798d2190, L_0x7eff798d2148, L_0x55558077c050, C4<>;
L_0x55558077c380 .concat [ 7 25 0 0], v0x5555806a4320_0, L_0x7eff798d21d8;
L_0x55558077c470 .cmp/eq 32, L_0x55558077c380, L_0x7eff798d2220;
L_0x55558077c620 .functor MUXZ 1, L_0x7eff798d22b0, L_0x7eff798d2268, L_0x55558077c470, C4<>;
S_0x5555806c8d20 .scope module, "wdg_rv_inst" "wdg_top" 2 57, 4 8 0, S_0x5555804bd8e0;
 .timescale -8 -9;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /INPUT 1 "res_n";
    .port_info 2 /INPUT 1 "i_wb_cyc";
    .port_info 3 /INPUT 1 "i_wb_stb";
    .port_info 4 /OUTPUT 1 "o_wb_stall";
    .port_info 5 /INPUT 32 "i_wb_adr";
    .port_info 6 /INPUT 1 "i_wb_we";
    .port_info 7 /INPUT 32 "i_wb_dat";
    .port_info 8 /INPUT 4 "i_wb_sel";
    .port_info 9 /OUTPUT 1 "o_wb_ack";
    .port_info 10 /OUTPUT 1 "o_wb_err";
    .port_info 11 /OUTPUT 1 "o_wb_rty";
    .port_info 12 /OUTPUT 32 "o_wb_dat";
    .port_info 13 /OUTPUT 1 "o_irq1";
    .port_info 14 /OUTPUT 1 "o_irq2";
P_0x55558065df60 .param/l "REG_ADDRESS_WIDTH" 0 4 10, +C4<00000000000000000000000000100000>;
P_0x55558065dfa0 .param/l "REG_BASE_ADDRESS" 0 4 12, +C4<00000000000000000000000000000000>;
P_0x55558065dfe0 .param/l "REG_DEFAULT_READ" 0 4 14, +C4<00000000000000000000000000000000>;
P_0x55558065e020 .param/l "REG_ERROR_STATUS" 0 4 13, +C4<00000000000000000000000000000000>;
P_0x55558065e060 .param/l "REG_INSERT_SLICER" 0 4 15, +C4<00000000000000000000000000000000>;
P_0x55558065e0a0 .param/l "REG_PRE_DECODE" 0 4 11, +C4<00000000000000000000000000000000>;
P_0x55558065e0e0 .param/l "REG_USE_STALLS" 0 4 16, +C4<00000000000000000000000000000000>;
P_0x55558065e120 .param/l "WB_DATA_WIDTH" 0 4 18, +C4<00000000000000000000000000100000>;
P_0x55558065e160 .param/l "WDG_PRECLKDIV_WIDTH" 0 4 21, +C4<00000000000000000000000000010100>;
P_0x55558065e1a0 .param/l "WDG_TICK_BIT" 0 4 20, +C4<00000000000000000000000000000010>;
L_0x55558077b1f0 .functor AND 1, L_0x5555807142d0, L_0x55558077af60, C4<1>, C4<1>;
L_0x55558077b4e0 .functor BUFZ 1, L_0x55558077ae70, C4<0>, C4<0>, C4<0>;
L_0x55558077b550 .functor BUFZ 1, L_0x55558077add0, C4<0>, C4<0>, C4<0>;
L_0x7eff798d1ec0 .functor BUFT 1, C4<0000000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x5555807598d0_0 .net/2u *"_ivl_0", 21 0, L_0x7eff798d1ec0;  1 drivers
L_0x7eff798d1f50 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x5555807599d0_0 .net/2u *"_ivl_10", 0 0, L_0x7eff798d1f50;  1 drivers
v0x555580759ab0_0 .net *"_ivl_6", 0 0, L_0x55558077b300;  1 drivers
L_0x7eff798d1f08 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v0x555580759b50_0 .net/2u *"_ivl_8", 0 0, L_0x7eff798d1f08;  1 drivers
v0x555580759c30_0 .net "clk", 0 0, v0x55558075c2e0_0;  alias, 1 drivers
v0x555580759d20_0 .net "cnt", 9 0, v0x55558054f730_0;  1 drivers
v0x555580759de0_0 .net "cnt0", 0 0, L_0x55558077b3a0;  1 drivers
v0x555580759e80_0 .net "do_cnt", 0 0, L_0x55558077af60;  1 drivers
v0x555580759f20_0 .net "i_wb_adr", 31 0, v0x55558075c890_0;  1 drivers
v0x555580759fc0_0 .net "i_wb_cyc", 0 0, v0x55558075c950_0;  1 drivers
v0x55558075a0b0_0 .net "i_wb_dat", 31 0, v0x55558075cab0_0;  1 drivers
v0x55558075a1a0_0 .net "i_wb_sel", 3 0, v0x55558075cb70_0;  1 drivers
v0x55558075a290_0 .net "i_wb_stb", 0 0, v0x55558075ccd0_0;  1 drivers
v0x55558075a380_0 .net "i_wb_we", 0 0, v0x55558075cd70_0;  1 drivers
v0x55558075a470_0 .net "o_irq1", 0 0, L_0x55558077b4e0;  1 drivers
v0x55558075a530_0 .net "o_irq2", 0 0, L_0x55558077b550;  alias, 1 drivers
v0x55558075a5d0_0 .net "o_wb_ack", 0 0, L_0x555580777480;  alias, 1 drivers
v0x55558075a6c0_0 .net "o_wb_dat", 31 0, L_0x555580777680;  alias, 1 drivers
v0x55558075a7b0_0 .net "o_wb_err", 0 0, L_0x5555807775e0;  1 drivers
L_0x7eff798d1c80 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x55558075a8a0_0 .net "o_wb_rty", 0 0, L_0x7eff798d1c80;  1 drivers
v0x55558075a990_0 .net "o_wb_stall", 0 0, L_0x555580777320;  alias, 1 drivers
v0x55558075aa80_0 .net "res_n", 0 0, L_0x5555807142d0;  alias, 1 drivers
v0x55558075ad30_0 .net "sw_trg_s1wto", 0 0, L_0x555580770cc0;  1 drivers
v0x55558075add0_0 .net "sw_trg_s2wto", 0 0, L_0x555580771d00;  1 drivers
v0x55558075ae70_0 .net "wdcsr_s1wto", 0 0, L_0x55558077ae70;  1 drivers
v0x55558075af10_0 .net "wdcsr_s2wto", 0 0, L_0x55558077add0;  1 drivers
v0x55558075afb0_0 .net "wdcsr_wden", 0 0, L_0x55558076ee70;  1 drivers
v0x55558075b050_0 .net "wdcsr_wtocnt", 9 0, L_0x555580772e00;  1 drivers
v0x55558075b110_0 .net "wdg_tick", 0 0, L_0x55558077b260;  1 drivers
L_0x55558077ab60 .concat [ 10 22 0 0], v0x55558054f730_0, L_0x7eff798d1ec0;
L_0x55558077b300 .cmp/eq 10, v0x55558054f730_0, L_0x555580772e00;
L_0x55558077b3a0 .functor MUXZ 1, L_0x7eff798d1f50, L_0x7eff798d1f08, L_0x55558077b300, C4<>;
S_0x5555806c8600 .scope module, "clk_div_inst" "clkdiv" 4 129, 5 1 0, S_0x5555806c8d20;
 .timescale -8 -9;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /INPUT 1 "res_n";
    .port_info 2 /OUTPUT 1 "wdg_tick";
P_0x5555806e0f30 .param/l "WDG_TICK_BIT" 0 5 3, +C4<00000000000000000000000000000010>;
P_0x5555806e0f70 .param/l "WIDTH" 0 5 2, +C4<00000000000000000000000000010100>;
v0x55558051d310_0 .net "clk", 0 0, v0x55558075c2e0_0;  alias, 1 drivers
v0x55558051de30_0 .var "cnt", 19 0;
v0x55558051ce80_0 .net "res_n", 0 0, L_0x5555807142d0;  alias, 1 drivers
v0x555580555940_0 .net "wdg_tick", 0 0, L_0x55558077b260;  alias, 1 drivers
L_0x55558077b260 .part v0x55558051de30_0, 2, 1;
S_0x555580681e70 .scope module, "cntr_inst" "cntr" 4 117, 6 2 0, S_0x5555806c8d20;
 .timescale -8 -9;
    .port_info 0 /INPUT 1 "mtick_clk";
    .port_info 1 /INPUT 1 "res_n";
    .port_info 2 /INPUT 10 "cnt_thrhd";
    .port_info 3 /OUTPUT 10 "count_wdg";
P_0x55558056f940 .param/l "WIDTH" 0 6 4, +C4<00000000000000000000000000001010>;
v0x5555805520a0_0 .net "cnt_thrhd", 9 0, L_0x555580772e00;  alias, 1 drivers
v0x55558054f730_0 .var "count_wdg", 9 0;
v0x555580562c90_0 .net "mtick_clk", 0 0, L_0x55558077b260;  alias, 1 drivers
v0x5555804b1a30_0 .net "res_n", 0 0, L_0x55558077b1f0;  1 drivers
v0x555580541050_0 .net "rst_n_sync", 0 0, L_0x55558077b150;  1 drivers
v0x555580540c70_0 .var "rst_sync", 1 0;
E_0x5555803c3c60/0 .event negedge, v0x555580541050_0;
E_0x5555803c3c60/1 .event posedge, v0x555580555940_0;
E_0x5555803c3c60 .event/or E_0x5555803c3c60/0, E_0x5555803c3c60/1;
E_0x555580721430/0 .event negedge, v0x5555804b1a30_0;
E_0x555580721430/1 .event posedge, v0x555580555940_0;
E_0x555580721430 .event/or E_0x555580721430/0, E_0x555580721430/1;
L_0x55558077b150 .part v0x555580540c70_0, 1, 1;
S_0x5555806f5fb0 .scope module, "fsm_inst" "fsm" 4 101, 7 4 0, S_0x5555806c8d20;
 .timescale -8 -9;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /INPUT 1 "res_n";
    .port_info 2 /INPUT 1 "en";
    .port_info 3 /INPUT 1 "count0";
    .port_info 4 /OUTPUT 1 "s2wto";
    .port_info 5 /OUTPUT 1 "s1wto";
    .port_info 6 /OUTPUT 1 "do_cnt";
    .port_info 7 /INPUT 1 "sw_trg_s1wto";
    .port_info 8 /INPUT 1 "sw_trg_s2wto";
P_0x555580663ba0 .param/l "S_CNT0" 0 7 19, C4<001>;
P_0x555580663be0 .param/l "S_CNT1" 0 7 21, C4<011>;
P_0x555580663c20 .param/l "S_IDLE" 0 7 18, C4<000>;
P_0x555580663c60 .param/l "S_RAISE_S1" 0 7 20, C4<010>;
P_0x555580663ca0 .param/l "S_RAISE_S2" 0 7 22, C4<110>;
v0x5555805409d0_0 .net *"_ivl_7", 2 0, v0x5555803ee180_0;  1 drivers
v0x555580449680_0 .net "clk", 0 0, v0x55558075c2e0_0;  alias, 1 drivers
v0x555580443ca0_0 .net "count0", 0 0, L_0x55558077b3a0;  alias, 1 drivers
v0x5555804c0c50_0 .net "do_cnt", 0 0, L_0x55558077af60;  alias, 1 drivers
v0x5555804b1760_0 .net "en", 0 0, L_0x55558076ee70;  alias, 1 drivers
v0x555580540ee0_0 .net "inp", 3 0, L_0x55558077ace0;  1 drivers
v0x5555803f3930_0 .var "next_state", 2 0;
v0x555580430c90_0 .net "res_n", 0 0, L_0x5555807142d0;  alias, 1 drivers
v0x5555804589c0_0 .net "s1wto", 0 0, L_0x55558077ae70;  alias, 1 drivers
v0x555580467240_0 .net "s2wto", 0 0, L_0x55558077add0;  alias, 1 drivers
v0x5555803ee180_0 .var "state", 2 0;
v0x5555805498f0_0 .net "sw_trg_s1wto", 0 0, L_0x555580770cc0;  alias, 1 drivers
v0x555580541740_0 .net "sw_trg_s2wto", 0 0, L_0x555580771d00;  alias, 1 drivers
E_0x55558056fe30/0 .event negedge, v0x55558051ce80_0;
E_0x55558056fe30/1 .event posedge, v0x5555806d8cf0_0;
E_0x55558056fe30 .event/or E_0x55558056fe30/0, E_0x55558056fe30/1;
E_0x55558056cc10 .event anyedge, v0x555580540ee0_0, v0x5555803ee180_0;
L_0x55558077ace0 .concat [ 1 1 1 1], L_0x555580771d00, L_0x555580770cc0, L_0x55558077b3a0, L_0x55558076ee70;
L_0x55558077add0 .part v0x5555803ee180_0, 2, 1;
L_0x55558077ae70 .part v0x5555803ee180_0, 1, 1;
L_0x55558077af60 .part v0x5555803ee180_0, 0, 1;
S_0x555580692ad0 .scope module, "wdgrv_regs_inst" "wdgrv_regs" 4 69, 8 2 0, S_0x5555806c8d20;
 .timescale -8 -9;
    .port_info 0 /INPUT 1 "i_clk";
    .port_info 1 /INPUT 1 "i_rst_n";
    .port_info 2 /INPUT 1 "i_wb_cyc";
    .port_info 3 /INPUT 1 "i_wb_stb";
    .port_info 4 /OUTPUT 1 "o_wb_stall";
    .port_info 5 /INPUT 32 "i_wb_adr";
    .port_info 6 /INPUT 1 "i_wb_we";
    .port_info 7 /INPUT 32 "i_wb_dat";
    .port_info 8 /INPUT 4 "i_wb_sel";
    .port_info 9 /OUTPUT 1 "o_wb_ack";
    .port_info 10 /OUTPUT 1 "o_wb_err";
    .port_info 11 /OUTPUT 1 "o_wb_rty";
    .port_info 12 /OUTPUT 32 "o_wb_dat";
    .port_info 13 /OUTPUT 1 "o_wdcsr_wden";
    .port_info 14 /INPUT 1 "i_wdcsr_rvd1";
    .port_info 15 /OUTPUT 1 "o_wdcsr_s1wto";
    .port_info 16 /INPUT 1 "i_wdcsr_s1wto_hw_set";
    .port_info 17 /OUTPUT 1 "o_wdcsr_s1wto_write_trigger";
    .port_info 18 /OUTPUT 1 "o_wdcsr_s2wto";
    .port_info 19 /INPUT 1 "i_wdcsr_s2wto_hw_set";
    .port_info 20 /OUTPUT 1 "o_wdcsr_s2wto_write_trigger";
    .port_info 21 /OUTPUT 10 "o_wdcsr_wtocnt";
    .port_info 22 /INPUT 18 "i_wdcsr_rvd2";
    .port_info 23 /INPUT 32 "i_wdcnt_cnt";
P_0x555580669630 .param/l "ADDRESS_WIDTH" 0 8 3, +C4<00000000000000000000000000100000>;
P_0x555580669670 .param/l "BASE_ADDRESS" 0 8 5, C4<00000000000000000000000000000000>;
P_0x5555806696b0 .param/l "DEFAULT_READ_DATA" 0 8 7, C4<00000000000000000000000000000000>;
P_0x5555806696f0 .param/l "ERROR_STATUS" 0 8 6, +C4<00000000000000000000000000000000>;
P_0x555580669730 .param/l "INSERT_SLICER" 0 8 8, +C4<00000000000000000000000000000000>;
P_0x555580669770 .param/l "PRE_DECODE" 0 8 4, +C4<00000000000000000000000000000000>;
P_0x5555806697b0 .param/l "USE_STALL" 0 8 9, +C4<00000000000000000000000000000000>;
v0x5555807576a0_0 .net "i_clk", 0 0, v0x55558075c2e0_0;  alias, 1 drivers
v0x555580757970_0 .net "i_rst_n", 0 0, L_0x5555807142d0;  alias, 1 drivers
v0x555580757a30_0 .net "i_wb_adr", 31 0, v0x55558075c890_0;  alias, 1 drivers
v0x555580757b30_0 .net "i_wb_cyc", 0 0, v0x55558075c950_0;  alias, 1 drivers
v0x555580757c00_0 .net "i_wb_dat", 31 0, v0x55558075cab0_0;  alias, 1 drivers
v0x555580757ca0_0 .net "i_wb_sel", 3 0, v0x55558075cb70_0;  alias, 1 drivers
v0x555580757d70_0 .net "i_wb_stb", 0 0, v0x55558075ccd0_0;  alias, 1 drivers
v0x555580757e40_0 .net "i_wb_we", 0 0, v0x55558075cd70_0;  alias, 1 drivers
v0x555580757f10_0 .net "i_wdcnt_cnt", 31 0, L_0x55558077ab60;  1 drivers
o0x7eff79d4c678 .functor BUFZ 1, c4<z>; HiZ drive
v0x555580757fe0_0 .net "i_wdcsr_rvd1", 0 0, o0x7eff79d4c678;  0 drivers
o0x7eff79d4d458 .functor BUFZ 18, c4<zzzzzzzzzzzzzzzzzz>; HiZ drive
v0x5555807580b0_0 .net "i_wdcsr_rvd2", 17 0, o0x7eff79d4d458;  0 drivers
v0x555580758180_0 .net "i_wdcsr_s1wto_hw_set", 0 0, L_0x55558077ae70;  alias, 1 drivers
v0x555580758220_0 .net "i_wdcsr_s2wto_hw_set", 0 0, L_0x55558077add0;  alias, 1 drivers
v0x5555807582c0_0 .net "o_wb_ack", 0 0, L_0x555580777480;  alias, 1 drivers
v0x555580758360_0 .net "o_wb_dat", 31 0, L_0x555580777680;  alias, 1 drivers
v0x555580758400_0 .net "o_wb_err", 0 0, L_0x5555807775e0;  alias, 1 drivers
v0x5555807584d0_0 .net "o_wb_rty", 0 0, L_0x7eff798d1c80;  alias, 1 drivers
v0x5555807585a0_0 .net "o_wb_stall", 0 0, L_0x555580777320;  alias, 1 drivers
v0x555580758670_0 .net "o_wdcsr_s1wto", 0 0, L_0x555580770ec0;  1 drivers
v0x555580758740_0 .net "o_wdcsr_s1wto_write_trigger", 0 0, L_0x555580770cc0;  alias, 1 drivers
v0x555580758830_0 .net "o_wdcsr_s2wto", 0 0, L_0x555580771f00;  1 drivers
v0x5555807588d0_0 .net "o_wdcsr_s2wto_write_trigger", 0 0, L_0x555580771d00;  alias, 1 drivers
v0x5555807589c0_0 .net "o_wdcsr_wden", 0 0, L_0x55558076ee70;  alias, 1 drivers
v0x555580758ab0_0 .net "o_wdcsr_wtocnt", 9 0, L_0x555580772e00;  alias, 1 drivers
v0x555580758ba0_0 .net "w_register_access", 1 0, L_0x555580778b60;  1 drivers
v0x555580758c40_0 .net "w_register_active", 1 0, L_0x5555807764f0;  1 drivers
v0x555580758ce0_0 .net "w_register_address", 2 0, L_0x555580778bd0;  1 drivers
v0x555580758e90_0 .net "w_register_read_data", 63 0, L_0x5555807766d0;  1 drivers
v0x555580758f80_0 .net "w_register_ready", 1 0, L_0x555580776590;  1 drivers
v0x555580759070_0 .net "w_register_status", 3 0, L_0x555580776630;  1 drivers
v0x555580759160_0 .net "w_register_strobe", 31 0, L_0x555580778ce0;  1 drivers
v0x555580759200_0 .net "w_register_valid", 0 0, L_0x555580778af0;  1 drivers
v0x5555807592a0_0 .net "w_register_value", 63 0, L_0x555580776770;  1 drivers
v0x555580759550_0 .net "w_register_write_data", 31 0, L_0x555580778c70;  1 drivers
L_0x5555807764f0 .concat8 [ 1 1 0 0], L_0x55558075e280, L_0x555580776090;
L_0x555580776590 .concat8 [ 1 1 0 0], L_0x55558075e2f0, L_0x555580776100;
L_0x7eff798d00f0 .functor BUFT 1, C4<00>, C4<0>, C4<0>, C4<0>;
L_0x7eff798d15c0 .functor BUFT 1, C4<00>, C4<0>, C4<0>, C4<0>;
L_0x555580776630 .concat8 [ 2 2 0 0], L_0x7eff798d00f0, L_0x7eff798d15c0;
L_0x5555807766d0 .concat8 [ 32 32 0 0], L_0x55558075e430, L_0x555580776240;
L_0x555580776770 .concat8 [ 32 32 0 0], L_0x55558075e5b0, L_0x5555807763c0;
S_0x5555806a51f0 .scope generate, "g_wdcnt" "g_wdcnt" 8 296, 8 296 0, S_0x555580692ad0;
 .timescale -8 -9;
v0x5555806e5660_0 .net "w_bit_field_mask", 31 0, L_0x55558077c990;  1 drivers
v0x5555806cc720_0 .net "w_bit_field_read_data", 31 0, L_0x555580776d50;  1 drivers
v0x555580692170_0 .net "w_bit_field_read_valid", 0 0, L_0x5555807758f0;  1 drivers
v0x555580691e00_0 .net "w_bit_field_value", 31 0, L_0x555580776e10;  1 drivers
v0x555580691ea0_0 .net "w_bit_field_write_data", 31 0, L_0x555580776350;  1 drivers
v0x5555806917c0_0 .net "w_bit_field_write_valid", 0 0, L_0x555580775220;  1 drivers
S_0x5555806b78b0 .scope generate, "__g_tie_off" "__g_tie_off" 8 304, 8 304 0, S_0x5555806a51f0;
 .timescale -8 -9;
S_0x555580682590 .scope generate, "g[0]" "g[0]" 8 306, 8 306 0, S_0x5555806b78b0;
 .timescale -8 -9;
P_0x5555804cfaf0 .param/l "__i" 1 8 306, +C4<00>;
S_0x5555806b7190 .scope generate, "g[1]" "g[1]" 8 306, 8 306 0, S_0x5555806b78b0;
 .timescale -8 -9;
P_0x5555804d0a40 .param/l "__i" 1 8 306, +C4<01>;
S_0x5555806dbd80 .scope generate, "g[2]" "g[2]" 8 306, 8 306 0, S_0x5555806b78b0;
 .timescale -8 -9;
P_0x55558051ab50 .param/l "__i" 1 8 306, +C4<010>;
S_0x5555806db290 .scope generate, "g[3]" "g[3]" 8 306, 8 306 0, S_0x5555806b78b0;
 .timescale -8 -9;
P_0x5555805075e0 .param/l "__i" 1 8 306, +C4<011>;
S_0x5555806e2470 .scope generate, "g[4]" "g[4]" 8 306, 8 306 0, S_0x5555806b78b0;
 .timescale -8 -9;
P_0x5555804ad5d0 .param/l "__i" 1 8 306, +C4<0100>;
S_0x5555806670f0 .scope generate, "g[5]" "g[5]" 8 306, 8 306 0, S_0x5555806b78b0;
 .timescale -8 -9;
P_0x555580499d30 .param/l "__i" 1 8 306, +C4<0101>;
S_0x55558066dbd0 .scope generate, "g[6]" "g[6]" 8 306, 8 306 0, S_0x5555806b78b0;
 .timescale -8 -9;
P_0x5555804349a0 .param/l "__i" 1 8 306, +C4<0110>;
S_0x5555806923b0 .scope generate, "g[7]" "g[7]" 8 306, 8 306 0, S_0x5555806b78b0;
 .timescale -8 -9;
P_0x5555804788c0 .param/l "__i" 1 8 306, +C4<0111>;
S_0x5555806a4ad0 .scope generate, "g[8]" "g[8]" 8 306, 8 306 0, S_0x5555806b78b0;
 .timescale -8 -9;
P_0x5555804a83e0 .param/l "__i" 1 8 306, +C4<01000>;
S_0x555580715950 .scope generate, "g[9]" "g[9]" 8 306, 8 306 0, S_0x5555806b78b0;
 .timescale -8 -9;
P_0x555580479320 .param/l "__i" 1 8 306, +C4<01001>;
S_0x5555806f9480 .scope generate, "g[10]" "g[10]" 8 306, 8 306 0, S_0x5555806b78b0;
 .timescale -8 -9;
P_0x5555805a3560 .param/l "__i" 1 8 306, +C4<01010>;
S_0x5555806fa080 .scope generate, "g[11]" "g[11]" 8 306, 8 306 0, S_0x5555806b78b0;
 .timescale -8 -9;
P_0x555580570e50 .param/l "__i" 1 8 306, +C4<01011>;
S_0x555580707700 .scope generate, "g[12]" "g[12]" 8 306, 8 306 0, S_0x5555806b78b0;
 .timescale -8 -9;
P_0x555580570ce0 .param/l "__i" 1 8 306, +C4<01100>;
S_0x5555806ffc90 .scope generate, "g[13]" "g[13]" 8 306, 8 306 0, S_0x5555806b78b0;
 .timescale -8 -9;
P_0x5555806935b0 .param/l "__i" 1 8 306, +C4<01101>;
S_0x555580700ac0 .scope generate, "g[14]" "g[14]" 8 306, 8 306 0, S_0x5555806b78b0;
 .timescale -8 -9;
P_0x55558054f5a0 .param/l "__i" 1 8 306, +C4<01110>;
S_0x55558066f630 .scope generate, "g[15]" "g[15]" 8 306, 8 306 0, S_0x5555806b78b0;
 .timescale -8 -9;
P_0x555580536be0 .param/l "__i" 1 8 306, +C4<01111>;
S_0x55558066f270 .scope generate, "g[16]" "g[16]" 8 306, 8 306 0, S_0x5555806b78b0;
 .timescale -8 -9;
P_0x55558051d8c0 .param/l "__i" 1 8 306, +C4<010000>;
S_0x55558066fa50 .scope generate, "g[17]" "g[17]" 8 306, 8 306 0, S_0x5555806b78b0;
 .timescale -8 -9;
P_0x5555805415b0 .param/l "__i" 1 8 306, +C4<010001>;
S_0x5555806c74e0 .scope generate, "g[18]" "g[18]" 8 306, 8 306 0, S_0x5555806b78b0;
 .timescale -8 -9;
P_0x555580470270 .param/l "__i" 1 8 306, +C4<010010>;
S_0x5555806c63a0 .scope generate, "g[19]" "g[19]" 8 306, 8 306 0, S_0x5555806b78b0;
 .timescale -8 -9;
P_0x5555803f31c0 .param/l "__i" 1 8 306, +C4<010011>;
S_0x555580680d50 .scope generate, "g[20]" "g[20]" 8 306, 8 306 0, S_0x5555806b78b0;
 .timescale -8 -9;
P_0x5555803f30a0 .param/l "__i" 1 8 306, +C4<010100>;
S_0x5555806b6070 .scope generate, "g[21]" "g[21]" 8 306, 8 306 0, S_0x5555806b78b0;
 .timescale -8 -9;
P_0x5555804d04d0 .param/l "__i" 1 8 306, +C4<010101>;
S_0x5555806b4f30 .scope generate, "g[22]" "g[22]" 8 306, 8 306 0, S_0x5555806b78b0;
 .timescale -8 -9;
P_0x555580507860 .param/l "__i" 1 8 306, +C4<010110>;
S_0x5555806a39b0 .scope generate, "g[23]" "g[23]" 8 306, 8 306 0, S_0x5555806b78b0;
 .timescale -8 -9;
P_0x555580507fa0 .param/l "__i" 1 8 306, +C4<010111>;
S_0x5555806a2870 .scope generate, "g[24]" "g[24]" 8 306, 8 306 0, S_0x5555806b78b0;
 .timescale -8 -9;
P_0x55558049a290 .param/l "__i" 1 8 306, +C4<011000>;
S_0x5555806d8320 .scope generate, "g[25]" "g[25]" 8 306, 8 306 0, S_0x5555806b78b0;
 .timescale -8 -9;
P_0x555580434630 .param/l "__i" 1 8 306, +C4<011001>;
S_0x5555806cd7e0 .scope generate, "g[26]" "g[26]" 8 306, 8 306 0, S_0x5555806b78b0;
 .timescale -8 -9;
P_0x5555805a0aa0 .param/l "__i" 1 8 306, +C4<011010>;
S_0x555580691230 .scope generate, "g[27]" "g[27]" 8 306, 8 306 0, S_0x5555806b78b0;
 .timescale -8 -9;
P_0x5555806ab450 .param/l "__i" 1 8 306, +C4<011011>;
S_0x5555806868d0 .scope generate, "g[28]" "g[28]" 8 306, 8 306 0, S_0x5555806b78b0;
 .timescale -8 -9;
P_0x555580698de0 .param/l "__i" 1 8 306, +C4<011100>;
S_0x5555806e3ed0 .scope generate, "g[29]" "g[29]" 8 306, 8 306 0, S_0x5555806b78b0;
 .timescale -8 -9;
P_0x5555804708c0 .param/l "__i" 1 8 306, +C4<011101>;
S_0x5555806e3b10 .scope generate, "g[30]" "g[30]" 8 306, 8 306 0, S_0x5555806b78b0;
 .timescale -8 -9;
P_0x5555806e9a70 .param/l "__i" 1 8 306, +C4<011110>;
S_0x5555806e42f0 .scope generate, "g[31]" "g[31]" 8 306, 8 306 0, S_0x5555806b78b0;
 .timescale -8 -9;
P_0x5555806e7920 .param/l "__i" 1 8 306, +C4<011111>;
S_0x5555806f5440 .scope generate, "g_cnt" "g_cnt" 8 331, 8 331 0, S_0x5555806a51f0;
 .timescale -8 -9;
S_0x5555806ea680 .scope module, "u_bit_field" "rggen_bit_field" 8 337, 9 2 0, S_0x5555806f5440;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "i_clk";
    .port_info 1 /INPUT 1 "i_rst_n";
    .port_info 2 /INPUT 1 "i_sw_write_valid";
    .port_info 3 /INPUT 1 "i_sw_write_enable";
    .port_info 4 /INPUT 1 "i_sw_read_valid";
    .port_info 5 /INPUT 32 "i_sw_mask";
    .port_info 6 /INPUT 32 "i_sw_write_data";
    .port_info 7 /OUTPUT 32 "o_sw_read_data";
    .port_info 8 /OUTPUT 32 "o_sw_value";
    .port_info 9 /OUTPUT 1 "o_write_trigger";
    .port_info 10 /OUTPUT 1 "o_read_trigger";
    .port_info 11 /INPUT 1 "i_hw_write_enable";
    .port_info 12 /INPUT 32 "i_hw_write_data";
    .port_info 13 /INPUT 32 "i_hw_set";
    .port_info 14 /INPUT 32 "i_hw_clear";
    .port_info 15 /INPUT 32 "i_value";
    .port_info 16 /INPUT 32 "i_mask";
    .port_info 17 /OUTPUT 32 "o_value";
    .port_info 18 /OUTPUT 32 "o_value_unmasked";
P_0x555580561a50 .param/l "EXTERNAL_MASK" 0 9 17, C4<0>;
P_0x555580561a90 .param/l "EXTERNAL_READ_DATA" 0 9 16, +C4<00000000000000000000000000000001>;
P_0x555580561ad0 .param/l "HW_ACCESS" 0 9 12, C4<000>;
P_0x555580561b10 .param/l "HW_CLEAR_WIDTH" 0 9 14, +C4<00000000000000000000000000100000>;
P_0x555580561b50 .param/l "HW_SET_WIDTH" 0 9 13, +C4<00000000000000000000000000100000>;
P_0x555580561b90 .param/l "HW_WRITE_ENABLE_POLARITY" 0 9 11, C4<1>;
P_0x555580561bd0 .param/l "INITIAL_VALUE" 0 9 4, C4<00000000000000000000000000000000>;
P_0x555580561c10 .param/l "PRECEDENCE_ACCESS" 0 9 5, +C4<00000000000000000000000000000001>;
P_0x555580561c50 .param/l "STORAGE" 0 9 15, +C4<00000000000000000000000000000000>;
P_0x555580561c90 .param/l "SW_READABLE" 1 9 41, C4<1>;
P_0x555580561cd0 .param/l "SW_READ_ACTION" 0 9 6, +C4<00000000000000000000000000000001>;
P_0x555580561d10 .param/l "SW_READ_UPDATE" 1 9 42, C4<0>;
P_0x555580561d50 .param/l "SW_WRITABLE" 1 9 40, C4<1>;
P_0x555580561d90 .param/l "SW_WRITE_ACTION" 0 9 7, +C4<00000000000000000000000000000001>;
P_0x555580561dd0 .param/l "SW_WRITE_CONTROL" 0 9 8, C4<0>;
P_0x555580561e10 .param/l "SW_WRITE_ENABLE_POLARITY" 0 9 10, C4<1>;
P_0x555580561e50 .param/l "SW_WRITE_ONCE" 0 9 9, C4<0>;
P_0x555580561e90 .param/l "TRIGGER" 0 9 18, +C4<00000000000000000000000000000000>;
P_0x555580561ed0 .param/l "WIDTH" 0 9 3, +C4<00000000000000000000000000100000>;
L_0x555580776d50 .functor BUFZ 32, L_0x555580776ce0, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0x555580776e10 .functor BUFZ 32, L_0x555580776c20, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0x555580777060 .functor BUFZ 32, L_0x555580776c20, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0x5555807770d0 .functor BUFZ 32, L_0x555580776c20, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
v0x5555806c9d00_0 .net "i_clk", 0 0, v0x55558075c2e0_0;  alias, 1 drivers
L_0x7eff798d1a88 .functor BUFT 1, C4<00000000000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x5555806ca0a0_0 .net "i_hw_clear", 31 0, L_0x7eff798d1a88;  1 drivers
L_0x7eff798d1a40 .functor BUFT 1, C4<00000000000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x5555806c9100_0 .net "i_hw_set", 31 0, L_0x7eff798d1a40;  1 drivers
L_0x7eff798d19f8 .functor BUFT 1, C4<00000000000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x5555806c94a0_0 .net "i_hw_write_data", 31 0, L_0x7eff798d19f8;  1 drivers
L_0x7eff798d19b0 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x5555806686c0_0 .net "i_hw_write_enable", 0 0, L_0x7eff798d19b0;  1 drivers
L_0x7eff798d1ad0 .functor BUFT 1, C4<11111111111111111111111111111111>, C4<0>, C4<0>, C4<0>;
v0x55558063f290_0 .net "i_mask", 31 0, L_0x7eff798d1ad0;  1 drivers
v0x55558066beb0_0 .net "i_rst_n", 0 0, L_0x5555807142d0;  alias, 1 drivers
v0x55558066ca70_0 .net "i_sw_mask", 31 0, L_0x55558077c990;  alias, 1 drivers
v0x55558066fde0_0 .net "i_sw_read_valid", 0 0, L_0x5555807758f0;  alias, 1 drivers
v0x555580670dc0_0 .net "i_sw_write_data", 31 0, L_0x555580776350;  alias, 1 drivers
L_0x7eff798d1968 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x5555806713d0_0 .net "i_sw_write_enable", 0 0, L_0x7eff798d1968;  1 drivers
v0x5555806f7500_0 .net "i_sw_write_valid", 0 0, L_0x555580775220;  alias, 1 drivers
v0x5555806f82e0_0 .net "i_value", 31 0, L_0x55558077ab60;  alias, 1 drivers
v0x5555806f8aa0_0 .net "o_read_trigger", 0 0, L_0x555580776fc0;  1 drivers
v0x555580706930_0 .net "o_sw_read_data", 31 0, L_0x555580776d50;  alias, 1 drivers
v0x5555807080c0_0 .net "o_sw_value", 31 0, L_0x555580776e10;  alias, 1 drivers
v0x5555806728e0_0 .net "o_value", 31 0, L_0x555580777060;  1 drivers
v0x5555806653e0_0 .net "o_value_unmasked", 31 0, L_0x5555807770d0;  1 drivers
v0x555580697fe0_0 .net "o_write_trigger", 0 0, L_0x555580776ed0;  1 drivers
L_0x7eff798d1848 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x5555806aa6a0_0 .net "w_hw_update", 0 0, L_0x7eff798d1848;  1 drivers
v0x55558070d210_0 .net "w_read_data", 31 0, L_0x555580776ce0;  1 drivers
v0x5555806e75b0_0 .net "w_sw_update", 1 0, L_0x555580776810;  1 drivers
L_0x7eff798d1890 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x555580608d10_0 .net "w_sw_write_done", 0 0, L_0x7eff798d1890;  1 drivers
v0x555580665e70_0 .net "w_trigger", 1 0, L_0x555580776ae0;  1 drivers
v0x5555807155c0_0 .net "w_value", 31 0, L_0x555580776c20;  1 drivers
L_0x7eff798d17b8 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x555580776810 .concat8 [ 1 1 0 0], L_0x7eff798d17b8, L_0x555580776950;
L_0x7eff798d18d8 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x7eff798d1920 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x555580776ae0 .concat8 [ 1 1 0 0], L_0x7eff798d18d8, L_0x7eff798d1920;
L_0x555580776ed0 .part L_0x555580776ae0, 0, 1;
L_0x555580776fc0 .part L_0x555580776ae0, 1, 1;
S_0x55558056f060 .scope generate, "g_read_data" "g_read_data" 9 382, 9 382 0, S_0x5555806ea680;
 .timescale 0 0;
L_0x555580776ce0 .functor BUFZ 32, L_0x55558077ab60, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
S_0x5555806690e0 .scope generate, "g_read_trigger" "g_read_trigger" 9 304, 9 304 0, S_0x5555806ea680;
 .timescale 0 0;
v0x5555806e5c70_0 .net/2u *"_ivl_0", 0 0, L_0x7eff798d1920;  1 drivers
S_0x55558066a690 .scope generate, "g_sw_read_update" "g_sw_read_update" 9 245, 9 245 0, S_0x5555806ea680;
 .timescale 0 0;
v0x555580685c20_0 .net/2u *"_ivl_0", 0 0, L_0x7eff798d17b8;  1 drivers
S_0x5555806dd8f0 .scope generate, "g_sw_write_done" "g_sw_write_done" 9 268, 9 268 0, S_0x5555806ea680;
 .timescale 0 0;
S_0x5555806def30 .scope generate, "g_sw_write_update" "g_sw_write_update" 9 252, 9 252 0, S_0x5555806ea680;
 .timescale 0 0;
v0x555580683d00_0 .net *"_ivl_0", 31 0, L_0x5555807768b0;  1 drivers
L_0x7eff798d1800 .functor BUFT 1, C4<0000000000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x555580693650_0 .net *"_ivl_3", 30 0, L_0x7eff798d1800;  1 drivers
v0x5555806939e0_0 .net *"_ivl_5", 0 0, L_0x555580776950;  1 drivers
L_0x5555807768b0 .concat [ 1 31 0 0], L_0x555580775220, L_0x7eff798d1800;
L_0x555580776950 .ufunc/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcnt.g_cnt.u_bit_field.get_sw_write_update, 1, L_0x5555807768b0, L_0x7eff798d1968, L_0x7eff798d1890 (v0x5555806c98d0_0, v0x5555806c60c0_0, v0x5555806b8b50_0) S_0x5555806f9960;
S_0x5555807135c0 .scope generate, "g_value" "g_value" 9 323, 9 323 0, S_0x5555806ea680;
 .timescale 0 0;
L_0x555580776c20 .functor BUFZ 32, L_0x55558077ab60, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
S_0x55558070df90 .scope generate, "g_write_trigger" "g_write_trigger" 9 287, 9 287 0, S_0x5555806ea680;
 .timescale 0 0;
v0x555580692ea0_0 .net/2u *"_ivl_0", 0 0, L_0x7eff798d18d8;  1 drivers
S_0x555580672580 .scope generate, "genblk3" "genblk3" 9 259, 9 259 0, S_0x5555806ea680;
 .timescale 0 0;
S_0x555580672200 .scope autofunction.vec4.s32, "get_hw_next_value" "get_hw_next_value" 9 177, 9 177 0, S_0x5555806ea680;
 .timescale 0 0;
v0x555580693280_0 .var "clear", 31 0;
v0x5555806ccb80_0 .var "current_value", 31 0;
; Variable get_hw_next_value is vec4 return value of scope S_0x555580672200
v0x5555806da3a0_0 .var/i "i", 31 0;
v0x5555806da670_0 .var "set", 31 0;
v0x5555806da040 .array "set_clear", 1 0, 31 0;
v0x555580693dd0_0 .var "value", 31 0;
v0x5555806971d0_0 .var "write_data", 31 0;
v0x5555806a5d10_0 .var "write_enable", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcnt.g_cnt.u_bit_field.get_hw_next_value ;
    %pushi/vec4 0, 0, 32;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x5555806da040, 4, 0;
    %pushi/vec4 0, 0, 32;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x5555806da040, 4, 0;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555806da3a0_0, 0, 32;
T_0.0 ; Top of for-loop
    %load/vec4 v0x5555806da3a0_0;
    %cmpi/s 32, 0, 32;
	  %jmp/0xz T_0.1, 5;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x5555806da040, 4;
    %load/vec4 v0x5555806da3a0_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_0.3, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x5555806da3a0_0;
    %store/vec4 v0x555580693dd0_0, 4, 1;
    %jmp T_0.4;
T_0.3 ;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x5555806da040, 4;
    %load/vec4 v0x5555806da3a0_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_0.5, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x5555806da3a0_0;
    %store/vec4 v0x555580693dd0_0, 4, 1;
    %jmp T_0.6;
T_0.5 ;
    %load/vec4 v0x5555806ccb80_0;
    %load/vec4 v0x5555806da3a0_0;
    %part/s 1;
    %ix/getv/s 4, v0x5555806da3a0_0;
    %store/vec4 v0x555580693dd0_0, 4, 1;
T_0.6 ;
T_0.4 ;
T_0.2 ; for-loop step statement
    %load/vec4 v0x5555806da3a0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555806da3a0_0, 0, 32;
    %jmp T_0.0;
T_0.1 ; for-loop exit label
    %load/vec4 v0x555580693dd0_0;
    %ret/vec4 0, 0, 32;  Assign to get_hw_next_value (store_vec4_to_lval)
    %end;
S_0x555580671f00 .scope autofunction.vec4.s1, "get_hw_update" "get_hw_update" 9 72, 9 72 0, S_0x5555806ea680;
 .timescale 0 0;
v0x5555806a60a0_0 .var "clear", 31 0;
; Variable get_hw_update is vec4 return value of scope S_0x555580671f00
v0x5555806a58f0_0 .var "set", 31 0;
v0x5555806a6490_0 .var "update", 2 0;
v0x5555806a9890_0 .var "write_enable", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcnt.g_cnt.u_bit_field.get_hw_update ;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x5555806a6490_0, 4, 1;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x5555806a6490_0, 4, 1;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 2, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x5555806a6490_0, 4, 1;
    %load/vec4 v0x5555806a6490_0;
    %parti/s 1, 0, 2;
    %flag_set/vec4 8;
    %jmp/1 T_1.8, 8;
    %load/vec4 v0x5555806a6490_0;
    %parti/s 1, 1, 2;
    %flag_set/vec4 9;
    %flag_or 8, 9;
T_1.8;
    %flag_get/vec4 8;
    %jmp/1 T_1.7, 8;
    %load/vec4 v0x5555806a6490_0;
    %parti/s 1, 2, 3;
    %or;
T_1.7;
    %ret/vec4 0, 0, 1;  Assign to get_hw_update (store_vec4_to_lval)
    %end;
S_0x5555806e6f40 .scope autofunction.vec4.s32, "get_sw_read_next_value" "get_sw_read_next_value" 9 86, 9 86 0, S_0x5555806ea680;
 .timescale 0 0;
v0x5555806b83d0_0 .var "current_value", 31 0;
; Variable get_sw_read_next_value is vec4 return value of scope S_0x5555806e6f40
v0x5555806b7c50_0 .var "mask", 31 0;
v0x5555806b7fb0_0 .var "value", 31 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcnt.g_cnt.u_bit_field.get_sw_read_next_value ;
    %pushi/vec4 1, 0, 32;
    %dup/vec4;
    %pushi/vec4 2, 0, 32;
    %cmp/u;
    %jmp/1 T_2.9, 6;
    %dup/vec4;
    %pushi/vec4 3, 0, 32;
    %cmp/u;
    %jmp/1 T_2.10, 6;
    %load/vec4 v0x5555806b83d0_0;
    %store/vec4 v0x5555806b7fb0_0, 0, 32;
    %jmp T_2.12;
T_2.9 ;
    %load/vec4 v0x5555806b7c50_0;
    %cmpi/ne 0, 0, 32;
    %flag_mov 8, 4;
    %jmp/0 T_2.13, 8;
    %pushi/vec4 0, 0, 32;
    %jmp/1 T_2.14, 8;
T_2.13 ; End of true expr.
    %load/vec4 v0x5555806b83d0_0;
    %jmp/0 T_2.14, 8;
 ; End of false expr.
    %blend;
T_2.14;
    %store/vec4 v0x5555806b7fb0_0, 0, 32;
    %jmp T_2.12;
T_2.10 ;
    %load/vec4 v0x5555806b7c50_0;
    %cmpi/ne 0, 0, 32;
    %flag_mov 8, 4;
    %jmp/0 T_2.15, 8;
    %pushi/vec4 4294967295, 0, 32;
    %jmp/1 T_2.16, 8;
T_2.15 ; End of true expr.
    %load/vec4 v0x5555806b83d0_0;
    %jmp/0 T_2.16, 8;
 ; End of false expr.
    %blend;
T_2.16;
    %store/vec4 v0x5555806b7fb0_0, 0, 32;
    %jmp T_2.12;
T_2.12 ;
    %pop/vec4 1;
    %load/vec4 v0x5555806b7fb0_0;
    %ret/vec4 0, 0, 32;  Assign to get_sw_read_next_value (store_vec4_to_lval)
    %end;
S_0x5555806e6c70 .scope autofunction.vec4.s32, "get_sw_write_next_value" "get_sw_write_next_value" 9 101, 9 101 0, S_0x5555806ea680;
 .timescale 0 0;
v0x555580674ba0_0 .var "current_value", 31 0;
; Variable get_sw_write_next_value is vec4 return value of scope S_0x5555806e6c70
v0x555580683110_0 .var/i "i", 31 0;
v0x555580683530_0 .var "mask", 31 0;
v0x5555806838c0_0 .var "value", 31 0;
v0x555580682960_0 .var "write_data", 31 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcnt.g_cnt.u_bit_field.get_sw_write_next_value ;
    %load/vec4 v0x555580674ba0_0;
    %store/vec4 v0x5555806838c0_0, 0, 32;
    %pushi/vec4 1, 0, 32;
    %dup/vec4;
    %pushi/vec4 1, 0, 32;
    %cmp/u;
    %jmp/1 T_3.17, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 32;
    %cmp/u;
    %jmp/1 T_3.18, 6;
    %dup/vec4;
    %pushi/vec4 3, 0, 32;
    %cmp/u;
    %jmp/1 T_3.19, 6;
    %dup/vec4;
    %pushi/vec4 4, 0, 32;
    %cmp/u;
    %jmp/1 T_3.20, 6;
    %dup/vec4;
    %pushi/vec4 5, 0, 32;
    %cmp/u;
    %jmp/1 T_3.21, 6;
    %dup/vec4;
    %pushi/vec4 6, 0, 32;
    %cmp/u;
    %jmp/1 T_3.22, 6;
    %dup/vec4;
    %pushi/vec4 7, 0, 32;
    %cmp/u;
    %jmp/1 T_3.23, 6;
    %dup/vec4;
    %pushi/vec4 8, 0, 32;
    %cmp/u;
    %jmp/1 T_3.24, 6;
    %dup/vec4;
    %pushi/vec4 9, 0, 32;
    %cmp/u;
    %jmp/1 T_3.25, 6;
    %jmp T_3.27;
T_3.17 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x555580683110_0, 0, 32;
T_3.28 ; Top of for-loop
    %load/vec4 v0x555580683110_0;
    %cmpi/s 32, 0, 32;
	  %jmp/0xz T_3.29, 5;
    %load/vec4 v0x555580683530_0;
    %load/vec4 v0x555580683110_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_3.31, 8;
    %load/vec4 v0x555580682960_0;
    %load/vec4 v0x555580683110_0;
    %part/s 1;
    %ix/getv/s 4, v0x555580683110_0;
    %store/vec4 v0x5555806838c0_0, 4, 1;
T_3.31 ;
T_3.30 ; for-loop step statement
    %load/vec4 v0x555580683110_0;
    %addi 1, 0, 32;
    %store/vec4 v0x555580683110_0, 0, 32;
    %jmp T_3.28;
T_3.29 ; for-loop exit label
    %jmp T_3.27;
T_3.18 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x555580683110_0, 0, 32;
T_3.33 ; Top of for-loop
    %load/vec4 v0x555580683110_0;
    %cmpi/s 32, 0, 32;
	  %jmp/0xz T_3.34, 5;
    %load/vec4 v0x555580683530_0;
    %load/vec4 v0x555580683110_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_3.38, 9;
    %load/vec4 v0x555580682960_0;
    %load/vec4 v0x555580683110_0;
    %part/s 1;
    %nor/r;
    %and;
T_3.38;
    %flag_set/vec4 8;
    %jmp/0xz  T_3.36, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x555580683110_0;
    %store/vec4 v0x5555806838c0_0, 4, 1;
T_3.36 ;
T_3.35 ; for-loop step statement
    %load/vec4 v0x555580683110_0;
    %addi 1, 0, 32;
    %store/vec4 v0x555580683110_0, 0, 32;
    %jmp T_3.33;
T_3.34 ; for-loop exit label
    %jmp T_3.27;
T_3.19 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x555580683110_0, 0, 32;
T_3.39 ; Top of for-loop
    %load/vec4 v0x555580683110_0;
    %cmpi/s 32, 0, 32;
	  %jmp/0xz T_3.40, 5;
    %load/vec4 v0x555580683530_0;
    %load/vec4 v0x555580683110_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_3.44, 9;
    %load/vec4 v0x555580682960_0;
    %load/vec4 v0x555580683110_0;
    %part/s 1;
    %and;
T_3.44;
    %flag_set/vec4 8;
    %jmp/0xz  T_3.42, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x555580683110_0;
    %store/vec4 v0x5555806838c0_0, 4, 1;
T_3.42 ;
T_3.41 ; for-loop step statement
    %load/vec4 v0x555580683110_0;
    %addi 1, 0, 32;
    %store/vec4 v0x555580683110_0, 0, 32;
    %jmp T_3.39;
T_3.40 ; for-loop exit label
    %jmp T_3.27;
T_3.20 ;
    %load/vec4 v0x555580683530_0;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_3.45, 4;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555806838c0_0, 0, 32;
T_3.45 ;
    %jmp T_3.27;
T_3.21 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x555580683110_0, 0, 32;
T_3.47 ; Top of for-loop
    %load/vec4 v0x555580683110_0;
    %cmpi/s 32, 0, 32;
	  %jmp/0xz T_3.48, 5;
    %load/vec4 v0x555580683530_0;
    %load/vec4 v0x555580683110_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_3.52, 9;
    %load/vec4 v0x555580682960_0;
    %load/vec4 v0x555580683110_0;
    %part/s 1;
    %nor/r;
    %and;
T_3.52;
    %flag_set/vec4 8;
    %jmp/0xz  T_3.50, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x555580683110_0;
    %store/vec4 v0x5555806838c0_0, 4, 1;
T_3.50 ;
T_3.49 ; for-loop step statement
    %load/vec4 v0x555580683110_0;
    %addi 1, 0, 32;
    %store/vec4 v0x555580683110_0, 0, 32;
    %jmp T_3.47;
T_3.48 ; for-loop exit label
    %jmp T_3.27;
T_3.22 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x555580683110_0, 0, 32;
T_3.53 ; Top of for-loop
    %load/vec4 v0x555580683110_0;
    %cmpi/s 32, 0, 32;
	  %jmp/0xz T_3.54, 5;
    %load/vec4 v0x555580683530_0;
    %load/vec4 v0x555580683110_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_3.58, 9;
    %load/vec4 v0x555580682960_0;
    %load/vec4 v0x555580683110_0;
    %part/s 1;
    %and;
T_3.58;
    %flag_set/vec4 8;
    %jmp/0xz  T_3.56, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x555580683110_0;
    %store/vec4 v0x5555806838c0_0, 4, 1;
T_3.56 ;
T_3.55 ; for-loop step statement
    %load/vec4 v0x555580683110_0;
    %addi 1, 0, 32;
    %store/vec4 v0x555580683110_0, 0, 32;
    %jmp T_3.53;
T_3.54 ; for-loop exit label
    %jmp T_3.27;
T_3.23 ;
    %load/vec4 v0x555580683530_0;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_3.59, 4;
    %pushi/vec4 4294967295, 0, 32;
    %store/vec4 v0x5555806838c0_0, 0, 32;
T_3.59 ;
    %jmp T_3.27;
T_3.24 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x555580683110_0, 0, 32;
T_3.61 ; Top of for-loop
    %load/vec4 v0x555580683110_0;
    %cmpi/s 32, 0, 32;
	  %jmp/0xz T_3.62, 5;
    %load/vec4 v0x555580683530_0;
    %load/vec4 v0x555580683110_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_3.66, 9;
    %load/vec4 v0x555580682960_0;
    %load/vec4 v0x555580683110_0;
    %part/s 1;
    %nor/r;
    %and;
T_3.66;
    %flag_set/vec4 8;
    %jmp/0xz  T_3.64, 8;
    %load/vec4 v0x555580674ba0_0;
    %load/vec4 v0x555580683110_0;
    %part/s 1;
    %inv;
    %ix/getv/s 4, v0x555580683110_0;
    %store/vec4 v0x5555806838c0_0, 4, 1;
T_3.64 ;
T_3.63 ; for-loop step statement
    %load/vec4 v0x555580683110_0;
    %addi 1, 0, 32;
    %store/vec4 v0x555580683110_0, 0, 32;
    %jmp T_3.61;
T_3.62 ; for-loop exit label
    %jmp T_3.27;
T_3.25 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x555580683110_0, 0, 32;
T_3.67 ; Top of for-loop
    %load/vec4 v0x555580683110_0;
    %cmpi/s 32, 0, 32;
	  %jmp/0xz T_3.68, 5;
    %load/vec4 v0x555580683530_0;
    %load/vec4 v0x555580683110_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_3.72, 9;
    %load/vec4 v0x555580682960_0;
    %load/vec4 v0x555580683110_0;
    %part/s 1;
    %and;
T_3.72;
    %flag_set/vec4 8;
    %jmp/0xz  T_3.70, 8;
    %load/vec4 v0x555580674ba0_0;
    %load/vec4 v0x555580683110_0;
    %part/s 1;
    %inv;
    %ix/getv/s 4, v0x555580683110_0;
    %store/vec4 v0x5555806838c0_0, 4, 1;
T_3.70 ;
T_3.69 ; for-loop step statement
    %load/vec4 v0x555580683110_0;
    %addi 1, 0, 32;
    %store/vec4 v0x555580683110_0, 0, 32;
    %jmp T_3.67;
T_3.68 ; for-loop exit label
    %jmp T_3.27;
T_3.27 ;
    %pop/vec4 1;
    %load/vec4 v0x5555806838c0_0;
    %ret/vec4 0, 0, 32;  Assign to get_sw_write_next_value (store_vec4_to_lval)
    %end;
S_0x5555806f9960 .scope autofunction.vec4.s1, "get_sw_write_update" "get_sw_write_update" 9 47, 9 47 0, S_0x5555806ea680;
 .timescale 0 0;
; Variable get_sw_write_update is vec4 return value of scope S_0x5555806f9960
v0x5555806bb1d0_0 .var "update", 2 0;
v0x5555806b8b50_0 .var "write_done", 0 0;
v0x5555806c60c0_0 .var "write_enable", 0 0;
v0x5555806c98d0_0 .var "write_valid", 31 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcnt.g_cnt.u_bit_field.get_sw_write_update ;
    %load/vec4 v0x5555806c98d0_0;
    %pad/u 1;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x5555806bb1d0_0, 4, 1;
    %pushi/vec4 1, 0, 1;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x5555806bb1d0_0, 4, 1;
    %pushi/vec4 1, 0, 1;
    %ix/load 4, 2, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x5555806bb1d0_0, 4, 1;
    %load/vec4 v0x5555806bb1d0_0;
    %parti/s 1, 0, 2;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_4.74, 9;
    %load/vec4 v0x5555806bb1d0_0;
    %parti/s 1, 1, 2;
    %and;
T_4.74;
    %flag_set/vec4 8;
    %flag_get/vec4 8;
    %jmp/0 T_4.73, 8;
    %load/vec4 v0x5555806bb1d0_0;
    %parti/s 1, 2, 3;
    %and;
T_4.73;
    %ret/vec4 0, 0, 1;  Assign to get_sw_write_update (store_vec4_to_lval)
    %end;
S_0x5555806fe690 .scope module, "u_register" "rggen_default_register" 8 311, 10 1 0, S_0x5555806a51f0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "i_clk";
    .port_info 1 /INPUT 1 "i_rst_n";
    .port_info 2 /INPUT 1 "i_register_valid";
    .port_info 3 /INPUT 2 "i_register_access";
    .port_info 4 /INPUT 3 "i_register_address";
    .port_info 5 /INPUT 32 "i_register_write_data";
    .port_info 6 /INPUT 32 "i_register_strobe";
    .port_info 7 /OUTPUT 1 "o_register_active";
    .port_info 8 /OUTPUT 1 "o_register_ready";
    .port_info 9 /OUTPUT 2 "o_register_status";
    .port_info 10 /OUTPUT 32 "o_register_read_data";
    .port_info 11 /OUTPUT 32 "o_register_value";
    .port_info 12 /OUTPUT 1 "o_bit_field_write_valid";
    .port_info 13 /OUTPUT 1 "o_bit_field_read_valid";
    .port_info 14 /OUTPUT 32 "o_bit_field_mask";
    .port_info 15 /OUTPUT 32 "o_bit_field_write_data";
    .port_info 16 /INPUT 32 "i_bit_field_read_data";
    .port_info 17 /INPUT 32 "i_bit_field_value";
P_0x5555806fdcf0 .param/l "ADDRESS_WIDTH" 0 10 4, +C4<00000000000000000000000000000011>;
P_0x5555806fdd30 .param/l "BUS_WIDTH" 0 10 6, +C4<00000000000000000000000000100000>;
P_0x5555806fdd70 .param/l "DATA_WIDTH" 0 10 7, +C4<00000000000000000000000000100000>;
P_0x5555806fddb0 .param/l "OFFSET_ADDRESS" 0 10 5, C4<100>;
P_0x5555806fddf0 .param/l "READABLE" 0 10 2, +C4<00000000000000000000000000000001>;
P_0x5555806fde30 .param/l "WRITABLE" 0 10 3, +C4<00000000000000000000000000000000>;
v0x555580700770_0 .net "i_bit_field_read_data", 31 0, L_0x555580776d50;  alias, 1 drivers
v0x5555806a3f10_0 .net "i_bit_field_value", 31 0, L_0x555580776e10;  alias, 1 drivers
v0x5555806a3310_0 .net "i_clk", 0 0, v0x55558075c2e0_0;  alias, 1 drivers
v0x5555806a33b0_0 .net "i_register_access", 1 0, L_0x555580778b60;  alias, 1 drivers
v0x5555806a2e00_0 .net "i_register_address", 2 0, L_0x555580778bd0;  alias, 1 drivers
v0x555580696cb0_0 .net "i_register_strobe", 31 0, L_0x555580778ce0;  alias, 1 drivers
v0x555580696d70_0 .net "i_register_valid", 0 0, L_0x555580778af0;  alias, 1 drivers
v0x5555806a1420_0 .net "i_register_write_data", 31 0, L_0x555580778c70;  alias, 1 drivers
v0x5555806a14c0_0 .net "i_rst_n", 0 0, L_0x5555807142d0;  alias, 1 drivers
v0x5555806d92d0_0 .net "o_bit_field_mask", 31 0, L_0x55558077c990;  alias, 1 drivers
v0x5555806d8ef0_0 .net "o_bit_field_read_valid", 0 0, L_0x5555807758f0;  alias, 1 drivers
v0x5555806d8f90_0 .net "o_bit_field_write_data", 31 0, L_0x555580776350;  alias, 1 drivers
v0x5555806d88b0_0 .net "o_bit_field_write_valid", 0 0, L_0x555580775220;  alias, 1 drivers
v0x5555806d7c80_0 .net "o_register_active", 0 0, L_0x555580776090;  1 drivers
v0x5555806d7d20_0 .net "o_register_read_data", 31 0, L_0x555580776240;  1 drivers
v0x5555806d7770_0 .net "o_register_ready", 0 0, L_0x555580776100;  1 drivers
v0x5555806d7810_0 .net "o_register_status", 1 0, L_0x7eff798d15c0;  1 drivers
v0x5555806d7240_0 .net "o_register_value", 31 0, L_0x5555807763c0;  1 drivers
S_0x5555806fd350 .scope module, "u_register_common" "rggen_register_common" 10 35, 11 2 0, S_0x5555806fe690;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "i_clk";
    .port_info 1 /INPUT 1 "i_rst_n";
    .port_info 2 /INPUT 1 "i_register_valid";
    .port_info 3 /INPUT 2 "i_register_access";
    .port_info 4 /INPUT 3 "i_register_address";
    .port_info 5 /INPUT 32 "i_register_write_data";
    .port_info 6 /INPUT 32 "i_register_strobe";
    .port_info 7 /OUTPUT 1 "o_register_active";
    .port_info 8 /OUTPUT 1 "o_register_ready";
    .port_info 9 /OUTPUT 2 "o_register_status";
    .port_info 10 /OUTPUT 32 "o_register_read_data";
    .port_info 11 /OUTPUT 32 "o_register_value";
    .port_info 12 /INPUT 1 "i_additional_match";
    .port_info 13 /OUTPUT 1 "o_bit_field_write_valid";
    .port_info 14 /OUTPUT 1 "o_bit_field_read_valid";
    .port_info 15 /OUTPUT 32 "o_bit_field_mask";
    .port_info 16 /OUTPUT 32 "o_bit_field_write_data";
    .port_info 17 /INPUT 32 "i_bit_field_read_data";
    .port_info 18 /INPUT 32 "i_bit_field_value";
P_0x5555805a04d0 .param/l "ADDRESS_WIDTH" 0 11 5, +C4<00000000000000000000000000000011>;
P_0x5555805a0510 .param/l "BUS_BYTE_WIDTH" 1 11 32, +C4<00000000000000000000000000000100>;
P_0x5555805a0550 .param/l "BUS_WIDTH" 0 11 7, +C4<00000000000000000000000000100000>;
P_0x5555805a0590 .param/l "DATA_BYTE_WIDTH" 1 11 33, +C4<00000000000000000000000000000100>;
P_0x5555805a05d0 .param/l "DATA_WIDTH" 0 11 8, +C4<00000000000000000000000000100000>;
P_0x5555805a0610 .param/l "OFFSET_ADDRESS" 0 11 6, C4<100>;
P_0x5555805a0650 .param/l "READABLE" 0 11 3, +C4<00000000000000000000000000000001>;
P_0x5555805a0690 .param/l "USE_ADDITIONAL_MATCH" 0 11 9, C4<0>;
P_0x5555805a06d0 .param/l "WORDS" 1 11 31, +C4<00000000000000000000000000000001>;
P_0x5555805a0710 .param/l "WRITABLE" 0 11 4, +C4<00000000000000000000000000000000>;
L_0x7eff798d1650 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x5555807750d0 .functor OR 1, L_0x555580775a90, L_0x7eff798d1650, C4<0>, C4<0>;
L_0x555580775140 .functor AND 1, L_0x5555807750d0, L_0x555580775c60, C4<1>, C4<1>;
L_0x7eff798d1608 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x7eff798d1698 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x5555807751b0 .functor AND 1, L_0x7eff798d1608, L_0x7eff798d1698, C4<1>, C4<1>;
L_0x555580775220 .functor OR 1, L_0x555580775140, L_0x5555807751b0, C4<0>, C4<0>;
L_0x5555807753a0 .functor OR 1, L_0x555580775a90, L_0x7eff798d1650, C4<0>, C4<0>;
L_0x5555807755a0 .functor AND 1, L_0x5555807753a0, L_0x5555807754b0, C4<1>, C4<1>;
L_0x5555807757e0 .functor AND 1, L_0x7eff798d1608, L_0x5555807756f0, C4<1>, C4<1>;
L_0x5555807758f0 .functor OR 1, L_0x5555807755a0, L_0x5555807757e0, C4<0>, C4<0>;
L_0x555580775a90 .functor AND 1, L_0x555580778af0, L_0x555580775060, C4<1>, C4<1>;
L_0x555580775eb0 .functor BUFZ 32, L_0x555580778c70, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0x555580776090 .functor BUFZ 1, L_0x555580775060, C4<0>, C4<0>, C4<0>;
L_0x555580776240 .functor BUFZ 32, L_0x555580776480, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0x5555807763c0 .functor BUFZ 32, L_0x555580776e10, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0x55558077c990 .functor BUFT 32, L_0x555580775d00, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0x555580776350 .functor BUFT 32, L_0x555580775eb0, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
v0x555580667910_0 .net *"_ivl_1", 0 0, L_0x5555807750d0;  1 drivers
v0x5555806674e0_0 .net *"_ivl_11", 0 0, L_0x5555807753a0;  1 drivers
v0x5555806675a0_0 .net *"_ivl_14", 0 0, L_0x5555807754b0;  1 drivers
v0x5555806c83a0_0 .net *"_ivl_16", 0 0, L_0x5555807755a0;  1 drivers
v0x5555806c8460_0 .net *"_ivl_19", 0 0, L_0x5555807756f0;  1 drivers
v0x5555806c80c0_0 .net *"_ivl_21", 0 0, L_0x5555807757e0;  1 drivers
v0x5555806c7a40_0 .net *"_ivl_4", 0 0, L_0x555580775140;  1 drivers
v0x5555806c7b00_0 .net *"_ivl_7", 0 0, L_0x5555807751b0;  1 drivers
L_0x7eff798d1770 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v0x5555806c6e40_0 .net "i_additional_match", 0 0, L_0x7eff798d1770;  1 drivers
v0x5555806c6ee0_0 .net "i_bit_field_read_data", 31 0, L_0x555580776d50;  alias, 1 drivers
v0x5555806c6930_0 .net "i_bit_field_value", 31 0, L_0x555580776e10;  alias, 1 drivers
v0x5555806c69d0_0 .net "i_clk", 0 0, v0x55558075c2e0_0;  alias, 1 drivers
v0x5555806bacb0_0 .net "i_register_access", 1 0, L_0x555580778b60;  alias, 1 drivers
v0x5555806bad50_0 .net "i_register_address", 2 0, L_0x555580778bd0;  alias, 1 drivers
v0x555580681c10_0 .net "i_register_strobe", 31 0, L_0x555580778ce0;  alias, 1 drivers
v0x555580681cd0_0 .net "i_register_valid", 0 0, L_0x555580778af0;  alias, 1 drivers
v0x5555806818e0_0 .net "i_register_write_data", 31 0, L_0x555580778c70;  alias, 1 drivers
v0x555580681980_0 .net "i_rst_n", 0 0, L_0x5555807142d0;  alias, 1 drivers
v0x5555806806b0_0 .net "o_bit_field_mask", 31 0, L_0x55558077c990;  alias, 1 drivers
v0x555580680780_0 .net "o_bit_field_read_valid", 0 0, L_0x5555807758f0;  alias, 1 drivers
v0x5555806801d0_0 .net "o_bit_field_write_data", 31 0, L_0x555580776350;  alias, 1 drivers
v0x55558067fc70_0 .net "o_bit_field_write_valid", 0 0, L_0x555580775220;  alias, 1 drivers
v0x55558067fd40_0 .net "o_register_active", 0 0, L_0x555580776090;  alias, 1 drivers
v0x555580674680_0 .net "o_register_read_data", 31 0, L_0x555580776240;  alias, 1 drivers
v0x555580674720_0 .net "o_register_ready", 0 0, L_0x555580776100;  alias, 1 drivers
v0x5555806b6f30_0 .net "o_register_status", 1 0, L_0x7eff798d15c0;  alias, 1 drivers
v0x5555806b6be0_0 .net "o_register_value", 31 0, L_0x5555807763c0;  alias, 1 drivers
v0x5555806b65d0_0 .net "w_active", 0 0, L_0x555580775060;  1 drivers
v0x5555806b6690_0 .net "w_backdoor_valid", 0 0, L_0x7eff798d1608;  1 drivers
v0x5555806b59d0_0 .net "w_frontdoor_valid", 0 0, L_0x555580775a90;  1 drivers
v0x5555806b5a90 .array "w_mask", 1 0;
v0x5555806b5a90_0 .net v0x5555806b5a90 0, 31 0, L_0x555580775d00; 1 drivers
L_0x7eff798d16e0 .functor BUFT 1, C4<00000000000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x5555806b5a90_1 .net v0x5555806b5a90 1, 31 0, L_0x7eff798d16e0; 1 drivers
v0x5555806b54c0_0 .net "w_match", 0 0, L_0x555580774f50;  1 drivers
v0x5555806b5580_0 .net "w_pending_valid", 0 0, L_0x7eff798d1650;  1 drivers
v0x5555806a9370_0 .net "w_read_data", 31 0, L_0x555580776480;  1 drivers
v0x5555806a9430 .array "w_write", 1 0;
v0x5555806a9430_0 .net v0x5555806a9430 0, 0 0, L_0x555580775c60; 1 drivers
v0x5555806a9430_1 .net v0x5555806a9430 1, 0 0, L_0x7eff798d1698; 1 drivers
v0x5555806b3ae0 .array "w_write_data", 1 0;
v0x5555806b3ae0_0 .net v0x5555806b3ae0 0, 31 0, L_0x555580775eb0; 1 drivers
L_0x7eff798d1728 .functor BUFT 1, C4<00000000000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x5555806b3ae0_1 .net v0x5555806b3ae0 1, 31 0, L_0x7eff798d1728; 1 drivers
L_0x5555807754b0 .reduce/nor L_0x555580775c60;
L_0x5555807756f0 .reduce/nor L_0x7eff798d1698;
L_0x555580775c60 .part L_0x555580778b60, 0, 1;
L_0x555580775d00 .ufunc/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcnt.u_register.u_register_common.get_mask, 32, L_0x555580774f50, L_0x555580778ce0 (v0x555580701ed0_0, v0x5555806f7d10_0) S_0x5555806e16d0;
L_0x555580776100 .reduce/nor L_0x7eff798d1608;
S_0x555580478300 .scope autofunction.vec4.s3, "calc_start_address" "calc_start_address" 11 67, 11 67 0, S_0x5555806fd350;
 .timescale 0 0;
; Variable calc_start_address is vec4 return value of scope S_0x555580478300
v0x555580700810_0 .var/i "delta", 31 0;
v0x5555806700c0_0 .var/i "index", 31 0;
v0x555580670160_0 .var "offset_address", 2 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcnt.u_register.u_register_common.calc_start_address ;
    %pushi/vec4 4, 0, 3;
    %store/vec4 v0x555580670160_0, 0, 3;
    %load/vec4 v0x5555806700c0_0;
    %muli 4, 0, 32;
    %store/vec4 v0x555580700810_0, 0, 32;
    %load/vec4 v0x555580670160_0;
    %load/vec4 v0x555580700810_0;
    %parti/s 3, 0, 2;
    %add;
    %ret/vec4 0, 0, 3;  Assign to calc_start_address (store_vec4_to_lval)
    %end;
S_0x5555806fc950 .scope generate, "g_decoder[0]" "g_decoder[0]" 11 42, 11 42 0, S_0x5555806fd350;
 .timescale 0 0;
P_0x555580672de0 .param/l "g_i" 1 11 42, +C4<00>;
S_0x5555806fbc70 .scope module, "u_decoder" "rggen_address_decoder" 11 51, 12 1 0, S_0x5555806fc950;
 .timescale 0 0;
    .port_info 0 /INPUT 3 "i_address";
    .port_info 1 /INPUT 2 "i_access";
    .port_info 2 /INPUT 1 "i_additional_match";
    .port_info 3 /OUTPUT 1 "o_match";
P_0x555580433f60 .param/l "ACCESS_BIT" 1 12 16, +C4<00000000000000000000000000000000>;
P_0x555580433fa0 .param/l "BEGIN_ADDRESS" 1 12 17, C4<1>;
P_0x555580433fe0 .param/l "BEGIN_ADDRESS_ALL_0" 1 12 19, C4<0>;
P_0x555580434020 .param/l "BUS_WIDTH" 0 12 5, +C4<00000000000000000000000000100000>;
P_0x555580434060 .param/l "BYTE_SIZE" 0 12 7, +C4<00000000000000000000000000000100>;
P_0x5555804340a0 .param/l "END_ADDRESS" 1 12 18, C4<1>;
P_0x5555804340e0 .param/l "END_ADDRESS_ALL_1" 1 12 20, C4<1>;
P_0x555580434120 .param/l "LSB" 1 12 15, +C4<000000000000000000000000000000010>;
P_0x555580434160 .param/l "READABLE" 0 12 2, +C4<00000000000000000000000000000001>;
P_0x5555804341a0 .param/l "START_ADDRESS" 0 12 6, C4<100>;
P_0x5555804341e0 .param/l "USE_ADDITIONAL_MATCH" 0 12 8, C4<0>;
P_0x555580434220 .param/l "WIDTH" 0 12 4, +C4<00000000000000000000000000000011>;
P_0x555580434260 .param/l "WRITABLE" 0 12 3, +C4<00000000000000000000000000000000>;
L_0x555580774e40 .functor AND 1, L_0x5555807745b0, L_0x555580774d30, C4<1>, C4<1>;
L_0x7eff798d1578 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
L_0x555580774f50 .functor AND 1, L_0x555580774e40, L_0x7eff798d1578, C4<1>, C4<1>;
v0x5555806f9ba0_0 .net *"_ivl_3", 0 0, L_0x555580774e40;  1 drivers
v0x5555806f9000_0 .net "i_access", 1 0, L_0x555580778b60;  alias, 1 drivers
v0x555580707a50_0 .net "i_additional_match", 0 0, L_0x7eff798d1770;  alias, 1 drivers
v0x555580707af0_0 .net "i_address", 2 0, L_0x555580778bd0;  alias, 1 drivers
v0x555580703140_0 .net "o_match", 0 0, L_0x555580774f50;  alias, 1 drivers
v0x555580702c30_0 .net "w_access_match", 0 0, L_0x555580774d30;  1 drivers
v0x555580702cf0_0 .net "w_additional_match", 0 0, L_0x7eff798d1578;  1 drivers
v0x5555807027c0_0 .net "w_address_match", 0 0, L_0x5555807745b0;  1 drivers
L_0x555580774b50 .part L_0x555580778bd0, 2, 1;
L_0x555580774c90 .part L_0x555580778b60, 0, 1;
S_0x55558066ce30 .scope autofunction.vec4.s1, "calc_end_address" "calc_end_address" 12 38, 12 38 0, S_0x5555806fbc70;
 .timescale 0 0;
v0x5555806e4960_0 .var "address", 2 0;
v0x5555806e4a00_0 .var/i "byte_size", 31 0;
; Variable calc_end_address is vec4 return value of scope S_0x55558066ce30
v0x55558070a670_0 .var/i "delta", 31 0;
v0x55558070a3a0_0 .var "start_address", 2 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcnt.u_register.u_register_common.g_decoder\x5B0\x5D.u_decoder.calc_end_address ;
    %load/vec4 v0x5555806e4a00_0;
    %subi 1, 0, 32;
    %store/vec4 v0x55558070a670_0, 0, 32;
    %load/vec4 v0x55558070a3a0_0;
    %load/vec4 v0x55558070a670_0;
    %parti/s 3, 0, 2;
    %add;
    %store/vec4 v0x5555806e4960_0, 0, 3;
    %load/vec4 v0x5555806e4960_0;
    %parti/s 1, 2, 3;
    %ret/vec4 0, 0, 1;  Assign to calc_end_address (store_vec4_to_lval)
    %end;
S_0x55558066c270 .scope autofunction.vec4.u32, "clog2" "clog2" 12 22, 12 22 0, S_0x5555806fbc70;
 .timescale 0 0;
; Variable clog2 is vec4 return value of scope S_0x55558066c270
v0x5555806b4c20_0 .var/i "n", 31 0;
v0x5555806a2560_0 .var/i "result", 31 0;
v0x5555806a2620_0 .var/i "value", 31 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcnt.u_register.u_register_common.g_decoder\x5B0\x5D.u_decoder.clog2 ;
    %load/vec4 v0x5555806b4c20_0;
    %subi 1, 0, 32;
    %store/vec4 v0x5555806a2620_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555806a2560_0, 0, 32;
T_7.75 ;
    %load/vec4 v0x5555806a2620_0;
    %cmpi/s 0, 0, 32;
    %flag_or 5, 4; GT is !LE
    %flag_inv 5;
    %jmp/0xz T_7.76, 5;
    %load/vec4 v0x5555806a2560_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555806a2560_0, 0, 32;
    %load/vec4 v0x5555806a2620_0;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %shiftr 4;
    %store/vec4 v0x5555806a2620_0, 0, 32;
    %jmp T_7.75;
T_7.76 ;
    %load/vec4 v0x5555806a2560_0;
    %ret/vec4 0, 0, 32;  Assign to clog2 (store_vec4_to_lval)
    %end;
S_0x5555806c8a50 .scope generate, "g_access_match" "g_access_match" 12 79, 12 79 0, S_0x5555806fbc70;
 .timescale 0 0;
L_0x7eff798d1530 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x555580774d30 .functor XNOR 1, L_0x555580774c90, L_0x7eff798d1530, C4<0>, C4<0>;
v0x5555806e20c0_0 .net *"_ivl_0", 0 0, L_0x555580774c90;  1 drivers
v0x5555806e2180_0 .net/2u *"_ivl_1", 0 0, L_0x7eff798d1530;  1 drivers
S_0x5555806822c0 .scope generate, "g_additional_match" "g_additional_match" 12 86, 12 86 0, S_0x5555806fbc70;
 .timescale 0 0;
S_0x5555806a4f20 .scope generate, "g_address_match" "g_address_match" 12 58, 12 58 0, S_0x5555806fbc70;
 .timescale 0 0;
L_0x7eff798d14e8 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
L_0x5555807745b0 .functor XNOR 1, L_0x555580774b50, L_0x7eff798d14e8, C4<0>, C4<0>;
v0x5555806e72b0_0 .net *"_ivl_0", 0 0, L_0x555580774b50;  1 drivers
v0x5555806e7370_0 .net/2u *"_ivl_1", 0 0, L_0x7eff798d14e8;  1 drivers
S_0x555580692800 .scope generate, "g_match" "g_match" 11 59, 11 59 0, S_0x5555806fd350;
 .timescale 0 0;
L_0x555580775060 .functor BUFZ 1, L_0x555580774f50, C4<0>, C4<0>, C4<0>;
S_0x5555806e16d0 .scope autofunction.vec4.s32, "get_mask" "get_mask" 11 97, 11 97 0, S_0x5555806fd350;
 .timescale 0 0;
; Variable get_mask is vec4 return value of scope S_0x5555806e16d0
v0x5555807021e0_0 .var "mask", 31 0;
v0x555580701ed0_0 .var "match", 0 0;
v0x5555806f7d10_0 .var "strobe", 31 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcnt.u_register.u_register_common.get_mask ;
    %load/vec4 v0x5555806f7d10_0;
    %store/vec4 v0x5555807021e0_0, 0, 32;
    %load/vec4 v0x5555807021e0_0;
    %ret/vec4 0, 0, 32;  Assign to get_mask (store_vec4_to_lval)
    %end;
S_0x5555806e0b10 .scope module, "u_read_data_mux" "rggen_mux" 11 134, 13 1 0, S_0x5555806fd350;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "i_select";
    .port_info 1 /INPUT 32 "i_data";
    .port_info 2 /OUTPUT 32 "o_data";
P_0x55558071f580 .param/l "ENTRIES" 0 13 3, +C4<00000000000000000000000000000001>;
P_0x55558071f5c0 .param/l "WIDTH" 0 13 2, +C4<00000000000000000000000000100000>;
v0x55558066ee80_0 .net "i_data", 31 0, L_0x555580776d50;  alias, 1 drivers
v0x55558066e100_0 .net "i_select", 0 0, L_0x555580774f50;  alias, 1 drivers
v0x55558066e1c0_0 .net "o_data", 31 0, L_0x555580776480;  alias, 1 drivers
S_0x5555806fb290 .scope generate, "g" "g" 13 10, 13 10 0, S_0x5555806e0b10;
 .timescale 0 0;
L_0x555580776480 .functor BUFZ 32, L_0x555580776d50, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
S_0x5555806ff900 .scope generate, "g_wdcsr" "g_wdcsr" 8 82, 8 82 0, S_0x555580692ad0;
 .timescale -8 -9;
v0x555580690f00_0 .net "w_bit_field_mask", 31 0, L_0x55558077c800;  1 drivers
v0x55558074a9f0_0 .net "w_bit_field_read_data", 31 0, L_0x555580774620;  1 drivers
v0x55558074aab0_0 .net "w_bit_field_read_valid", 0 0, L_0x55558075de50;  1 drivers
v0x55558074ac60_0 .net "w_bit_field_value", 31 0, L_0x5555807748a0;  1 drivers
v0x55558074ad50_0 .net "w_bit_field_write_data", 31 0, L_0x55558075e540;  1 drivers
v0x55558074aeb0_0 .net "w_bit_field_write_valid", 0 0, L_0x55558075d7c0;  1 drivers
L_0x55558076f0a0 .part L_0x55558077c800, 0, 1;
L_0x55558076f140 .part L_0x55558075e540, 0, 1;
L_0x55558076fdd0 .part L_0x55558077c800, 1, 1;
L_0x55558076ff00 .part L_0x55558075e540, 1, 1;
L_0x5555807710b0 .part L_0x55558077c800, 2, 1;
L_0x555580771150 .part L_0x55558075e540, 2, 1;
L_0x5555807720f0 .part L_0x55558077c800, 3, 1;
L_0x555580772190 .part L_0x55558075e540, 3, 1;
L_0x555580773060 .part L_0x55558077c800, 4, 10;
L_0x555580773100 .part L_0x55558075e540, 4, 10;
L_0x555580774330 .part L_0x55558077c800, 14, 18;
L_0x5555807743d0 .part L_0x55558075e540, 14, 18;
LS_0x555580774620_0_0 .concat8 [ 1 1 1 1], L_0x55558076eb80, L_0x55558076f8f0, L_0x555580770b90, L_0x555580771bd0;
LS_0x555580774620_0_4 .concat8 [ 10 18 0 0], L_0x555580772ae0, L_0x555580773dc0;
L_0x555580774620 .concat8 [ 4 28 0 0], LS_0x555580774620_0_0, LS_0x555580774620_0_4;
LS_0x5555807748a0_0_0 .concat8 [ 1 1 1 1], L_0x55558076ec40, L_0x55558076f9e0, L_0x555580770c50, L_0x555580771c90;
LS_0x5555807748a0_0_4 .concat8 [ 10 18 0 0], L_0x555580772ba0, L_0x555580773eb0;
L_0x5555807748a0 .concat8 [ 4 28 0 0], LS_0x5555807748a0_0_0, LS_0x5555807748a0_0_4;
S_0x5555806d94a0 .scope generate, "__g_tie_off" "__g_tie_off" 8 90, 8 90 0, S_0x5555806ff900;
 .timescale -8 -9;
S_0x555580669ce0 .scope generate, "g[0]" "g[0]" 8 92, 8 92 0, S_0x5555806d94a0;
 .timescale -8 -9;
P_0x555580690b90 .param/l "__i" 1 8 92, +C4<00>;
S_0x55558066eae0 .scope generate, "g[1]" "g[1]" 8 92, 8 92 0, S_0x5555806d94a0;
 .timescale -8 -9;
P_0x555580690680 .param/l "__i" 1 8 92, +C4<01>;
S_0x55558066d2e0 .scope generate, "g[2]" "g[2]" 8 92, 8 92 0, S_0x5555806d94a0;
 .timescale -8 -9;
P_0x555580690150 .param/l "__i" 1 8 92, +C4<010>;
S_0x55558066b770 .scope generate, "g[3]" "g[3]" 8 92, 8 92 0, S_0x5555806d94a0;
 .timescale -8 -9;
P_0x555580685700 .param/l "__i" 1 8 92, +C4<011>;
S_0x555580668100 .scope generate, "g[4]" "g[4]" 8 92, 8 92 0, S_0x5555806d94a0;
 .timescale -8 -9;
P_0x5555806e36b0 .param/l "__i" 1 8 92, +C4<0100>;
S_0x5555806de4f0 .scope generate, "g[5]" "g[5]" 8 92, 8 92 0, S_0x5555806d94a0;
 .timescale -8 -9;
P_0x5555806e29f0 .param/l "__i" 1 8 92, +C4<0101>;
S_0x5555806e3380 .scope generate, "g[6]" "g[6]" 8 92, 8 92 0, S_0x5555806d94a0;
 .timescale -8 -9;
P_0x5555806dc1c0 .param/l "__i" 1 8 92, +C4<0110>;
S_0x5555806e1b80 .scope generate, "g[7]" "g[7]" 8 92, 8 92 0, S_0x5555806d94a0;
 .timescale -8 -9;
P_0x5555806f5a20 .param/l "__i" 1 8 92, +C4<0111>;
S_0x5555806e0010 .scope generate, "g[8]" "g[8]" 8 92, 8 92 0, S_0x5555806d94a0;
 .timescale -8 -9;
P_0x5555806e3660 .param/l "__i" 1 8 92, +C4<01000>;
S_0x5555806dc9e0 .scope generate, "g[9]" "g[9]" 8 92, 8 92 0, S_0x5555806d94a0;
 .timescale -8 -9;
P_0x5555806f4900 .param/l "__i" 1 8 92, +C4<01001>;
S_0x55558066cbd0 .scope generate, "g[10]" "g[10]" 8 92, 8 92 0, S_0x5555806d94a0;
 .timescale -8 -9;
P_0x5555806f4360 .param/l "__i" 1 8 92, +C4<01010>;
S_0x55558066c010 .scope generate, "g[11]" "g[11]" 8 92, 8 92 0, S_0x5555806d94a0;
 .timescale -8 -9;
P_0x5555806f4440 .param/l "__i" 1 8 92, +C4<01011>;
S_0x55558066ae20 .scope generate, "g[12]" "g[12]" 8 92, 8 92 0, S_0x5555806d94a0;
 .timescale -8 -9;
P_0x5555806e9680 .param/l "__i" 1 8 92, +C4<01100>;
S_0x5555806b75e0 .scope generate, "g[13]" "g[13]" 8 92, 8 92 0, S_0x5555806d94a0;
 .timescale -8 -9;
P_0x555580671c00 .param/l "__i" 1 8 92, +C4<01101>;
S_0x5555806d9980 .scope generate, "g[14]" "g[14]" 8 92, 8 92 0, S_0x5555806d94a0;
 .timescale -8 -9;
P_0x555580671ce0 .param/l "__i" 1 8 92, +C4<01110>;
S_0x5555806dde40 .scope generate, "g[15]" "g[15]" 8 92, 8 92 0, S_0x5555806d94a0;
 .timescale -8 -9;
P_0x5555806e6990 .param/l "__i" 1 8 92, +C4<01111>;
S_0x5555806e1470 .scope generate, "g[16]" "g[16]" 8 92, 8 92 0, S_0x5555806d94a0;
 .timescale -8 -9;
P_0x55558067fb00 .param/l "__i" 1 8 92, +C4<010000>;
S_0x5555806e08b0 .scope generate, "g[17]" "g[17]" 8 92, 8 92 0, S_0x5555806d94a0;
 .timescale -8 -9;
P_0x5555806d7050 .param/l "__i" 1 8 92, +C4<010001>;
S_0x5555806df6c0 .scope generate, "g[18]" "g[18]" 8 92, 8 92 0, S_0x5555806d94a0;
 .timescale -8 -9;
P_0x55558068fed0 .param/l "__i" 1 8 92, +C4<010010>;
S_0x555580670680 .scope generate, "g[19]" "g[19]" 8 92, 8 92 0, S_0x5555806d94a0;
 .timescale -8 -9;
P_0x555580670860 .param/l "__i" 1 8 92, +C4<010011>;
S_0x555580499370 .scope generate, "g[20]" "g[20]" 8 92, 8 92 0, S_0x5555806d94a0;
 .timescale -8 -9;
P_0x555580499550 .param/l "__i" 1 8 92, +C4<010100>;
S_0x555580499630 .scope generate, "g[21]" "g[21]" 8 92, 8 92 0, S_0x5555806d94a0;
 .timescale -8 -9;
P_0x5555806f40e0 .param/l "__i" 1 8 92, +C4<010101>;
S_0x5555804a7ce0 .scope generate, "g[22]" "g[22]" 8 92, 8 92 0, S_0x5555806d94a0;
 .timescale -8 -9;
P_0x5555804a7ec0 .param/l "__i" 1 8 92, +C4<010110>;
S_0x5555804a7fa0 .scope generate, "g[23]" "g[23]" 8 92, 8 92 0, S_0x5555806d94a0;
 .timescale -8 -9;
P_0x5555806f41c0 .param/l "__i" 1 8 92, +C4<010111>;
S_0x555580506ff0 .scope generate, "g[24]" "g[24]" 8 92, 8 92 0, S_0x5555806d94a0;
 .timescale -8 -9;
P_0x5555805071d0 .param/l "__i" 1 8 92, +C4<011000>;
S_0x5555805072b0 .scope generate, "g[25]" "g[25]" 8 92, 8 92 0, S_0x5555806d94a0;
 .timescale -8 -9;
P_0x5555806c7240 .param/l "__i" 1 8 92, +C4<011001>;
S_0x555580515b50 .scope generate, "g[26]" "g[26]" 8 92, 8 92 0, S_0x5555806d94a0;
 .timescale -8 -9;
P_0x555580515d30 .param/l "__i" 1 8 92, +C4<011010>;
S_0x555580515e10 .scope generate, "g[27]" "g[27]" 8 92, 8 92 0, S_0x5555806d94a0;
 .timescale -8 -9;
P_0x5555806c23b0 .param/l "__i" 1 8 92, +C4<011011>;
S_0x5555804cf3b0 .scope generate, "g[28]" "g[28]" 8 92, 8 92 0, S_0x5555806d94a0;
 .timescale -8 -9;
P_0x5555804cf590 .param/l "__i" 1 8 92, +C4<011100>;
S_0x5555804cf670 .scope generate, "g[29]" "g[29]" 8 92, 8 92 0, S_0x5555806d94a0;
 .timescale -8 -9;
P_0x5555806c2490 .param/l "__i" 1 8 92, +C4<011101>;
S_0x5555804f5410 .scope generate, "g[30]" "g[30]" 8 92, 8 92 0, S_0x5555806d94a0;
 .timescale -8 -9;
P_0x5555804f5610 .param/l "__i" 1 8 92, +C4<011110>;
S_0x5555804f56f0 .scope generate, "g[31]" "g[31]" 8 92, 8 92 0, S_0x5555806d94a0;
 .timescale -8 -9;
P_0x555580680a20 .param/l "__i" 1 8 92, +C4<011111>;
S_0x5555803f1dd0 .scope generate, "g_rvd1" "g_rvd1" 8 145, 8 145 0, S_0x5555806ff900;
 .timescale -8 -9;
S_0x5555803f1fb0 .scope module, "u_bit_field" "rggen_bit_field" 8 151, 9 2 0, S_0x5555803f1dd0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "i_clk";
    .port_info 1 /INPUT 1 "i_rst_n";
    .port_info 2 /INPUT 1 "i_sw_write_valid";
    .port_info 3 /INPUT 1 "i_sw_write_enable";
    .port_info 4 /INPUT 1 "i_sw_read_valid";
    .port_info 5 /INPUT 1 "i_sw_mask";
    .port_info 6 /INPUT 1 "i_sw_write_data";
    .port_info 7 /OUTPUT 1 "o_sw_read_data";
    .port_info 8 /OUTPUT 1 "o_sw_value";
    .port_info 9 /OUTPUT 1 "o_write_trigger";
    .port_info 10 /OUTPUT 1 "o_read_trigger";
    .port_info 11 /INPUT 1 "i_hw_write_enable";
    .port_info 12 /INPUT 1 "i_hw_write_data";
    .port_info 13 /INPUT 1 "i_hw_set";
    .port_info 14 /INPUT 1 "i_hw_clear";
    .port_info 15 /INPUT 1 "i_value";
    .port_info 16 /INPUT 1 "i_mask";
    .port_info 17 /OUTPUT 1 "o_value";
    .port_info 18 /OUTPUT 1 "o_value_unmasked";
P_0x55558054eec0 .param/l "EXTERNAL_MASK" 0 9 17, C4<0>;
P_0x55558054ef00 .param/l "EXTERNAL_READ_DATA" 0 9 16, +C4<00000000000000000000000000000001>;
P_0x55558054ef40 .param/l "HW_ACCESS" 0 9 12, C4<000>;
P_0x55558054ef80 .param/l "HW_CLEAR_WIDTH" 0 9 14, +C4<00000000000000000000000000000001>;
P_0x55558054efc0 .param/l "HW_SET_WIDTH" 0 9 13, +C4<00000000000000000000000000000001>;
P_0x55558054f000 .param/l "HW_WRITE_ENABLE_POLARITY" 0 9 11, C4<1>;
P_0x55558054f040 .param/l "INITIAL_VALUE" 0 9 4, C4<0>;
P_0x55558054f080 .param/l "PRECEDENCE_ACCESS" 0 9 5, +C4<00000000000000000000000000000001>;
P_0x55558054f0c0 .param/l "STORAGE" 0 9 15, +C4<00000000000000000000000000000000>;
P_0x55558054f100 .param/l "SW_READABLE" 1 9 41, C4<1>;
P_0x55558054f140 .param/l "SW_READ_ACTION" 0 9 6, +C4<00000000000000000000000000000001>;
P_0x55558054f180 .param/l "SW_READ_UPDATE" 1 9 42, C4<0>;
P_0x55558054f1c0 .param/l "SW_WRITABLE" 1 9 40, C4<1>;
P_0x55558054f200 .param/l "SW_WRITE_ACTION" 0 9 7, +C4<00000000000000000000000000000001>;
P_0x55558054f240 .param/l "SW_WRITE_CONTROL" 0 9 8, C4<0>;
P_0x55558054f280 .param/l "SW_WRITE_ENABLE_POLARITY" 0 9 10, C4<1>;
P_0x55558054f2c0 .param/l "SW_WRITE_ONCE" 0 9 9, C4<0>;
P_0x55558054f300 .param/l "TRIGGER" 0 9 18, +C4<00000000000000000000000000000000>;
P_0x55558054f340 .param/l "WIDTH" 0 9 3, +C4<00000000000000000000000000000001>;
L_0x55558076f8f0 .functor BUFZ 1, L_0x55558076f880, C4<0>, C4<0>, C4<0>;
L_0x55558076f9e0 .functor BUFZ 1, L_0x55558076f7c0, C4<0>, C4<0>, C4<0>;
L_0x55558076fc60 .functor BUFZ 1, L_0x55558076f7c0, C4<0>, C4<0>, C4<0>;
L_0x55558076fd00 .functor BUFZ 1, L_0x55558076f7c0, C4<0>, C4<0>, C4<0>;
v0x55558059e010_0 .net "i_clk", 0 0, v0x55558075c2e0_0;  alias, 1 drivers
L_0x7eff798d08d0 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x55558059e0d0_0 .net "i_hw_clear", 0 0, L_0x7eff798d08d0;  1 drivers
L_0x7eff798d0888 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x55558059e1b0_0 .net "i_hw_set", 0 0, L_0x7eff798d0888;  1 drivers
L_0x7eff798d0840 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x55558059e270_0 .net "i_hw_write_data", 0 0, L_0x7eff798d0840;  1 drivers
L_0x7eff798d07f8 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x5555804b11f0_0 .net "i_hw_write_enable", 0 0, L_0x7eff798d07f8;  1 drivers
L_0x7eff798d0918 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v0x5555804b1300_0 .net "i_mask", 0 0, L_0x7eff798d0918;  1 drivers
v0x5555804b13e0_0 .net "i_rst_n", 0 0, L_0x5555807142d0;  alias, 1 drivers
v0x5555804b1480_0 .net "i_sw_mask", 0 0, L_0x55558076fdd0;  1 drivers
v0x5555804b1560_0 .net "i_sw_read_valid", 0 0, L_0x55558075de50;  alias, 1 drivers
v0x5555804b1620_0 .net "i_sw_write_data", 0 0, L_0x55558076ff00;  1 drivers
L_0x7eff798d07b0 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x5555807218d0_0 .net "i_sw_write_enable", 0 0, L_0x7eff798d07b0;  1 drivers
v0x555580721970_0 .net "i_sw_write_valid", 0 0, L_0x55558075d7c0;  alias, 1 drivers
v0x555580721a10_0 .net "i_value", 0 0, o0x7eff79d4c678;  alias, 0 drivers
v0x555580721ab0_0 .net "o_read_trigger", 0 0, L_0x55558076fb90;  1 drivers
v0x555580721b50_0 .net "o_sw_read_data", 0 0, L_0x55558076f8f0;  1 drivers
v0x555580721bf0_0 .net "o_sw_value", 0 0, L_0x55558076f9e0;  1 drivers
v0x555580721c90_0 .net "o_value", 0 0, L_0x55558076fc60;  1 drivers
v0x555580721e40_0 .net "o_value_unmasked", 0 0, L_0x55558076fd00;  1 drivers
v0x555580721ee0_0 .net "o_write_trigger", 0 0, L_0x55558076faa0;  1 drivers
L_0x7eff798d0690 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x555580721f80_0 .net "w_hw_update", 0 0, L_0x7eff798d0690;  1 drivers
v0x555580722020_0 .net "w_read_data", 0 0, L_0x55558076f880;  1 drivers
v0x5555807220c0_0 .net "w_sw_update", 1 0, L_0x55558076f410;  1 drivers
L_0x7eff798d06d8 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x555580722160_0 .net "w_sw_write_done", 0 0, L_0x7eff798d06d8;  1 drivers
v0x555580722200_0 .net "w_trigger", 1 0, L_0x55558076f680;  1 drivers
v0x5555807222a0_0 .net "w_value", 0 0, L_0x55558076f7c0;  1 drivers
L_0x7eff798d0648 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x55558076f410 .concat8 [ 1 1 0 0], L_0x7eff798d0648, L_0x55558076f4e0;
L_0x7eff798d0720 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x7eff798d0768 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x55558076f680 .concat8 [ 1 1 0 0], L_0x7eff798d0720, L_0x7eff798d0768;
L_0x55558076faa0 .part L_0x55558076f680, 0, 1;
L_0x55558076fb90 .part L_0x55558076f680, 1, 1;
S_0x55558042d570 .scope generate, "g_read_data" "g_read_data" 9 382, 9 382 0, S_0x5555803f1fb0;
 .timescale 0 0;
L_0x55558076f880 .functor BUFZ 1, o0x7eff79d4c678, C4<0>, C4<0>, C4<0>;
S_0x555580457ce0 .scope generate, "g_read_trigger" "g_read_trigger" 9 304, 9 304 0, S_0x5555803f1fb0;
 .timescale 0 0;
v0x555580457ee0_0 .net/2u *"_ivl_0", 0 0, L_0x7eff798d0768;  1 drivers
S_0x555580457fc0 .scope generate, "g_sw_read_update" "g_sw_read_update" 9 245, 9 245 0, S_0x5555803f1fb0;
 .timescale 0 0;
v0x555580690fa0_0 .net/2u *"_ivl_0", 0 0, L_0x7eff798d0648;  1 drivers
S_0x55558045f330 .scope generate, "g_sw_write_done" "g_sw_write_done" 9 268, 9 268 0, S_0x5555803f1fb0;
 .timescale 0 0;
S_0x55558045f510 .scope generate, "g_sw_write_update" "g_sw_write_update" 9 252, 9 252 0, S_0x5555803f1fb0;
 .timescale 0 0;
v0x55558045f740_0 .net *"_ivl_1", 0 0, L_0x55558076f4e0;  1 drivers
L_0x55558076f4e0 .ufunc/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_rvd1.u_bit_field.get_sw_write_update, 1, L_0x55558075d7c0, L_0x7eff798d07b0, L_0x7eff798d06d8 (v0x55558059dee0_0, v0x55558051cc50_0, v0x555580536850_0) S_0x5555805364b0;
S_0x55558046fc30 .scope generate, "g_value" "g_value" 9 323, 9 323 0, S_0x5555803f1fb0;
 .timescale 0 0;
L_0x55558076f7c0 .functor BUFZ 1, o0x7eff79d4c678, C4<0>, C4<0>, C4<0>;
S_0x55558046fe10 .scope generate, "g_write_trigger" "g_write_trigger" 9 287, 9 287 0, S_0x5555803f1fb0;
 .timescale 0 0;
v0x55558046fff0_0 .net/2u *"_ivl_0", 0 0, L_0x7eff798d0720;  1 drivers
S_0x5555803edbf0 .scope generate, "genblk3" "genblk3" 9 259, 9 259 0, S_0x5555803f1fb0;
 .timescale 0 0;
S_0x5555803eddd0 .scope autofunction.vec4.s1, "get_hw_next_value" "get_hw_next_value" 9 177, 9 177 0, S_0x5555803f1fb0;
 .timescale 0 0;
v0x5555803edfb0_0 .var "clear", 0 0;
v0x5555806f5110_0 .var "current_value", 0 0;
; Variable get_hw_next_value is vec4 return value of scope S_0x5555803eddd0
v0x5555806c2080_0 .var/i "i", 31 0;
v0x5555806c2140_0 .var "set", 0 0;
v0x55558067b950 .array "set_clear", 1 0, 0 0;
v0x55558067b9f0_0 .var "value", 0 0;
v0x5555806b3810_0 .var "write_data", 0 0;
v0x5555806b38f0_0 .var "write_enable", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_rvd1.u_bit_field.get_hw_next_value ;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x55558067b950, 4, 0;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x55558067b950, 4, 0;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555806c2080_0, 0, 32;
T_9.77 ; Top of for-loop
    %load/vec4 v0x5555806c2080_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_9.78, 5;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x55558067b950, 4;
    %load/vec4 v0x5555806c2080_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_9.80, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x5555806c2080_0;
    %store/vec4 v0x55558067b9f0_0, 4, 1;
    %jmp T_9.81;
T_9.80 ;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x55558067b950, 4;
    %load/vec4 v0x5555806c2080_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_9.82, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x5555806c2080_0;
    %store/vec4 v0x55558067b9f0_0, 4, 1;
    %jmp T_9.83;
T_9.82 ;
    %load/vec4 v0x5555806f5110_0;
    %load/vec4 v0x5555806c2080_0;
    %part/s 1;
    %ix/getv/s 4, v0x5555806c2080_0;
    %store/vec4 v0x55558067b9f0_0, 4, 1;
T_9.83 ;
T_9.81 ;
T_9.79 ; for-loop step statement
    %load/vec4 v0x5555806c2080_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555806c2080_0, 0, 32;
    %jmp T_9.77;
T_9.78 ; for-loop exit label
    %load/vec4 v0x55558067b9f0_0;
    %ret/vec4 0, 0, 1;  Assign to get_hw_next_value (store_vec4_to_lval)
    %end;
S_0x555580540440 .scope autofunction.vec4.s1, "get_hw_update" "get_hw_update" 9 72, 9 72 0, S_0x5555803f1fb0;
 .timescale 0 0;
v0x5555805405d0_0 .var "clear", 0 0;
; Variable get_hw_update is vec4 return value of scope S_0x555580540440
v0x555580540790_0 .var "set", 0 0;
v0x555580540850_0 .var "update", 2 0;
v0x5555806a1200_0 .var "write_enable", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_rvd1.u_bit_field.get_hw_update ;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x555580540850_0, 4, 1;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x555580540850_0, 4, 1;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 2, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x555580540850_0, 4, 1;
    %load/vec4 v0x555580540850_0;
    %parti/s 1, 0, 2;
    %flag_set/vec4 8;
    %jmp/1 T_10.85, 8;
    %load/vec4 v0x555580540850_0;
    %parti/s 1, 1, 2;
    %flag_set/vec4 9;
    %flag_or 8, 9;
T_10.85;
    %flag_get/vec4 8;
    %jmp/1 T_10.84, 8;
    %load/vec4 v0x555580540850_0;
    %parti/s 1, 2, 3;
    %or;
T_10.84;
    %ret/vec4 0, 0, 1;  Assign to get_hw_update (store_vec4_to_lval)
    %end;
S_0x55558039fd40 .scope autofunction.vec4.s1, "get_sw_read_next_value" "get_sw_read_next_value" 9 86, 9 86 0, S_0x5555803f1fb0;
 .timescale 0 0;
v0x55558039ff20_0 .var "current_value", 0 0;
; Variable get_sw_read_next_value is vec4 return value of scope S_0x55558039fd40
v0x5555803a00e0_0 .var "mask", 0 0;
v0x5555804430d0_0 .var "value", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_rvd1.u_bit_field.get_sw_read_next_value ;
    %pushi/vec4 1, 0, 32;
    %dup/vec4;
    %pushi/vec4 2, 0, 32;
    %cmp/u;
    %jmp/1 T_11.86, 6;
    %dup/vec4;
    %pushi/vec4 3, 0, 32;
    %cmp/u;
    %jmp/1 T_11.87, 6;
    %load/vec4 v0x55558039ff20_0;
    %store/vec4 v0x5555804430d0_0, 0, 1;
    %jmp T_11.89;
T_11.86 ;
    %load/vec4 v0x5555803a00e0_0;
    %cmpi/ne 0, 0, 1;
    %flag_mov 8, 4;
    %jmp/0 T_11.90, 8;
    %pushi/vec4 0, 0, 1;
    %jmp/1 T_11.91, 8;
T_11.90 ; End of true expr.
    %load/vec4 v0x55558039ff20_0;
    %jmp/0 T_11.91, 8;
 ; End of false expr.
    %blend;
T_11.91;
    %store/vec4 v0x5555804430d0_0, 0, 1;
    %jmp T_11.89;
T_11.87 ;
    %load/vec4 v0x5555803a00e0_0;
    %cmpi/ne 0, 0, 1;
    %flag_mov 8, 4;
    %jmp/0 T_11.92, 8;
    %pushi/vec4 1, 0, 1;
    %jmp/1 T_11.93, 8;
T_11.92 ; End of true expr.
    %load/vec4 v0x55558039ff20_0;
    %jmp/0 T_11.93, 8;
 ; End of false expr.
    %blend;
T_11.93;
    %store/vec4 v0x5555804430d0_0, 0, 1;
    %jmp T_11.89;
T_11.89 ;
    %pop/vec4 1;
    %load/vec4 v0x5555804430d0_0;
    %ret/vec4 0, 0, 1;  Assign to get_sw_read_next_value (store_vec4_to_lval)
    %end;
S_0x5555804431b0 .scope autofunction.vec4.s1, "get_sw_write_next_value" "get_sw_write_next_value" 9 101, 9 101 0, S_0x5555803f1fb0;
 .timescale 0 0;
v0x555580443390_0 .var "current_value", 0 0;
; Variable get_sw_write_next_value is vec4 return value of scope S_0x5555804431b0
v0x55558051c8a0_0 .var/i "i", 31 0;
v0x55558051c960_0 .var "mask", 0 0;
v0x55558051ca40_0 .var "value", 0 0;
v0x55558051cb70_0 .var "write_data", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_rvd1.u_bit_field.get_sw_write_next_value ;
    %load/vec4 v0x555580443390_0;
    %store/vec4 v0x55558051ca40_0, 0, 1;
    %pushi/vec4 1, 0, 32;
    %dup/vec4;
    %pushi/vec4 1, 0, 32;
    %cmp/u;
    %jmp/1 T_12.94, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 32;
    %cmp/u;
    %jmp/1 T_12.95, 6;
    %dup/vec4;
    %pushi/vec4 3, 0, 32;
    %cmp/u;
    %jmp/1 T_12.96, 6;
    %dup/vec4;
    %pushi/vec4 4, 0, 32;
    %cmp/u;
    %jmp/1 T_12.97, 6;
    %dup/vec4;
    %pushi/vec4 5, 0, 32;
    %cmp/u;
    %jmp/1 T_12.98, 6;
    %dup/vec4;
    %pushi/vec4 6, 0, 32;
    %cmp/u;
    %jmp/1 T_12.99, 6;
    %dup/vec4;
    %pushi/vec4 7, 0, 32;
    %cmp/u;
    %jmp/1 T_12.100, 6;
    %dup/vec4;
    %pushi/vec4 8, 0, 32;
    %cmp/u;
    %jmp/1 T_12.101, 6;
    %dup/vec4;
    %pushi/vec4 9, 0, 32;
    %cmp/u;
    %jmp/1 T_12.102, 6;
    %jmp T_12.104;
T_12.94 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558051c8a0_0, 0, 32;
T_12.105 ; Top of for-loop
    %load/vec4 v0x55558051c8a0_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_12.106, 5;
    %load/vec4 v0x55558051c960_0;
    %load/vec4 v0x55558051c8a0_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_12.108, 8;
    %load/vec4 v0x55558051cb70_0;
    %load/vec4 v0x55558051c8a0_0;
    %part/s 1;
    %ix/getv/s 4, v0x55558051c8a0_0;
    %store/vec4 v0x55558051ca40_0, 4, 1;
T_12.108 ;
T_12.107 ; for-loop step statement
    %load/vec4 v0x55558051c8a0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558051c8a0_0, 0, 32;
    %jmp T_12.105;
T_12.106 ; for-loop exit label
    %jmp T_12.104;
T_12.95 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558051c8a0_0, 0, 32;
T_12.110 ; Top of for-loop
    %load/vec4 v0x55558051c8a0_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_12.111, 5;
    %load/vec4 v0x55558051c960_0;
    %load/vec4 v0x55558051c8a0_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_12.115, 9;
    %load/vec4 v0x55558051cb70_0;
    %load/vec4 v0x55558051c8a0_0;
    %part/s 1;
    %nor/r;
    %and;
T_12.115;
    %flag_set/vec4 8;
    %jmp/0xz  T_12.113, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x55558051c8a0_0;
    %store/vec4 v0x55558051ca40_0, 4, 1;
T_12.113 ;
T_12.112 ; for-loop step statement
    %load/vec4 v0x55558051c8a0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558051c8a0_0, 0, 32;
    %jmp T_12.110;
T_12.111 ; for-loop exit label
    %jmp T_12.104;
T_12.96 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558051c8a0_0, 0, 32;
T_12.116 ; Top of for-loop
    %load/vec4 v0x55558051c8a0_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_12.117, 5;
    %load/vec4 v0x55558051c960_0;
    %load/vec4 v0x55558051c8a0_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_12.121, 9;
    %load/vec4 v0x55558051cb70_0;
    %load/vec4 v0x55558051c8a0_0;
    %part/s 1;
    %and;
T_12.121;
    %flag_set/vec4 8;
    %jmp/0xz  T_12.119, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x55558051c8a0_0;
    %store/vec4 v0x55558051ca40_0, 4, 1;
T_12.119 ;
T_12.118 ; for-loop step statement
    %load/vec4 v0x55558051c8a0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558051c8a0_0, 0, 32;
    %jmp T_12.116;
T_12.117 ; for-loop exit label
    %jmp T_12.104;
T_12.97 ;
    %load/vec4 v0x55558051c960_0;
    %cmpi/ne 0, 0, 1;
    %jmp/0xz  T_12.122, 4;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x55558051ca40_0, 0, 1;
T_12.122 ;
    %jmp T_12.104;
T_12.98 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558051c8a0_0, 0, 32;
T_12.124 ; Top of for-loop
    %load/vec4 v0x55558051c8a0_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_12.125, 5;
    %load/vec4 v0x55558051c960_0;
    %load/vec4 v0x55558051c8a0_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_12.129, 9;
    %load/vec4 v0x55558051cb70_0;
    %load/vec4 v0x55558051c8a0_0;
    %part/s 1;
    %nor/r;
    %and;
T_12.129;
    %flag_set/vec4 8;
    %jmp/0xz  T_12.127, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x55558051c8a0_0;
    %store/vec4 v0x55558051ca40_0, 4, 1;
T_12.127 ;
T_12.126 ; for-loop step statement
    %load/vec4 v0x55558051c8a0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558051c8a0_0, 0, 32;
    %jmp T_12.124;
T_12.125 ; for-loop exit label
    %jmp T_12.104;
T_12.99 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558051c8a0_0, 0, 32;
T_12.130 ; Top of for-loop
    %load/vec4 v0x55558051c8a0_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_12.131, 5;
    %load/vec4 v0x55558051c960_0;
    %load/vec4 v0x55558051c8a0_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_12.135, 9;
    %load/vec4 v0x55558051cb70_0;
    %load/vec4 v0x55558051c8a0_0;
    %part/s 1;
    %and;
T_12.135;
    %flag_set/vec4 8;
    %jmp/0xz  T_12.133, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x55558051c8a0_0;
    %store/vec4 v0x55558051ca40_0, 4, 1;
T_12.133 ;
T_12.132 ; for-loop step statement
    %load/vec4 v0x55558051c8a0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558051c8a0_0, 0, 32;
    %jmp T_12.130;
T_12.131 ; for-loop exit label
    %jmp T_12.104;
T_12.100 ;
    %load/vec4 v0x55558051c960_0;
    %cmpi/ne 0, 0, 1;
    %jmp/0xz  T_12.136, 4;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x55558051ca40_0, 0, 1;
T_12.136 ;
    %jmp T_12.104;
T_12.101 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558051c8a0_0, 0, 32;
T_12.138 ; Top of for-loop
    %load/vec4 v0x55558051c8a0_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_12.139, 5;
    %load/vec4 v0x55558051c960_0;
    %load/vec4 v0x55558051c8a0_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_12.143, 9;
    %load/vec4 v0x55558051cb70_0;
    %load/vec4 v0x55558051c8a0_0;
    %part/s 1;
    %nor/r;
    %and;
T_12.143;
    %flag_set/vec4 8;
    %jmp/0xz  T_12.141, 8;
    %load/vec4 v0x555580443390_0;
    %load/vec4 v0x55558051c8a0_0;
    %part/s 1;
    %inv;
    %ix/getv/s 4, v0x55558051c8a0_0;
    %store/vec4 v0x55558051ca40_0, 4, 1;
T_12.141 ;
T_12.140 ; for-loop step statement
    %load/vec4 v0x55558051c8a0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558051c8a0_0, 0, 32;
    %jmp T_12.138;
T_12.139 ; for-loop exit label
    %jmp T_12.104;
T_12.102 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558051c8a0_0, 0, 32;
T_12.144 ; Top of for-loop
    %load/vec4 v0x55558051c8a0_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_12.145, 5;
    %load/vec4 v0x55558051c960_0;
    %load/vec4 v0x55558051c8a0_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_12.149, 9;
    %load/vec4 v0x55558051cb70_0;
    %load/vec4 v0x55558051c8a0_0;
    %part/s 1;
    %and;
T_12.149;
    %flag_set/vec4 8;
    %jmp/0xz  T_12.147, 8;
    %load/vec4 v0x555580443390_0;
    %load/vec4 v0x55558051c8a0_0;
    %part/s 1;
    %inv;
    %ix/getv/s 4, v0x55558051c8a0_0;
    %store/vec4 v0x55558051ca40_0, 4, 1;
T_12.147 ;
T_12.146 ; for-loop step statement
    %load/vec4 v0x55558051c8a0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558051c8a0_0, 0, 32;
    %jmp T_12.144;
T_12.145 ; for-loop exit label
    %jmp T_12.104;
T_12.104 ;
    %pop/vec4 1;
    %load/vec4 v0x55558051ca40_0;
    %ret/vec4 0, 0, 1;  Assign to get_sw_write_next_value (store_vec4_to_lval)
    %end;
S_0x5555805364b0 .scope autofunction.vec4.s1, "get_sw_write_update" "get_sw_write_update" 9 47, 9 47 0, S_0x5555803f1fb0;
 .timescale 0 0;
; Variable get_sw_write_update is vec4 return value of scope S_0x5555805364b0
v0x555580536770_0 .var "update", 2 0;
v0x555580536850_0 .var "write_done", 0 0;
v0x55558051cc50_0 .var "write_enable", 0 0;
v0x55558059dee0_0 .var "write_valid", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_rvd1.u_bit_field.get_sw_write_update ;
    %load/vec4 v0x55558059dee0_0;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x555580536770_0, 4, 1;
    %pushi/vec4 1, 0, 1;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x555580536770_0, 4, 1;
    %pushi/vec4 1, 0, 1;
    %ix/load 4, 2, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x555580536770_0, 4, 1;
    %load/vec4 v0x555580536770_0;
    %parti/s 1, 0, 2;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_13.151, 9;
    %load/vec4 v0x555580536770_0;
    %parti/s 1, 1, 2;
    %and;
T_13.151;
    %flag_set/vec4 8;
    %flag_get/vec4 8;
    %jmp/0 T_13.150, 8;
    %load/vec4 v0x555580536770_0;
    %parti/s 1, 2, 3;
    %and;
T_13.150;
    %ret/vec4 0, 0, 1;  Assign to get_sw_write_update (store_vec4_to_lval)
    %end;
S_0x5555807224c0 .scope generate, "g_rvd2" "g_rvd2" 8 267, 8 267 0, S_0x5555806ff900;
 .timescale -8 -9;
S_0x555580722650 .scope module, "u_bit_field" "rggen_bit_field" 8 273, 9 2 0, S_0x5555807224c0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "i_clk";
    .port_info 1 /INPUT 1 "i_rst_n";
    .port_info 2 /INPUT 1 "i_sw_write_valid";
    .port_info 3 /INPUT 1 "i_sw_write_enable";
    .port_info 4 /INPUT 1 "i_sw_read_valid";
    .port_info 5 /INPUT 18 "i_sw_mask";
    .port_info 6 /INPUT 18 "i_sw_write_data";
    .port_info 7 /OUTPUT 18 "o_sw_read_data";
    .port_info 8 /OUTPUT 18 "o_sw_value";
    .port_info 9 /OUTPUT 1 "o_write_trigger";
    .port_info 10 /OUTPUT 1 "o_read_trigger";
    .port_info 11 /INPUT 1 "i_hw_write_enable";
    .port_info 12 /INPUT 18 "i_hw_write_data";
    .port_info 13 /INPUT 18 "i_hw_set";
    .port_info 14 /INPUT 18 "i_hw_clear";
    .port_info 15 /INPUT 18 "i_value";
    .port_info 16 /INPUT 18 "i_mask";
    .port_info 17 /OUTPUT 18 "o_value";
    .port_info 18 /OUTPUT 18 "o_value_unmasked";
P_0x555580722830 .param/l "EXTERNAL_MASK" 0 9 17, C4<0>;
P_0x555580722870 .param/l "EXTERNAL_READ_DATA" 0 9 16, +C4<00000000000000000000000000000001>;
P_0x5555807228b0 .param/l "HW_ACCESS" 0 9 12, C4<000>;
P_0x5555807228f0 .param/l "HW_CLEAR_WIDTH" 0 9 14, +C4<00000000000000000000000000010010>;
P_0x555580722930 .param/l "HW_SET_WIDTH" 0 9 13, +C4<00000000000000000000000000010010>;
P_0x555580722970 .param/l "HW_WRITE_ENABLE_POLARITY" 0 9 11, C4<1>;
P_0x5555807229b0 .param/l "INITIAL_VALUE" 0 9 4, C4<000000000000000000>;
P_0x5555807229f0 .param/l "PRECEDENCE_ACCESS" 0 9 5, +C4<00000000000000000000000000000001>;
P_0x555580722a30 .param/l "STORAGE" 0 9 15, +C4<00000000000000000000000000000000>;
P_0x555580722a70 .param/l "SW_READABLE" 1 9 41, C4<1>;
P_0x555580722ab0 .param/l "SW_READ_ACTION" 0 9 6, +C4<00000000000000000000000000000001>;
P_0x555580722af0 .param/l "SW_READ_UPDATE" 1 9 42, C4<0>;
P_0x555580722b30 .param/l "SW_WRITABLE" 1 9 40, C4<1>;
P_0x555580722b70 .param/l "SW_WRITE_ACTION" 0 9 7, +C4<00000000000000000000000000000001>;
P_0x555580722bb0 .param/l "SW_WRITE_CONTROL" 0 9 8, C4<0>;
P_0x555580722bf0 .param/l "SW_WRITE_ENABLE_POLARITY" 0 9 10, C4<1>;
P_0x555580722c30 .param/l "SW_WRITE_ONCE" 0 9 9, C4<0>;
P_0x555580722c70 .param/l "TRIGGER" 0 9 18, +C4<00000000000000000000000000000000>;
P_0x555580722cb0 .param/l "WIDTH" 0 9 3, +C4<00000000000000000000000000010010>;
L_0x555580773dc0 .functor BUFZ 18, L_0x555580773d50, C4<000000000000000000>, C4<000000000000000000>, C4<000000000000000000>;
L_0x555580773eb0 .functor BUFZ 18, L_0x555580773c90, C4<000000000000000000>, C4<000000000000000000>, C4<000000000000000000>;
L_0x555580774130 .functor BUFZ 18, L_0x555580773c90, C4<000000000000000000>, C4<000000000000000000>, C4<000000000000000000>;
L_0x5555807741d0 .functor BUFZ 18, L_0x555580773c90, C4<000000000000000000>, C4<000000000000000000>, C4<000000000000000000>;
v0x5555807270e0_0 .net "i_clk", 0 0, v0x55558075c2e0_0;  alias, 1 drivers
L_0x7eff798d1458 .functor BUFT 1, C4<000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x5555807271a0_0 .net "i_hw_clear", 17 0, L_0x7eff798d1458;  1 drivers
L_0x7eff798d1410 .functor BUFT 1, C4<000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x555580727280_0 .net "i_hw_set", 17 0, L_0x7eff798d1410;  1 drivers
L_0x7eff798d13c8 .functor BUFT 1, C4<000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x555580727340_0 .net "i_hw_write_data", 17 0, L_0x7eff798d13c8;  1 drivers
L_0x7eff798d1380 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x555580727420_0 .net "i_hw_write_enable", 0 0, L_0x7eff798d1380;  1 drivers
L_0x7eff798d14a0 .functor BUFT 1, C4<111111111111111111>, C4<0>, C4<0>, C4<0>;
v0x555580727530_0 .net "i_mask", 17 0, L_0x7eff798d14a0;  1 drivers
v0x555580727610_0 .net "i_rst_n", 0 0, L_0x5555807142d0;  alias, 1 drivers
v0x5555807276b0_0 .net "i_sw_mask", 17 0, L_0x555580774330;  1 drivers
v0x555580727790_0 .net "i_sw_read_valid", 0 0, L_0x55558075de50;  alias, 1 drivers
v0x5555807278c0_0 .net "i_sw_write_data", 17 0, L_0x5555807743d0;  1 drivers
L_0x7eff798d1338 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x555580727980_0 .net "i_sw_write_enable", 0 0, L_0x7eff798d1338;  1 drivers
v0x555580727a40_0 .net "i_sw_write_valid", 0 0, L_0x55558075d7c0;  alias, 1 drivers
v0x555580727b10_0 .net "i_value", 17 0, o0x7eff79d4d458;  alias, 0 drivers
v0x555580727bd0_0 .net "o_read_trigger", 0 0, L_0x555580774060;  1 drivers
v0x555580727c90_0 .net "o_sw_read_data", 17 0, L_0x555580773dc0;  1 drivers
v0x555580727d70_0 .net "o_sw_value", 17 0, L_0x555580773eb0;  1 drivers
v0x555580727e50_0 .net "o_value", 17 0, L_0x555580774130;  1 drivers
v0x555580728040_0 .net "o_value_unmasked", 17 0, L_0x5555807741d0;  1 drivers
v0x555580728120_0 .net "o_write_trigger", 0 0, L_0x555580773f70;  1 drivers
L_0x7eff798d1218 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x5555807281e0_0 .net "w_hw_update", 0 0, L_0x7eff798d1218;  1 drivers
v0x5555807282a0_0 .net "w_read_data", 17 0, L_0x555580773d50;  1 drivers
v0x555580728380_0 .net "w_sw_update", 1 0, L_0x555580773380;  1 drivers
L_0x7eff798d1260 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x555580728460_0 .net "w_sw_write_done", 0 0, L_0x7eff798d1260;  1 drivers
v0x555580728520_0 .net "w_trigger", 1 0, L_0x555580773b20;  1 drivers
v0x555580728600_0 .net "w_value", 17 0, L_0x555580773c90;  1 drivers
L_0x7eff798d1188 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x555580773380 .concat8 [ 1 1 0 0], L_0x7eff798d1188, L_0x555580773550;
L_0x7eff798d12a8 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x7eff798d12f0 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x555580773b20 .concat8 [ 1 1 0 0], L_0x7eff798d12a8, L_0x7eff798d12f0;
L_0x555580773f70 .part L_0x555580773b20, 0, 1;
L_0x555580774060 .part L_0x555580773b20, 1, 1;
S_0x5555807238c0 .scope generate, "g_read_data" "g_read_data" 9 382, 9 382 0, S_0x555580722650;
 .timescale 0 0;
L_0x555580773d50 .functor BUFZ 18, o0x7eff79d4d458, C4<000000000000000000>, C4<000000000000000000>, C4<000000000000000000>;
S_0x555580723a50 .scope generate, "g_read_trigger" "g_read_trigger" 9 304, 9 304 0, S_0x555580722650;
 .timescale 0 0;
v0x555580723c50_0 .net/2u *"_ivl_0", 0 0, L_0x7eff798d12f0;  1 drivers
S_0x555580723d30 .scope generate, "g_sw_read_update" "g_sw_read_update" 9 245, 9 245 0, S_0x555580722650;
 .timescale 0 0;
v0x555580723f40_0 .net/2u *"_ivl_0", 0 0, L_0x7eff798d1188;  1 drivers
S_0x555580724020 .scope generate, "g_sw_write_done" "g_sw_write_done" 9 268, 9 268 0, S_0x555580722650;
 .timescale 0 0;
S_0x555580724200 .scope generate, "g_sw_write_update" "g_sw_write_update" 9 252, 9 252 0, S_0x555580722650;
 .timescale 0 0;
v0x555580724430_0 .net *"_ivl_0", 17 0, L_0x555580773450;  1 drivers
L_0x7eff798d11d0 .functor BUFT 1, C4<00000000000000000>, C4<0>, C4<0>, C4<0>;
v0x555580724530_0 .net *"_ivl_3", 16 0, L_0x7eff798d11d0;  1 drivers
v0x555580724610_0 .net *"_ivl_5", 0 0, L_0x555580773550;  1 drivers
L_0x555580773450 .concat [ 1 17 0 0], L_0x55558075d7c0, L_0x7eff798d11d0;
L_0x555580773550 .ufunc/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_rvd2.u_bit_field.get_sw_write_update, 1, L_0x555580773450, L_0x7eff798d1338, L_0x7eff798d1260 (v0x555580726fb0_0, v0x555580726ef0_0, v0x555580726e50_0) S_0x555580726ab0;
S_0x5555807246d0 .scope generate, "g_value" "g_value" 9 323, 9 323 0, S_0x555580722650;
 .timescale 0 0;
L_0x555580773c90 .functor BUFZ 18, o0x7eff79d4d458, C4<000000000000000000>, C4<000000000000000000>, C4<000000000000000000>;
S_0x5555807248b0 .scope generate, "g_write_trigger" "g_write_trigger" 9 287, 9 287 0, S_0x555580722650;
 .timescale 0 0;
v0x555580724a90_0 .net/2u *"_ivl_0", 0 0, L_0x7eff798d12a8;  1 drivers
S_0x555580724b90 .scope generate, "genblk3" "genblk3" 9 259, 9 259 0, S_0x555580722650;
 .timescale 0 0;
S_0x555580724d70 .scope autofunction.vec4.s18, "get_hw_next_value" "get_hw_next_value" 9 177, 9 177 0, S_0x555580722650;
 .timescale 0 0;
v0x555580724f50_0 .var "clear", 17 0;
v0x555580725050_0 .var "current_value", 17 0;
; Variable get_hw_next_value is vec4 return value of scope S_0x555580724d70
v0x555580725220_0 .var/i "i", 31 0;
v0x555580725300_0 .var "set", 17 0;
v0x5555807253e0 .array "set_clear", 1 0, 17 0;
v0x5555807254a0_0 .var "value", 17 0;
v0x555580725580_0 .var "write_data", 17 0;
v0x555580725660_0 .var "write_enable", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_rvd2.u_bit_field.get_hw_next_value ;
    %pushi/vec4 0, 0, 18;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x5555807253e0, 4, 0;
    %pushi/vec4 0, 0, 18;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x5555807253e0, 4, 0;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x555580725220_0, 0, 32;
T_14.152 ; Top of for-loop
    %load/vec4 v0x555580725220_0;
    %cmpi/s 18, 0, 32;
	  %jmp/0xz T_14.153, 5;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x5555807253e0, 4;
    %load/vec4 v0x555580725220_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_14.155, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x555580725220_0;
    %store/vec4 v0x5555807254a0_0, 4, 1;
    %jmp T_14.156;
T_14.155 ;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x5555807253e0, 4;
    %load/vec4 v0x555580725220_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_14.157, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x555580725220_0;
    %store/vec4 v0x5555807254a0_0, 4, 1;
    %jmp T_14.158;
T_14.157 ;
    %load/vec4 v0x555580725050_0;
    %load/vec4 v0x555580725220_0;
    %part/s 1;
    %ix/getv/s 4, v0x555580725220_0;
    %store/vec4 v0x5555807254a0_0, 4, 1;
T_14.158 ;
T_14.156 ;
T_14.154 ; for-loop step statement
    %load/vec4 v0x555580725220_0;
    %addi 1, 0, 32;
    %store/vec4 v0x555580725220_0, 0, 32;
    %jmp T_14.152;
T_14.153 ; for-loop exit label
    %load/vec4 v0x5555807254a0_0;
    %ret/vec4 0, 0, 18;  Assign to get_hw_next_value (store_vec4_to_lval)
    %end;
S_0x5555807257b0 .scope autofunction.vec4.s1, "get_hw_update" "get_hw_update" 9 72, 9 72 0, S_0x555580722650;
 .timescale 0 0;
v0x555580725940_0 .var "clear", 17 0;
; Variable get_hw_update is vec4 return value of scope S_0x5555807257b0
v0x555580725b00_0 .var "set", 17 0;
v0x555580725bc0_0 .var "update", 2 0;
v0x555580725ca0_0 .var "write_enable", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_rvd2.u_bit_field.get_hw_update ;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x555580725bc0_0, 4, 1;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x555580725bc0_0, 4, 1;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 2, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x555580725bc0_0, 4, 1;
    %load/vec4 v0x555580725bc0_0;
    %parti/s 1, 0, 2;
    %flag_set/vec4 8;
    %jmp/1 T_15.160, 8;
    %load/vec4 v0x555580725bc0_0;
    %parti/s 1, 1, 2;
    %flag_set/vec4 9;
    %flag_or 8, 9;
T_15.160;
    %flag_get/vec4 8;
    %jmp/1 T_15.159, 8;
    %load/vec4 v0x555580725bc0_0;
    %parti/s 1, 2, 3;
    %or;
T_15.159;
    %ret/vec4 0, 0, 1;  Assign to get_hw_update (store_vec4_to_lval)
    %end;
S_0x555580725db0 .scope autofunction.vec4.s18, "get_sw_read_next_value" "get_sw_read_next_value" 9 86, 9 86 0, S_0x555580722650;
 .timescale 0 0;
v0x555580725f90_0 .var "current_value", 17 0;
; Variable get_sw_read_next_value is vec4 return value of scope S_0x555580725db0
v0x555580726170_0 .var "mask", 17 0;
v0x555580726230_0 .var "value", 17 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_rvd2.u_bit_field.get_sw_read_next_value ;
    %pushi/vec4 1, 0, 32;
    %dup/vec4;
    %pushi/vec4 2, 0, 32;
    %cmp/u;
    %jmp/1 T_16.161, 6;
    %dup/vec4;
    %pushi/vec4 3, 0, 32;
    %cmp/u;
    %jmp/1 T_16.162, 6;
    %load/vec4 v0x555580725f90_0;
    %store/vec4 v0x555580726230_0, 0, 18;
    %jmp T_16.164;
T_16.161 ;
    %load/vec4 v0x555580726170_0;
    %cmpi/ne 0, 0, 18;
    %flag_mov 8, 4;
    %jmp/0 T_16.165, 8;
    %pushi/vec4 0, 0, 18;
    %jmp/1 T_16.166, 8;
T_16.165 ; End of true expr.
    %load/vec4 v0x555580725f90_0;
    %jmp/0 T_16.166, 8;
 ; End of false expr.
    %blend;
T_16.166;
    %store/vec4 v0x555580726230_0, 0, 18;
    %jmp T_16.164;
T_16.162 ;
    %load/vec4 v0x555580726170_0;
    %cmpi/ne 0, 0, 18;
    %flag_mov 8, 4;
    %jmp/0 T_16.167, 8;
    %pushi/vec4 262143, 0, 18;
    %jmp/1 T_16.168, 8;
T_16.167 ; End of true expr.
    %load/vec4 v0x555580725f90_0;
    %jmp/0 T_16.168, 8;
 ; End of false expr.
    %blend;
T_16.168;
    %store/vec4 v0x555580726230_0, 0, 18;
    %jmp T_16.164;
T_16.164 ;
    %pop/vec4 1;
    %load/vec4 v0x555580726230_0;
    %ret/vec4 0, 0, 18;  Assign to get_sw_read_next_value (store_vec4_to_lval)
    %end;
S_0x555580726310 .scope autofunction.vec4.s18, "get_sw_write_next_value" "get_sw_write_next_value" 9 101, 9 101 0, S_0x555580722650;
 .timescale 0 0;
v0x5555807264f0_0 .var "current_value", 17 0;
; Variable get_sw_write_next_value is vec4 return value of scope S_0x555580726310
v0x5555807266d0_0 .var/i "i", 31 0;
v0x5555807267c0_0 .var "mask", 17 0;
v0x5555807268a0_0 .var "value", 17 0;
v0x5555807269d0_0 .var "write_data", 17 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_rvd2.u_bit_field.get_sw_write_next_value ;
    %load/vec4 v0x5555807264f0_0;
    %store/vec4 v0x5555807268a0_0, 0, 18;
    %pushi/vec4 1, 0, 32;
    %dup/vec4;
    %pushi/vec4 1, 0, 32;
    %cmp/u;
    %jmp/1 T_17.169, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 32;
    %cmp/u;
    %jmp/1 T_17.170, 6;
    %dup/vec4;
    %pushi/vec4 3, 0, 32;
    %cmp/u;
    %jmp/1 T_17.171, 6;
    %dup/vec4;
    %pushi/vec4 4, 0, 32;
    %cmp/u;
    %jmp/1 T_17.172, 6;
    %dup/vec4;
    %pushi/vec4 5, 0, 32;
    %cmp/u;
    %jmp/1 T_17.173, 6;
    %dup/vec4;
    %pushi/vec4 6, 0, 32;
    %cmp/u;
    %jmp/1 T_17.174, 6;
    %dup/vec4;
    %pushi/vec4 7, 0, 32;
    %cmp/u;
    %jmp/1 T_17.175, 6;
    %dup/vec4;
    %pushi/vec4 8, 0, 32;
    %cmp/u;
    %jmp/1 T_17.176, 6;
    %dup/vec4;
    %pushi/vec4 9, 0, 32;
    %cmp/u;
    %jmp/1 T_17.177, 6;
    %jmp T_17.179;
T_17.169 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555807266d0_0, 0, 32;
T_17.180 ; Top of for-loop
    %load/vec4 v0x5555807266d0_0;
    %cmpi/s 18, 0, 32;
	  %jmp/0xz T_17.181, 5;
    %load/vec4 v0x5555807267c0_0;
    %load/vec4 v0x5555807266d0_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_17.183, 8;
    %load/vec4 v0x5555807269d0_0;
    %load/vec4 v0x5555807266d0_0;
    %part/s 1;
    %ix/getv/s 4, v0x5555807266d0_0;
    %store/vec4 v0x5555807268a0_0, 4, 1;
T_17.183 ;
T_17.182 ; for-loop step statement
    %load/vec4 v0x5555807266d0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555807266d0_0, 0, 32;
    %jmp T_17.180;
T_17.181 ; for-loop exit label
    %jmp T_17.179;
T_17.170 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555807266d0_0, 0, 32;
T_17.185 ; Top of for-loop
    %load/vec4 v0x5555807266d0_0;
    %cmpi/s 18, 0, 32;
	  %jmp/0xz T_17.186, 5;
    %load/vec4 v0x5555807267c0_0;
    %load/vec4 v0x5555807266d0_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_17.190, 9;
    %load/vec4 v0x5555807269d0_0;
    %load/vec4 v0x5555807266d0_0;
    %part/s 1;
    %nor/r;
    %and;
T_17.190;
    %flag_set/vec4 8;
    %jmp/0xz  T_17.188, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x5555807266d0_0;
    %store/vec4 v0x5555807268a0_0, 4, 1;
T_17.188 ;
T_17.187 ; for-loop step statement
    %load/vec4 v0x5555807266d0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555807266d0_0, 0, 32;
    %jmp T_17.185;
T_17.186 ; for-loop exit label
    %jmp T_17.179;
T_17.171 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555807266d0_0, 0, 32;
T_17.191 ; Top of for-loop
    %load/vec4 v0x5555807266d0_0;
    %cmpi/s 18, 0, 32;
	  %jmp/0xz T_17.192, 5;
    %load/vec4 v0x5555807267c0_0;
    %load/vec4 v0x5555807266d0_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_17.196, 9;
    %load/vec4 v0x5555807269d0_0;
    %load/vec4 v0x5555807266d0_0;
    %part/s 1;
    %and;
T_17.196;
    %flag_set/vec4 8;
    %jmp/0xz  T_17.194, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x5555807266d0_0;
    %store/vec4 v0x5555807268a0_0, 4, 1;
T_17.194 ;
T_17.193 ; for-loop step statement
    %load/vec4 v0x5555807266d0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555807266d0_0, 0, 32;
    %jmp T_17.191;
T_17.192 ; for-loop exit label
    %jmp T_17.179;
T_17.172 ;
    %load/vec4 v0x5555807267c0_0;
    %cmpi/ne 0, 0, 18;
    %jmp/0xz  T_17.197, 4;
    %pushi/vec4 0, 0, 18;
    %store/vec4 v0x5555807268a0_0, 0, 18;
T_17.197 ;
    %jmp T_17.179;
T_17.173 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555807266d0_0, 0, 32;
T_17.199 ; Top of for-loop
    %load/vec4 v0x5555807266d0_0;
    %cmpi/s 18, 0, 32;
	  %jmp/0xz T_17.200, 5;
    %load/vec4 v0x5555807267c0_0;
    %load/vec4 v0x5555807266d0_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_17.204, 9;
    %load/vec4 v0x5555807269d0_0;
    %load/vec4 v0x5555807266d0_0;
    %part/s 1;
    %nor/r;
    %and;
T_17.204;
    %flag_set/vec4 8;
    %jmp/0xz  T_17.202, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x5555807266d0_0;
    %store/vec4 v0x5555807268a0_0, 4, 1;
T_17.202 ;
T_17.201 ; for-loop step statement
    %load/vec4 v0x5555807266d0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555807266d0_0, 0, 32;
    %jmp T_17.199;
T_17.200 ; for-loop exit label
    %jmp T_17.179;
T_17.174 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555807266d0_0, 0, 32;
T_17.205 ; Top of for-loop
    %load/vec4 v0x5555807266d0_0;
    %cmpi/s 18, 0, 32;
	  %jmp/0xz T_17.206, 5;
    %load/vec4 v0x5555807267c0_0;
    %load/vec4 v0x5555807266d0_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_17.210, 9;
    %load/vec4 v0x5555807269d0_0;
    %load/vec4 v0x5555807266d0_0;
    %part/s 1;
    %and;
T_17.210;
    %flag_set/vec4 8;
    %jmp/0xz  T_17.208, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x5555807266d0_0;
    %store/vec4 v0x5555807268a0_0, 4, 1;
T_17.208 ;
T_17.207 ; for-loop step statement
    %load/vec4 v0x5555807266d0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555807266d0_0, 0, 32;
    %jmp T_17.205;
T_17.206 ; for-loop exit label
    %jmp T_17.179;
T_17.175 ;
    %load/vec4 v0x5555807267c0_0;
    %cmpi/ne 0, 0, 18;
    %jmp/0xz  T_17.211, 4;
    %pushi/vec4 262143, 0, 18;
    %store/vec4 v0x5555807268a0_0, 0, 18;
T_17.211 ;
    %jmp T_17.179;
T_17.176 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555807266d0_0, 0, 32;
T_17.213 ; Top of for-loop
    %load/vec4 v0x5555807266d0_0;
    %cmpi/s 18, 0, 32;
	  %jmp/0xz T_17.214, 5;
    %load/vec4 v0x5555807267c0_0;
    %load/vec4 v0x5555807266d0_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_17.218, 9;
    %load/vec4 v0x5555807269d0_0;
    %load/vec4 v0x5555807266d0_0;
    %part/s 1;
    %nor/r;
    %and;
T_17.218;
    %flag_set/vec4 8;
    %jmp/0xz  T_17.216, 8;
    %load/vec4 v0x5555807264f0_0;
    %load/vec4 v0x5555807266d0_0;
    %part/s 1;
    %inv;
    %ix/getv/s 4, v0x5555807266d0_0;
    %store/vec4 v0x5555807268a0_0, 4, 1;
T_17.216 ;
T_17.215 ; for-loop step statement
    %load/vec4 v0x5555807266d0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555807266d0_0, 0, 32;
    %jmp T_17.213;
T_17.214 ; for-loop exit label
    %jmp T_17.179;
T_17.177 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555807266d0_0, 0, 32;
T_17.219 ; Top of for-loop
    %load/vec4 v0x5555807266d0_0;
    %cmpi/s 18, 0, 32;
	  %jmp/0xz T_17.220, 5;
    %load/vec4 v0x5555807267c0_0;
    %load/vec4 v0x5555807266d0_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_17.224, 9;
    %load/vec4 v0x5555807269d0_0;
    %load/vec4 v0x5555807266d0_0;
    %part/s 1;
    %and;
T_17.224;
    %flag_set/vec4 8;
    %jmp/0xz  T_17.222, 8;
    %load/vec4 v0x5555807264f0_0;
    %load/vec4 v0x5555807266d0_0;
    %part/s 1;
    %inv;
    %ix/getv/s 4, v0x5555807266d0_0;
    %store/vec4 v0x5555807268a0_0, 4, 1;
T_17.222 ;
T_17.221 ; for-loop step statement
    %load/vec4 v0x5555807266d0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555807266d0_0, 0, 32;
    %jmp T_17.219;
T_17.220 ; for-loop exit label
    %jmp T_17.179;
T_17.179 ;
    %pop/vec4 1;
    %load/vec4 v0x5555807268a0_0;
    %ret/vec4 0, 0, 18;  Assign to get_sw_write_next_value (store_vec4_to_lval)
    %end;
S_0x555580726ab0 .scope autofunction.vec4.s1, "get_sw_write_update" "get_sw_write_update" 9 47, 9 47 0, S_0x555580722650;
 .timescale 0 0;
; Variable get_sw_write_update is vec4 return value of scope S_0x555580726ab0
v0x555580726d70_0 .var "update", 2 0;
v0x555580726e50_0 .var "write_done", 0 0;
v0x555580726ef0_0 .var "write_enable", 0 0;
v0x555580726fb0_0 .var "write_valid", 17 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_rvd2.u_bit_field.get_sw_write_update ;
    %load/vec4 v0x555580726fb0_0;
    %pad/u 1;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x555580726d70_0, 4, 1;
    %pushi/vec4 1, 0, 1;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x555580726d70_0, 4, 1;
    %pushi/vec4 1, 0, 1;
    %ix/load 4, 2, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x555580726d70_0, 4, 1;
    %load/vec4 v0x555580726d70_0;
    %parti/s 1, 0, 2;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_18.226, 9;
    %load/vec4 v0x555580726d70_0;
    %parti/s 1, 1, 2;
    %and;
T_18.226;
    %flag_set/vec4 8;
    %flag_get/vec4 8;
    %jmp/0 T_18.225, 8;
    %load/vec4 v0x555580726d70_0;
    %parti/s 1, 2, 3;
    %and;
T_18.225;
    %ret/vec4 0, 0, 1;  Assign to get_sw_write_update (store_vec4_to_lval)
    %end;
S_0x5555807289e0 .scope generate, "g_s1wto" "g_s1wto" 8 173, 8 173 0, S_0x5555806ff900;
 .timescale -8 -9;
S_0x555580728b70 .scope module, "u_bit_field" "rggen_bit_field" 8 184, 9 2 0, S_0x5555807289e0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "i_clk";
    .port_info 1 /INPUT 1 "i_rst_n";
    .port_info 2 /INPUT 1 "i_sw_write_valid";
    .port_info 3 /INPUT 1 "i_sw_write_enable";
    .port_info 4 /INPUT 1 "i_sw_read_valid";
    .port_info 5 /INPUT 1 "i_sw_mask";
    .port_info 6 /INPUT 1 "i_sw_write_data";
    .port_info 7 /OUTPUT 1 "o_sw_read_data";
    .port_info 8 /OUTPUT 1 "o_sw_value";
    .port_info 9 /OUTPUT 1 "o_write_trigger";
    .port_info 10 /OUTPUT 1 "o_read_trigger";
    .port_info 11 /INPUT 1 "i_hw_write_enable";
    .port_info 12 /INPUT 1 "i_hw_write_data";
    .port_info 13 /INPUT 1 "i_hw_set";
    .port_info 14 /INPUT 1 "i_hw_clear";
    .port_info 15 /INPUT 1 "i_value";
    .port_info 16 /INPUT 1 "i_mask";
    .port_info 17 /OUTPUT 1 "o_value";
    .port_info 18 /OUTPUT 1 "o_value_unmasked";
P_0x555580728d70 .param/l "EXTERNAL_MASK" 0 9 17, C4<0>;
P_0x555580728db0 .param/l "EXTERNAL_READ_DATA" 0 9 16, +C4<00000000000000000000000000000000>;
P_0x555580728df0 .param/l "HW_ACCESS" 0 9 12, C4<010>;
P_0x555580728e30 .param/l "HW_CLEAR_WIDTH" 0 9 14, +C4<00000000000000000000000000000001>;
P_0x555580728e70 .param/l "HW_SET_WIDTH" 0 9 13, +C4<00000000000000000000000000000001>;
P_0x555580728eb0 .param/l "HW_WRITE_ENABLE_POLARITY" 0 9 11, C4<1>;
P_0x555580728ef0 .param/l "INITIAL_VALUE" 0 9 4, C4<0>;
P_0x555580728f30 .param/l "PRECEDENCE_ACCESS" 0 9 5, +C4<00000000000000000000000000000001>;
P_0x555580728f70 .param/l "STORAGE" 0 9 15, +C4<00000000000000000000000000000001>;
P_0x555580728fb0 .param/l "SW_READABLE" 1 9 41, C4<1>;
P_0x555580728ff0 .param/l "SW_READ_ACTION" 0 9 6, +C4<00000000000000000000000000000001>;
P_0x555580729030 .param/l "SW_READ_UPDATE" 1 9 42, C4<0>;
P_0x555580729070 .param/l "SW_WRITABLE" 1 9 40, C4<1>;
P_0x5555807290b0 .param/l "SW_WRITE_ACTION" 0 9 7, +C4<00000000000000000000000000000010>;
P_0x5555807290f0 .param/l "SW_WRITE_CONTROL" 0 9 8, C4<0>;
P_0x555580729130 .param/l "SW_WRITE_ENABLE_POLARITY" 0 9 10, C4<1>;
P_0x555580729170 .param/l "SW_WRITE_ONCE" 0 9 9, +C4<00000000000000000000000000000000>;
P_0x5555807291b0 .param/l "TRIGGER" 0 9 18, +C4<00000000000000000000000000000001>;
P_0x5555807291f0 .param/l "WIDTH" 0 9 3, +C4<00000000000000000000000000000001>;
L_0x555580770b90 .functor BUFZ 1, L_0x555580770aa0, C4<0>, C4<0>, C4<0>;
L_0x555580770c50 .functor BUFZ 1, v0x55558072af00_0, C4<0>, C4<0>, C4<0>;
L_0x555580770ec0 .functor BUFZ 1, v0x55558072af00_0, C4<0>, C4<0>, C4<0>;
L_0x555580771010 .functor BUFZ 1, v0x55558072af00_0, C4<0>, C4<0>, C4<0>;
v0x55558072d6e0_0 .net "i_clk", 0 0, v0x55558075c2e0_0;  alias, 1 drivers
L_0x7eff798d0ac8 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x55558072d8b0_0 .net "i_hw_clear", 0 0, L_0x7eff798d0ac8;  1 drivers
v0x55558072d990_0 .net "i_hw_set", 0 0, L_0x55558077ae70;  alias, 1 drivers
L_0x7eff798d0a80 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x55558072da60_0 .net "i_hw_write_data", 0 0, L_0x7eff798d0a80;  1 drivers
L_0x7eff798d0a38 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x55558072db20_0 .net "i_hw_write_enable", 0 0, L_0x7eff798d0a38;  1 drivers
L_0x7eff798d0b58 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v0x55558072dc30_0 .net "i_mask", 0 0, L_0x7eff798d0b58;  1 drivers
v0x55558072dd10_0 .net "i_rst_n", 0 0, L_0x5555807142d0;  alias, 1 drivers
v0x55558072ddb0_0 .net "i_sw_mask", 0 0, L_0x5555807710b0;  1 drivers
v0x55558072de90_0 .net "i_sw_read_valid", 0 0, L_0x55558075de50;  alias, 1 drivers
v0x55558072df30_0 .net "i_sw_write_data", 0 0, L_0x555580771150;  1 drivers
L_0x7eff798d09f0 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v0x55558072e010_0 .net "i_sw_write_enable", 0 0, L_0x7eff798d09f0;  1 drivers
v0x55558072e0d0_0 .net "i_sw_write_valid", 0 0, L_0x55558075d7c0;  alias, 1 drivers
L_0x7eff798d0b10 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x55558072e1c0_0 .net "i_value", 0 0, L_0x7eff798d0b10;  1 drivers
v0x55558072e2a0_0 .net "o_read_trigger", 0 0, L_0x555580770df0;  1 drivers
v0x55558072e360_0 .net "o_sw_read_data", 0 0, L_0x555580770b90;  1 drivers
v0x55558072e440_0 .net "o_sw_value", 0 0, L_0x555580770c50;  1 drivers
v0x55558072e520_0 .net "o_value", 0 0, L_0x555580770ec0;  alias, 1 drivers
v0x55558072e710_0 .net "o_value_unmasked", 0 0, L_0x555580771010;  1 drivers
v0x55558072e7f0_0 .net "o_write_trigger", 0 0, L_0x555580770cc0;  alias, 1 drivers
v0x55558072e890_0 .net "w_hw_update", 0 0, L_0x555580770560;  1 drivers
v0x55558072e930_0 .net "w_read_data", 0 0, L_0x555580770aa0;  1 drivers
v0x55558072ea10_0 .net "w_sw_update", 1 0, L_0x555580770390;  1 drivers
L_0x7eff798d09a8 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x55558072eaf0_0 .net "w_sw_write_done", 0 0, L_0x7eff798d09a8;  1 drivers
v0x55558072ebb0_0 .net "w_trigger", 1 0, L_0x5555807707f0;  1 drivers
v0x55558072ec90_0 .net "w_value", 0 0, v0x55558072af00_0;  1 drivers
L_0x7eff798d0960 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x555580770390 .concat8 [ 1 1 0 0], L_0x7eff798d0960, L_0x555580770460;
L_0x5555807707f0 .concat8 [ 1 1 0 0], v0x55558072b2e0_0, v0x55558072a470_0;
L_0x555580770cc0 .part L_0x5555807707f0, 0, 1;
L_0x555580770df0 .part L_0x5555807707f0, 1, 1;
S_0x555580729dc0 .scope generate, "g_hw_update" "g_hw_update" 9 259, 9 259 0, S_0x555580728b70;
 .timescale 0 0;
L_0x555580770560 .ufunc/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_s1wto.u_bit_field.get_hw_update, 1, L_0x7eff798d0a38, L_0x55558077ae70, L_0x7eff798d0ac8 (v0x55558072c2a0_0, v0x55558072c100_0, v0x55558072bf40_0) S_0x55558072bdb0;
S_0x555580729fa0 .scope generate, "g_read_data" "g_read_data" 9 382, 9 382 0, S_0x555580728b70;
 .timescale 0 0;
L_0x555580770aa0 .functor BUFZ 1, v0x55558072af00_0, C4<0>, C4<0>, C4<0>;
S_0x55558072a1a0 .scope generate, "g_read_trigger" "g_read_trigger" 9 304, 9 304 0, S_0x555580728b70;
 .timescale 0 0;
v0x55558072a3b0_0 .net *"_ivl_1", 0 0, v0x55558072a470_0;  1 drivers
v0x55558072a470_0 .var "r_trigger", 0 0;
S_0x55558072a530 .scope generate, "g_sw_read_update" "g_sw_read_update" 9 245, 9 245 0, S_0x555580728b70;
 .timescale 0 0;
v0x55558072a710_0 .net/2u *"_ivl_0", 0 0, L_0x7eff798d0960;  1 drivers
S_0x55558072a810 .scope generate, "g_sw_write_done" "g_sw_write_done" 9 268, 9 268 0, S_0x555580728b70;
 .timescale 0 0;
S_0x55558072aa40 .scope generate, "g_sw_write_update" "g_sw_write_update" 9 252, 9 252 0, S_0x555580728b70;
 .timescale 0 0;
v0x55558072ac20_0 .net *"_ivl_1", 0 0, L_0x555580770460;  1 drivers
L_0x555580770460 .ufunc/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_s1wto.u_bit_field.get_sw_write_update, 1, L_0x55558075d7c0, L_0x7eff798d09f0, L_0x7eff798d09a8 (v0x55558072d5b0_0, v0x55558072d4f0_0, v0x55558072d450_0) S_0x55558072d0b0;
S_0x55558072ad20 .scope generate, "g_value" "g_value" 9 326, 9 326 0, S_0x555580728b70;
 .timescale 0 0;
v0x55558072af00_0 .var "r_value", 0 0;
S_0x55558072b000 .scope generate, "g_write_trigger" "g_write_trigger" 9 287, 9 287 0, S_0x555580728b70;
 .timescale 0 0;
v0x55558072b1e0_0 .net *"_ivl_1", 0 0, v0x55558072b2e0_0;  1 drivers
v0x55558072b2e0_0 .var "r_trigger", 0 0;
S_0x55558072b3a0 .scope autofunction.vec4.s1, "get_hw_next_value" "get_hw_next_value" 9 177, 9 177 0, S_0x555580728b70;
 .timescale 0 0;
v0x55558072b580_0 .var "clear", 0 0;
v0x55558072b680_0 .var "current_value", 0 0;
; Variable get_hw_next_value is vec4 return value of scope S_0x55558072b3a0
v0x55558072b820_0 .var/i "i", 31 0;
v0x55558072b900_0 .var "set", 0 0;
v0x55558072b9e0 .array "set_clear", 1 0, 0 0;
v0x55558072baa0_0 .var "value", 0 0;
v0x55558072bb80_0 .var "write_data", 0 0;
v0x55558072bc60_0 .var "write_enable", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_s1wto.u_bit_field.get_hw_next_value ;
    %load/vec4 v0x55558072b900_0;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x55558072b9e0, 4, 0;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x55558072b9e0, 4, 0;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558072b820_0, 0, 32;
T_19.227 ; Top of for-loop
    %load/vec4 v0x55558072b820_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_19.228, 5;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x55558072b9e0, 4;
    %load/vec4 v0x55558072b820_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_19.230, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x55558072b820_0;
    %store/vec4 v0x55558072baa0_0, 4, 1;
    %jmp T_19.231;
T_19.230 ;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x55558072b9e0, 4;
    %load/vec4 v0x55558072b820_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_19.232, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x55558072b820_0;
    %store/vec4 v0x55558072baa0_0, 4, 1;
    %jmp T_19.233;
T_19.232 ;
    %load/vec4 v0x55558072b680_0;
    %load/vec4 v0x55558072b820_0;
    %part/s 1;
    %ix/getv/s 4, v0x55558072b820_0;
    %store/vec4 v0x55558072baa0_0, 4, 1;
T_19.233 ;
T_19.231 ;
T_19.229 ; for-loop step statement
    %load/vec4 v0x55558072b820_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558072b820_0, 0, 32;
    %jmp T_19.227;
T_19.228 ; for-loop exit label
    %load/vec4 v0x55558072baa0_0;
    %ret/vec4 0, 0, 1;  Assign to get_hw_next_value (store_vec4_to_lval)
    %end;
S_0x55558072bdb0 .scope autofunction.vec4.s1, "get_hw_update" "get_hw_update" 9 72, 9 72 0, S_0x555580728b70;
 .timescale 0 0;
v0x55558072bf40_0 .var "clear", 0 0;
; Variable get_hw_update is vec4 return value of scope S_0x55558072bdb0
v0x55558072c100_0 .var "set", 0 0;
v0x55558072c1c0_0 .var "update", 2 0;
v0x55558072c2a0_0 .var "write_enable", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_s1wto.u_bit_field.get_hw_update ;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x55558072c1c0_0, 4, 1;
    %pushi/vec4 1, 0, 1;
    %flag_set/vec4 8;
    %flag_get/vec4 8;
    %jmp/0 T_20.234, 8;
    %load/vec4 v0x55558072c100_0;
    %pushi/vec4 0, 0, 1;
    %cmp/ne;
    %flag_get/vec4 4;
    %and;
T_20.234;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x55558072c1c0_0, 4, 1;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 2, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x55558072c1c0_0, 4, 1;
    %load/vec4 v0x55558072c1c0_0;
    %parti/s 1, 0, 2;
    %flag_set/vec4 8;
    %jmp/1 T_20.236, 8;
    %load/vec4 v0x55558072c1c0_0;
    %parti/s 1, 1, 2;
    %flag_set/vec4 9;
    %flag_or 8, 9;
T_20.236;
    %flag_get/vec4 8;
    %jmp/1 T_20.235, 8;
    %load/vec4 v0x55558072c1c0_0;
    %parti/s 1, 2, 3;
    %or;
T_20.235;
    %ret/vec4 0, 0, 1;  Assign to get_hw_update (store_vec4_to_lval)
    %end;
S_0x55558072c3b0 .scope autofunction.vec4.s1, "get_sw_read_next_value" "get_sw_read_next_value" 9 86, 9 86 0, S_0x555580728b70;
 .timescale 0 0;
v0x55558072c590_0 .var "current_value", 0 0;
; Variable get_sw_read_next_value is vec4 return value of scope S_0x55558072c3b0
v0x55558072c770_0 .var "mask", 0 0;
v0x55558072c830_0 .var "value", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_s1wto.u_bit_field.get_sw_read_next_value ;
    %pushi/vec4 1, 0, 32;
    %dup/vec4;
    %pushi/vec4 2, 0, 32;
    %cmp/u;
    %jmp/1 T_21.237, 6;
    %dup/vec4;
    %pushi/vec4 3, 0, 32;
    %cmp/u;
    %jmp/1 T_21.238, 6;
    %load/vec4 v0x55558072c590_0;
    %store/vec4 v0x55558072c830_0, 0, 1;
    %jmp T_21.240;
T_21.237 ;
    %load/vec4 v0x55558072c770_0;
    %cmpi/ne 0, 0, 1;
    %flag_mov 8, 4;
    %jmp/0 T_21.241, 8;
    %pushi/vec4 0, 0, 1;
    %jmp/1 T_21.242, 8;
T_21.241 ; End of true expr.
    %load/vec4 v0x55558072c590_0;
    %jmp/0 T_21.242, 8;
 ; End of false expr.
    %blend;
T_21.242;
    %store/vec4 v0x55558072c830_0, 0, 1;
    %jmp T_21.240;
T_21.238 ;
    %load/vec4 v0x55558072c770_0;
    %cmpi/ne 0, 0, 1;
    %flag_mov 8, 4;
    %jmp/0 T_21.243, 8;
    %pushi/vec4 1, 0, 1;
    %jmp/1 T_21.244, 8;
T_21.243 ; End of true expr.
    %load/vec4 v0x55558072c590_0;
    %jmp/0 T_21.244, 8;
 ; End of false expr.
    %blend;
T_21.244;
    %store/vec4 v0x55558072c830_0, 0, 1;
    %jmp T_21.240;
T_21.240 ;
    %pop/vec4 1;
    %load/vec4 v0x55558072c830_0;
    %ret/vec4 0, 0, 1;  Assign to get_sw_read_next_value (store_vec4_to_lval)
    %end;
S_0x55558072c910 .scope autofunction.vec4.s1, "get_sw_write_next_value" "get_sw_write_next_value" 9 101, 9 101 0, S_0x555580728b70;
 .timescale 0 0;
v0x55558072caf0_0 .var "current_value", 0 0;
; Variable get_sw_write_next_value is vec4 return value of scope S_0x55558072c910
v0x55558072ccd0_0 .var/i "i", 31 0;
v0x55558072cdc0_0 .var "mask", 0 0;
v0x55558072cea0_0 .var "value", 0 0;
v0x55558072cfd0_0 .var "write_data", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_s1wto.u_bit_field.get_sw_write_next_value ;
    %load/vec4 v0x55558072caf0_0;
    %store/vec4 v0x55558072cea0_0, 0, 1;
    %pushi/vec4 2, 0, 32;
    %dup/vec4;
    %pushi/vec4 1, 0, 32;
    %cmp/u;
    %jmp/1 T_22.245, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 32;
    %cmp/u;
    %jmp/1 T_22.246, 6;
    %dup/vec4;
    %pushi/vec4 3, 0, 32;
    %cmp/u;
    %jmp/1 T_22.247, 6;
    %dup/vec4;
    %pushi/vec4 4, 0, 32;
    %cmp/u;
    %jmp/1 T_22.248, 6;
    %dup/vec4;
    %pushi/vec4 5, 0, 32;
    %cmp/u;
    %jmp/1 T_22.249, 6;
    %dup/vec4;
    %pushi/vec4 6, 0, 32;
    %cmp/u;
    %jmp/1 T_22.250, 6;
    %dup/vec4;
    %pushi/vec4 7, 0, 32;
    %cmp/u;
    %jmp/1 T_22.251, 6;
    %dup/vec4;
    %pushi/vec4 8, 0, 32;
    %cmp/u;
    %jmp/1 T_22.252, 6;
    %dup/vec4;
    %pushi/vec4 9, 0, 32;
    %cmp/u;
    %jmp/1 T_22.253, 6;
    %jmp T_22.255;
T_22.245 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558072ccd0_0, 0, 32;
T_22.256 ; Top of for-loop
    %load/vec4 v0x55558072ccd0_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_22.257, 5;
    %load/vec4 v0x55558072cdc0_0;
    %load/vec4 v0x55558072ccd0_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_22.259, 8;
    %load/vec4 v0x55558072cfd0_0;
    %load/vec4 v0x55558072ccd0_0;
    %part/s 1;
    %ix/getv/s 4, v0x55558072ccd0_0;
    %store/vec4 v0x55558072cea0_0, 4, 1;
T_22.259 ;
T_22.258 ; for-loop step statement
    %load/vec4 v0x55558072ccd0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558072ccd0_0, 0, 32;
    %jmp T_22.256;
T_22.257 ; for-loop exit label
    %jmp T_22.255;
T_22.246 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558072ccd0_0, 0, 32;
T_22.261 ; Top of for-loop
    %load/vec4 v0x55558072ccd0_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_22.262, 5;
    %load/vec4 v0x55558072cdc0_0;
    %load/vec4 v0x55558072ccd0_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_22.266, 9;
    %load/vec4 v0x55558072cfd0_0;
    %load/vec4 v0x55558072ccd0_0;
    %part/s 1;
    %nor/r;
    %and;
T_22.266;
    %flag_set/vec4 8;
    %jmp/0xz  T_22.264, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x55558072ccd0_0;
    %store/vec4 v0x55558072cea0_0, 4, 1;
T_22.264 ;
T_22.263 ; for-loop step statement
    %load/vec4 v0x55558072ccd0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558072ccd0_0, 0, 32;
    %jmp T_22.261;
T_22.262 ; for-loop exit label
    %jmp T_22.255;
T_22.247 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558072ccd0_0, 0, 32;
T_22.267 ; Top of for-loop
    %load/vec4 v0x55558072ccd0_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_22.268, 5;
    %load/vec4 v0x55558072cdc0_0;
    %load/vec4 v0x55558072ccd0_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_22.272, 9;
    %load/vec4 v0x55558072cfd0_0;
    %load/vec4 v0x55558072ccd0_0;
    %part/s 1;
    %and;
T_22.272;
    %flag_set/vec4 8;
    %jmp/0xz  T_22.270, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x55558072ccd0_0;
    %store/vec4 v0x55558072cea0_0, 4, 1;
T_22.270 ;
T_22.269 ; for-loop step statement
    %load/vec4 v0x55558072ccd0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558072ccd0_0, 0, 32;
    %jmp T_22.267;
T_22.268 ; for-loop exit label
    %jmp T_22.255;
T_22.248 ;
    %load/vec4 v0x55558072cdc0_0;
    %cmpi/ne 0, 0, 1;
    %jmp/0xz  T_22.273, 4;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x55558072cea0_0, 0, 1;
T_22.273 ;
    %jmp T_22.255;
T_22.249 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558072ccd0_0, 0, 32;
T_22.275 ; Top of for-loop
    %load/vec4 v0x55558072ccd0_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_22.276, 5;
    %load/vec4 v0x55558072cdc0_0;
    %load/vec4 v0x55558072ccd0_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_22.280, 9;
    %load/vec4 v0x55558072cfd0_0;
    %load/vec4 v0x55558072ccd0_0;
    %part/s 1;
    %nor/r;
    %and;
T_22.280;
    %flag_set/vec4 8;
    %jmp/0xz  T_22.278, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x55558072ccd0_0;
    %store/vec4 v0x55558072cea0_0, 4, 1;
T_22.278 ;
T_22.277 ; for-loop step statement
    %load/vec4 v0x55558072ccd0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558072ccd0_0, 0, 32;
    %jmp T_22.275;
T_22.276 ; for-loop exit label
    %jmp T_22.255;
T_22.250 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558072ccd0_0, 0, 32;
T_22.281 ; Top of for-loop
    %load/vec4 v0x55558072ccd0_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_22.282, 5;
    %load/vec4 v0x55558072cdc0_0;
    %load/vec4 v0x55558072ccd0_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_22.286, 9;
    %load/vec4 v0x55558072cfd0_0;
    %load/vec4 v0x55558072ccd0_0;
    %part/s 1;
    %and;
T_22.286;
    %flag_set/vec4 8;
    %jmp/0xz  T_22.284, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x55558072ccd0_0;
    %store/vec4 v0x55558072cea0_0, 4, 1;
T_22.284 ;
T_22.283 ; for-loop step statement
    %load/vec4 v0x55558072ccd0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558072ccd0_0, 0, 32;
    %jmp T_22.281;
T_22.282 ; for-loop exit label
    %jmp T_22.255;
T_22.251 ;
    %load/vec4 v0x55558072cdc0_0;
    %cmpi/ne 0, 0, 1;
    %jmp/0xz  T_22.287, 4;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x55558072cea0_0, 0, 1;
T_22.287 ;
    %jmp T_22.255;
T_22.252 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558072ccd0_0, 0, 32;
T_22.289 ; Top of for-loop
    %load/vec4 v0x55558072ccd0_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_22.290, 5;
    %load/vec4 v0x55558072cdc0_0;
    %load/vec4 v0x55558072ccd0_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_22.294, 9;
    %load/vec4 v0x55558072cfd0_0;
    %load/vec4 v0x55558072ccd0_0;
    %part/s 1;
    %nor/r;
    %and;
T_22.294;
    %flag_set/vec4 8;
    %jmp/0xz  T_22.292, 8;
    %load/vec4 v0x55558072caf0_0;
    %load/vec4 v0x55558072ccd0_0;
    %part/s 1;
    %inv;
    %ix/getv/s 4, v0x55558072ccd0_0;
    %store/vec4 v0x55558072cea0_0, 4, 1;
T_22.292 ;
T_22.291 ; for-loop step statement
    %load/vec4 v0x55558072ccd0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558072ccd0_0, 0, 32;
    %jmp T_22.289;
T_22.290 ; for-loop exit label
    %jmp T_22.255;
T_22.253 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558072ccd0_0, 0, 32;
T_22.295 ; Top of for-loop
    %load/vec4 v0x55558072ccd0_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_22.296, 5;
    %load/vec4 v0x55558072cdc0_0;
    %load/vec4 v0x55558072ccd0_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_22.300, 9;
    %load/vec4 v0x55558072cfd0_0;
    %load/vec4 v0x55558072ccd0_0;
    %part/s 1;
    %and;
T_22.300;
    %flag_set/vec4 8;
    %jmp/0xz  T_22.298, 8;
    %load/vec4 v0x55558072caf0_0;
    %load/vec4 v0x55558072ccd0_0;
    %part/s 1;
    %inv;
    %ix/getv/s 4, v0x55558072ccd0_0;
    %store/vec4 v0x55558072cea0_0, 4, 1;
T_22.298 ;
T_22.297 ; for-loop step statement
    %load/vec4 v0x55558072ccd0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558072ccd0_0, 0, 32;
    %jmp T_22.295;
T_22.296 ; for-loop exit label
    %jmp T_22.255;
T_22.255 ;
    %pop/vec4 1;
    %load/vec4 v0x55558072cea0_0;
    %ret/vec4 0, 0, 1;  Assign to get_sw_write_next_value (store_vec4_to_lval)
    %end;
S_0x55558072d0b0 .scope autofunction.vec4.s1, "get_sw_write_update" "get_sw_write_update" 9 47, 9 47 0, S_0x555580728b70;
 .timescale 0 0;
; Variable get_sw_write_update is vec4 return value of scope S_0x55558072d0b0
v0x55558072d370_0 .var "update", 2 0;
v0x55558072d450_0 .var "write_done", 0 0;
v0x55558072d4f0_0 .var "write_enable", 0 0;
v0x55558072d5b0_0 .var "write_valid", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_s1wto.u_bit_field.get_sw_write_update ;
    %load/vec4 v0x55558072d5b0_0;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x55558072d370_0, 4, 1;
    %pushi/vec4 1, 0, 1;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x55558072d370_0, 4, 1;
    %pushi/vec4 1, 0, 1;
    %ix/load 4, 2, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x55558072d370_0, 4, 1;
    %load/vec4 v0x55558072d370_0;
    %parti/s 1, 0, 2;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_23.302, 9;
    %load/vec4 v0x55558072d370_0;
    %parti/s 1, 1, 2;
    %and;
T_23.302;
    %flag_set/vec4 8;
    %flag_get/vec4 8;
    %jmp/0 T_23.301, 8;
    %load/vec4 v0x55558072d370_0;
    %parti/s 1, 2, 3;
    %and;
T_23.301;
    %ret/vec4 0, 0, 1;  Assign to get_sw_write_update (store_vec4_to_lval)
    %end;
S_0x55558072f070 .scope generate, "g_s2wto" "g_s2wto" 8 206, 8 206 0, S_0x5555806ff900;
 .timescale -8 -9;
S_0x55558072f2a0 .scope module, "u_bit_field" "rggen_bit_field" 8 217, 9 2 0, S_0x55558072f070;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "i_clk";
    .port_info 1 /INPUT 1 "i_rst_n";
    .port_info 2 /INPUT 1 "i_sw_write_valid";
    .port_info 3 /INPUT 1 "i_sw_write_enable";
    .port_info 4 /INPUT 1 "i_sw_read_valid";
    .port_info 5 /INPUT 1 "i_sw_mask";
    .port_info 6 /INPUT 1 "i_sw_write_data";
    .port_info 7 /OUTPUT 1 "o_sw_read_data";
    .port_info 8 /OUTPUT 1 "o_sw_value";
    .port_info 9 /OUTPUT 1 "o_write_trigger";
    .port_info 10 /OUTPUT 1 "o_read_trigger";
    .port_info 11 /INPUT 1 "i_hw_write_enable";
    .port_info 12 /INPUT 1 "i_hw_write_data";
    .port_info 13 /INPUT 1 "i_hw_set";
    .port_info 14 /INPUT 1 "i_hw_clear";
    .port_info 15 /INPUT 1 "i_value";
    .port_info 16 /INPUT 1 "i_mask";
    .port_info 17 /OUTPUT 1 "o_value";
    .port_info 18 /OUTPUT 1 "o_value_unmasked";
P_0x55558072f4a0 .param/l "EXTERNAL_MASK" 0 9 17, C4<0>;
P_0x55558072f4e0 .param/l "EXTERNAL_READ_DATA" 0 9 16, +C4<00000000000000000000000000000000>;
P_0x55558072f520 .param/l "HW_ACCESS" 0 9 12, C4<010>;
P_0x55558072f560 .param/l "HW_CLEAR_WIDTH" 0 9 14, +C4<00000000000000000000000000000001>;
P_0x55558072f5a0 .param/l "HW_SET_WIDTH" 0 9 13, +C4<00000000000000000000000000000001>;
P_0x55558072f5e0 .param/l "HW_WRITE_ENABLE_POLARITY" 0 9 11, C4<1>;
P_0x55558072f620 .param/l "INITIAL_VALUE" 0 9 4, C4<0>;
P_0x55558072f660 .param/l "PRECEDENCE_ACCESS" 0 9 5, +C4<00000000000000000000000000000001>;
P_0x55558072f6a0 .param/l "STORAGE" 0 9 15, +C4<00000000000000000000000000000001>;
P_0x55558072f6e0 .param/l "SW_READABLE" 1 9 41, C4<1>;
P_0x55558072f720 .param/l "SW_READ_ACTION" 0 9 6, +C4<00000000000000000000000000000001>;
P_0x55558072f760 .param/l "SW_READ_UPDATE" 1 9 42, C4<0>;
P_0x55558072f7a0 .param/l "SW_WRITABLE" 1 9 40, C4<1>;
P_0x55558072f7e0 .param/l "SW_WRITE_ACTION" 0 9 7, +C4<00000000000000000000000000000010>;
P_0x55558072f820 .param/l "SW_WRITE_CONTROL" 0 9 8, C4<0>;
P_0x55558072f860 .param/l "SW_WRITE_ENABLE_POLARITY" 0 9 10, C4<1>;
P_0x55558072f8a0 .param/l "SW_WRITE_ONCE" 0 9 9, +C4<00000000000000000000000000000000>;
P_0x55558072f8e0 .param/l "TRIGGER" 0 9 18, +C4<00000000000000000000000000000001>;
P_0x55558072f920 .param/l "WIDTH" 0 9 3, +C4<00000000000000000000000000000001>;
L_0x555580771bd0 .functor BUFZ 1, L_0x555580771ae0, C4<0>, C4<0>, C4<0>;
L_0x555580771c90 .functor BUFZ 1, v0x5555807315a0_0, C4<0>, C4<0>, C4<0>;
L_0x555580771f00 .functor BUFZ 1, v0x5555807315a0_0, C4<0>, C4<0>, C4<0>;
L_0x555580772050 .functor BUFZ 1, v0x5555807315a0_0, C4<0>, C4<0>, C4<0>;
v0x555580733d80_0 .net "i_clk", 0 0, v0x55558075c2e0_0;  alias, 1 drivers
L_0x7eff798d0d08 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x555580733e40_0 .net "i_hw_clear", 0 0, L_0x7eff798d0d08;  1 drivers
v0x555580733f20_0 .net "i_hw_set", 0 0, L_0x55558077add0;  alias, 1 drivers
L_0x7eff798d0cc0 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x555580733ff0_0 .net "i_hw_write_data", 0 0, L_0x7eff798d0cc0;  1 drivers
L_0x7eff798d0c78 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x5555807340b0_0 .net "i_hw_write_enable", 0 0, L_0x7eff798d0c78;  1 drivers
L_0x7eff798d0d98 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v0x5555807341c0_0 .net "i_mask", 0 0, L_0x7eff798d0d98;  1 drivers
v0x5555807342a0_0 .net "i_rst_n", 0 0, L_0x5555807142d0;  alias, 1 drivers
v0x555580734450_0 .net "i_sw_mask", 0 0, L_0x5555807720f0;  1 drivers
v0x555580734530_0 .net "i_sw_read_valid", 0 0, L_0x55558075de50;  alias, 1 drivers
v0x5555807345d0_0 .net "i_sw_write_data", 0 0, L_0x555580772190;  1 drivers
L_0x7eff798d0c30 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v0x5555807346b0_0 .net "i_sw_write_enable", 0 0, L_0x7eff798d0c30;  1 drivers
v0x555580734770_0 .net "i_sw_write_valid", 0 0, L_0x55558075d7c0;  alias, 1 drivers
L_0x7eff798d0d50 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x555580734810_0 .net "i_value", 0 0, L_0x7eff798d0d50;  1 drivers
v0x5555807348f0_0 .net "o_read_trigger", 0 0, L_0x555580771e30;  1 drivers
v0x5555807349b0_0 .net "o_sw_read_data", 0 0, L_0x555580771bd0;  1 drivers
v0x555580734a90_0 .net "o_sw_value", 0 0, L_0x555580771c90;  1 drivers
v0x555580734b70_0 .net "o_value", 0 0, L_0x555580771f00;  alias, 1 drivers
v0x555580734d60_0 .net "o_value_unmasked", 0 0, L_0x555580772050;  1 drivers
v0x555580734e40_0 .net "o_write_trigger", 0 0, L_0x555580771d00;  alias, 1 drivers
v0x555580734ee0_0 .net "w_hw_update", 0 0, L_0x5555807715a0;  1 drivers
v0x555580734fa0_0 .net "w_read_data", 0 0, L_0x555580771ae0;  1 drivers
v0x555580735080_0 .net "w_sw_update", 1 0, L_0x555580771330;  1 drivers
L_0x7eff798d0be8 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x555580735160_0 .net "w_sw_write_done", 0 0, L_0x7eff798d0be8;  1 drivers
v0x555580735220_0 .net "w_trigger", 1 0, L_0x555580771830;  1 drivers
v0x555580735300_0 .net "w_value", 0 0, v0x5555807315a0_0;  1 drivers
L_0x7eff798d0ba0 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x555580771330 .concat8 [ 1 1 0 0], L_0x7eff798d0ba0, L_0x555580771450;
L_0x555580771830 .concat8 [ 1 1 0 0], v0x555580731980_0, v0x555580730b10_0;
L_0x555580771d00 .part L_0x555580771830, 0, 1;
L_0x555580771e30 .part L_0x555580771830, 1, 1;
S_0x555580730460 .scope generate, "g_hw_update" "g_hw_update" 9 259, 9 259 0, S_0x55558072f2a0;
 .timescale 0 0;
L_0x5555807715a0 .ufunc/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_s2wto.u_bit_field.get_hw_update, 1, L_0x7eff798d0c78, L_0x55558077add0, L_0x7eff798d0d08 (v0x555580732940_0, v0x5555807327a0_0, v0x5555807325e0_0) S_0x555580732450;
S_0x555580730640 .scope generate, "g_read_data" "g_read_data" 9 382, 9 382 0, S_0x55558072f2a0;
 .timescale 0 0;
L_0x555580771ae0 .functor BUFZ 1, v0x5555807315a0_0, C4<0>, C4<0>, C4<0>;
S_0x555580730840 .scope generate, "g_read_trigger" "g_read_trigger" 9 304, 9 304 0, S_0x55558072f2a0;
 .timescale 0 0;
v0x555580730a50_0 .net *"_ivl_1", 0 0, v0x555580730b10_0;  1 drivers
v0x555580730b10_0 .var "r_trigger", 0 0;
S_0x555580730bd0 .scope generate, "g_sw_read_update" "g_sw_read_update" 9 245, 9 245 0, S_0x55558072f2a0;
 .timescale 0 0;
v0x555580730db0_0 .net/2u *"_ivl_0", 0 0, L_0x7eff798d0ba0;  1 drivers
S_0x555580730eb0 .scope generate, "g_sw_write_done" "g_sw_write_done" 9 268, 9 268 0, S_0x55558072f2a0;
 .timescale 0 0;
S_0x5555807310e0 .scope generate, "g_sw_write_update" "g_sw_write_update" 9 252, 9 252 0, S_0x55558072f2a0;
 .timescale 0 0;
v0x5555807312c0_0 .net *"_ivl_1", 0 0, L_0x555580771450;  1 drivers
L_0x555580771450 .ufunc/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_s2wto.u_bit_field.get_sw_write_update, 1, L_0x55558075d7c0, L_0x7eff798d0c30, L_0x7eff798d0be8 (v0x555580733c50_0, v0x555580733b90_0, v0x555580733af0_0) S_0x555580733750;
S_0x5555807313c0 .scope generate, "g_value" "g_value" 9 326, 9 326 0, S_0x55558072f2a0;
 .timescale 0 0;
v0x5555807315a0_0 .var "r_value", 0 0;
S_0x5555807316a0 .scope generate, "g_write_trigger" "g_write_trigger" 9 287, 9 287 0, S_0x55558072f2a0;
 .timescale 0 0;
v0x555580731880_0 .net *"_ivl_1", 0 0, v0x555580731980_0;  1 drivers
v0x555580731980_0 .var "r_trigger", 0 0;
S_0x555580731a40 .scope autofunction.vec4.s1, "get_hw_next_value" "get_hw_next_value" 9 177, 9 177 0, S_0x55558072f2a0;
 .timescale 0 0;
v0x555580731c20_0 .var "clear", 0 0;
v0x555580731d20_0 .var "current_value", 0 0;
; Variable get_hw_next_value is vec4 return value of scope S_0x555580731a40
v0x555580731ec0_0 .var/i "i", 31 0;
v0x555580731fa0_0 .var "set", 0 0;
v0x555580732080 .array "set_clear", 1 0, 0 0;
v0x555580732140_0 .var "value", 0 0;
v0x555580732220_0 .var "write_data", 0 0;
v0x555580732300_0 .var "write_enable", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_s2wto.u_bit_field.get_hw_next_value ;
    %load/vec4 v0x555580731fa0_0;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x555580732080, 4, 0;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x555580732080, 4, 0;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x555580731ec0_0, 0, 32;
T_24.303 ; Top of for-loop
    %load/vec4 v0x555580731ec0_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_24.304, 5;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x555580732080, 4;
    %load/vec4 v0x555580731ec0_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_24.306, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x555580731ec0_0;
    %store/vec4 v0x555580732140_0, 4, 1;
    %jmp T_24.307;
T_24.306 ;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x555580732080, 4;
    %load/vec4 v0x555580731ec0_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_24.308, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x555580731ec0_0;
    %store/vec4 v0x555580732140_0, 4, 1;
    %jmp T_24.309;
T_24.308 ;
    %load/vec4 v0x555580731d20_0;
    %load/vec4 v0x555580731ec0_0;
    %part/s 1;
    %ix/getv/s 4, v0x555580731ec0_0;
    %store/vec4 v0x555580732140_0, 4, 1;
T_24.309 ;
T_24.307 ;
T_24.305 ; for-loop step statement
    %load/vec4 v0x555580731ec0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x555580731ec0_0, 0, 32;
    %jmp T_24.303;
T_24.304 ; for-loop exit label
    %load/vec4 v0x555580732140_0;
    %ret/vec4 0, 0, 1;  Assign to get_hw_next_value (store_vec4_to_lval)
    %end;
S_0x555580732450 .scope autofunction.vec4.s1, "get_hw_update" "get_hw_update" 9 72, 9 72 0, S_0x55558072f2a0;
 .timescale 0 0;
v0x5555807325e0_0 .var "clear", 0 0;
; Variable get_hw_update is vec4 return value of scope S_0x555580732450
v0x5555807327a0_0 .var "set", 0 0;
v0x555580732860_0 .var "update", 2 0;
v0x555580732940_0 .var "write_enable", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_s2wto.u_bit_field.get_hw_update ;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x555580732860_0, 4, 1;
    %pushi/vec4 1, 0, 1;
    %flag_set/vec4 8;
    %flag_get/vec4 8;
    %jmp/0 T_25.310, 8;
    %load/vec4 v0x5555807327a0_0;
    %pushi/vec4 0, 0, 1;
    %cmp/ne;
    %flag_get/vec4 4;
    %and;
T_25.310;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x555580732860_0, 4, 1;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 2, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x555580732860_0, 4, 1;
    %load/vec4 v0x555580732860_0;
    %parti/s 1, 0, 2;
    %flag_set/vec4 8;
    %jmp/1 T_25.312, 8;
    %load/vec4 v0x555580732860_0;
    %parti/s 1, 1, 2;
    %flag_set/vec4 9;
    %flag_or 8, 9;
T_25.312;
    %flag_get/vec4 8;
    %jmp/1 T_25.311, 8;
    %load/vec4 v0x555580732860_0;
    %parti/s 1, 2, 3;
    %or;
T_25.311;
    %ret/vec4 0, 0, 1;  Assign to get_hw_update (store_vec4_to_lval)
    %end;
S_0x555580732a50 .scope autofunction.vec4.s1, "get_sw_read_next_value" "get_sw_read_next_value" 9 86, 9 86 0, S_0x55558072f2a0;
 .timescale 0 0;
v0x555580732c30_0 .var "current_value", 0 0;
; Variable get_sw_read_next_value is vec4 return value of scope S_0x555580732a50
v0x555580732e10_0 .var "mask", 0 0;
v0x555580732ed0_0 .var "value", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_s2wto.u_bit_field.get_sw_read_next_value ;
    %pushi/vec4 1, 0, 32;
    %dup/vec4;
    %pushi/vec4 2, 0, 32;
    %cmp/u;
    %jmp/1 T_26.313, 6;
    %dup/vec4;
    %pushi/vec4 3, 0, 32;
    %cmp/u;
    %jmp/1 T_26.314, 6;
    %load/vec4 v0x555580732c30_0;
    %store/vec4 v0x555580732ed0_0, 0, 1;
    %jmp T_26.316;
T_26.313 ;
    %load/vec4 v0x555580732e10_0;
    %cmpi/ne 0, 0, 1;
    %flag_mov 8, 4;
    %jmp/0 T_26.317, 8;
    %pushi/vec4 0, 0, 1;
    %jmp/1 T_26.318, 8;
T_26.317 ; End of true expr.
    %load/vec4 v0x555580732c30_0;
    %jmp/0 T_26.318, 8;
 ; End of false expr.
    %blend;
T_26.318;
    %store/vec4 v0x555580732ed0_0, 0, 1;
    %jmp T_26.316;
T_26.314 ;
    %load/vec4 v0x555580732e10_0;
    %cmpi/ne 0, 0, 1;
    %flag_mov 8, 4;
    %jmp/0 T_26.319, 8;
    %pushi/vec4 1, 0, 1;
    %jmp/1 T_26.320, 8;
T_26.319 ; End of true expr.
    %load/vec4 v0x555580732c30_0;
    %jmp/0 T_26.320, 8;
 ; End of false expr.
    %blend;
T_26.320;
    %store/vec4 v0x555580732ed0_0, 0, 1;
    %jmp T_26.316;
T_26.316 ;
    %pop/vec4 1;
    %load/vec4 v0x555580732ed0_0;
    %ret/vec4 0, 0, 1;  Assign to get_sw_read_next_value (store_vec4_to_lval)
    %end;
S_0x555580732fb0 .scope autofunction.vec4.s1, "get_sw_write_next_value" "get_sw_write_next_value" 9 101, 9 101 0, S_0x55558072f2a0;
 .timescale 0 0;
v0x555580733190_0 .var "current_value", 0 0;
; Variable get_sw_write_next_value is vec4 return value of scope S_0x555580732fb0
v0x555580733370_0 .var/i "i", 31 0;
v0x555580733460_0 .var "mask", 0 0;
v0x555580733540_0 .var "value", 0 0;
v0x555580733670_0 .var "write_data", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_s2wto.u_bit_field.get_sw_write_next_value ;
    %load/vec4 v0x555580733190_0;
    %store/vec4 v0x555580733540_0, 0, 1;
    %pushi/vec4 2, 0, 32;
    %dup/vec4;
    %pushi/vec4 1, 0, 32;
    %cmp/u;
    %jmp/1 T_27.321, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 32;
    %cmp/u;
    %jmp/1 T_27.322, 6;
    %dup/vec4;
    %pushi/vec4 3, 0, 32;
    %cmp/u;
    %jmp/1 T_27.323, 6;
    %dup/vec4;
    %pushi/vec4 4, 0, 32;
    %cmp/u;
    %jmp/1 T_27.324, 6;
    %dup/vec4;
    %pushi/vec4 5, 0, 32;
    %cmp/u;
    %jmp/1 T_27.325, 6;
    %dup/vec4;
    %pushi/vec4 6, 0, 32;
    %cmp/u;
    %jmp/1 T_27.326, 6;
    %dup/vec4;
    %pushi/vec4 7, 0, 32;
    %cmp/u;
    %jmp/1 T_27.327, 6;
    %dup/vec4;
    %pushi/vec4 8, 0, 32;
    %cmp/u;
    %jmp/1 T_27.328, 6;
    %dup/vec4;
    %pushi/vec4 9, 0, 32;
    %cmp/u;
    %jmp/1 T_27.329, 6;
    %jmp T_27.331;
T_27.321 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x555580733370_0, 0, 32;
T_27.332 ; Top of for-loop
    %load/vec4 v0x555580733370_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_27.333, 5;
    %load/vec4 v0x555580733460_0;
    %load/vec4 v0x555580733370_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_27.335, 8;
    %load/vec4 v0x555580733670_0;
    %load/vec4 v0x555580733370_0;
    %part/s 1;
    %ix/getv/s 4, v0x555580733370_0;
    %store/vec4 v0x555580733540_0, 4, 1;
T_27.335 ;
T_27.334 ; for-loop step statement
    %load/vec4 v0x555580733370_0;
    %addi 1, 0, 32;
    %store/vec4 v0x555580733370_0, 0, 32;
    %jmp T_27.332;
T_27.333 ; for-loop exit label
    %jmp T_27.331;
T_27.322 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x555580733370_0, 0, 32;
T_27.337 ; Top of for-loop
    %load/vec4 v0x555580733370_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_27.338, 5;
    %load/vec4 v0x555580733460_0;
    %load/vec4 v0x555580733370_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_27.342, 9;
    %load/vec4 v0x555580733670_0;
    %load/vec4 v0x555580733370_0;
    %part/s 1;
    %nor/r;
    %and;
T_27.342;
    %flag_set/vec4 8;
    %jmp/0xz  T_27.340, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x555580733370_0;
    %store/vec4 v0x555580733540_0, 4, 1;
T_27.340 ;
T_27.339 ; for-loop step statement
    %load/vec4 v0x555580733370_0;
    %addi 1, 0, 32;
    %store/vec4 v0x555580733370_0, 0, 32;
    %jmp T_27.337;
T_27.338 ; for-loop exit label
    %jmp T_27.331;
T_27.323 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x555580733370_0, 0, 32;
T_27.343 ; Top of for-loop
    %load/vec4 v0x555580733370_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_27.344, 5;
    %load/vec4 v0x555580733460_0;
    %load/vec4 v0x555580733370_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_27.348, 9;
    %load/vec4 v0x555580733670_0;
    %load/vec4 v0x555580733370_0;
    %part/s 1;
    %and;
T_27.348;
    %flag_set/vec4 8;
    %jmp/0xz  T_27.346, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x555580733370_0;
    %store/vec4 v0x555580733540_0, 4, 1;
T_27.346 ;
T_27.345 ; for-loop step statement
    %load/vec4 v0x555580733370_0;
    %addi 1, 0, 32;
    %store/vec4 v0x555580733370_0, 0, 32;
    %jmp T_27.343;
T_27.344 ; for-loop exit label
    %jmp T_27.331;
T_27.324 ;
    %load/vec4 v0x555580733460_0;
    %cmpi/ne 0, 0, 1;
    %jmp/0xz  T_27.349, 4;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x555580733540_0, 0, 1;
T_27.349 ;
    %jmp T_27.331;
T_27.325 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x555580733370_0, 0, 32;
T_27.351 ; Top of for-loop
    %load/vec4 v0x555580733370_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_27.352, 5;
    %load/vec4 v0x555580733460_0;
    %load/vec4 v0x555580733370_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_27.356, 9;
    %load/vec4 v0x555580733670_0;
    %load/vec4 v0x555580733370_0;
    %part/s 1;
    %nor/r;
    %and;
T_27.356;
    %flag_set/vec4 8;
    %jmp/0xz  T_27.354, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x555580733370_0;
    %store/vec4 v0x555580733540_0, 4, 1;
T_27.354 ;
T_27.353 ; for-loop step statement
    %load/vec4 v0x555580733370_0;
    %addi 1, 0, 32;
    %store/vec4 v0x555580733370_0, 0, 32;
    %jmp T_27.351;
T_27.352 ; for-loop exit label
    %jmp T_27.331;
T_27.326 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x555580733370_0, 0, 32;
T_27.357 ; Top of for-loop
    %load/vec4 v0x555580733370_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_27.358, 5;
    %load/vec4 v0x555580733460_0;
    %load/vec4 v0x555580733370_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_27.362, 9;
    %load/vec4 v0x555580733670_0;
    %load/vec4 v0x555580733370_0;
    %part/s 1;
    %and;
T_27.362;
    %flag_set/vec4 8;
    %jmp/0xz  T_27.360, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x555580733370_0;
    %store/vec4 v0x555580733540_0, 4, 1;
T_27.360 ;
T_27.359 ; for-loop step statement
    %load/vec4 v0x555580733370_0;
    %addi 1, 0, 32;
    %store/vec4 v0x555580733370_0, 0, 32;
    %jmp T_27.357;
T_27.358 ; for-loop exit label
    %jmp T_27.331;
T_27.327 ;
    %load/vec4 v0x555580733460_0;
    %cmpi/ne 0, 0, 1;
    %jmp/0xz  T_27.363, 4;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x555580733540_0, 0, 1;
T_27.363 ;
    %jmp T_27.331;
T_27.328 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x555580733370_0, 0, 32;
T_27.365 ; Top of for-loop
    %load/vec4 v0x555580733370_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_27.366, 5;
    %load/vec4 v0x555580733460_0;
    %load/vec4 v0x555580733370_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_27.370, 9;
    %load/vec4 v0x555580733670_0;
    %load/vec4 v0x555580733370_0;
    %part/s 1;
    %nor/r;
    %and;
T_27.370;
    %flag_set/vec4 8;
    %jmp/0xz  T_27.368, 8;
    %load/vec4 v0x555580733190_0;
    %load/vec4 v0x555580733370_0;
    %part/s 1;
    %inv;
    %ix/getv/s 4, v0x555580733370_0;
    %store/vec4 v0x555580733540_0, 4, 1;
T_27.368 ;
T_27.367 ; for-loop step statement
    %load/vec4 v0x555580733370_0;
    %addi 1, 0, 32;
    %store/vec4 v0x555580733370_0, 0, 32;
    %jmp T_27.365;
T_27.366 ; for-loop exit label
    %jmp T_27.331;
T_27.329 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x555580733370_0, 0, 32;
T_27.371 ; Top of for-loop
    %load/vec4 v0x555580733370_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_27.372, 5;
    %load/vec4 v0x555580733460_0;
    %load/vec4 v0x555580733370_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_27.376, 9;
    %load/vec4 v0x555580733670_0;
    %load/vec4 v0x555580733370_0;
    %part/s 1;
    %and;
T_27.376;
    %flag_set/vec4 8;
    %jmp/0xz  T_27.374, 8;
    %load/vec4 v0x555580733190_0;
    %load/vec4 v0x555580733370_0;
    %part/s 1;
    %inv;
    %ix/getv/s 4, v0x555580733370_0;
    %store/vec4 v0x555580733540_0, 4, 1;
T_27.374 ;
T_27.373 ; for-loop step statement
    %load/vec4 v0x555580733370_0;
    %addi 1, 0, 32;
    %store/vec4 v0x555580733370_0, 0, 32;
    %jmp T_27.371;
T_27.372 ; for-loop exit label
    %jmp T_27.331;
T_27.331 ;
    %pop/vec4 1;
    %load/vec4 v0x555580733540_0;
    %ret/vec4 0, 0, 1;  Assign to get_sw_write_next_value (store_vec4_to_lval)
    %end;
S_0x555580733750 .scope autofunction.vec4.s1, "get_sw_write_update" "get_sw_write_update" 9 47, 9 47 0, S_0x55558072f2a0;
 .timescale 0 0;
; Variable get_sw_write_update is vec4 return value of scope S_0x555580733750
v0x555580733a10_0 .var "update", 2 0;
v0x555580733af0_0 .var "write_done", 0 0;
v0x555580733b90_0 .var "write_enable", 0 0;
v0x555580733c50_0 .var "write_valid", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_s2wto.u_bit_field.get_sw_write_update ;
    %load/vec4 v0x555580733c50_0;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x555580733a10_0, 4, 1;
    %pushi/vec4 1, 0, 1;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x555580733a10_0, 4, 1;
    %pushi/vec4 1, 0, 1;
    %ix/load 4, 2, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x555580733a10_0, 4, 1;
    %load/vec4 v0x555580733a10_0;
    %parti/s 1, 0, 2;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_28.378, 9;
    %load/vec4 v0x555580733a10_0;
    %parti/s 1, 1, 2;
    %and;
T_28.378;
    %flag_set/vec4 8;
    %flag_get/vec4 8;
    %jmp/0 T_28.377, 8;
    %load/vec4 v0x555580733a10_0;
    %parti/s 1, 2, 3;
    %and;
T_28.377;
    %ret/vec4 0, 0, 1;  Assign to get_sw_write_update (store_vec4_to_lval)
    %end;
S_0x5555807356e0 .scope generate, "g_wden" "g_wden" 8 117, 8 117 0, S_0x5555806ff900;
 .timescale -8 -9;
S_0x555580735870 .scope module, "u_bit_field" "rggen_bit_field" 8 123, 9 2 0, S_0x5555807356e0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "i_clk";
    .port_info 1 /INPUT 1 "i_rst_n";
    .port_info 2 /INPUT 1 "i_sw_write_valid";
    .port_info 3 /INPUT 1 "i_sw_write_enable";
    .port_info 4 /INPUT 1 "i_sw_read_valid";
    .port_info 5 /INPUT 1 "i_sw_mask";
    .port_info 6 /INPUT 1 "i_sw_write_data";
    .port_info 7 /OUTPUT 1 "o_sw_read_data";
    .port_info 8 /OUTPUT 1 "o_sw_value";
    .port_info 9 /OUTPUT 1 "o_write_trigger";
    .port_info 10 /OUTPUT 1 "o_read_trigger";
    .port_info 11 /INPUT 1 "i_hw_write_enable";
    .port_info 12 /INPUT 1 "i_hw_write_data";
    .port_info 13 /INPUT 1 "i_hw_set";
    .port_info 14 /INPUT 1 "i_hw_clear";
    .port_info 15 /INPUT 1 "i_value";
    .port_info 16 /INPUT 1 "i_mask";
    .port_info 17 /OUTPUT 1 "o_value";
    .port_info 18 /OUTPUT 1 "o_value_unmasked";
P_0x555580735a70 .param/l "EXTERNAL_MASK" 0 9 17, C4<0>;
P_0x555580735ab0 .param/l "EXTERNAL_READ_DATA" 0 9 16, C4<0>;
P_0x555580735af0 .param/l "HW_ACCESS" 0 9 12, C4<000>;
P_0x555580735b30 .param/l "HW_CLEAR_WIDTH" 0 9 14, +C4<00000000000000000000000000000001>;
P_0x555580735b70 .param/l "HW_SET_WIDTH" 0 9 13, +C4<00000000000000000000000000000001>;
P_0x555580735bb0 .param/l "HW_WRITE_ENABLE_POLARITY" 0 9 11, C4<1>;
P_0x555580735bf0 .param/l "INITIAL_VALUE" 0 9 4, C4<0>;
P_0x555580735c30 .param/l "PRECEDENCE_ACCESS" 0 9 5, +C4<00000000000000000000000000000001>;
P_0x555580735c70 .param/l "STORAGE" 0 9 15, C4<1>;
P_0x555580735cb0 .param/l "SW_READABLE" 1 9 41, C4<1>;
P_0x555580735cf0 .param/l "SW_READ_ACTION" 0 9 6, +C4<00000000000000000000000000000001>;
P_0x555580735d30 .param/l "SW_READ_UPDATE" 1 9 42, C4<0>;
P_0x555580735d70 .param/l "SW_WRITABLE" 1 9 40, C4<1>;
P_0x555580735db0 .param/l "SW_WRITE_ACTION" 0 9 7, +C4<00000000000000000000000000000001>;
P_0x555580735df0 .param/l "SW_WRITE_CONTROL" 0 9 8, C4<0>;
P_0x555580735e30 .param/l "SW_WRITE_ENABLE_POLARITY" 0 9 10, C4<1>;
P_0x555580735e70 .param/l "SW_WRITE_ONCE" 0 9 9, +C4<00000000000000000000000000000000>;
P_0x555580735eb0 .param/l "TRIGGER" 0 9 18, +C4<00000000000000000000000000000000>;
P_0x555580735ef0 .param/l "WIDTH" 0 9 3, +C4<00000000000000000000000000000001>;
L_0x55558076eb80 .functor BUFZ 1, L_0x55558076eac0, C4<0>, C4<0>, C4<0>;
L_0x55558076ec40 .functor BUFZ 1, v0x555580737910_0, C4<0>, C4<0>, C4<0>;
L_0x55558076ee70 .functor BUFZ 1, v0x555580737910_0, C4<0>, C4<0>, C4<0>;
L_0x55558076f000 .functor BUFZ 1, v0x555580737910_0, C4<0>, C4<0>, C4<0>;
v0x55558073a210_0 .net "i_clk", 0 0, v0x55558075c2e0_0;  alias, 1 drivers
L_0x7eff798d0570 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x55558073a2d0_0 .net "i_hw_clear", 0 0, L_0x7eff798d0570;  1 drivers
L_0x7eff798d0528 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x55558073a3b0_0 .net "i_hw_set", 0 0, L_0x7eff798d0528;  1 drivers
L_0x7eff798d04e0 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x55558073a470_0 .net "i_hw_write_data", 0 0, L_0x7eff798d04e0;  1 drivers
L_0x7eff798d0498 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x55558073a550_0 .net "i_hw_write_enable", 0 0, L_0x7eff798d0498;  1 drivers
L_0x7eff798d0600 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v0x55558073a660_0 .net "i_mask", 0 0, L_0x7eff798d0600;  1 drivers
v0x55558073a740_0 .net "i_rst_n", 0 0, L_0x5555807142d0;  alias, 1 drivers
v0x55558073a7e0_0 .net "i_sw_mask", 0 0, L_0x55558076f0a0;  1 drivers
v0x55558073a8c0_0 .net "i_sw_read_valid", 0 0, L_0x55558075de50;  alias, 1 drivers
v0x55558073aa80_0 .net "i_sw_write_data", 0 0, L_0x55558076f140;  1 drivers
L_0x7eff798d0450 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v0x55558073ab60_0 .net "i_sw_write_enable", 0 0, L_0x7eff798d0450;  1 drivers
v0x55558073ac20_0 .net "i_sw_write_valid", 0 0, L_0x55558075d7c0;  alias, 1 drivers
L_0x7eff798d05b8 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x55558073ad50_0 .net "i_value", 0 0, L_0x7eff798d05b8;  1 drivers
v0x55558073ae30_0 .net "o_read_trigger", 0 0, L_0x55558076eda0;  1 drivers
v0x55558073aef0_0 .net "o_sw_read_data", 0 0, L_0x55558076eb80;  1 drivers
v0x55558073afd0_0 .net "o_sw_value", 0 0, L_0x55558076ec40;  1 drivers
v0x55558073b0b0_0 .net "o_value", 0 0, L_0x55558076ee70;  alias, 1 drivers
v0x55558073b280_0 .net "o_value_unmasked", 0 0, L_0x55558076f000;  1 drivers
v0x55558073b340_0 .net "o_write_trigger", 0 0, L_0x55558076ecb0;  1 drivers
L_0x7eff798d0330 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x55558073b400_0 .net "w_hw_update", 0 0, L_0x7eff798d0330;  1 drivers
v0x55558073b4c0_0 .net "w_read_data", 0 0, L_0x55558076eac0;  1 drivers
v0x55558073b5a0_0 .net "w_sw_update", 1 0, L_0x55558076e780;  1 drivers
L_0x7eff798d0378 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x55558073b680_0 .net "w_sw_write_done", 0 0, L_0x7eff798d0378;  1 drivers
v0x55558073b740_0 .net "w_trigger", 1 0, L_0x55558076e910;  1 drivers
v0x55558073b820_0 .net "w_value", 0 0, v0x555580737910_0;  1 drivers
L_0x7eff798d02e8 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x55558076e780 .concat8 [ 1 1 0 0], L_0x7eff798d02e8, L_0x55558076e820;
L_0x7eff798d03c0 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x7eff798d0408 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x55558076e910 .concat8 [ 1 1 0 0], L_0x7eff798d03c0, L_0x7eff798d0408;
L_0x55558076ecb0 .part L_0x55558076e910, 0, 1;
L_0x55558076eda0 .part L_0x55558076e910, 1, 1;
S_0x555580736a70 .scope generate, "g_read_data" "g_read_data" 9 382, 9 382 0, S_0x555580735870;
 .timescale 0 0;
L_0x55558076eac0 .functor BUFZ 1, v0x555580737910_0, C4<0>, C4<0>, C4<0>;
S_0x555580736c50 .scope generate, "g_read_trigger" "g_read_trigger" 9 304, 9 304 0, S_0x555580735870;
 .timescale 0 0;
v0x555580736e50_0 .net/2u *"_ivl_0", 0 0, L_0x7eff798d0408;  1 drivers
S_0x555580736f30 .scope generate, "g_sw_read_update" "g_sw_read_update" 9 245, 9 245 0, S_0x555580735870;
 .timescale 0 0;
v0x555580737140_0 .net/2u *"_ivl_0", 0 0, L_0x7eff798d02e8;  1 drivers
S_0x555580737220 .scope generate, "g_sw_write_done" "g_sw_write_done" 9 268, 9 268 0, S_0x555580735870;
 .timescale 0 0;
S_0x555580737400 .scope generate, "g_sw_write_update" "g_sw_write_update" 9 252, 9 252 0, S_0x555580735870;
 .timescale 0 0;
v0x555580737630_0 .net *"_ivl_1", 0 0, L_0x55558076e820;  1 drivers
L_0x55558076e820 .ufunc/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_wden.u_bit_field.get_sw_write_update, 1, L_0x55558075d7c0, L_0x7eff798d0450, L_0x7eff798d0378 (v0x55558073a0e0_0, v0x55558073a020_0, v0x555580739f80_0) S_0x555580739be0;
S_0x555580737730 .scope generate, "g_value" "g_value" 9 326, 9 326 0, S_0x555580735870;
 .timescale 0 0;
v0x555580737910_0 .var "r_value", 0 0;
S_0x555580737a10 .scope generate, "g_write_trigger" "g_write_trigger" 9 287, 9 287 0, S_0x555580735870;
 .timescale 0 0;
v0x555580737bf0_0 .net/2u *"_ivl_0", 0 0, L_0x7eff798d03c0;  1 drivers
S_0x555580737cf0 .scope generate, "genblk3" "genblk3" 9 259, 9 259 0, S_0x555580735870;
 .timescale 0 0;
S_0x555580737ed0 .scope autofunction.vec4.s1, "get_hw_next_value" "get_hw_next_value" 9 177, 9 177 0, S_0x555580735870;
 .timescale 0 0;
v0x5555807380b0_0 .var "clear", 0 0;
v0x5555807381b0_0 .var "current_value", 0 0;
; Variable get_hw_next_value is vec4 return value of scope S_0x555580737ed0
v0x555580738350_0 .var/i "i", 31 0;
v0x555580738430_0 .var "set", 0 0;
v0x555580738510 .array "set_clear", 1 0, 0 0;
v0x5555807385d0_0 .var "value", 0 0;
v0x5555807386b0_0 .var "write_data", 0 0;
v0x555580738790_0 .var "write_enable", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_wden.u_bit_field.get_hw_next_value ;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x555580738510, 4, 0;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x555580738510, 4, 0;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x555580738350_0, 0, 32;
T_29.379 ; Top of for-loop
    %load/vec4 v0x555580738350_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_29.380, 5;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x555580738510, 4;
    %load/vec4 v0x555580738350_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_29.382, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x555580738350_0;
    %store/vec4 v0x5555807385d0_0, 4, 1;
    %jmp T_29.383;
T_29.382 ;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x555580738510, 4;
    %load/vec4 v0x555580738350_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_29.384, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x555580738350_0;
    %store/vec4 v0x5555807385d0_0, 4, 1;
    %jmp T_29.385;
T_29.384 ;
    %load/vec4 v0x5555807381b0_0;
    %load/vec4 v0x555580738350_0;
    %part/s 1;
    %ix/getv/s 4, v0x555580738350_0;
    %store/vec4 v0x5555807385d0_0, 4, 1;
T_29.385 ;
T_29.383 ;
T_29.381 ; for-loop step statement
    %load/vec4 v0x555580738350_0;
    %addi 1, 0, 32;
    %store/vec4 v0x555580738350_0, 0, 32;
    %jmp T_29.379;
T_29.380 ; for-loop exit label
    %load/vec4 v0x5555807385d0_0;
    %ret/vec4 0, 0, 1;  Assign to get_hw_next_value (store_vec4_to_lval)
    %end;
S_0x5555807388e0 .scope autofunction.vec4.s1, "get_hw_update" "get_hw_update" 9 72, 9 72 0, S_0x555580735870;
 .timescale 0 0;
v0x555580738a70_0 .var "clear", 0 0;
; Variable get_hw_update is vec4 return value of scope S_0x5555807388e0
v0x555580738c30_0 .var "set", 0 0;
v0x555580738cf0_0 .var "update", 2 0;
v0x555580738dd0_0 .var "write_enable", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_wden.u_bit_field.get_hw_update ;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x555580738cf0_0, 4, 1;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x555580738cf0_0, 4, 1;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 2, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x555580738cf0_0, 4, 1;
    %load/vec4 v0x555580738cf0_0;
    %parti/s 1, 0, 2;
    %flag_set/vec4 8;
    %jmp/1 T_30.387, 8;
    %load/vec4 v0x555580738cf0_0;
    %parti/s 1, 1, 2;
    %flag_set/vec4 9;
    %flag_or 8, 9;
T_30.387;
    %flag_get/vec4 8;
    %jmp/1 T_30.386, 8;
    %load/vec4 v0x555580738cf0_0;
    %parti/s 1, 2, 3;
    %or;
T_30.386;
    %ret/vec4 0, 0, 1;  Assign to get_hw_update (store_vec4_to_lval)
    %end;
S_0x555580738ee0 .scope autofunction.vec4.s1, "get_sw_read_next_value" "get_sw_read_next_value" 9 86, 9 86 0, S_0x555580735870;
 .timescale 0 0;
v0x5555807390c0_0 .var "current_value", 0 0;
; Variable get_sw_read_next_value is vec4 return value of scope S_0x555580738ee0
v0x5555807392a0_0 .var "mask", 0 0;
v0x555580739360_0 .var "value", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_wden.u_bit_field.get_sw_read_next_value ;
    %pushi/vec4 1, 0, 32;
    %dup/vec4;
    %pushi/vec4 2, 0, 32;
    %cmp/u;
    %jmp/1 T_31.388, 6;
    %dup/vec4;
    %pushi/vec4 3, 0, 32;
    %cmp/u;
    %jmp/1 T_31.389, 6;
    %load/vec4 v0x5555807390c0_0;
    %store/vec4 v0x555580739360_0, 0, 1;
    %jmp T_31.391;
T_31.388 ;
    %load/vec4 v0x5555807392a0_0;
    %cmpi/ne 0, 0, 1;
    %flag_mov 8, 4;
    %jmp/0 T_31.392, 8;
    %pushi/vec4 0, 0, 1;
    %jmp/1 T_31.393, 8;
T_31.392 ; End of true expr.
    %load/vec4 v0x5555807390c0_0;
    %jmp/0 T_31.393, 8;
 ; End of false expr.
    %blend;
T_31.393;
    %store/vec4 v0x555580739360_0, 0, 1;
    %jmp T_31.391;
T_31.389 ;
    %load/vec4 v0x5555807392a0_0;
    %cmpi/ne 0, 0, 1;
    %flag_mov 8, 4;
    %jmp/0 T_31.394, 8;
    %pushi/vec4 1, 0, 1;
    %jmp/1 T_31.395, 8;
T_31.394 ; End of true expr.
    %load/vec4 v0x5555807390c0_0;
    %jmp/0 T_31.395, 8;
 ; End of false expr.
    %blend;
T_31.395;
    %store/vec4 v0x555580739360_0, 0, 1;
    %jmp T_31.391;
T_31.391 ;
    %pop/vec4 1;
    %load/vec4 v0x555580739360_0;
    %ret/vec4 0, 0, 1;  Assign to get_sw_read_next_value (store_vec4_to_lval)
    %end;
S_0x555580739440 .scope autofunction.vec4.s1, "get_sw_write_next_value" "get_sw_write_next_value" 9 101, 9 101 0, S_0x555580735870;
 .timescale 0 0;
v0x555580739620_0 .var "current_value", 0 0;
; Variable get_sw_write_next_value is vec4 return value of scope S_0x555580739440
v0x555580739800_0 .var/i "i", 31 0;
v0x5555807398f0_0 .var "mask", 0 0;
v0x5555807399d0_0 .var "value", 0 0;
v0x555580739b00_0 .var "write_data", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_wden.u_bit_field.get_sw_write_next_value ;
    %load/vec4 v0x555580739620_0;
    %store/vec4 v0x5555807399d0_0, 0, 1;
    %pushi/vec4 1, 0, 32;
    %dup/vec4;
    %pushi/vec4 1, 0, 32;
    %cmp/u;
    %jmp/1 T_32.396, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 32;
    %cmp/u;
    %jmp/1 T_32.397, 6;
    %dup/vec4;
    %pushi/vec4 3, 0, 32;
    %cmp/u;
    %jmp/1 T_32.398, 6;
    %dup/vec4;
    %pushi/vec4 4, 0, 32;
    %cmp/u;
    %jmp/1 T_32.399, 6;
    %dup/vec4;
    %pushi/vec4 5, 0, 32;
    %cmp/u;
    %jmp/1 T_32.400, 6;
    %dup/vec4;
    %pushi/vec4 6, 0, 32;
    %cmp/u;
    %jmp/1 T_32.401, 6;
    %dup/vec4;
    %pushi/vec4 7, 0, 32;
    %cmp/u;
    %jmp/1 T_32.402, 6;
    %dup/vec4;
    %pushi/vec4 8, 0, 32;
    %cmp/u;
    %jmp/1 T_32.403, 6;
    %dup/vec4;
    %pushi/vec4 9, 0, 32;
    %cmp/u;
    %jmp/1 T_32.404, 6;
    %jmp T_32.406;
T_32.396 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x555580739800_0, 0, 32;
T_32.407 ; Top of for-loop
    %load/vec4 v0x555580739800_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_32.408, 5;
    %load/vec4 v0x5555807398f0_0;
    %load/vec4 v0x555580739800_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_32.410, 8;
    %load/vec4 v0x555580739b00_0;
    %load/vec4 v0x555580739800_0;
    %part/s 1;
    %ix/getv/s 4, v0x555580739800_0;
    %store/vec4 v0x5555807399d0_0, 4, 1;
T_32.410 ;
T_32.409 ; for-loop step statement
    %load/vec4 v0x555580739800_0;
    %addi 1, 0, 32;
    %store/vec4 v0x555580739800_0, 0, 32;
    %jmp T_32.407;
T_32.408 ; for-loop exit label
    %jmp T_32.406;
T_32.397 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x555580739800_0, 0, 32;
T_32.412 ; Top of for-loop
    %load/vec4 v0x555580739800_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_32.413, 5;
    %load/vec4 v0x5555807398f0_0;
    %load/vec4 v0x555580739800_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_32.417, 9;
    %load/vec4 v0x555580739b00_0;
    %load/vec4 v0x555580739800_0;
    %part/s 1;
    %nor/r;
    %and;
T_32.417;
    %flag_set/vec4 8;
    %jmp/0xz  T_32.415, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x555580739800_0;
    %store/vec4 v0x5555807399d0_0, 4, 1;
T_32.415 ;
T_32.414 ; for-loop step statement
    %load/vec4 v0x555580739800_0;
    %addi 1, 0, 32;
    %store/vec4 v0x555580739800_0, 0, 32;
    %jmp T_32.412;
T_32.413 ; for-loop exit label
    %jmp T_32.406;
T_32.398 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x555580739800_0, 0, 32;
T_32.418 ; Top of for-loop
    %load/vec4 v0x555580739800_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_32.419, 5;
    %load/vec4 v0x5555807398f0_0;
    %load/vec4 v0x555580739800_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_32.423, 9;
    %load/vec4 v0x555580739b00_0;
    %load/vec4 v0x555580739800_0;
    %part/s 1;
    %and;
T_32.423;
    %flag_set/vec4 8;
    %jmp/0xz  T_32.421, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x555580739800_0;
    %store/vec4 v0x5555807399d0_0, 4, 1;
T_32.421 ;
T_32.420 ; for-loop step statement
    %load/vec4 v0x555580739800_0;
    %addi 1, 0, 32;
    %store/vec4 v0x555580739800_0, 0, 32;
    %jmp T_32.418;
T_32.419 ; for-loop exit label
    %jmp T_32.406;
T_32.399 ;
    %load/vec4 v0x5555807398f0_0;
    %cmpi/ne 0, 0, 1;
    %jmp/0xz  T_32.424, 4;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x5555807399d0_0, 0, 1;
T_32.424 ;
    %jmp T_32.406;
T_32.400 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x555580739800_0, 0, 32;
T_32.426 ; Top of for-loop
    %load/vec4 v0x555580739800_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_32.427, 5;
    %load/vec4 v0x5555807398f0_0;
    %load/vec4 v0x555580739800_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_32.431, 9;
    %load/vec4 v0x555580739b00_0;
    %load/vec4 v0x555580739800_0;
    %part/s 1;
    %nor/r;
    %and;
T_32.431;
    %flag_set/vec4 8;
    %jmp/0xz  T_32.429, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x555580739800_0;
    %store/vec4 v0x5555807399d0_0, 4, 1;
T_32.429 ;
T_32.428 ; for-loop step statement
    %load/vec4 v0x555580739800_0;
    %addi 1, 0, 32;
    %store/vec4 v0x555580739800_0, 0, 32;
    %jmp T_32.426;
T_32.427 ; for-loop exit label
    %jmp T_32.406;
T_32.401 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x555580739800_0, 0, 32;
T_32.432 ; Top of for-loop
    %load/vec4 v0x555580739800_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_32.433, 5;
    %load/vec4 v0x5555807398f0_0;
    %load/vec4 v0x555580739800_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_32.437, 9;
    %load/vec4 v0x555580739b00_0;
    %load/vec4 v0x555580739800_0;
    %part/s 1;
    %and;
T_32.437;
    %flag_set/vec4 8;
    %jmp/0xz  T_32.435, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x555580739800_0;
    %store/vec4 v0x5555807399d0_0, 4, 1;
T_32.435 ;
T_32.434 ; for-loop step statement
    %load/vec4 v0x555580739800_0;
    %addi 1, 0, 32;
    %store/vec4 v0x555580739800_0, 0, 32;
    %jmp T_32.432;
T_32.433 ; for-loop exit label
    %jmp T_32.406;
T_32.402 ;
    %load/vec4 v0x5555807398f0_0;
    %cmpi/ne 0, 0, 1;
    %jmp/0xz  T_32.438, 4;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x5555807399d0_0, 0, 1;
T_32.438 ;
    %jmp T_32.406;
T_32.403 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x555580739800_0, 0, 32;
T_32.440 ; Top of for-loop
    %load/vec4 v0x555580739800_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_32.441, 5;
    %load/vec4 v0x5555807398f0_0;
    %load/vec4 v0x555580739800_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_32.445, 9;
    %load/vec4 v0x555580739b00_0;
    %load/vec4 v0x555580739800_0;
    %part/s 1;
    %nor/r;
    %and;
T_32.445;
    %flag_set/vec4 8;
    %jmp/0xz  T_32.443, 8;
    %load/vec4 v0x555580739620_0;
    %load/vec4 v0x555580739800_0;
    %part/s 1;
    %inv;
    %ix/getv/s 4, v0x555580739800_0;
    %store/vec4 v0x5555807399d0_0, 4, 1;
T_32.443 ;
T_32.442 ; for-loop step statement
    %load/vec4 v0x555580739800_0;
    %addi 1, 0, 32;
    %store/vec4 v0x555580739800_0, 0, 32;
    %jmp T_32.440;
T_32.441 ; for-loop exit label
    %jmp T_32.406;
T_32.404 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x555580739800_0, 0, 32;
T_32.446 ; Top of for-loop
    %load/vec4 v0x555580739800_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_32.447, 5;
    %load/vec4 v0x5555807398f0_0;
    %load/vec4 v0x555580739800_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_32.451, 9;
    %load/vec4 v0x555580739b00_0;
    %load/vec4 v0x555580739800_0;
    %part/s 1;
    %and;
T_32.451;
    %flag_set/vec4 8;
    %jmp/0xz  T_32.449, 8;
    %load/vec4 v0x555580739620_0;
    %load/vec4 v0x555580739800_0;
    %part/s 1;
    %inv;
    %ix/getv/s 4, v0x555580739800_0;
    %store/vec4 v0x5555807399d0_0, 4, 1;
T_32.449 ;
T_32.448 ; for-loop step statement
    %load/vec4 v0x555580739800_0;
    %addi 1, 0, 32;
    %store/vec4 v0x555580739800_0, 0, 32;
    %jmp T_32.446;
T_32.447 ; for-loop exit label
    %jmp T_32.406;
T_32.406 ;
    %pop/vec4 1;
    %load/vec4 v0x5555807399d0_0;
    %ret/vec4 0, 0, 1;  Assign to get_sw_write_next_value (store_vec4_to_lval)
    %end;
S_0x555580739be0 .scope autofunction.vec4.s1, "get_sw_write_update" "get_sw_write_update" 9 47, 9 47 0, S_0x555580735870;
 .timescale 0 0;
; Variable get_sw_write_update is vec4 return value of scope S_0x555580739be0
v0x555580739ea0_0 .var "update", 2 0;
v0x555580739f80_0 .var "write_done", 0 0;
v0x55558073a020_0 .var "write_enable", 0 0;
v0x55558073a0e0_0 .var "write_valid", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_wden.u_bit_field.get_sw_write_update ;
    %load/vec4 v0x55558073a0e0_0;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x555580739ea0_0, 4, 1;
    %pushi/vec4 1, 0, 1;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x555580739ea0_0, 4, 1;
    %pushi/vec4 1, 0, 1;
    %ix/load 4, 2, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x555580739ea0_0, 4, 1;
    %load/vec4 v0x555580739ea0_0;
    %parti/s 1, 0, 2;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_33.453, 9;
    %load/vec4 v0x555580739ea0_0;
    %parti/s 1, 1, 2;
    %and;
T_33.453;
    %flag_set/vec4 8;
    %flag_get/vec4 8;
    %jmp/0 T_33.452, 8;
    %load/vec4 v0x555580739ea0_0;
    %parti/s 1, 2, 3;
    %and;
T_33.452;
    %ret/vec4 0, 0, 1;  Assign to get_sw_write_update (store_vec4_to_lval)
    %end;
S_0x55558073bc00 .scope generate, "g_wtocnt" "g_wtocnt" 8 239, 8 239 0, S_0x5555806ff900;
 .timescale -8 -9;
S_0x55558073bd90 .scope module, "u_bit_field" "rggen_bit_field" 8 245, 9 2 0, S_0x55558073bc00;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "i_clk";
    .port_info 1 /INPUT 1 "i_rst_n";
    .port_info 2 /INPUT 1 "i_sw_write_valid";
    .port_info 3 /INPUT 1 "i_sw_write_enable";
    .port_info 4 /INPUT 1 "i_sw_read_valid";
    .port_info 5 /INPUT 10 "i_sw_mask";
    .port_info 6 /INPUT 10 "i_sw_write_data";
    .port_info 7 /OUTPUT 10 "o_sw_read_data";
    .port_info 8 /OUTPUT 10 "o_sw_value";
    .port_info 9 /OUTPUT 1 "o_write_trigger";
    .port_info 10 /OUTPUT 1 "o_read_trigger";
    .port_info 11 /INPUT 1 "i_hw_write_enable";
    .port_info 12 /INPUT 10 "i_hw_write_data";
    .port_info 13 /INPUT 10 "i_hw_set";
    .port_info 14 /INPUT 10 "i_hw_clear";
    .port_info 15 /INPUT 10 "i_value";
    .port_info 16 /INPUT 10 "i_mask";
    .port_info 17 /OUTPUT 10 "o_value";
    .port_info 18 /OUTPUT 10 "o_value_unmasked";
P_0x55558073bf40 .param/l "EXTERNAL_MASK" 0 9 17, C4<0>;
P_0x55558073bf80 .param/l "EXTERNAL_READ_DATA" 0 9 16, C4<0>;
P_0x55558073bfc0 .param/l "HW_ACCESS" 0 9 12, C4<000>;
P_0x55558073c000 .param/l "HW_CLEAR_WIDTH" 0 9 14, +C4<00000000000000000000000000001010>;
P_0x55558073c040 .param/l "HW_SET_WIDTH" 0 9 13, +C4<00000000000000000000000000001010>;
P_0x55558073c080 .param/l "HW_WRITE_ENABLE_POLARITY" 0 9 11, C4<1>;
P_0x55558073c0c0 .param/l "INITIAL_VALUE" 0 9 4, C4<1111111111>;
P_0x55558073c100 .param/l "PRECEDENCE_ACCESS" 0 9 5, +C4<00000000000000000000000000000001>;
P_0x55558073c140 .param/l "STORAGE" 0 9 15, C4<1>;
P_0x55558073c180 .param/l "SW_READABLE" 1 9 41, C4<1>;
P_0x55558073c1c0 .param/l "SW_READ_ACTION" 0 9 6, +C4<00000000000000000000000000000001>;
P_0x55558073c200 .param/l "SW_READ_UPDATE" 1 9 42, C4<0>;
P_0x55558073c240 .param/l "SW_WRITABLE" 1 9 40, C4<1>;
P_0x55558073c280 .param/l "SW_WRITE_ACTION" 0 9 7, +C4<00000000000000000000000000000001>;
P_0x55558073c2c0 .param/l "SW_WRITE_CONTROL" 0 9 8, C4<0>;
P_0x55558073c300 .param/l "SW_WRITE_ENABLE_POLARITY" 0 9 10, C4<1>;
P_0x55558073c340 .param/l "SW_WRITE_ONCE" 0 9 9, +C4<00000000000000000000000000000000>;
P_0x55558073c380 .param/l "TRIGGER" 0 9 18, +C4<00000000000000000000000000000000>;
P_0x55558073c3c0 .param/l "WIDTH" 0 9 3, +C4<00000000000000000000000000001010>;
L_0x555580772ae0 .functor BUFZ 10, L_0x5555807729f0, C4<0000000000>, C4<0000000000>, C4<0000000000>;
L_0x555580772ba0 .functor BUFZ 10, v0x55558073df60_0, C4<0000000000>, C4<0000000000>, C4<0000000000>;
L_0x555580772e00 .functor BUFZ 10, v0x55558073df60_0, C4<0000000000>, C4<0000000000>, C4<0000000000>;
L_0x555580772f90 .functor BUFZ 10, v0x55558073df60_0, C4<0000000000>, C4<0000000000>, C4<0000000000>;
v0x555580740890_0 .net "i_clk", 0 0, v0x55558075c2e0_0;  alias, 1 drivers
L_0x7eff798d10b0 .functor BUFT 1, C4<0000000000>, C4<0>, C4<0>, C4<0>;
v0x555580740950_0 .net "i_hw_clear", 9 0, L_0x7eff798d10b0;  1 drivers
L_0x7eff798d1068 .functor BUFT 1, C4<0000000000>, C4<0>, C4<0>, C4<0>;
v0x555580740a30_0 .net "i_hw_set", 9 0, L_0x7eff798d1068;  1 drivers
L_0x7eff798d1020 .functor BUFT 1, C4<0000000000>, C4<0>, C4<0>, C4<0>;
v0x555580740af0_0 .net "i_hw_write_data", 9 0, L_0x7eff798d1020;  1 drivers
L_0x7eff798d0fd8 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x555580740bd0_0 .net "i_hw_write_enable", 0 0, L_0x7eff798d0fd8;  1 drivers
L_0x7eff798d1140 .functor BUFT 1, C4<1111111111>, C4<0>, C4<0>, C4<0>;
v0x555580740ce0_0 .net "i_mask", 9 0, L_0x7eff798d1140;  1 drivers
v0x555580740dc0_0 .net "i_rst_n", 0 0, L_0x5555807142d0;  alias, 1 drivers
v0x555580740e60_0 .net "i_sw_mask", 9 0, L_0x555580773060;  1 drivers
v0x555580740f40_0 .net "i_sw_read_valid", 0 0, L_0x55558075de50;  alias, 1 drivers
v0x555580741070_0 .net "i_sw_write_data", 9 0, L_0x555580773100;  1 drivers
L_0x7eff798d0f90 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v0x555580741150_0 .net "i_sw_write_enable", 0 0, L_0x7eff798d0f90;  1 drivers
v0x555580741210_0 .net "i_sw_write_valid", 0 0, L_0x55558075d7c0;  alias, 1 drivers
L_0x7eff798d10f8 .functor BUFT 1, C4<0000000000>, C4<0>, C4<0>, C4<0>;
v0x5555807412b0_0 .net "i_value", 9 0, L_0x7eff798d10f8;  1 drivers
v0x555580741390_0 .net "o_read_trigger", 0 0, L_0x555580772d30;  1 drivers
v0x555580741450_0 .net "o_sw_read_data", 9 0, L_0x555580772ae0;  1 drivers
v0x555580741530_0 .net "o_sw_value", 9 0, L_0x555580772ba0;  1 drivers
v0x555580741610_0 .net "o_value", 9 0, L_0x555580772e00;  alias, 1 drivers
v0x5555807417e0_0 .net "o_value_unmasked", 9 0, L_0x555580772f90;  1 drivers
v0x5555807418a0_0 .net "o_write_trigger", 0 0, L_0x555580772c10;  1 drivers
L_0x7eff798d0e70 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x555580741960_0 .net "w_hw_update", 0 0, L_0x7eff798d0e70;  1 drivers
v0x555580741a20_0 .net "w_read_data", 9 0, L_0x5555807729f0;  1 drivers
v0x555580741b00_0 .net "w_sw_update", 1 0, L_0x5555807723b0;  1 drivers
L_0x7eff798d0eb8 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x555580741be0_0 .net "w_sw_write_done", 0 0, L_0x7eff798d0eb8;  1 drivers
v0x555580741ca0_0 .net "w_trigger", 1 0, L_0x5555807727e0;  1 drivers
v0x555580741d80_0 .net "w_value", 9 0, v0x55558073df60_0;  1 drivers
L_0x7eff798d0de0 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x5555807723b0 .concat8 [ 1 1 0 0], L_0x7eff798d0de0, L_0x555580772620;
L_0x7eff798d0f00 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x7eff798d0f48 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x5555807727e0 .concat8 [ 1 1 0 0], L_0x7eff798d0f00, L_0x7eff798d0f48;
L_0x555580772c10 .part L_0x5555807727e0, 0, 1;
L_0x555580772d30 .part L_0x5555807727e0, 1, 1;
S_0x55558073cf70 .scope generate, "g_read_data" "g_read_data" 9 382, 9 382 0, S_0x55558073bd90;
 .timescale 0 0;
L_0x5555807729f0 .functor BUFZ 10, v0x55558073df60_0, C4<0000000000>, C4<0000000000>, C4<0000000000>;
S_0x55558073d100 .scope generate, "g_read_trigger" "g_read_trigger" 9 304, 9 304 0, S_0x55558073bd90;
 .timescale 0 0;
v0x55558073d300_0 .net/2u *"_ivl_0", 0 0, L_0x7eff798d0f48;  1 drivers
S_0x55558073d3e0 .scope generate, "g_sw_read_update" "g_sw_read_update" 9 245, 9 245 0, S_0x55558073bd90;
 .timescale 0 0;
v0x55558073d5f0_0 .net/2u *"_ivl_0", 0 0, L_0x7eff798d0de0;  1 drivers
S_0x55558073d6d0 .scope generate, "g_sw_write_done" "g_sw_write_done" 9 268, 9 268 0, S_0x55558073bd90;
 .timescale 0 0;
S_0x55558073d8b0 .scope generate, "g_sw_write_update" "g_sw_write_update" 9 252, 9 252 0, S_0x55558073bd90;
 .timescale 0 0;
v0x55558073dae0_0 .net *"_ivl_0", 9 0, L_0x5555807724d0;  1 drivers
L_0x7eff798d0e28 .functor BUFT 1, C4<000000000>, C4<0>, C4<0>, C4<0>;
v0x55558073dbe0_0 .net *"_ivl_3", 8 0, L_0x7eff798d0e28;  1 drivers
v0x55558073dcc0_0 .net *"_ivl_5", 0 0, L_0x555580772620;  1 drivers
L_0x5555807724d0 .concat [ 1 9 0 0], L_0x55558075d7c0, L_0x7eff798d0e28;
L_0x555580772620 .ufunc/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_wtocnt.u_bit_field.get_sw_write_update, 1, L_0x5555807724d0, L_0x7eff798d0f90, L_0x7eff798d0eb8 (v0x555580740760_0, v0x5555807406a0_0, v0x555580740600_0) S_0x555580740260;
S_0x55558073dd80 .scope generate, "g_value" "g_value" 9 326, 9 326 0, S_0x55558073bd90;
 .timescale 0 0;
v0x55558073df60_0 .var "r_value", 9 0;
S_0x55558073e060 .scope generate, "g_write_trigger" "g_write_trigger" 9 287, 9 287 0, S_0x55558073bd90;
 .timescale 0 0;
v0x55558073e240_0 .net/2u *"_ivl_0", 0 0, L_0x7eff798d0f00;  1 drivers
S_0x55558073e340 .scope generate, "genblk3" "genblk3" 9 259, 9 259 0, S_0x55558073bd90;
 .timescale 0 0;
S_0x55558073e520 .scope autofunction.vec4.s10, "get_hw_next_value" "get_hw_next_value" 9 177, 9 177 0, S_0x55558073bd90;
 .timescale 0 0;
v0x55558073e700_0 .var "clear", 9 0;
v0x55558073e800_0 .var "current_value", 9 0;
; Variable get_hw_next_value is vec4 return value of scope S_0x55558073e520
v0x55558073e9d0_0 .var/i "i", 31 0;
v0x55558073eab0_0 .var "set", 9 0;
v0x55558073eb90 .array "set_clear", 1 0, 9 0;
v0x55558073ec50_0 .var "value", 9 0;
v0x55558073ed30_0 .var "write_data", 9 0;
v0x55558073ee10_0 .var "write_enable", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_wtocnt.u_bit_field.get_hw_next_value ;
    %pushi/vec4 0, 0, 10;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x55558073eb90, 4, 0;
    %pushi/vec4 0, 0, 10;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x55558073eb90, 4, 0;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558073e9d0_0, 0, 32;
T_34.454 ; Top of for-loop
    %load/vec4 v0x55558073e9d0_0;
    %cmpi/s 10, 0, 32;
	  %jmp/0xz T_34.455, 5;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x55558073eb90, 4;
    %load/vec4 v0x55558073e9d0_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_34.457, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x55558073e9d0_0;
    %store/vec4 v0x55558073ec50_0, 4, 1;
    %jmp T_34.458;
T_34.457 ;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x55558073eb90, 4;
    %load/vec4 v0x55558073e9d0_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_34.459, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x55558073e9d0_0;
    %store/vec4 v0x55558073ec50_0, 4, 1;
    %jmp T_34.460;
T_34.459 ;
    %load/vec4 v0x55558073e800_0;
    %load/vec4 v0x55558073e9d0_0;
    %part/s 1;
    %ix/getv/s 4, v0x55558073e9d0_0;
    %store/vec4 v0x55558073ec50_0, 4, 1;
T_34.460 ;
T_34.458 ;
T_34.456 ; for-loop step statement
    %load/vec4 v0x55558073e9d0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558073e9d0_0, 0, 32;
    %jmp T_34.454;
T_34.455 ; for-loop exit label
    %load/vec4 v0x55558073ec50_0;
    %ret/vec4 0, 0, 10;  Assign to get_hw_next_value (store_vec4_to_lval)
    %end;
S_0x55558073ef60 .scope autofunction.vec4.s1, "get_hw_update" "get_hw_update" 9 72, 9 72 0, S_0x55558073bd90;
 .timescale 0 0;
v0x55558073f0f0_0 .var "clear", 9 0;
; Variable get_hw_update is vec4 return value of scope S_0x55558073ef60
v0x55558073f2b0_0 .var "set", 9 0;
v0x55558073f370_0 .var "update", 2 0;
v0x55558073f450_0 .var "write_enable", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_wtocnt.u_bit_field.get_hw_update ;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x55558073f370_0, 4, 1;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x55558073f370_0, 4, 1;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 2, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x55558073f370_0, 4, 1;
    %load/vec4 v0x55558073f370_0;
    %parti/s 1, 0, 2;
    %flag_set/vec4 8;
    %jmp/1 T_35.462, 8;
    %load/vec4 v0x55558073f370_0;
    %parti/s 1, 1, 2;
    %flag_set/vec4 9;
    %flag_or 8, 9;
T_35.462;
    %flag_get/vec4 8;
    %jmp/1 T_35.461, 8;
    %load/vec4 v0x55558073f370_0;
    %parti/s 1, 2, 3;
    %or;
T_35.461;
    %ret/vec4 0, 0, 1;  Assign to get_hw_update (store_vec4_to_lval)
    %end;
S_0x55558073f560 .scope autofunction.vec4.s10, "get_sw_read_next_value" "get_sw_read_next_value" 9 86, 9 86 0, S_0x55558073bd90;
 .timescale 0 0;
v0x55558073f740_0 .var "current_value", 9 0;
; Variable get_sw_read_next_value is vec4 return value of scope S_0x55558073f560
v0x55558073f920_0 .var "mask", 9 0;
v0x55558073f9e0_0 .var "value", 9 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_wtocnt.u_bit_field.get_sw_read_next_value ;
    %pushi/vec4 1, 0, 32;
    %dup/vec4;
    %pushi/vec4 2, 0, 32;
    %cmp/u;
    %jmp/1 T_36.463, 6;
    %dup/vec4;
    %pushi/vec4 3, 0, 32;
    %cmp/u;
    %jmp/1 T_36.464, 6;
    %load/vec4 v0x55558073f740_0;
    %store/vec4 v0x55558073f9e0_0, 0, 10;
    %jmp T_36.466;
T_36.463 ;
    %load/vec4 v0x55558073f920_0;
    %cmpi/ne 0, 0, 10;
    %flag_mov 8, 4;
    %jmp/0 T_36.467, 8;
    %pushi/vec4 0, 0, 10;
    %jmp/1 T_36.468, 8;
T_36.467 ; End of true expr.
    %load/vec4 v0x55558073f740_0;
    %jmp/0 T_36.468, 8;
 ; End of false expr.
    %blend;
T_36.468;
    %store/vec4 v0x55558073f9e0_0, 0, 10;
    %jmp T_36.466;
T_36.464 ;
    %load/vec4 v0x55558073f920_0;
    %cmpi/ne 0, 0, 10;
    %flag_mov 8, 4;
    %jmp/0 T_36.469, 8;
    %pushi/vec4 1023, 0, 10;
    %jmp/1 T_36.470, 8;
T_36.469 ; End of true expr.
    %load/vec4 v0x55558073f740_0;
    %jmp/0 T_36.470, 8;
 ; End of false expr.
    %blend;
T_36.470;
    %store/vec4 v0x55558073f9e0_0, 0, 10;
    %jmp T_36.466;
T_36.466 ;
    %pop/vec4 1;
    %load/vec4 v0x55558073f9e0_0;
    %ret/vec4 0, 0, 10;  Assign to get_sw_read_next_value (store_vec4_to_lval)
    %end;
S_0x55558073fac0 .scope autofunction.vec4.s10, "get_sw_write_next_value" "get_sw_write_next_value" 9 101, 9 101 0, S_0x55558073bd90;
 .timescale 0 0;
v0x55558073fca0_0 .var "current_value", 9 0;
; Variable get_sw_write_next_value is vec4 return value of scope S_0x55558073fac0
v0x55558073fe80_0 .var/i "i", 31 0;
v0x55558073ff70_0 .var "mask", 9 0;
v0x555580740050_0 .var "value", 9 0;
v0x555580740180_0 .var "write_data", 9 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_wtocnt.u_bit_field.get_sw_write_next_value ;
    %load/vec4 v0x55558073fca0_0;
    %store/vec4 v0x555580740050_0, 0, 10;
    %pushi/vec4 1, 0, 32;
    %dup/vec4;
    %pushi/vec4 1, 0, 32;
    %cmp/u;
    %jmp/1 T_37.471, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 32;
    %cmp/u;
    %jmp/1 T_37.472, 6;
    %dup/vec4;
    %pushi/vec4 3, 0, 32;
    %cmp/u;
    %jmp/1 T_37.473, 6;
    %dup/vec4;
    %pushi/vec4 4, 0, 32;
    %cmp/u;
    %jmp/1 T_37.474, 6;
    %dup/vec4;
    %pushi/vec4 5, 0, 32;
    %cmp/u;
    %jmp/1 T_37.475, 6;
    %dup/vec4;
    %pushi/vec4 6, 0, 32;
    %cmp/u;
    %jmp/1 T_37.476, 6;
    %dup/vec4;
    %pushi/vec4 7, 0, 32;
    %cmp/u;
    %jmp/1 T_37.477, 6;
    %dup/vec4;
    %pushi/vec4 8, 0, 32;
    %cmp/u;
    %jmp/1 T_37.478, 6;
    %dup/vec4;
    %pushi/vec4 9, 0, 32;
    %cmp/u;
    %jmp/1 T_37.479, 6;
    %jmp T_37.481;
T_37.471 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558073fe80_0, 0, 32;
T_37.482 ; Top of for-loop
    %load/vec4 v0x55558073fe80_0;
    %cmpi/s 10, 0, 32;
	  %jmp/0xz T_37.483, 5;
    %load/vec4 v0x55558073ff70_0;
    %load/vec4 v0x55558073fe80_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_37.485, 8;
    %load/vec4 v0x555580740180_0;
    %load/vec4 v0x55558073fe80_0;
    %part/s 1;
    %ix/getv/s 4, v0x55558073fe80_0;
    %store/vec4 v0x555580740050_0, 4, 1;
T_37.485 ;
T_37.484 ; for-loop step statement
    %load/vec4 v0x55558073fe80_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558073fe80_0, 0, 32;
    %jmp T_37.482;
T_37.483 ; for-loop exit label
    %jmp T_37.481;
T_37.472 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558073fe80_0, 0, 32;
T_37.487 ; Top of for-loop
    %load/vec4 v0x55558073fe80_0;
    %cmpi/s 10, 0, 32;
	  %jmp/0xz T_37.488, 5;
    %load/vec4 v0x55558073ff70_0;
    %load/vec4 v0x55558073fe80_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_37.492, 9;
    %load/vec4 v0x555580740180_0;
    %load/vec4 v0x55558073fe80_0;
    %part/s 1;
    %nor/r;
    %and;
T_37.492;
    %flag_set/vec4 8;
    %jmp/0xz  T_37.490, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x55558073fe80_0;
    %store/vec4 v0x555580740050_0, 4, 1;
T_37.490 ;
T_37.489 ; for-loop step statement
    %load/vec4 v0x55558073fe80_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558073fe80_0, 0, 32;
    %jmp T_37.487;
T_37.488 ; for-loop exit label
    %jmp T_37.481;
T_37.473 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558073fe80_0, 0, 32;
T_37.493 ; Top of for-loop
    %load/vec4 v0x55558073fe80_0;
    %cmpi/s 10, 0, 32;
	  %jmp/0xz T_37.494, 5;
    %load/vec4 v0x55558073ff70_0;
    %load/vec4 v0x55558073fe80_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_37.498, 9;
    %load/vec4 v0x555580740180_0;
    %load/vec4 v0x55558073fe80_0;
    %part/s 1;
    %and;
T_37.498;
    %flag_set/vec4 8;
    %jmp/0xz  T_37.496, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x55558073fe80_0;
    %store/vec4 v0x555580740050_0, 4, 1;
T_37.496 ;
T_37.495 ; for-loop step statement
    %load/vec4 v0x55558073fe80_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558073fe80_0, 0, 32;
    %jmp T_37.493;
T_37.494 ; for-loop exit label
    %jmp T_37.481;
T_37.474 ;
    %load/vec4 v0x55558073ff70_0;
    %cmpi/ne 0, 0, 10;
    %jmp/0xz  T_37.499, 4;
    %pushi/vec4 0, 0, 10;
    %store/vec4 v0x555580740050_0, 0, 10;
T_37.499 ;
    %jmp T_37.481;
T_37.475 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558073fe80_0, 0, 32;
T_37.501 ; Top of for-loop
    %load/vec4 v0x55558073fe80_0;
    %cmpi/s 10, 0, 32;
	  %jmp/0xz T_37.502, 5;
    %load/vec4 v0x55558073ff70_0;
    %load/vec4 v0x55558073fe80_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_37.506, 9;
    %load/vec4 v0x555580740180_0;
    %load/vec4 v0x55558073fe80_0;
    %part/s 1;
    %nor/r;
    %and;
T_37.506;
    %flag_set/vec4 8;
    %jmp/0xz  T_37.504, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x55558073fe80_0;
    %store/vec4 v0x555580740050_0, 4, 1;
T_37.504 ;
T_37.503 ; for-loop step statement
    %load/vec4 v0x55558073fe80_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558073fe80_0, 0, 32;
    %jmp T_37.501;
T_37.502 ; for-loop exit label
    %jmp T_37.481;
T_37.476 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558073fe80_0, 0, 32;
T_37.507 ; Top of for-loop
    %load/vec4 v0x55558073fe80_0;
    %cmpi/s 10, 0, 32;
	  %jmp/0xz T_37.508, 5;
    %load/vec4 v0x55558073ff70_0;
    %load/vec4 v0x55558073fe80_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_37.512, 9;
    %load/vec4 v0x555580740180_0;
    %load/vec4 v0x55558073fe80_0;
    %part/s 1;
    %and;
T_37.512;
    %flag_set/vec4 8;
    %jmp/0xz  T_37.510, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x55558073fe80_0;
    %store/vec4 v0x555580740050_0, 4, 1;
T_37.510 ;
T_37.509 ; for-loop step statement
    %load/vec4 v0x55558073fe80_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558073fe80_0, 0, 32;
    %jmp T_37.507;
T_37.508 ; for-loop exit label
    %jmp T_37.481;
T_37.477 ;
    %load/vec4 v0x55558073ff70_0;
    %cmpi/ne 0, 0, 10;
    %jmp/0xz  T_37.513, 4;
    %pushi/vec4 1023, 0, 10;
    %store/vec4 v0x555580740050_0, 0, 10;
T_37.513 ;
    %jmp T_37.481;
T_37.478 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558073fe80_0, 0, 32;
T_37.515 ; Top of for-loop
    %load/vec4 v0x55558073fe80_0;
    %cmpi/s 10, 0, 32;
	  %jmp/0xz T_37.516, 5;
    %load/vec4 v0x55558073ff70_0;
    %load/vec4 v0x55558073fe80_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_37.520, 9;
    %load/vec4 v0x555580740180_0;
    %load/vec4 v0x55558073fe80_0;
    %part/s 1;
    %nor/r;
    %and;
T_37.520;
    %flag_set/vec4 8;
    %jmp/0xz  T_37.518, 8;
    %load/vec4 v0x55558073fca0_0;
    %load/vec4 v0x55558073fe80_0;
    %part/s 1;
    %inv;
    %ix/getv/s 4, v0x55558073fe80_0;
    %store/vec4 v0x555580740050_0, 4, 1;
T_37.518 ;
T_37.517 ; for-loop step statement
    %load/vec4 v0x55558073fe80_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558073fe80_0, 0, 32;
    %jmp T_37.515;
T_37.516 ; for-loop exit label
    %jmp T_37.481;
T_37.479 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558073fe80_0, 0, 32;
T_37.521 ; Top of for-loop
    %load/vec4 v0x55558073fe80_0;
    %cmpi/s 10, 0, 32;
	  %jmp/0xz T_37.522, 5;
    %load/vec4 v0x55558073ff70_0;
    %load/vec4 v0x55558073fe80_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_37.526, 9;
    %load/vec4 v0x555580740180_0;
    %load/vec4 v0x55558073fe80_0;
    %part/s 1;
    %and;
T_37.526;
    %flag_set/vec4 8;
    %jmp/0xz  T_37.524, 8;
    %load/vec4 v0x55558073fca0_0;
    %load/vec4 v0x55558073fe80_0;
    %part/s 1;
    %inv;
    %ix/getv/s 4, v0x55558073fe80_0;
    %store/vec4 v0x555580740050_0, 4, 1;
T_37.524 ;
T_37.523 ; for-loop step statement
    %load/vec4 v0x55558073fe80_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558073fe80_0, 0, 32;
    %jmp T_37.521;
T_37.522 ; for-loop exit label
    %jmp T_37.481;
T_37.481 ;
    %pop/vec4 1;
    %load/vec4 v0x555580740050_0;
    %ret/vec4 0, 0, 10;  Assign to get_sw_write_next_value (store_vec4_to_lval)
    %end;
S_0x555580740260 .scope autofunction.vec4.s1, "get_sw_write_update" "get_sw_write_update" 9 47, 9 47 0, S_0x55558073bd90;
 .timescale 0 0;
; Variable get_sw_write_update is vec4 return value of scope S_0x555580740260
v0x555580740520_0 .var "update", 2 0;
v0x555580740600_0 .var "write_done", 0 0;
v0x5555807406a0_0 .var "write_enable", 0 0;
v0x555580740760_0 .var "write_valid", 9 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_wtocnt.u_bit_field.get_sw_write_update ;
    %load/vec4 v0x555580740760_0;
    %pad/u 1;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x555580740520_0, 4, 1;
    %pushi/vec4 1, 0, 1;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x555580740520_0, 4, 1;
    %pushi/vec4 1, 0, 1;
    %ix/load 4, 2, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x555580740520_0, 4, 1;
    %load/vec4 v0x555580740520_0;
    %parti/s 1, 0, 2;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_38.528, 9;
    %load/vec4 v0x555580740520_0;
    %parti/s 1, 1, 2;
    %and;
T_38.528;
    %flag_set/vec4 8;
    %flag_get/vec4 8;
    %jmp/0 T_38.527, 8;
    %load/vec4 v0x555580740520_0;
    %parti/s 1, 2, 3;
    %and;
T_38.527;
    %ret/vec4 0, 0, 1;  Assign to get_sw_write_update (store_vec4_to_lval)
    %end;
S_0x555580742160 .scope module, "u_register" "rggen_default_register" 8 97, 10 1 0, S_0x5555806ff900;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "i_clk";
    .port_info 1 /INPUT 1 "i_rst_n";
    .port_info 2 /INPUT 1 "i_register_valid";
    .port_info 3 /INPUT 2 "i_register_access";
    .port_info 4 /INPUT 3 "i_register_address";
    .port_info 5 /INPUT 32 "i_register_write_data";
    .port_info 6 /INPUT 32 "i_register_strobe";
    .port_info 7 /OUTPUT 1 "o_register_active";
    .port_info 8 /OUTPUT 1 "o_register_ready";
    .port_info 9 /OUTPUT 2 "o_register_status";
    .port_info 10 /OUTPUT 32 "o_register_read_data";
    .port_info 11 /OUTPUT 32 "o_register_value";
    .port_info 12 /OUTPUT 1 "o_bit_field_write_valid";
    .port_info 13 /OUTPUT 1 "o_bit_field_read_valid";
    .port_info 14 /OUTPUT 32 "o_bit_field_mask";
    .port_info 15 /OUTPUT 32 "o_bit_field_write_data";
    .port_info 16 /INPUT 32 "i_bit_field_read_data";
    .port_info 17 /INPUT 32 "i_bit_field_value";
P_0x5555807422f0 .param/l "ADDRESS_WIDTH" 0 10 4, +C4<00000000000000000000000000000011>;
P_0x555580742330 .param/l "BUS_WIDTH" 0 10 6, +C4<00000000000000000000000000100000>;
P_0x555580742370 .param/l "DATA_WIDTH" 0 10 7, +C4<00000000000000000000000000100000>;
P_0x5555807423b0 .param/l "OFFSET_ADDRESS" 0 10 5, C4<000>;
P_0x5555807423f0 .param/l "READABLE" 0 10 2, +C4<00000000000000000000000000000001>;
P_0x555580742430 .param/l "WRITABLE" 0 10 3, +C4<00000000000000000000000000000001>;
v0x555580743350_0 .net "i_bit_field_read_data", 31 0, L_0x555580774620;  alias, 1 drivers
v0x555580749b00_0 .net "i_bit_field_value", 31 0, L_0x5555807748a0;  alias, 1 drivers
v0x555580749bc0_0 .net "i_clk", 0 0, v0x55558075c2e0_0;  alias, 1 drivers
v0x555580749c60_0 .net "i_register_access", 1 0, L_0x555580778b60;  alias, 1 drivers
v0x555580749d00_0 .net "i_register_address", 2 0, L_0x555580778bd0;  alias, 1 drivers
v0x555580749df0_0 .net "i_register_strobe", 31 0, L_0x555580778ce0;  alias, 1 drivers
v0x555580749eb0_0 .net "i_register_valid", 0 0, L_0x555580778af0;  alias, 1 drivers
v0x555580749f50_0 .net "i_register_write_data", 31 0, L_0x555580778c70;  alias, 1 drivers
v0x55558074a010_0 .net "i_rst_n", 0 0, L_0x5555807142d0;  alias, 1 drivers
v0x55558074a0b0_0 .net "o_bit_field_mask", 31 0, L_0x55558077c800;  alias, 1 drivers
v0x55558074a170_0 .net "o_bit_field_read_valid", 0 0, L_0x55558075de50;  alias, 1 drivers
v0x55558074a210_0 .net "o_bit_field_write_data", 31 0, L_0x55558075e540;  alias, 1 drivers
v0x55558074a2b0_0 .net "o_bit_field_write_valid", 0 0, L_0x55558075d7c0;  alias, 1 drivers
v0x55558074a350_0 .net "o_register_active", 0 0, L_0x55558075e280;  1 drivers
v0x55558074a3f0_0 .net "o_register_read_data", 31 0, L_0x55558075e430;  1 drivers
v0x55558074a4c0_0 .net "o_register_ready", 0 0, L_0x55558075e2f0;  1 drivers
v0x55558074a590_0 .net "o_register_status", 1 0, L_0x7eff798d00f0;  1 drivers
v0x55558074a660_0 .net "o_register_value", 31 0, L_0x55558075e5b0;  1 drivers
S_0x5555807429e0 .scope module, "u_register_common" "rggen_register_common" 10 35, 11 2 0, S_0x555580742160;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "i_clk";
    .port_info 1 /INPUT 1 "i_rst_n";
    .port_info 2 /INPUT 1 "i_register_valid";
    .port_info 3 /INPUT 2 "i_register_access";
    .port_info 4 /INPUT 3 "i_register_address";
    .port_info 5 /INPUT 32 "i_register_write_data";
    .port_info 6 /INPUT 32 "i_register_strobe";
    .port_info 7 /OUTPUT 1 "o_register_active";
    .port_info 8 /OUTPUT 1 "o_register_ready";
    .port_info 9 /OUTPUT 2 "o_register_status";
    .port_info 10 /OUTPUT 32 "o_register_read_data";
    .port_info 11 /OUTPUT 32 "o_register_value";
    .port_info 12 /INPUT 1 "i_additional_match";
    .port_info 13 /OUTPUT 1 "o_bit_field_write_valid";
    .port_info 14 /OUTPUT 1 "o_bit_field_read_valid";
    .port_info 15 /OUTPUT 32 "o_bit_field_mask";
    .port_info 16 /OUTPUT 32 "o_bit_field_write_data";
    .port_info 17 /INPUT 32 "i_bit_field_read_data";
    .port_info 18 /INPUT 32 "i_bit_field_value";
P_0x555580742bc0 .param/l "ADDRESS_WIDTH" 0 11 5, +C4<00000000000000000000000000000011>;
P_0x555580742c00 .param/l "BUS_BYTE_WIDTH" 1 11 32, +C4<00000000000000000000000000000100>;
P_0x555580742c40 .param/l "BUS_WIDTH" 0 11 7, +C4<00000000000000000000000000100000>;
P_0x555580742c80 .param/l "DATA_BYTE_WIDTH" 1 11 33, +C4<00000000000000000000000000000100>;
P_0x555580742cc0 .param/l "DATA_WIDTH" 0 11 8, +C4<00000000000000000000000000100000>;
P_0x555580742d00 .param/l "OFFSET_ADDRESS" 0 11 6, C4<000>;
P_0x555580742d40 .param/l "READABLE" 0 11 3, +C4<00000000000000000000000000000001>;
P_0x555580742d80 .param/l "USE_ADDITIONAL_MATCH" 0 11 9, C4<0>;
P_0x555580742dc0 .param/l "WORDS" 1 11 31, +C4<00000000000000000000000000000001>;
P_0x555580742e00 .param/l "WRITABLE" 0 11 4, +C4<00000000000000000000000000000001>;
L_0x7eff798d0180 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x55558075d670 .functor OR 1, L_0x55558075dfb0, L_0x7eff798d0180, C4<0>, C4<0>;
L_0x55558075d6e0 .functor AND 1, L_0x55558075d670, L_0x55558075e070, C4<1>, C4<1>;
L_0x7eff798d0138 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x7eff798d01c8 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x55558075d750 .functor AND 1, L_0x7eff798d0138, L_0x7eff798d01c8, C4<1>, C4<1>;
L_0x55558075d7c0 .functor OR 1, L_0x55558075d6e0, L_0x55558075d750, C4<0>, C4<0>;
L_0x55558075d900 .functor OR 1, L_0x55558075dfb0, L_0x7eff798d0180, C4<0>, C4<0>;
L_0x55558075db00 .functor AND 1, L_0x55558075d900, L_0x55558075da10, C4<1>, C4<1>;
L_0x55558075dd40 .functor AND 1, L_0x7eff798d0138, L_0x55558075dc50, C4<1>, C4<1>;
L_0x55558075de50 .functor OR 1, L_0x55558075db00, L_0x55558075dd40, C4<0>, C4<0>;
L_0x55558075dfb0 .functor AND 1, L_0x555580778af0, L_0x55558075d600, C4<1>, C4<1>;
L_0x55558075e1b0 .functor BUFZ 32, L_0x555580778c70, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0x55558075e280 .functor BUFZ 1, L_0x55558075d600, C4<0>, C4<0>, C4<0>;
L_0x55558075e430 .functor BUFZ 32, L_0x55558075e670, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0x55558075e5b0 .functor BUFZ 32, L_0x5555807748a0, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0x55558077c800 .functor BUFT 32, L_0x55558075e110, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0x55558075e540 .functor BUFT 32, L_0x55558075e1b0, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
v0x555580747610_0 .net *"_ivl_1", 0 0, L_0x55558075d670;  1 drivers
v0x5555807476d0_0 .net *"_ivl_11", 0 0, L_0x55558075d900;  1 drivers
v0x555580747790_0 .net *"_ivl_14", 0 0, L_0x55558075da10;  1 drivers
v0x555580747860_0 .net *"_ivl_16", 0 0, L_0x55558075db00;  1 drivers
v0x555580747920_0 .net *"_ivl_19", 0 0, L_0x55558075dc50;  1 drivers
v0x555580747a30_0 .net *"_ivl_21", 0 0, L_0x55558075dd40;  1 drivers
v0x555580747af0_0 .net *"_ivl_4", 0 0, L_0x55558075d6e0;  1 drivers
v0x555580747bb0_0 .net *"_ivl_7", 0 0, L_0x55558075d750;  1 drivers
L_0x7eff798d02a0 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v0x555580747c70_0 .net "i_additional_match", 0 0, L_0x7eff798d02a0;  1 drivers
v0x555580747d10_0 .net "i_bit_field_read_data", 31 0, L_0x555580774620;  alias, 1 drivers
v0x555580747de0_0 .net "i_bit_field_value", 31 0, L_0x5555807748a0;  alias, 1 drivers
v0x555580747ea0_0 .net "i_clk", 0 0, v0x55558075c2e0_0;  alias, 1 drivers
v0x555580747f40_0 .net "i_register_access", 1 0, L_0x555580778b60;  alias, 1 drivers
v0x555580748090_0 .net "i_register_address", 2 0, L_0x555580778bd0;  alias, 1 drivers
v0x5555807481e0_0 .net "i_register_strobe", 31 0, L_0x555580778ce0;  alias, 1 drivers
v0x5555807482a0_0 .net "i_register_valid", 0 0, L_0x555580778af0;  alias, 1 drivers
v0x555580748390_0 .net "i_register_write_data", 31 0, L_0x555580778c70;  alias, 1 drivers
v0x5555807485b0_0 .net "i_rst_n", 0 0, L_0x5555807142d0;  alias, 1 drivers
v0x555580748650_0 .net "o_bit_field_mask", 31 0, L_0x55558077c800;  alias, 1 drivers
v0x555580748730_0 .net "o_bit_field_read_valid", 0 0, L_0x55558075de50;  alias, 1 drivers
v0x5555807487d0_0 .net "o_bit_field_write_data", 31 0, L_0x55558075e540;  alias, 1 drivers
v0x5555807488b0_0 .net "o_bit_field_write_valid", 0 0, L_0x55558075d7c0;  alias, 1 drivers
v0x555580748950_0 .net "o_register_active", 0 0, L_0x55558075e280;  alias, 1 drivers
v0x555580748a10_0 .net "o_register_read_data", 31 0, L_0x55558075e430;  alias, 1 drivers
v0x555580748af0_0 .net "o_register_ready", 0 0, L_0x55558075e2f0;  alias, 1 drivers
v0x555580748bb0_0 .net "o_register_status", 1 0, L_0x7eff798d00f0;  alias, 1 drivers
v0x555580748c90_0 .net "o_register_value", 31 0, L_0x55558075e5b0;  alias, 1 drivers
v0x555580748d70_0 .net "w_active", 0 0, L_0x55558075d600;  1 drivers
v0x555580748e30_0 .net "w_backdoor_valid", 0 0, L_0x7eff798d0138;  1 drivers
v0x555580748ef0_0 .net "w_frontdoor_valid", 0 0, L_0x55558075dfb0;  1 drivers
v0x555580748fb0 .array "w_mask", 1 0;
v0x555580748fb0_0 .net v0x555580748fb0 0, 31 0, L_0x55558075e110; 1 drivers
L_0x7eff798d0210 .functor BUFT 1, C4<00000000000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x555580748fb0_1 .net v0x555580748fb0 1, 31 0, L_0x7eff798d0210; 1 drivers
v0x5555807490d0_0 .net "w_match", 0 0, L_0x55558075d4f0;  1 drivers
v0x5555807491e0_0 .net "w_pending_valid", 0 0, L_0x7eff798d0180;  1 drivers
v0x5555807494b0_0 .net "w_read_data", 31 0, L_0x55558075e670;  1 drivers
v0x555580749570 .array "w_write", 1 0;
v0x555580749570_0 .net v0x555580749570 0, 0 0, L_0x55558075e070; 1 drivers
v0x555580749570_1 .net v0x555580749570 1, 0 0, L_0x7eff798d01c8; 1 drivers
v0x555580749650 .array "w_write_data", 1 0;
v0x555580749650_0 .net v0x555580749650 0, 31 0, L_0x55558075e1b0; 1 drivers
L_0x7eff798d0258 .functor BUFT 1, C4<00000000000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x555580749650_1 .net v0x555580749650 1, 31 0, L_0x7eff798d0258; 1 drivers
L_0x55558075da10 .reduce/nor L_0x55558075e070;
L_0x55558075dc50 .reduce/nor L_0x7eff798d01c8;
L_0x55558075e070 .part L_0x555580778b60, 0, 1;
L_0x55558075e110 .ufunc/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.u_register.u_register_common.get_mask, 32, L_0x55558075d4f0, L_0x555580778ce0 (v0x555580746ac0_0, v0x555580746bb0_0) S_0x555580746720;
L_0x55558075e2f0 .reduce/nor L_0x7eff798d0138;
S_0x555580743660 .scope autofunction.vec4.s3, "calc_start_address" "calc_start_address" 11 67, 11 67 0, S_0x5555807429e0;
 .timescale 0 0;
; Variable calc_start_address is vec4 return value of scope S_0x555580743660
v0x555580743940_0 .var/i "delta", 31 0;
v0x555580743a20_0 .var/i "index", 31 0;
v0x555580743b10_0 .var "offset_address", 2 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.u_register.u_register_common.calc_start_address ;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0x555580743b10_0, 0, 3;
    %load/vec4 v0x555580743a20_0;
    %muli 4, 0, 32;
    %store/vec4 v0x555580743940_0, 0, 32;
    %load/vec4 v0x555580743b10_0;
    %load/vec4 v0x555580743940_0;
    %parti/s 3, 0, 2;
    %add;
    %ret/vec4 0, 0, 3;  Assign to calc_start_address (store_vec4_to_lval)
    %end;
S_0x555580743bf0 .scope generate, "g_decoder[0]" "g_decoder[0]" 11 42, 11 42 0, S_0x5555807429e0;
 .timescale 0 0;
P_0x555580743e10 .param/l "g_i" 1 11 42, +C4<00>;
S_0x555580743ed0 .scope module, "u_decoder" "rggen_address_decoder" 11 51, 12 1 0, S_0x555580743bf0;
 .timescale 0 0;
    .port_info 0 /INPUT 3 "i_address";
    .port_info 1 /INPUT 2 "i_access";
    .port_info 2 /INPUT 1 "i_additional_match";
    .port_info 3 /OUTPUT 1 "o_match";
P_0x5555807440b0 .param/l "ACCESS_BIT" 1 12 16, +C4<00000000000000000000000000000000>;
P_0x5555807440f0 .param/l "BEGIN_ADDRESS" 1 12 17, C4<0>;
P_0x555580744130 .param/l "BEGIN_ADDRESS_ALL_0" 1 12 19, C4<1>;
P_0x555580744170 .param/l "BUS_WIDTH" 0 12 5, +C4<00000000000000000000000000100000>;
P_0x5555807441b0 .param/l "BYTE_SIZE" 0 12 7, +C4<00000000000000000000000000000100>;
P_0x5555807441f0 .param/l "END_ADDRESS" 1 12 18, C4<0>;
P_0x555580744230 .param/l "END_ADDRESS_ALL_1" 1 12 20, C4<0>;
P_0x555580744270 .param/l "LSB" 1 12 15, +C4<000000000000000000000000000000010>;
P_0x5555807442b0 .param/l "READABLE" 0 12 2, +C4<00000000000000000000000000000001>;
P_0x5555807442f0 .param/l "START_ADDRESS" 0 12 6, C4<000>;
P_0x555580744330 .param/l "USE_ADDITIONAL_MATCH" 0 12 8, C4<0>;
P_0x555580744370 .param/l "WIDTH" 0 12 4, +C4<00000000000000000000000000000011>;
P_0x5555807443b0 .param/l "WRITABLE" 0 12 3, +C4<00000000000000000000000000000001>;
L_0x7eff798d0060 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
L_0x55558075d3e0 .functor AND 1, L_0x55558075d2d0, L_0x7eff798d0060, C4<1>, C4<1>;
L_0x7eff798d00a8 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
L_0x55558075d4f0 .functor AND 1, L_0x55558075d3e0, L_0x7eff798d00a8, C4<1>, C4<1>;
v0x555580745e70_0 .net *"_ivl_2", 0 0, L_0x55558075d3e0;  1 drivers
v0x555580745f50_0 .net "i_access", 1 0, L_0x555580778b60;  alias, 1 drivers
v0x555580746010_0 .net "i_additional_match", 0 0, L_0x7eff798d02a0;  alias, 1 drivers
v0x5555807460b0_0 .net "i_address", 2 0, L_0x555580778bd0;  alias, 1 drivers
v0x555580746170_0 .net "o_match", 0 0, L_0x55558075d4f0;  alias, 1 drivers
v0x555580746280_0 .net "w_access_match", 0 0, L_0x7eff798d0060;  1 drivers
v0x555580746340_0 .net "w_additional_match", 0 0, L_0x7eff798d00a8;  1 drivers
v0x555580746400_0 .net "w_address_match", 0 0, L_0x55558075d2d0;  1 drivers
L_0x55558075d230 .part L_0x555580778bd0, 2, 1;
S_0x555580744a70 .scope autofunction.vec4.s1, "calc_end_address" "calc_end_address" 12 38, 12 38 0, S_0x555580743ed0;
 .timescale 0 0;
v0x555580744c50_0 .var "address", 2 0;
v0x555580744d50_0 .var/i "byte_size", 31 0;
; Variable calc_end_address is vec4 return value of scope S_0x555580744a70
v0x555580744f20_0 .var/i "delta", 31 0;
v0x555580745000_0 .var "start_address", 2 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.u_register.u_register_common.g_decoder\x5B0\x5D.u_decoder.calc_end_address ;
    %load/vec4 v0x555580744d50_0;
    %subi 1, 0, 32;
    %store/vec4 v0x555580744f20_0, 0, 32;
    %load/vec4 v0x555580745000_0;
    %load/vec4 v0x555580744f20_0;
    %parti/s 3, 0, 2;
    %add;
    %store/vec4 v0x555580744c50_0, 0, 3;
    %load/vec4 v0x555580744c50_0;
    %parti/s 1, 2, 3;
    %ret/vec4 0, 0, 1;  Assign to calc_end_address (store_vec4_to_lval)
    %end;
S_0x555580745130 .scope autofunction.vec4.u32, "clog2" "clog2" 12 22, 12 22 0, S_0x555580743ed0;
 .timescale 0 0;
; Variable clog2 is vec4 return value of scope S_0x555580745130
v0x555580745410_0 .var/i "n", 31 0;
v0x5555807454f0_0 .var/i "result", 31 0;
v0x5555807455b0_0 .var/i "value", 31 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.u_register.u_register_common.g_decoder\x5B0\x5D.u_decoder.clog2 ;
    %load/vec4 v0x555580745410_0;
    %subi 1, 0, 32;
    %store/vec4 v0x5555807455b0_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555807454f0_0, 0, 32;
T_41.529 ;
    %load/vec4 v0x5555807455b0_0;
    %cmpi/s 0, 0, 32;
    %flag_or 5, 4; GT is !LE
    %flag_inv 5;
    %jmp/0xz T_41.530, 5;
    %load/vec4 v0x5555807454f0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555807454f0_0, 0, 32;
    %load/vec4 v0x5555807455b0_0;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %shiftr 4;
    %store/vec4 v0x5555807455b0_0, 0, 32;
    %jmp T_41.529;
T_41.530 ;
    %load/vec4 v0x5555807454f0_0;
    %ret/vec4 0, 0, 32;  Assign to clog2 (store_vec4_to_lval)
    %end;
S_0x555580745690 .scope generate, "g_access_match" "g_access_match" 12 76, 12 76 0, S_0x555580743ed0;
 .timescale 0 0;
S_0x5555807458a0 .scope generate, "g_additional_match" "g_additional_match" 12 86, 12 86 0, S_0x555580743ed0;
 .timescale 0 0;
S_0x555580745a80 .scope generate, "g_address_match" "g_address_match" 12 58, 12 58 0, S_0x555580743ed0;
 .timescale 0 0;
L_0x7eff798d0018 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x55558075d2d0 .functor XNOR 1, L_0x55558075d230, L_0x7eff798d0018, C4<0>, C4<0>;
v0x555580745cb0_0 .net *"_ivl_0", 0 0, L_0x55558075d230;  1 drivers
v0x555580745d90_0 .net/2u *"_ivl_1", 0 0, L_0x7eff798d0018;  1 drivers
S_0x555580746540 .scope generate, "g_match" "g_match" 11 59, 11 59 0, S_0x5555807429e0;
 .timescale 0 0;
L_0x55558075d600 .functor BUFZ 1, L_0x55558075d4f0, C4<0>, C4<0>, C4<0>;
S_0x555580746720 .scope autofunction.vec4.s32, "get_mask" "get_mask" 11 97, 11 97 0, S_0x5555807429e0;
 .timescale 0 0;
; Variable get_mask is vec4 return value of scope S_0x555580746720
v0x5555807469e0_0 .var "mask", 31 0;
v0x555580746ac0_0 .var "match", 0 0;
v0x555580746bb0_0 .var "strobe", 31 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.u_register.u_register_common.get_mask ;
    %load/vec4 v0x555580746bb0_0;
    %store/vec4 v0x5555807469e0_0, 0, 32;
    %load/vec4 v0x5555807469e0_0;
    %ret/vec4 0, 0, 32;  Assign to get_mask (store_vec4_to_lval)
    %end;
S_0x555580746c90 .scope module, "u_read_data_mux" "rggen_mux" 11 134, 13 1 0, S_0x5555807429e0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "i_select";
    .port_info 1 /INPUT 32 "i_data";
    .port_info 2 /OUTPUT 32 "o_data";
P_0x555580746ec0 .param/l "ENTRIES" 0 13 3, +C4<00000000000000000000000000000001>;
P_0x555580746f00 .param/l "WIDTH" 0 13 2, +C4<00000000000000000000000000100000>;
v0x5555807472d0_0 .net "i_data", 31 0, L_0x555580774620;  alias, 1 drivers
v0x5555807473d0_0 .net "i_select", 0 0, L_0x55558075d4f0;  alias, 1 drivers
v0x5555807474c0_0 .net "o_data", 31 0, L_0x55558075e670;  alias, 1 drivers
S_0x5555807470d0 .scope generate, "g" "g" 13 10, 13 10 0, S_0x555580746c90;
 .timescale 0 0;
L_0x55558075e670 .functor BUFZ 32, L_0x555580774620, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
S_0x55558074b060 .scope module, "u_adapter" "rggen_wishbone_adapter" 8 58, 14 1 0, S_0x555580692ad0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "i_clk";
    .port_info 1 /INPUT 1 "i_rst_n";
    .port_info 2 /INPUT 1 "i_wb_cyc";
    .port_info 3 /INPUT 1 "i_wb_stb";
    .port_info 4 /OUTPUT 1 "o_wb_stall";
    .port_info 5 /INPUT 32 "i_wb_adr";
    .port_info 6 /INPUT 1 "i_wb_we";
    .port_info 7 /INPUT 32 "i_wb_dat";
    .port_info 8 /INPUT 4 "i_wb_sel";
    .port_info 9 /OUTPUT 1 "o_wb_ack";
    .port_info 10 /OUTPUT 1 "o_wb_err";
    .port_info 11 /OUTPUT 1 "o_wb_rty";
    .port_info 12 /OUTPUT 32 "o_wb_dat";
    .port_info 13 /OUTPUT 1 "o_register_valid";
    .port_info 14 /OUTPUT 2 "o_register_access";
    .port_info 15 /OUTPUT 3 "o_register_address";
    .port_info 16 /OUTPUT 32 "o_register_write_data";
    .port_info 17 /OUTPUT 32 "o_register_strobe";
    .port_info 18 /INPUT 2 "i_register_active";
    .port_info 19 /INPUT 2 "i_register_ready";
    .port_info 20 /INPUT 4 "i_register_status";
    .port_info 21 /INPUT 64 "i_register_read_data";
P_0x55558071e6b0 .param/l "ADDRESS_WIDTH" 0 14 2, +C4<00000000000000000000000000100000>;
P_0x55558071e6f0 .param/l "BASE_ADDRESS" 0 14 7, C4<00000000000000000000000000000000>;
P_0x55558071e730 .param/l "BUS_WIDTH" 0 14 4, +C4<00000000000000000000000000100000>;
P_0x55558071e770 .param/l "BYTE_SIZE" 0 14 8, +C4<00000000000000000000000000001000>;
P_0x55558071e7b0 .param/l "DEFAULT_READ_DATA" 0 14 10, C4<00000000000000000000000000000000>;
P_0x55558071e7f0 .param/l "ERROR_STATUS" 0 14 9, +C4<00000000000000000000000000000000>;
P_0x55558071e830 .param/l "INSERT_SLICER" 0 14 11, +C4<00000000000000000000000000000000>;
P_0x55558071e870 .param/l "LOCAL_ADDRESS_WIDTH" 0 14 3, +C4<00000000000000000000000000000011>;
P_0x55558071e8b0 .param/l "PRE_DECODE" 0 14 6, +C4<00000000000000000000000000000000>;
P_0x55558071e8f0 .param/l "REGISTERS" 0 14 5, +C4<00000000000000000000000000000010>;
P_0x55558071e930 .param/l "USE_STALL" 0 14 12, +C4<00000000000000000000000000000000>;
L_0x555580777680 .functor BUFZ 32, v0x5555807567a0_0, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0x5555807779a0 .functor AND 1, L_0x5555807777b0, L_0x5555807778b0, C4<1>, C4<1>;
L_0x5555807782f0 .functor AND 1, v0x55558075c950_0, v0x55558075ccd0_0, C4<1>, C4<1>;
L_0x7eff798d1cc8 .functor BUFT 1, C4<00>, C4<0>, C4<0>, C4<0>;
v0x55558074c7a0_0 .net/2u *"_ivl_12", 1 0, L_0x7eff798d1cc8;  1 drivers
v0x555580754a30_0 .net *"_ivl_14", 0 0, L_0x5555807777b0;  1 drivers
L_0x7eff798d1d10 .functor BUFT 1, C4<00>, C4<0>, C4<0>, C4<0>;
v0x555580754af0_0 .net/2u *"_ivl_16", 1 0, L_0x7eff798d1d10;  1 drivers
v0x555580754be0_0 .net *"_ivl_18", 0 0, L_0x5555807778b0;  1 drivers
v0x555580754ca0_0 .net *"_ivl_23", 0 0, L_0x555580777b00;  1 drivers
L_0x7eff798d22f8 .functor BUFT 1, C4<10>, C4<0>, C4<0>, C4<0>;
v0x555580754d80_0 .net *"_ivl_26", 1 0, L_0x7eff798d22f8;  1 drivers
L_0x7eff798d1d58 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v0x555580754e60_0 .net/2u *"_ivl_28", 0 0, L_0x7eff798d1d58;  1 drivers
v0x555580754f40_0 .net *"_ivl_30", 1 0, L_0x555580777be0;  1 drivers
v0x555580755020_0 .net *"_ivl_35", 0 0, L_0x555580777ef0;  1 drivers
v0x555580755190_0 .net *"_ivl_39", 0 0, L_0x5555807781b0;  1 drivers
v0x555580755270_0 .net *"_ivl_43", 0 0, L_0x555580778490;  1 drivers
v0x555580755350_0 .net *"_ivl_50", 0 0, L_0x5555807782f0;  1 drivers
v0x555580755410_0 .net "i_clk", 0 0, v0x55558075c2e0_0;  alias, 1 drivers
v0x5555807554b0_0 .net "i_register_active", 1 0, L_0x5555807764f0;  alias, 1 drivers
v0x555580755570_0 .net "i_register_read_data", 63 0, L_0x5555807766d0;  alias, 1 drivers
v0x555580755630_0 .net "i_register_ready", 1 0, L_0x555580776590;  alias, 1 drivers
v0x5555807556d0_0 .net "i_register_status", 3 0, L_0x555580776630;  alias, 1 drivers
v0x5555807558b0_0 .net "i_rst_n", 0 0, L_0x5555807142d0;  alias, 1 drivers
v0x555580755950_0 .net "i_wb_adr", 31 0, v0x55558075c890_0;  alias, 1 drivers
v0x555580755a10_0 .net "i_wb_cyc", 0 0, v0x55558075c950_0;  alias, 1 drivers
v0x555580755ad0_0 .net "i_wb_dat", 31 0, v0x55558075cab0_0;  alias, 1 drivers
v0x555580755bb0_0 .net "i_wb_sel", 3 0, v0x55558075cb70_0;  alias, 1 drivers
v0x555580755c90_0 .net "i_wb_stb", 0 0, v0x55558075ccd0_0;  alias, 1 drivers
v0x555580755d50_0 .net "i_wb_we", 0 0, v0x55558075cd70_0;  alias, 1 drivers
v0x555580755e10_0 .net "o_register_access", 1 0, L_0x555580778b60;  alias, 1 drivers
v0x555580755ed0_0 .net "o_register_address", 2 0, L_0x555580778bd0;  alias, 1 drivers
v0x555580755f90_0 .net "o_register_strobe", 31 0, L_0x555580778ce0;  alias, 1 drivers
v0x555580756050_0 .net "o_register_valid", 0 0, L_0x555580778af0;  alias, 1 drivers
v0x5555807560f0_0 .net "o_register_write_data", 31 0, L_0x555580778c70;  alias, 1 drivers
v0x5555807561b0_0 .net "o_wb_ack", 0 0, L_0x555580777480;  alias, 1 drivers
v0x555580756270_0 .net "o_wb_dat", 31 0, L_0x555580777680;  alias, 1 drivers
v0x555580756350_0 .net "o_wb_err", 0 0, L_0x5555807775e0;  alias, 1 drivers
v0x555580756410_0 .net "o_wb_rty", 0 0, L_0x7eff798d1c80;  alias, 1 drivers
v0x5555807566e0_0 .net "o_wb_stall", 0 0, L_0x555580777320;  alias, 1 drivers
v0x5555807567a0_0 .var "r_response_data", 31 0;
v0x555580756880_0 .var "r_response_valid", 1 0;
v0x555580756960_0 .net "w_bus_access", 1 0, L_0x555580777d10;  1 drivers
v0x555580756a50_0 .net "w_bus_address", 31 0, L_0x555580778020;  1 drivers
v0x555580756b20_0 .net "w_bus_read_data", 31 0, L_0x55558077a750;  1 drivers
v0x555580756bf0_0 .net "w_bus_ready", 0 0, L_0x55558077a530;  1 drivers
v0x555580756cc0_0 .net "w_bus_status", 1 0, L_0x55558077a640;  1 drivers
v0x555580756d90_0 .net "w_bus_strobe", 3 0, L_0x555580778530;  1 drivers
v0x555580756e60_0 .net "w_bus_valid", 0 0, L_0x5555807779a0;  1 drivers
v0x555580756f30_0 .net "w_bus_write_data", 31 0, L_0x555580778250;  1 drivers
v0x555580757000_0 .net "w_request_valid", 1 0, L_0x555580778780;  1 drivers
L_0x7eff798d1b60 .functor BUFT 1, C4<00000000000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x5555807570a0_0 .net "w_wb_adr", 31 0, L_0x7eff798d1b60;  1 drivers
L_0x7eff798d1bf0 .functor BUFT 1, C4<00000000000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x555580757160_0 .net "w_wb_dat", 31 0, L_0x7eff798d1bf0;  1 drivers
L_0x7eff798d1c38 .functor BUFT 1, C4<0000>, C4<0>, C4<0>, C4<0>;
v0x555580757240_0 .net "w_wb_sel", 3 0, L_0x7eff798d1c38;  1 drivers
L_0x7eff798d1ba8 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x555580757320_0 .net "w_wb_we", 0 0, L_0x7eff798d1ba8;  1 drivers
L_0x555580777320 .part L_0x555580778780, 1, 1;
L_0x555580777480 .part v0x555580756880_0, 0, 1;
L_0x5555807775e0 .part v0x555580756880_0, 1, 1;
L_0x5555807777b0 .cmp/ne 2, L_0x555580778780, L_0x7eff798d1cc8;
L_0x5555807778b0 .cmp/eq 2, v0x555580756880_0, L_0x7eff798d1d10;
L_0x555580777b00 .part L_0x555580778780, 1, 1;
L_0x555580777be0 .concat [ 1 1 0 0], v0x55558075cd70_0, L_0x7eff798d1d58;
L_0x555580777d10 .functor MUXZ 2, L_0x555580777be0, L_0x7eff798d22f8, L_0x555580777b00, C4<>;
L_0x555580777ef0 .part L_0x555580778780, 1, 1;
L_0x555580778020 .functor MUXZ 32, v0x55558075c890_0, L_0x7eff798d1b60, L_0x555580777ef0, C4<>;
L_0x5555807781b0 .part L_0x555580778780, 1, 1;
L_0x555580778250 .functor MUXZ 32, v0x55558075cab0_0, L_0x7eff798d1bf0, L_0x5555807781b0, C4<>;
L_0x555580778490 .part L_0x555580778780, 1, 1;
L_0x555580778530 .functor MUXZ 4, v0x55558075cb70_0, L_0x7eff798d1c38, L_0x555580778490, C4<>;
L_0x7eff798d1b18 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x555580778780 .concat8 [ 1 1 0 0], L_0x5555807782f0, L_0x7eff798d1b18;
S_0x55558074ba00 .scope generate, "g_no_stall" "g_no_stall" 14 67, 14 67 0, S_0x55558074b060;
 .timescale 0 0;
v0x55558074bc00_0 .net/2u *"_ivl_0", 0 0, L_0x7eff798d1b18;  1 drivers
S_0x55558074bd00 .scope module, "u_adapter_common" "rggen_adapter_common" 14 153, 15 2 0, S_0x55558074b060;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "i_clk";
    .port_info 1 /INPUT 1 "i_rst_n";
    .port_info 2 /INPUT 1 "i_bus_valid";
    .port_info 3 /INPUT 2 "i_bus_access";
    .port_info 4 /INPUT 32 "i_bus_address";
    .port_info 5 /INPUT 32 "i_bus_write_data";
    .port_info 6 /INPUT 4 "i_bus_strobe";
    .port_info 7 /OUTPUT 1 "o_bus_ready";
    .port_info 8 /OUTPUT 2 "o_bus_status";
    .port_info 9 /OUTPUT 32 "o_bus_read_data";
    .port_info 10 /OUTPUT 1 "o_register_valid";
    .port_info 11 /OUTPUT 2 "o_register_access";
    .port_info 12 /OUTPUT 3 "o_register_address";
    .port_info 13 /OUTPUT 32 "o_register_write_data";
    .port_info 14 /OUTPUT 32 "o_register_strobe";
    .port_info 15 /INPUT 2 "i_register_active";
    .port_info 16 /INPUT 2 "i_register_ready";
    .port_info 17 /INPUT 4 "i_register_status";
    .port_info 18 /INPUT 64 "i_register_read_data";
P_0x55558074bf00 .param/l "ADDRESS_WIDTH" 0 15 3, +C4<00000000000000000000000000100000>;
P_0x55558074bf40 .param/l "BASE_ADDRESS" 0 15 9, C4<00000000000000000000000000000000>;
P_0x55558074bf80 .param/l "BUS_WIDTH" 0 15 5, +C4<00000000000000000000000000100000>;
P_0x55558074bfc0 .param/l "BYTE_SIZE" 0 15 10, +C4<00000000000000000000000000001000>;
P_0x55558074c000 .param/l "DEFAULT_READ_DATA" 0 15 13, C4<00000000000000000000000000000000>;
P_0x55558074c040 .param/l "ERROR_STATUS" 0 15 12, +C4<00000000000000000000000000000000>;
P_0x55558074c080 .param/l "INSERT_SLICER" 0 15 14, +C4<00000000000000000000000000000000>;
P_0x55558074c0c0 .param/l "LOCAL_ADDRESS_WIDTH" 0 15 4, +C4<00000000000000000000000000000011>;
P_0x55558074c100 .param/l "PRE_DECODE" 0 15 8, +C4<00000000000000000000000000000000>;
P_0x55558074c140 .param/l "REGISTERS" 0 15 7, +C4<00000000000000000000000000000010>;
P_0x55558074c180 .param/l "RESPONSE_WIDTH" 1 15 36, +C4<00000000000000000000000000000100010>;
P_0x55558074c1c0 .param/l "STROBE_WIDTH" 0 15 6, +C4<00000000000000000000000000000100>;
P_0x55558074c200 .param/l "USE_READ_STROBE" 0 15 11, +C4<00000000000000000000000000000000>;
L_0x55558077a530 .functor BUFZ 1, L_0x555580779850, C4<0>, C4<0>, C4<0>;
L_0x7eff798d1da0 .functor BUFT 1, C4<00>, C4<0>, C4<0>, C4<0>;
L_0x55558077a640 .functor BUFZ 2, L_0x7eff798d1da0, C4<00>, C4<00>, C4<00>;
L_0x55558077a750 .functor BUFZ 32, L_0x555580778e10, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0x55558077aa50 .functor OR 1, L_0x55558077a860, L_0x55558077a950, C4<0>, C4<0>;
v0x555580752cd0_0 .net *"_ivl_21", 0 0, L_0x55558077a860;  1 drivers
v0x555580752d90_0 .net *"_ivl_23", 0 0, L_0x55558077a950;  1 drivers
v0x555580752e50_0 .net "i_bus_access", 1 0, L_0x555580777d10;  alias, 1 drivers
v0x555580752f40_0 .net "i_bus_address", 31 0, L_0x555580778020;  alias, 1 drivers
v0x555580753020_0 .net "i_bus_strobe", 3 0, L_0x555580778530;  alias, 1 drivers
v0x555580753150_0 .net "i_bus_valid", 0 0, L_0x5555807779a0;  alias, 1 drivers
v0x555580753210_0 .net "i_bus_write_data", 31 0, L_0x555580778250;  alias, 1 drivers
v0x5555807532f0_0 .net "i_clk", 0 0, v0x55558075c2e0_0;  alias, 1 drivers
v0x555580753390_0 .net "i_register_active", 1 0, L_0x5555807764f0;  alias, 1 drivers
v0x555580753450_0 .net "i_register_read_data", 63 0, L_0x5555807766d0;  alias, 1 drivers
v0x555580753510_0 .net "i_register_ready", 1 0, L_0x555580776590;  alias, 1 drivers
v0x5555807535f0_0 .net "i_register_status", 3 0, L_0x555580776630;  alias, 1 drivers
v0x5555807536d0_0 .net "i_rst_n", 0 0, L_0x5555807142d0;  alias, 1 drivers
v0x555580753770_0 .net "o_bus_read_data", 31 0, L_0x55558077a750;  alias, 1 drivers
v0x555580753850_0 .net "o_bus_ready", 0 0, L_0x55558077a530;  alias, 1 drivers
v0x555580753910_0 .net "o_bus_status", 1 0, L_0x55558077a640;  alias, 1 drivers
v0x5555807539f0_0 .net "o_register_access", 1 0, L_0x555580778b60;  alias, 1 drivers
v0x555580753bc0_0 .net "o_register_address", 2 0, L_0x555580778bd0;  alias, 1 drivers
v0x555580753c80_0 .net "o_register_strobe", 31 0, L_0x555580778ce0;  alias, 1 drivers
v0x555580753d40_0 .net "o_register_valid", 0 0, L_0x555580778af0;  alias, 1 drivers
v0x555580753de0_0 .net "o_register_write_data", 31 0, L_0x555580778c70;  alias, 1 drivers
v0x555580753f30_0 .var "r_busy", 0 0;
v0x555580753ff0_0 .net "w_bus_ready", 0 0, L_0x555580779850;  1 drivers
L_0x7eff798d1e78 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v0x5555807540b0_0 .net "w_inside_range", 0 0, L_0x7eff798d1e78;  1 drivers
v0x555580754170_0 .net "w_register_active", 0 0, L_0x555580778fe0;  1 drivers
v0x555580754230_0 .net "w_register_inactive", 0 0, L_0x55558077aa50;  1 drivers
v0x5555807542f0_0 .net "w_register_read_data", 31 0, L_0x555580778e10;  1 drivers
v0x5555807543d0_0 .net "w_register_ready", 0 0, L_0x555580778eb0;  1 drivers
v0x555580754490_0 .net "w_register_response", 33 0, L_0x555580779c00;  1 drivers
v0x555580754550_0 .net "w_register_status", 1 0, L_0x7eff798d1da0;  1 drivers
v0x555580754630_0 .net "w_response", 67 0, L_0x5555807793b0;  1 drivers
L_0x555580778e10 .part L_0x555580779c00, 2, 32;
L_0x555580778eb0 .part L_0x555580779c00, 1, 1;
L_0x555580778fe0 .part L_0x555580779c00, 0, 1;
L_0x555580779080 .part L_0x5555807766d0, 0, 32;
L_0x5555807791b0 .part L_0x555580776590, 0, 1;
L_0x5555807793b0 .concat8 [ 34 34 0 0], L_0x5555807792e0, L_0x555580779670;
L_0x5555807794e0 .part L_0x5555807766d0, 32, 32;
L_0x555580779580 .part L_0x555580776590, 1, 1;
L_0x55558077a860 .reduce/nor L_0x555580778fe0;
L_0x55558077a950 .reduce/nor L_0x7eff798d1e78;
S_0x55558074cbe0 .scope generate, "g_no_request_slicer" "g_no_request_slicer" 15 82, 15 82 0, S_0x55558074bd00;
 .timescale 0 0;
L_0x5555807789e0 .functor AND 1, L_0x5555807779a0, L_0x7eff798d1e78, C4<1>, C4<1>;
L_0x555580778af0 .functor AND 1, L_0x5555807789e0, L_0x555580778a50, C4<1>, C4<1>;
L_0x555580778b60 .functor BUFZ 2, L_0x555580777d10, C4<00>, C4<00>, C4<00>;
L_0x555580778c70 .functor BUFZ 32, L_0x555580778250, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
v0x55558074cdc0_0 .net *"_ivl_1", 0 0, L_0x5555807789e0;  1 drivers
v0x55558074cea0_0 .net *"_ivl_3", 0 0, L_0x555580778a50;  1 drivers
L_0x555580778a50 .reduce/nor v0x555580753f30_0;
L_0x555580778bd0 .ufunc/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.u_adapter.u_adapter_common.get_local_address, 3, L_0x555580778020 (v0x55558074e230_0) S_0x55558074e050;
L_0x555580778ce0 .ufunc/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.u_adapter.u_adapter_common.get_register_strobe, 32, L_0x555580777d10, L_0x555580778530 (v0x55558074e710_0, v0x55558074ea90_0) S_0x55558074e4e0;
S_0x55558074cf60 .scope generate, "g_reponse" "g_reponse" 15 172, 15 172 0, S_0x55558074bd00;
 .timescale 0 0;
S_0x55558074d160 .scope generate, "g[0]" "g[0]" 15 188, 15 188 0, S_0x55558074cf60;
 .timescale 0 0;
P_0x55558074d360 .param/l "i" 1 15 188, +C4<00>;
v0x55558074d440_0 .net *"_ivl_0", 31 0, L_0x555580779080;  1 drivers
v0x55558074d520_0 .net *"_ivl_1", 0 0, L_0x5555807791b0;  1 drivers
L_0x7eff798d1de8 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v0x55558074d600_0 .net/2u *"_ivl_2", 0 0, L_0x7eff798d1de8;  1 drivers
v0x55558074d6f0_0 .net *"_ivl_4", 33 0, L_0x5555807792e0;  1 drivers
L_0x5555807792e0 .concat [ 1 1 32 0], L_0x7eff798d1de8, L_0x5555807791b0, L_0x555580779080;
S_0x55558074d7d0 .scope generate, "g[1]" "g[1]" 15 188, 15 188 0, S_0x55558074cf60;
 .timescale 0 0;
P_0x55558074d9f0 .param/l "i" 1 15 188, +C4<01>;
v0x55558074dab0_0 .net *"_ivl_0", 31 0, L_0x5555807794e0;  1 drivers
v0x55558074db90_0 .net *"_ivl_1", 0 0, L_0x555580779580;  1 drivers
L_0x7eff798d1e30 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v0x55558074dc70_0 .net/2u *"_ivl_2", 0 0, L_0x7eff798d1e30;  1 drivers
v0x55558074dd60_0 .net *"_ivl_4", 33 0, L_0x555580779670;  1 drivers
L_0x555580779670 .concat [ 1 1 32 0], L_0x7eff798d1e30, L_0x555580779580, L_0x5555807794e0;
S_0x55558074de40 .scope generate, "g_response_ready" "g_response_ready" 15 218, 15 218 0, S_0x55558074bd00;
 .timescale 0 0;
L_0x555580779850 .functor OR 1, L_0x555580778eb0, L_0x55558077aa50, C4<0>, C4<0>;
S_0x55558074e050 .scope autofunction.vec4.s3, "get_local_address" "get_local_address" 15 131, 15 131 0, S_0x55558074bd00;
 .timescale 0 0;
v0x55558074e230_0 .var "address", 31 0;
; Variable get_local_address is vec4 return value of scope S_0x55558074e050
v0x55558074e3f0_0 .var "local_address", 31 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.u_adapter.u_adapter_common.get_local_address ;
    %load/vec4 v0x55558074e230_0;
    %store/vec4 v0x55558074e3f0_0, 0, 32;
    %load/vec4 v0x55558074e3f0_0;
    %parti/s 3, 0, 2;
    %ret/vec4 0, 0, 3;  Assign to get_local_address (store_vec4_to_lval)
    %end;
S_0x55558074e4e0 .scope autofunction.vec4.s32, "get_register_strobe" "get_register_strobe" 15 147, 15 147 0, S_0x55558074bd00;
 .timescale 0 0;
v0x55558074e710_0 .var "access", 1 0;
; Variable get_register_strobe is vec4 return value of scope S_0x55558074e4e0
v0x55558074e8f0_0 .var/i "i", 31 0;
v0x55558074e9b0_0 .var "register_strobe", 31 0;
v0x55558074ea90_0 .var "strobe", 3 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.u_adapter.u_adapter_common.get_register_strobe ;
    %pushi/vec4 1, 0, 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_44.533, 9;
    %load/vec4 v0x55558074e710_0;
    %pushi/vec4 2, 0, 2;
    %cmp/e;
    %flag_get/vec4 4;
    %and;
T_44.533;
    %flag_set/vec4 8;
    %jmp/0xz  T_44.531, 8;
    %pushi/vec4 4294967295, 0, 32;
    %store/vec4 v0x55558074e9b0_0, 0, 32;
    %jmp T_44.532;
T_44.531 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558074e8f0_0, 0, 32;
T_44.534 ; Top of for-loop
    %load/vec4 v0x55558074e8f0_0;
    %cmpi/s 4, 0, 32;
	  %jmp/0xz T_44.535, 5;
    %load/vec4 v0x55558074ea90_0;
    %load/vec4 v0x55558074e8f0_0;
    %part/s 1;
    %replicate 8;
    %load/vec4 v0x55558074e8f0_0;
    %muli 8, 0, 32;
    %ix/vec4/s 4;
    %store/vec4 v0x55558074e9b0_0, 4, 8;
T_44.536 ; for-loop step statement
    %load/vec4 v0x55558074e8f0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558074e8f0_0, 0, 32;
    %jmp T_44.534;
T_44.535 ; for-loop exit label
T_44.532 ;
    %load/vec4 v0x55558074e9b0_0;
    %ret/vec4 0, 0, 32;  Assign to get_register_strobe (store_vec4_to_lval)
    %end;
S_0x55558074ebc0 .scope autofunction.vec4.s1, "pre_decode" "pre_decode" 15 66, 15 66 0, S_0x55558074bd00;
 .timescale 0 0;
v0x55558074eda0_0 .var "address", 31 0;
v0x55558074eea0_0 .var "begin_address", 31 0;
v0x55558074ef80_0 .var/i "delta", 31 0;
v0x55558074f040_0 .var "end_address", 31 0;
; Variable pre_decode is vec4 return value of scope S_0x55558074ebc0
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.u_adapter.u_adapter_common.pre_decode ;
    %pushi/vec4 7, 0, 32;
    %store/vec4 v0x55558074ef80_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558074eea0_0, 0, 32;
    %load/vec4 v0x55558074eea0_0;
    %load/vec4 v0x55558074ef80_0;
    %add;
    %store/vec4 v0x55558074f040_0, 0, 32;
    %load/vec4 v0x55558074eea0_0;
    %load/vec4 v0x55558074eda0_0;
    %cmp/u;
    %flag_or 5, 4;
    %flag_get/vec4 5;
    %jmp/0 T_45.537, 5;
    %load/vec4 v0x55558074eda0_0;
    %load/vec4 v0x55558074f040_0;
    %cmp/u;
    %flag_get/vec4 4;
    %flag_get/vec4 5;
    %or;
    %and;
T_45.537;
    %ret/vec4 0, 0, 1;  Assign to pre_decode (store_vec4_to_lval)
    %end;
S_0x55558074f230 .scope module, "u_response_mux" "rggen_mux" 15 206, 13 1 0, S_0x55558074bd00;
 .timescale 0 0;
    .port_info 0 /INPUT 2 "i_select";
    .port_info 1 /INPUT 68 "i_data";
    .port_info 2 /OUTPUT 34 "o_data";
P_0x55558073acc0 .param/l "ENTRIES" 0 13 3, +C4<00000000000000000000000000000010>;
P_0x55558073ad00 .param/l "WIDTH" 0 13 2, +C4<00000000000000000000000000000100010>;
v0x5555807529b0_0 .net "i_data", 67 0, L_0x5555807793b0;  alias, 1 drivers
v0x555580752a90_0 .net "i_select", 1 0, L_0x5555807764f0;  alias, 1 drivers
v0x555580752b70_0 .net "o_data", 33 0, L_0x555580779c00;  alias, 1 drivers
L_0x555580779cc0 .part L_0x5555807793b0, 0, 34;
L_0x555580779d60 .part L_0x5555807764f0, 0, 1;
L_0x55558077a130 .part L_0x5555807793b0, 34, 34;
L_0x55558077a260 .part L_0x5555807764f0, 1, 1;
S_0x55558074f5a0 .scope generate, "g" "g" 13 10, 13 10 0, S_0x55558074f230;
 .timescale 0 0;
v0x5555807528c0_0 .net "masked_data", 67 0, L_0x55558077a000;  1 drivers
L_0x55558077a000 .concat8 [ 34 34 0 0], L_0x555580779ef0, L_0x55558077a3d0;
S_0x55558074f7a0 .scope generate, "g[0]" "g[0]" 13 14, 13 14 0, S_0x55558074f5a0;
 .timescale 0 0;
P_0x55558074f9c0 .param/l "i" 1 13 14, +C4<00>;
L_0x555580779ef0 .functor AND 34, L_0x555580779cc0, L_0x555580779e00, C4<1111111111111111111111111111111111>, C4<1111111111111111111111111111111111>;
v0x55558074f4b0_0 .net *"_ivl_0", 33 0, L_0x555580779cc0;  1 drivers
v0x55558074fae0_0 .net *"_ivl_1", 0 0, L_0x555580779d60;  1 drivers
v0x55558074fbc0_0 .net *"_ivl_3", 33 0, L_0x555580779e00;  1 drivers
v0x55558074fcb0_0 .net *"_ivl_4", 33 0, L_0x555580779ef0;  1 drivers
L_0x555580779e00 .repeat 34, 34, L_0x555580779d60;
S_0x55558074fd90 .scope generate, "g[1]" "g[1]" 13 14, 13 14 0, S_0x55558074f5a0;
 .timescale 0 0;
P_0x55558074ffb0 .param/l "i" 1 13 14, +C4<01>;
L_0x55558077a3d0 .functor AND 34, L_0x55558077a130, L_0x55558077a330, C4<1111111111111111111111111111111111>, C4<1111111111111111111111111111111111>;
v0x555580750070_0 .net *"_ivl_0", 33 0, L_0x55558077a130;  1 drivers
v0x555580750150_0 .net *"_ivl_1", 0 0, L_0x55558077a260;  1 drivers
v0x555580750230_0 .net *"_ivl_3", 33 0, L_0x55558077a330;  1 drivers
v0x555580750320_0 .net *"_ivl_4", 33 0, L_0x55558077a3d0;  1 drivers
L_0x55558077a330 .repeat 34, 34, L_0x55558077a260;
S_0x555580750400 .scope module, "u_reducer" "rggen_or_reducer" 13 21, 16 1 0, S_0x55558074f5a0;
 .timescale 0 0;
    .port_info 0 /INPUT 68 "i_data";
    .port_info 1 /OUTPUT 34 "o_result";
P_0x555580750610 .param/l "N" 0 16 3, +C4<00000000000000000000000000000010>;
P_0x555580750650 .param/l "NEXT_N" 1 16 79, +C4<00000000000000000000000000000001>;
P_0x555580750690 .param/l "OFFSET_LIST" 1 16 78, C4<00000000000000100000000000000000>;
P_0x5555807506d0 .param/l "SUB_N_LIST" 1 16 77, C4<00000000000000000000000000000010>;
P_0x555580750710 .param/l "WIDTH" 0 16 2, +C4<00000000000000000000000000000100010>;
v0x5555807525c0_0 .net "i_data", 67 0, L_0x55558077a000;  alias, 1 drivers
v0x5555807526c0_0 .net "next_data", 33 0, L_0x555580779af0;  1 drivers
v0x5555807527a0_0 .net "o_result", 33 0, L_0x555580779c00;  alias, 1 drivers
L_0x555580779960 .part L_0x55558077a000, 0, 34;
L_0x555580779a50 .part L_0x55558077a000, 34, 34;
S_0x555580750ad0 .scope generate, "g_or_loop[0]" "g_or_loop[0]" 16 85, 16 85 0, S_0x555580750400;
 .timescale 0 0;
P_0x555580750cf0 .param/l "i" 1 16 85, +C4<00>;
S_0x555580750dd0 .scope generate, "g" "g" 16 94, 16 94 0, S_0x555580750ad0;
 .timescale 0 0;
L_0x555580779af0 .functor OR 34, L_0x555580779960, L_0x555580779a50, C4<0000000000000000000000000000000000>, C4<0000000000000000000000000000000000>;
v0x5555807509b0_0 .net *"_ivl_0", 33 0, L_0x555580779960;  1 drivers
v0x555580751010_0 .net *"_ivl_1", 33 0, L_0x555580779a50;  1 drivers
S_0x5555807510f0 .scope generate, "g_reduce" "g_reduce" 16 102, 16 102 0, S_0x555580750400;
 .timescale 0 0;
L_0x555580779c00 .functor BUFZ 34, L_0x555580779af0, C4<0000000000000000000000000000000000>, C4<0000000000000000000000000000000000>, C4<0000000000000000000000000000000000>;
S_0x5555807512f0 .scope autofunction.vec4.u32, "get_next_n" "get_next_n" 16 62, 16 62 0, S_0x555580750400;
 .timescale 0 0;
; Variable get_next_n is vec4 return value of scope S_0x5555807512f0
v0x5555807515c0_0 .var/i "i", 31 0;
v0x5555807516a0_0 .var/i "next_n", 31 0;
v0x555580751790_0 .var "sub_n_list", 31 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.u_adapter.u_adapter_common.u_response_mux.g.u_reducer.get_next_n ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555807516a0_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555807515c0_0, 0, 32;
T_46.538 ; Top of for-loop
    %load/vec4 v0x5555807515c0_0;
    %cmpi/s 2, 0, 32;
	  %jmp/0xz T_46.539, 5;
    %load/vec4 v0x5555807516a0_0;
    %load/vec4 v0x555580751790_0;
    %load/vec4 v0x5555807515c0_0;
    %muli 16, 0, 32;
    %part/s 16;
    %pad/u 32;
    %cmpi/ne 0, 0, 32;
    %flag_mov 8, 4;
    %jmp/0 T_46.541, 8;
    %pushi/vec4 1, 0, 32;
    %jmp/1 T_46.542, 8;
T_46.541 ; End of true expr.
    %pushi/vec4 0, 0, 32;
    %jmp/0 T_46.542, 8;
 ; End of false expr.
    %blend;
T_46.542;
    %add;
    %store/vec4 v0x5555807516a0_0, 0, 32;
T_46.540 ; for-loop step statement
    %load/vec4 v0x5555807515c0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555807515c0_0, 0, 32;
    %jmp T_46.538;
T_46.539 ; for-loop exit label
    %load/vec4 v0x5555807516a0_0;
    %ret/vec4 0, 0, 32;  Assign to get_next_n (store_vec4_to_lval)
    %end;
S_0x555580751870 .scope autofunction.vec4.s32, "get_offset_list" "get_offset_list" 16 43, 16 43 0, S_0x555580750400;
 .timescale 0 0;
; Variable get_offset_list is vec4 return value of scope S_0x555580751870
v0x555580751b50_0 .var/i "i", 31 0;
v0x555580751c30_0 .var "list", 31 0;
v0x555580751d20_0 .var "sub_n_list", 31 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.u_adapter.u_adapter_common.u_response_mux.g.u_reducer.get_offset_list ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x555580751b50_0, 0, 32;
T_47.543 ; Top of for-loop
    %load/vec4 v0x555580751b50_0;
    %cmpi/s 2, 0, 32;
	  %jmp/0xz T_47.544, 5;
    %load/vec4 v0x555580751b50_0;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_47.546, 4;
    %pushi/vec4 0, 0, 16;
    %load/vec4 v0x555580751b50_0;
    %muli 16, 0, 32;
    %ix/vec4/s 4;
    %store/vec4 v0x555580751c30_0, 4, 16;
    %jmp T_47.547;
T_47.546 ;
    %load/vec4 v0x555580751d20_0;
    %load/vec4 v0x555580751b50_0;
    %subi 1, 0, 32;
    %muli 16, 0, 32;
    %part/s 16;
    %load/vec4 v0x555580751c30_0;
    %load/vec4 v0x555580751b50_0;
    %subi 1, 0, 32;
    %muli 16, 0, 32;
    %part/s 16;
    %add;
    %load/vec4 v0x555580751b50_0;
    %muli 16, 0, 32;
    %ix/vec4/s 4;
    %store/vec4 v0x555580751c30_0, 4, 16;
T_47.547 ;
T_47.545 ; for-loop step statement
    %load/vec4 v0x555580751b50_0;
    %addi 1, 0, 32;
    %store/vec4 v0x555580751b50_0, 0, 32;
    %jmp T_47.543;
T_47.544 ; for-loop exit label
    %load/vec4 v0x555580751c30_0;
    %ret/vec4 0, 0, 32;  Assign to get_offset_list (store_vec4_to_lval)
    %end;
S_0x555580751e00 .scope autofunction.vec4.s32, "get_sub_n_list" "get_sub_n_list" 16 8, 16 8 0, S_0x555580750400;
 .timescale 0 0;
v0x555580752030_0 .var "current_n", 15 0;
; Variable get_sub_n_list is vec4 return value of scope S_0x555580751e00
v0x555580752210_0 .var "half_n", 15 0;
v0x5555807522d0_0 .var "list", 31 0;
v0x5555807523b0_0 .var/i "list_index", 31 0;
v0x5555807524e0_0 .var/i "n", 31 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.u_adapter.u_adapter_common.u_response_mux.g.u_reducer.get_sub_n_list ;
    %load/vec4 v0x5555807524e0_0;
    %parti/s 16, 0, 2;
    %store/vec4 v0x555580752030_0, 0, 16;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555807523b0_0, 0, 32;
T_48.548 ;
    %load/vec4 v0x555580752030_0;
    %pad/u 32;
    %cmpi/u 0, 0, 32;
    %flag_or 5, 4; GT is !LE
    %flag_inv 5;
    %jmp/0xz T_48.549, 5;
    %load/vec4 v0x555580752030_0;
    %pad/u 32;
    %pushi/vec4 2, 0, 32;
    %div;
    %pad/u 16;
    %store/vec4 v0x555580752210_0, 0, 16;
    %load/vec4 v0x555580752030_0;
    %pad/u 32;
    %cmpi/u 4, 0, 32;
    %flag_or 5, 4; GT is !LE
    %flag_inv 5;
    %flag_get/vec4 5;
    %jmp/0 T_48.552, 5;
    %load/vec4 v0x555580752210_0;
    %pad/u 32;
    %cmpi/u 4, 0, 32;
    %flag_get/vec4 4;
    %flag_get/vec4 5;
    %or;
    %and;
T_48.552;
    %flag_set/vec4 8;
    %jmp/0xz  T_48.550, 8;
    %load/vec4 v0x555580752210_0;
    %load/vec4 v0x5555807523b0_0;
    %muli 16, 0, 32;
    %ix/vec4/s 4;
    %store/vec4 v0x5555807522d0_0, 4, 16;
    %jmp T_48.551;
T_48.550 ;
    %load/vec4 v0x555580752030_0;
    %pad/u 32;
    %cmpi/u 4, 0, 32;
    %flag_inv 5; GE is !LT
    %jmp/0xz  T_48.553, 5;
    %pushi/vec4 4, 0, 16;
    %load/vec4 v0x5555807523b0_0;
    %muli 16, 0, 32;
    %ix/vec4/s 4;
    %store/vec4 v0x5555807522d0_0, 4, 16;
    %jmp T_48.554;
T_48.553 ;
    %load/vec4 v0x555580752030_0;
    %load/vec4 v0x5555807523b0_0;
    %muli 16, 0, 32;
    %ix/vec4/s 4;
    %store/vec4 v0x5555807522d0_0, 4, 16;
T_48.554 ;
T_48.551 ;
    %load/vec4 v0x555580752030_0;
    %load/vec4 v0x5555807522d0_0;
    %load/vec4 v0x5555807523b0_0;
    %muli 16, 0, 32;
    %part/s 16;
    %sub;
    %store/vec4 v0x555580752030_0, 0, 16;
    %load/vec4 v0x5555807523b0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555807523b0_0, 0, 32;
    %jmp T_48.548;
T_48.549 ;
T_48.555 ;
    %load/vec4 v0x5555807523b0_0;
    %cmpi/s 2, 0, 32;
    %jmp/0xz T_48.556, 5;
    %pushi/vec4 0, 0, 16;
    %load/vec4 v0x5555807523b0_0;
    %muli 16, 0, 32;
    %ix/vec4/s 4;
    %store/vec4 v0x5555807522d0_0, 4, 16;
    %load/vec4 v0x5555807523b0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555807523b0_0, 0, 32;
    %jmp T_48.555;
T_48.556 ;
    %load/vec4 v0x5555807522d0_0;
    %ret/vec4 0, 0, 32;  Assign to get_sub_n_list (store_vec4_to_lval)
    %end;
S_0x55558075b3e0 .scope autotask, "wishbone_readwdg" "wishbone_readwdg" 2 255, 2 255 0, S_0x5555804bd8e0;
 .timescale -8 -9;
v0x55558075b5c0_0 .var "rdata", 31 0;
TD_wdg_tb.wishbone_readwdg ;
    %alloc S_0x55558075ba40;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x55558075bf10_0, 0, 1;
    %pushi/vec4 4, 0, 32;
    %store/vec4 v0x55558075bc70_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558075bfd0_0, 0, 32;
    %pushi/vec4 15, 0, 4;
    %store/vec4 v0x55558075be50_0, 0, 4;
    %fork TD_wdg_tb.wishbone_transaction, S_0x55558075ba40;
    %join;
    %load/vec4 v0x55558075bd70_0;
    %store/vec4 v0x55558075b5c0_0, 0, 32;
    %free S_0x55558075ba40;
    %vpi_call 2 266 "$display", "xxxxxxxxxxxxxxxxxxxxx" {0 0 0};
    %vpi_call 2 267 "$display", "!!!read data: %d !!!", v0x55558075b5c0_0 {0 0 0};
    %vpi_call 2 268 "$display", "xxxxxxxxxxxxxxxxxxxxx" {0 0 0};
    %end;
S_0x55558075b6a0 .scope autotask, "wishbone_set_wdcsr" "wishbone_set_wdcsr" 2 240, 2 240 0, S_0x5555804bd8e0;
 .timescale -8 -9;
v0x55558075b880_0 .var "en", 0 0;
v0x55558075b960_0 .var "wtocnt", 9 0;
TD_wdg_tb.wishbone_set_wdcsr ;
    %vpi_call 2 246 "$display", "-  Sending WDCSR Register Access -" {0 0 0};
    %vpi_call 2 247 "$display", "Enable     : 0x%08h", v0x55558075b880_0 {0 0 0};
    %vpi_call 2 248 "$display", "WTOCNT     : 0x%08h", v0x55558075b960_0 {0 0 0};
    %alloc S_0x55558075ba40;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x55558075bf10_0, 0, 1;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558075bc70_0, 0, 32;
    %pushi/vec4 0, 0, 18;
    %load/vec4 v0x55558075b960_0;
    %concat/vec4; draw_concat_vec4
    %concati/vec4 0, 0, 2;
    %concati/vec4 0, 0, 1;
    %load/vec4 v0x55558075b880_0;
    %concat/vec4; draw_concat_vec4
    %store/vec4 v0x55558075bfd0_0, 0, 32;
    %pushi/vec4 15, 0, 4;
    %store/vec4 v0x55558075be50_0, 0, 4;
    %fork TD_wdg_tb.wishbone_transaction, S_0x55558075ba40;
    %join;
    %load/vec4 v0x55558075bd70_0;
    %store/vec4 v0x55558075c5b0_0, 0, 32;
    %free S_0x55558075ba40;
    %end;
S_0x55558075ba40 .scope autotask, "wishbone_transaction" "wishbone_transaction" 2 171, 2 171 0, S_0x5555804bd8e0;
 .timescale -8 -9;
v0x55558075bc70_0 .var "address", 31 0;
v0x55558075bd70_0 .var "read_data", 31 0;
v0x55558075be50_0 .var "sel", 3 0;
v0x55558075bf10_0 .var "write", 0 0;
v0x55558075bfd0_0 .var "write_data", 31 0;
TD_wdg_tb.wishbone_transaction ;
T_51.557 ;
    %load/vec4 v0x55558075cc30_0;
    %flag_set/vec4 8;
    %jmp/0xz T_51.558, 8;
    %wait E_0x55558059e470;
    %jmp T_51.557;
T_51.558 ;
    %load/vec4 v0x55558075bc70_0;
    %store/vec4 v0x55558075c890_0, 0, 32;
    %load/vec4 v0x55558075bfd0_0;
    %store/vec4 v0x55558075cab0_0, 0, 32;
    %load/vec4 v0x55558075be50_0;
    %store/vec4 v0x55558075cb70_0, 0, 4;
    %load/vec4 v0x55558075bf10_0;
    %store/vec4 v0x55558075cd70_0, 0, 1;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x55558075c950_0, 0, 1;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x55558075ccd0_0, 0, 1;
    %wait E_0x55558059e470;
    %vpi_call 2 196 "$display", "----------------------------------" {0 0 0};
    %vpi_call 2 197 "$display", "- Wishbone Transaction Initiated -" {0 0 0};
    %vpi_call 2 198 "$display", "----------------------------------" {0 0 0};
    %load/vec4 v0x55558075bf10_0;
    %flag_set/vec4 8;
    %jmp/0 T_51.559, 8;
    %pushi/vec4 1465010516, 0, 32; draw_string_vec4
    %pushi/vec4 69, 0, 8; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %jmp/1 T_51.560, 8;
T_51.559 ; End of true expr.
    %pushi/vec4 5391681, 0, 32; draw_string_vec4
    %pushi/vec4 68, 0, 8; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %jmp/0 T_51.560, 8;
 ; End of false expr.
    %blend;
T_51.560;
    %vpi_call 2 199 "$display", "Mode       : %s", S<0,vec4,u40> {1 0 0};
    %vpi_call 2 200 "$display", "Address    : 0x%08h", v0x55558075bc70_0 {0 0 0};
    %vpi_call 2 201 "$display", "Write Data : 0x%08h", v0x55558075bfd0_0 {0 0 0};
    %vpi_call 2 202 "$display", "Byte Sel   : 0b%b", v0x55558075be50_0 {0 0 0};
    %vpi_call 2 203 "$display", "----------------------------------" {0 0 0};
    %vpi_call 2 209 "$display", "Waiting for ACK..." {0 0 0};
    %pushi/vec4 100000, 0, 32;
    %store/vec4 v0x55558075c730_0, 0, 32;
T_51.561 ;
    %load/vec4 v0x55558075c7f0_0;
    %nor/r;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_51.563, 9;
    %pushi/vec4 0, 0, 32;
    %load/vec4 v0x55558075c730_0;
    %cmp/s;
    %flag_get/vec4 5;
    %and;
T_51.563;
    %flag_set/vec4 8;
    %jmp/0xz T_51.562, 8;
    %wait E_0x55558059e470;
    %load/vec4 v0x55558075c730_0;
    %subi 1, 0, 32;
    %store/vec4 v0x55558075c730_0, 0, 32;
    %vpi_call 2 218 "$display", "timeout %d", v0x55558075c730_0 {0 0 0};
    %jmp T_51.561;
T_51.562 ;
    %load/vec4 v0x55558075c730_0;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_51.564, 4;
    %vpi_call 2 222 "$display", "ERROR: Timeout waiting for ACK!" {0 0 0};
    %jmp T_51.565;
T_51.564 ;
    %vpi_call 2 225 "$display", "Received ACK" {0 0 0};
    %load/vec4 v0x55558075bf10_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_51.566, 8;
    %load/vec4 v0x55558075c9f0_0;
    %store/vec4 v0x55558075bd70_0, 0, 32;
T_51.566 ;
T_51.565 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x55558075c950_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x55558075ccd0_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x55558075cd70_0, 0, 1;
    %end;
    .scope S_0x555580737730;
T_52 ;
    %wait E_0x55558056fe30;
    %load/vec4 v0x55558073a740_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_52.0, 8;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x555580737910_0, 0;
    %jmp T_52.1;
T_52.0 ;
    %pushi/vec4 1, 0, 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_52.4, 9;
    %load/vec4 v0x55558073b5a0_0;
    %parti/s 1, 1, 2;
    %and;
T_52.4;
    %flag_set/vec4 8;
    %jmp/0xz  T_52.2, 8;
    %alloc S_0x555580739440;
    %load/vec4 v0x555580737910_0;
    %load/vec4 v0x55558073a7e0_0;
    %load/vec4 v0x55558073aa80_0;
    %store/vec4 v0x555580739b00_0, 0, 1;
    %store/vec4 v0x5555807398f0_0, 0, 1;
    %store/vec4 v0x555580739620_0, 0, 1;
    %callf/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_wden.u_bit_field.get_sw_write_next_value, S_0x555580739440;
    %free S_0x555580739440;
    %assign/vec4 v0x555580737910_0, 0;
T_52.2 ;
T_52.1 ;
    %jmp T_52;
    .thread T_52;
    .scope S_0x55558072b000;
T_53 ;
    %wait E_0x55558056fe30;
    %load/vec4 v0x55558072dd10_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_53.0, 8;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x55558072b2e0_0, 0;
    %jmp T_53.1;
T_53.0 ;
    %load/vec4 v0x55558072ea10_0;
    %parti/s 1, 1, 2;
    %flag_set/vec4 8;
    %flag_get/vec4 8;
    %jmp/0 T_53.2, 8;
    %load/vec4 v0x55558072ddb0_0;
    %pushi/vec4 0, 0, 1;
    %cmp/ne;
    %flag_get/vec4 4;
    %and;
T_53.2;
    %assign/vec4 v0x55558072b2e0_0, 0;
T_53.1 ;
    %jmp T_53;
    .thread T_53;
    .scope S_0x55558072a1a0;
T_54 ;
    %wait E_0x55558056fe30;
    %load/vec4 v0x55558072dd10_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_54.0, 8;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x55558072a470_0, 0;
    %jmp T_54.1;
T_54.0 ;
    %load/vec4 v0x55558072de90_0;
    %flag_set/vec4 8;
    %flag_get/vec4 8;
    %jmp/0 T_54.2, 8;
    %load/vec4 v0x55558072dc30_0;
    %pushi/vec4 0, 0, 1;
    %cmp/ne;
    %flag_get/vec4 4;
    %and;
T_54.2;
    %assign/vec4 v0x55558072a470_0, 0;
T_54.1 ;
    %jmp T_54;
    .thread T_54;
    .scope S_0x55558072ad20;
T_55 ;
    %wait E_0x55558056fe30;
    %load/vec4 v0x55558072dd10_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_55.0, 8;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x55558072af00_0, 0;
    %jmp T_55.1;
T_55.0 ;
    %pushi/vec4 1, 0, 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_55.4, 9;
    %load/vec4 v0x55558072e890_0;
    %and;
T_55.4;
    %flag_set/vec4 8;
    %jmp/0xz  T_55.2, 8;
    %alloc S_0x55558072b3a0;
    %load/vec4 v0x55558072af00_0;
    %load/vec4 v0x55558072db20_0;
    %load/vec4 v0x55558072df30_0;
    %load/vec4 v0x55558072d990_0;
    %load/vec4 v0x55558072d8b0_0;
    %store/vec4 v0x55558072b580_0, 0, 1;
    %store/vec4 v0x55558072b900_0, 0, 1;
    %store/vec4 v0x55558072bb80_0, 0, 1;
    %store/vec4 v0x55558072bc60_0, 0, 1;
    %store/vec4 v0x55558072b680_0, 0, 1;
    %callf/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_s1wto.u_bit_field.get_hw_next_value, S_0x55558072b3a0;
    %free S_0x55558072b3a0;
    %assign/vec4 v0x55558072af00_0, 0;
    %jmp T_55.3;
T_55.2 ;
    %pushi/vec4 1, 0, 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_55.7, 9;
    %load/vec4 v0x55558072ea10_0;
    %parti/s 1, 1, 2;
    %and;
T_55.7;
    %flag_set/vec4 8;
    %jmp/0xz  T_55.5, 8;
    %alloc S_0x55558072c910;
    %load/vec4 v0x55558072af00_0;
    %load/vec4 v0x55558072ddb0_0;
    %load/vec4 v0x55558072df30_0;
    %store/vec4 v0x55558072cfd0_0, 0, 1;
    %store/vec4 v0x55558072cdc0_0, 0, 1;
    %store/vec4 v0x55558072caf0_0, 0, 1;
    %callf/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_s1wto.u_bit_field.get_sw_write_next_value, S_0x55558072c910;
    %free S_0x55558072c910;
    %assign/vec4 v0x55558072af00_0, 0;
T_55.5 ;
T_55.3 ;
T_55.1 ;
    %jmp T_55;
    .thread T_55;
    .scope S_0x5555807316a0;
T_56 ;
    %wait E_0x55558056fe30;
    %load/vec4 v0x5555807342a0_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_56.0, 8;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x555580731980_0, 0;
    %jmp T_56.1;
T_56.0 ;
    %load/vec4 v0x555580735080_0;
    %parti/s 1, 1, 2;
    %flag_set/vec4 8;
    %flag_get/vec4 8;
    %jmp/0 T_56.2, 8;
    %load/vec4 v0x555580734450_0;
    %pushi/vec4 0, 0, 1;
    %cmp/ne;
    %flag_get/vec4 4;
    %and;
T_56.2;
    %assign/vec4 v0x555580731980_0, 0;
T_56.1 ;
    %jmp T_56;
    .thread T_56;
    .scope S_0x555580730840;
T_57 ;
    %wait E_0x55558056fe30;
    %load/vec4 v0x5555807342a0_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_57.0, 8;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x555580730b10_0, 0;
    %jmp T_57.1;
T_57.0 ;
    %load/vec4 v0x555580734530_0;
    %flag_set/vec4 8;
    %flag_get/vec4 8;
    %jmp/0 T_57.2, 8;
    %load/vec4 v0x5555807341c0_0;
    %pushi/vec4 0, 0, 1;
    %cmp/ne;
    %flag_get/vec4 4;
    %and;
T_57.2;
    %assign/vec4 v0x555580730b10_0, 0;
T_57.1 ;
    %jmp T_57;
    .thread T_57;
    .scope S_0x5555807313c0;
T_58 ;
    %wait E_0x55558056fe30;
    %load/vec4 v0x5555807342a0_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_58.0, 8;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x5555807315a0_0, 0;
    %jmp T_58.1;
T_58.0 ;
    %pushi/vec4 1, 0, 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_58.4, 9;
    %load/vec4 v0x555580734ee0_0;
    %and;
T_58.4;
    %flag_set/vec4 8;
    %jmp/0xz  T_58.2, 8;
    %alloc S_0x555580731a40;
    %load/vec4 v0x5555807315a0_0;
    %load/vec4 v0x5555807340b0_0;
    %load/vec4 v0x5555807345d0_0;
    %load/vec4 v0x555580733f20_0;
    %load/vec4 v0x555580733e40_0;
    %store/vec4 v0x555580731c20_0, 0, 1;
    %store/vec4 v0x555580731fa0_0, 0, 1;
    %store/vec4 v0x555580732220_0, 0, 1;
    %store/vec4 v0x555580732300_0, 0, 1;
    %store/vec4 v0x555580731d20_0, 0, 1;
    %callf/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_s2wto.u_bit_field.get_hw_next_value, S_0x555580731a40;
    %free S_0x555580731a40;
    %assign/vec4 v0x5555807315a0_0, 0;
    %jmp T_58.3;
T_58.2 ;
    %pushi/vec4 1, 0, 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_58.7, 9;
    %load/vec4 v0x555580735080_0;
    %parti/s 1, 1, 2;
    %and;
T_58.7;
    %flag_set/vec4 8;
    %jmp/0xz  T_58.5, 8;
    %alloc S_0x555580732fb0;
    %load/vec4 v0x5555807315a0_0;
    %load/vec4 v0x555580734450_0;
    %load/vec4 v0x5555807345d0_0;
    %store/vec4 v0x555580733670_0, 0, 1;
    %store/vec4 v0x555580733460_0, 0, 1;
    %store/vec4 v0x555580733190_0, 0, 1;
    %callf/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_s2wto.u_bit_field.get_sw_write_next_value, S_0x555580732fb0;
    %free S_0x555580732fb0;
    %assign/vec4 v0x5555807315a0_0, 0;
T_58.5 ;
T_58.3 ;
T_58.1 ;
    %jmp T_58;
    .thread T_58;
    .scope S_0x55558073dd80;
T_59 ;
    %wait E_0x55558056fe30;
    %load/vec4 v0x555580740dc0_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_59.0, 8;
    %pushi/vec4 1023, 0, 10;
    %assign/vec4 v0x55558073df60_0, 0;
    %jmp T_59.1;
T_59.0 ;
    %pushi/vec4 1, 0, 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_59.4, 9;
    %load/vec4 v0x555580741b00_0;
    %parti/s 1, 1, 2;
    %and;
T_59.4;
    %flag_set/vec4 8;
    %jmp/0xz  T_59.2, 8;
    %alloc S_0x55558073fac0;
    %load/vec4 v0x55558073df60_0;
    %load/vec4 v0x555580740e60_0;
    %load/vec4 v0x555580741070_0;
    %store/vec4 v0x555580740180_0, 0, 10;
    %store/vec4 v0x55558073ff70_0, 0, 10;
    %store/vec4 v0x55558073fca0_0, 0, 10;
    %callf/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_wtocnt.u_bit_field.get_sw_write_next_value, S_0x55558073fac0;
    %free S_0x55558073fac0;
    %assign/vec4 v0x55558073df60_0, 0;
T_59.2 ;
T_59.1 ;
    %jmp T_59;
    .thread T_59;
    .scope S_0x55558074bd00;
T_60 ;
    %wait E_0x55558056fe30;
    %load/vec4 v0x5555807536d0_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_60.0, 8;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x555580753f30_0, 0;
    %jmp T_60.1;
T_60.0 ;
    %load/vec4 v0x555580753ff0_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_60.2, 8;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x555580753f30_0, 0;
    %jmp T_60.3;
T_60.2 ;
    %load/vec4 v0x555580753150_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_60.4, 8;
    %pushi/vec4 1, 0, 1;
    %assign/vec4 v0x555580753f30_0, 0;
T_60.4 ;
T_60.3 ;
T_60.1 ;
    %jmp T_60;
    .thread T_60;
    .scope S_0x55558074b060;
T_61 ;
    %wait E_0x55558056fe30;
    %load/vec4 v0x5555807558b0_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_61.0, 8;
    %pushi/vec4 0, 0, 2;
    %assign/vec4 v0x555580756880_0, 0;
    %jmp T_61.1;
T_61.0 ;
    %load/vec4 v0x555580756880_0;
    %cmpi/ne 0, 0, 2;
    %jmp/0xz  T_61.2, 4;
    %pushi/vec4 0, 0, 2;
    %assign/vec4 v0x555580756880_0, 0;
    %jmp T_61.3;
T_61.2 ;
    %load/vec4 v0x555580756e60_0;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_61.6, 9;
    %load/vec4 v0x555580756bf0_0;
    %and;
T_61.6;
    %flag_set/vec4 8;
    %jmp/0xz  T_61.4, 8;
    %load/vec4 v0x555580756cc0_0;
    %parti/s 1, 1, 2;
    %flag_set/vec4 8;
    %jmp/0xz  T_61.7, 8;
    %pushi/vec4 2, 0, 2;
    %assign/vec4 v0x555580756880_0, 0;
    %jmp T_61.8;
T_61.7 ;
    %pushi/vec4 1, 0, 2;
    %assign/vec4 v0x555580756880_0, 0;
T_61.8 ;
T_61.4 ;
T_61.3 ;
T_61.1 ;
    %jmp T_61;
    .thread T_61;
    .scope S_0x55558074b060;
T_62 ;
    %wait E_0x55558056fe30;
    %load/vec4 v0x5555807558b0_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_62.0, 8;
    %pushi/vec4 0, 0, 32;
    %assign/vec4 v0x5555807567a0_0, 0;
    %jmp T_62.1;
T_62.0 ;
    %load/vec4 v0x555580756e60_0;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_62.4, 9;
    %load/vec4 v0x555580756bf0_0;
    %and;
T_62.4;
    %flag_set/vec4 8;
    %jmp/0xz  T_62.2, 8;
    %load/vec4 v0x555580756b20_0;
    %assign/vec4 v0x5555807567a0_0, 0;
T_62.2 ;
T_62.1 ;
    %jmp T_62;
    .thread T_62;
    .scope S_0x5555806f5fb0;
T_63 ;
    %wait E_0x55558056cc10;
    %load/vec4 v0x555580540ee0_0;
    %load/vec4 v0x5555803ee180_0;
    %concat/vec4; draw_concat_vec4
    %dup/vec4;
    %pushi/vec4 56, 56, 7;
    %cmp/x;
    %jmp/1 T_63.0, 4;
    %dup/vec4;
    %pushi/vec4 120, 104, 7;
    %cmp/x;
    %jmp/1 T_63.1, 4;
    %dup/vec4;
    %pushi/vec4 120, 112, 7;
    %cmp/x;
    %jmp/1 T_63.2, 4;
    %dup/vec4;
    %pushi/vec4 120, 56, 7;
    %cmp/x;
    %jmp/1 T_63.3, 4;
    %dup/vec4;
    %pushi/vec4 57, 56, 7;
    %cmp/x;
    %jmp/1 T_63.4, 4;
    %dup/vec4;
    %pushi/vec4 121, 104, 7;
    %cmp/x;
    %jmp/1 T_63.5, 4;
    %dup/vec4;
    %pushi/vec4 121, 112, 7;
    %cmp/x;
    %jmp/1 T_63.6, 4;
    %dup/vec4;
    %pushi/vec4 65, 0, 7;
    %cmp/x;
    %jmp/1 T_63.7, 4;
    %dup/vec4;
    %pushi/vec4 121, 24, 7;
    %cmp/x;
    %jmp/1 T_63.8, 4;
    %dup/vec4;
    %pushi/vec4 58, 56, 7;
    %cmp/x;
    %jmp/1 T_63.9, 4;
    %dup/vec4;
    %pushi/vec4 122, 104, 7;
    %cmp/x;
    %jmp/1 T_63.10, 4;
    %dup/vec4;
    %pushi/vec4 122, 112, 7;
    %cmp/x;
    %jmp/1 T_63.11, 4;
    %dup/vec4;
    %pushi/vec4 122, 120, 7;
    %cmp/x;
    %jmp/1 T_63.12, 4;
    %dup/vec4;
    %pushi/vec4 59, 56, 7;
    %cmp/x;
    %jmp/1 T_63.13, 4;
    %dup/vec4;
    %pushi/vec4 123, 104, 7;
    %cmp/x;
    %jmp/1 T_63.14, 4;
    %dup/vec4;
    %pushi/vec4 123, 112, 7;
    %cmp/x;
    %jmp/1 T_63.15, 4;
    %dup/vec4;
    %pushi/vec4 67, 0, 7;
    %cmp/x;
    %jmp/1 T_63.16, 4;
    %dup/vec4;
    %pushi/vec4 123, 24, 7;
    %cmp/x;
    %jmp/1 T_63.17, 4;
    %dup/vec4;
    %pushi/vec4 62, 56, 7;
    %cmp/x;
    %jmp/1 T_63.18, 4;
    %dup/vec4;
    %pushi/vec4 126, 104, 7;
    %cmp/x;
    %jmp/1 T_63.19, 4;
    %dup/vec4;
    %pushi/vec4 126, 112, 7;
    %cmp/x;
    %jmp/1 T_63.20, 4;
    %dup/vec4;
    %pushi/vec4 126, 120, 7;
    %cmp/x;
    %jmp/1 T_63.21, 4;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0x5555803f3930_0, 0, 3;
    %jmp T_63.23;
T_63.0 ;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0x5555803f3930_0, 0, 3;
    %jmp T_63.23;
T_63.1 ;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0x5555803f3930_0, 0, 3;
    %jmp T_63.23;
T_63.2 ;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0x5555803f3930_0, 0, 3;
    %jmp T_63.23;
T_63.3 ;
    %pushi/vec4 1, 0, 3;
    %store/vec4 v0x5555803f3930_0, 0, 3;
    %jmp T_63.23;
T_63.4 ;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0x5555803f3930_0, 0, 3;
    %jmp T_63.23;
T_63.5 ;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0x5555803f3930_0, 0, 3;
    %jmp T_63.23;
T_63.6 ;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0x5555803f3930_0, 0, 3;
    %jmp T_63.23;
T_63.7 ;
    %pushi/vec4 1, 0, 3;
    %store/vec4 v0x5555803f3930_0, 0, 3;
    %jmp T_63.23;
T_63.8 ;
    %pushi/vec4 2, 0, 3;
    %store/vec4 v0x5555803f3930_0, 0, 3;
    %jmp T_63.23;
T_63.9 ;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0x5555803f3930_0, 0, 3;
    %jmp T_63.23;
T_63.10 ;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0x5555803f3930_0, 0, 3;
    %jmp T_63.23;
T_63.11 ;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0x5555803f3930_0, 0, 3;
    %jmp T_63.23;
T_63.12 ;
    %pushi/vec4 3, 0, 3;
    %store/vec4 v0x5555803f3930_0, 0, 3;
    %jmp T_63.23;
T_63.13 ;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0x5555803f3930_0, 0, 3;
    %jmp T_63.23;
T_63.14 ;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0x5555803f3930_0, 0, 3;
    %jmp T_63.23;
T_63.15 ;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0x5555803f3930_0, 0, 3;
    %jmp T_63.23;
T_63.16 ;
    %pushi/vec4 3, 0, 3;
    %store/vec4 v0x5555803f3930_0, 0, 3;
    %jmp T_63.23;
T_63.17 ;
    %pushi/vec4 6, 0, 3;
    %store/vec4 v0x5555803f3930_0, 0, 3;
    %jmp T_63.23;
T_63.18 ;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0x5555803f3930_0, 0, 3;
    %jmp T_63.23;
T_63.19 ;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0x5555803f3930_0, 0, 3;
    %jmp T_63.23;
T_63.20 ;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0x5555803f3930_0, 0, 3;
    %jmp T_63.23;
T_63.21 ;
    %pushi/vec4 6, 0, 3;
    %store/vec4 v0x5555803f3930_0, 0, 3;
    %jmp T_63.23;
T_63.23 ;
    %pop/vec4 1;
    %jmp T_63;
    .thread T_63, $push;
    .scope S_0x5555806f5fb0;
T_64 ;
    %wait E_0x55558056fe30;
    %load/vec4 v0x555580430c90_0;
    %inv;
    %flag_set/vec4 8;
    %jmp/0xz  T_64.0, 8;
    %pushi/vec4 0, 0, 3;
    %assign/vec4 v0x5555803ee180_0, 0;
    %jmp T_64.1;
T_64.0 ;
    %load/vec4 v0x5555803f3930_0;
    %assign/vec4 v0x5555803ee180_0, 0;
T_64.1 ;
    %jmp T_64;
    .thread T_64;
    .scope S_0x555580681e70;
T_65 ;
    %wait E_0x555580721430;
    %load/vec4 v0x5555804b1a30_0;
    %inv;
    %flag_set/vec4 8;
    %jmp/0xz  T_65.0, 8;
    %pushi/vec4 0, 0, 2;
    %assign/vec4 v0x555580540c70_0, 0;
    %jmp T_65.1;
T_65.0 ;
    %load/vec4 v0x555580540c70_0;
    %parti/s 1, 0, 2;
    %concati/vec4 1, 0, 1;
    %assign/vec4 v0x555580540c70_0, 0;
T_65.1 ;
    %jmp T_65;
    .thread T_65;
    .scope S_0x555580681e70;
T_66 ;
    %wait E_0x5555803c3c60;
    %load/vec4 v0x555580541050_0;
    %inv;
    %flag_set/vec4 8;
    %jmp/0xz  T_66.0, 8;
    %pushi/vec4 0, 0, 10;
    %assign/vec4 v0x55558054f730_0, 0;
    %jmp T_66.1;
T_66.0 ;
    %load/vec4 v0x55558054f730_0;
    %load/vec4 v0x5555805520a0_0;
    %cmp/e;
    %jmp/0xz  T_66.2, 4;
    %pushi/vec4 0, 0, 10;
    %assign/vec4 v0x55558054f730_0, 0;
    %jmp T_66.3;
T_66.2 ;
    %load/vec4 v0x55558054f730_0;
    %addi 1, 0, 10;
    %assign/vec4 v0x55558054f730_0, 0;
T_66.3 ;
T_66.1 ;
    %jmp T_66;
    .thread T_66;
    .scope S_0x5555806c8600;
T_67 ;
    %wait E_0x55558059e470;
    %load/vec4 v0x55558051ce80_0;
    %inv;
    %flag_set/vec4 8;
    %jmp/0xz  T_67.0, 8;
    %pushi/vec4 0, 0, 20;
    %assign/vec4 v0x55558051de30_0, 0;
    %jmp T_67.1;
T_67.0 ;
    %load/vec4 v0x55558051de30_0;
    %addi 1, 0, 20;
    %assign/vec4 v0x55558051de30_0, 0;
T_67.1 ;
    %jmp T_67;
    .thread T_67;
    .scope S_0x555580664ad0;
T_68 ;
    %wait E_0x55558059ebb0;
    %load/vec4 v0x555580562570_0;
    %load/vec4 v0x55558057a410_0;
    %concat/vec4; draw_concat_vec4
    %dup/vec4;
    %pushi/vec4 6, 56, 7;
    %cmp/z;
    %jmp/1 T_68.0, 4;
    %dup/vec4;
    %pushi/vec4 70, 56, 7;
    %cmp/z;
    %jmp/1 T_68.1, 4;
    %dup/vec4;
    %pushi/vec4 3, 88, 7;
    %cmp/z;
    %jmp/1 T_68.2, 4;
    %dup/vec4;
    %pushi/vec4 35, 88, 7;
    %cmp/z;
    %jmp/1 T_68.3, 4;
    %dup/vec4;
    %pushi/vec4 7, 104, 7;
    %cmp/z;
    %jmp/1 T_68.4, 4;
    %dup/vec4;
    %pushi/vec4 23, 104, 7;
    %cmp/z;
    %jmp/1 T_68.5, 4;
    %dup/vec4;
    %pushi/vec4 5, 112, 7;
    %cmp/z;
    %jmp/1 T_68.6, 4;
    %dup/vec4;
    %pushi/vec4 13, 112, 7;
    %cmp/z;
    %jmp/1 T_68.7, 4;
    %load/vec4 v0x55558057a410_0;
    %store/vec4 v0x555580562290_0, 0, 3;
    %jmp T_68.9;
T_68.0 ;
    %pushi/vec4 6, 0, 3;
    %store/vec4 v0x555580562290_0, 0, 3;
    %jmp T_68.9;
T_68.1 ;
    %pushi/vec4 3, 0, 3;
    %store/vec4 v0x555580562290_0, 0, 3;
    %jmp T_68.9;
T_68.2 ;
    %pushi/vec4 3, 0, 3;
    %store/vec4 v0x555580562290_0, 0, 3;
    %jmp T_68.9;
T_68.3 ;
    %pushi/vec4 7, 0, 3;
    %store/vec4 v0x555580562290_0, 0, 3;
    %jmp T_68.9;
T_68.4 ;
    %pushi/vec4 7, 0, 3;
    %store/vec4 v0x555580562290_0, 0, 3;
    %jmp T_68.9;
T_68.5 ;
    %pushi/vec4 5, 0, 3;
    %store/vec4 v0x555580562290_0, 0, 3;
    %jmp T_68.9;
T_68.6 ;
    %pushi/vec4 5, 0, 3;
    %store/vec4 v0x555580562290_0, 0, 3;
    %jmp T_68.9;
T_68.7 ;
    %pushi/vec4 6, 0, 3;
    %store/vec4 v0x555580562290_0, 0, 3;
    %jmp T_68.9;
T_68.9 ;
    %pop/vec4 1;
    %jmp T_68;
    .thread T_68, $push;
    .scope S_0x555580664ad0;
T_69 ;
    %wait E_0x55558059e470;
    %load/vec4 v0x55558057a2a0_0;
    %inv;
    %flag_set/vec4 8;
    %jmp/0xz  T_69.0, 8;
    %pushi/vec4 6, 0, 3;
    %assign/vec4 v0x55558057a410_0, 0;
    %jmp T_69.1;
T_69.0 ;
    %load/vec4 v0x555580562290_0;
    %assign/vec4 v0x55558057a410_0, 0;
T_69.1 ;
    %jmp T_69;
    .thread T_69;
    .scope S_0x555580664ad0;
T_70 ;
    %wait E_0x55558059e470;
    %load/vec4 v0x55558057a2a0_0;
    %inv;
    %flag_set/vec4 8;
    %jmp/0xz  T_70.0, 8;
    %pushi/vec4 0, 0, 7;
    %assign/vec4 v0x5555806a4320_0, 0;
    %jmp T_70.1;
T_70.0 ;
    %load/vec4 v0x5555806816c0_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_70.2, 8;
    %load/vec4 v0x5555806a4320_0;
    %addi 1, 0, 7;
    %assign/vec4 v0x5555806a4320_0, 0;
    %jmp T_70.3;
T_70.2 ;
    %pushi/vec4 0, 0, 7;
    %assign/vec4 v0x5555806a4320_0, 0;
T_70.3 ;
T_70.1 ;
    %jmp T_70;
    .thread T_70;
    .scope S_0x5555804bd8e0;
T_71 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x55558075c2e0_0, 0, 1;
T_71.0 ;
    %delay 10, 0;
    %load/vec4 v0x55558075c2e0_0;
    %inv;
    %store/vec4 v0x55558075c2e0_0, 0, 1;
    %jmp T_71.0;
T_71.1 ;
    %end;
    .thread T_71;
    .scope S_0x5555804bd8e0;
T_72 ;
    %vpi_call 2 101 "$dumpfile", "sim/out/wdg_rv_out.vcd" {0 0 0};
    %vpi_call 2 102 "$dumpvars", 32'sb00000000000000000000000000000000, S_0x5555804bd8e0 {0 0 0};
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x55558075c950_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x55558075ccd0_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x55558075cd70_0, 0, 1;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558075c890_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558075cab0_0, 0, 32;
    %pushi/vec4 0, 0, 4;
    %store/vec4 v0x55558075cb70_0, 0, 4;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x55558075c510_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x55558075c690_0, 0, 1;
    %delay 200, 0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x55558075c690_0, 0, 1;
    %delay 1000, 0;
    %delay 2000, 0;
    %alloc S_0x55558075b6a0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x55558075b880_0, 0, 1;
    %pushi/vec4 16, 0, 10;
    %store/vec4 v0x55558075b960_0, 0, 10;
    %fork TD_wdg_tb.wishbone_set_wdcsr, S_0x55558075b6a0;
    %join;
    %free S_0x55558075b6a0;
    %delay 200, 0;
    %alloc S_0x55558075b6a0;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x55558075b880_0, 0, 1;
    %pushi/vec4 16, 0, 10;
    %store/vec4 v0x55558075b960_0, 0, 10;
    %fork TD_wdg_tb.wishbone_set_wdcsr, S_0x55558075b6a0;
    %join;
    %free S_0x55558075b6a0;
    %delay 2000, 0;
    %alloc S_0x55558075b6a0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x55558075b880_0, 0, 1;
    %pushi/vec4 255, 0, 10;
    %store/vec4 v0x55558075b960_0, 0, 10;
    %fork TD_wdg_tb.wishbone_set_wdcsr, S_0x55558075b6a0;
    %join;
    %free S_0x55558075b6a0;
    %vpi_call 2 138 "$display", "Sequence of reading the watchdog timer value" {0 0 0};
    %alloc S_0x55558075b3e0;
    %fork TD_wdg_tb.wishbone_readwdg, S_0x55558075b3e0;
    %join;
    %free S_0x55558075b3e0;
    %delay 10, 0;
    %alloc S_0x55558075b3e0;
    %fork TD_wdg_tb.wishbone_readwdg, S_0x55558075b3e0;
    %join;
    %free S_0x55558075b3e0;
    %delay 100, 0;
    %alloc S_0x55558075b3e0;
    %fork TD_wdg_tb.wishbone_readwdg, S_0x55558075b3e0;
    %join;
    %free S_0x55558075b3e0;
    %delay 100, 0;
    %alloc S_0x55558075b3e0;
    %fork TD_wdg_tb.wishbone_readwdg, S_0x55558075b3e0;
    %join;
    %free S_0x55558075b3e0;
    %delay 3000, 0;
    %alloc S_0x55558075b6a0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x55558075b880_0, 0, 1;
    %pushi/vec4 170, 0, 10;
    %store/vec4 v0x55558075b960_0, 0, 10;
    %fork TD_wdg_tb.wishbone_set_wdcsr, S_0x55558075b6a0;
    %join;
    %free S_0x55558075b6a0;
    %delay 2000, 0;
    %delay 5000, 0;
    %alloc S_0x55558075b6a0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x55558075b880_0, 0, 1;
    %pushi/vec4 16, 0, 10;
    %store/vec4 v0x55558075b960_0, 0, 10;
    %fork TD_wdg_tb.wishbone_set_wdcsr, S_0x55558075b6a0;
    %join;
    %free S_0x55558075b6a0;
    %delay 2000, 0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x55558075c510_0, 0, 1;
    %delay 20000, 0;
    %vpi_call 2 166 "$finish" {0 0 0};
    %end;
    .thread T_72;
# The file index is used to find the file name in the following table.
:file_names 17;
    "N/A";
    "<interactive>";
    "sim/wdg_tb.v";
    "rtl/reset_ctrl.v";
    "rtl/wdg_top.v";
    "rtl/clkdiv.v";
    "rtl/cntr.v";
    "rtl/fsm.v";
    "rtl/reg/wdgrv_regs.v";
    "./submodules/rggen-verilog-rtl/rggen_bit_field.v";
    "./submodules/rggen-verilog-rtl/rggen_default_register.v";
    "./submodules/rggen-verilog-rtl/rggen_register_common.v";
    "./submodules/rggen-verilog-rtl/rggen_address_decoder.v";
    "./submodules/rggen-verilog-rtl/rggen_mux.v";
    "./submodules/rggen-verilog-rtl/rggen_wishbone_adapter.v";
    "./submodules/rggen-verilog-rtl/rggen_adapter_common.v";
    "./submodules/rggen-verilog-rtl/rggen_or_reducer.v";
