#! /home/user/open_tools/oss-cad-suite/bin/vvp
:ivl_version "13.0 (devel)" "(s20250103-60-gdb82380ce)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision + 0;
:vpi_module "/home/user/open_tools/oss-cad-suite/lib/ivl/system.vpi";
:vpi_module "/home/user/open_tools/oss-cad-suite/lib/ivl/vhdl_sys.vpi";
:vpi_module "/home/user/open_tools/oss-cad-suite/lib/ivl/vhdl_textio.vpi";
:vpi_module "/home/user/open_tools/oss-cad-suite/lib/ivl/v2005_math.vpi";
:vpi_module "/home/user/open_tools/oss-cad-suite/lib/ivl/va_math.vpi";
S_0x5555763f68e0 .scope module, "wdg_tb" "wdg_tb" 2 3;
 .timescale 0 0;
P_0x55557659aec0 .param/l "WB_ADDR_WIDTH" 0 2 6, +C4<00000000000000000000000000000100>;
P_0x55557659af00 .param/l "WB_DATA_WIDTH" 0 2 5, +C4<00000000000000000000000000100000>;
P_0x55557659af40 .param/l "WB_MTIME_BASE" 0 2 10, +C4<00000000000000000000000000000100>;
P_0x55557659af80 .param/l "WB_WDG_BASE" 0 2 9, +C4<00000000000000000000000000000000>;
P_0x55557659afc0 .param/l "WDG_TICK_BIT" 0 2 14, +C4<00000000000000000000000000000010>;
L_0x5555766b3230 .functor AND 1, v0x5555766942c0_0, L_0x5555766b3510, C4<1>, C4<1>;
v0x5555766940a0_0 .var "clk_tb", 0 0;
v0x555576694160_0 .net "core_res_n", 0 0, L_0x5555766b3470;  1 drivers
v0x555576694220_0 .var "rd_data", 31 0;
v0x5555766942c0_0 .var "res_n_tb", 0 0;
v0x555576694360_0 .var/i "timeout", 31 0;
v0x555576694450_0 .net "wb_ack_tb", 0 0, L_0x5555766aefa0;  1 drivers
v0x5555766944f0_0 .var "wb_adr_tb", 3 0;
v0x5555766945b0_0 .var "wb_cyc_tb", 0 0;
v0x555576694650_0 .net "wb_dat_r_tb", 31 0, L_0x5555766af1a0;  1 drivers
v0x555576694710_0 .var "wb_dat_w_tb", 31 0;
v0x5555766947d0_0 .var "wb_sel_tb", 3 0;
v0x555576694890_0 .net "wb_stall_tb", 0 0, L_0x5555766aee40;  1 drivers
v0x555576694930_0 .var "wb_stb_tb", 0 0;
v0x5555766949d0_0 .var "wb_we_tb", 0 0;
v0x555576694a70_0 .net "wdg_res_n", 0 0, L_0x5555766b3510;  1 drivers
v0x555576694b10_0 .net "wdg_to", 0 0, L_0x5555766b31c0;  1 drivers
S_0x55557659bdf0 .scope module, "reset_ctrl_inst" "reset_ctrl" 2 74, 3 12 0, S_0x5555763f68e0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /INPUT 1 "sys_res_n";
    .port_info 2 /INPUT 1 "wdg_to";
    .port_info 3 /OUTPUT 1 "wdg_res_n";
    .port_info 4 /OUTPUT 1 "core_res_n";
P_0x5555763f2b00 .param/l "CORE_RST_CYCLES" 0 3 13, +C4<00000000000000000000000000111100>;
P_0x5555763f2b40 .param/l "MAX_COUNT_CYCLES" 1 3 25, +C4<0000000000000000000000000000111110>;
P_0x5555763f2b80 .param/l "PADDING_CYCLES" 0 3 14, +C4<00000000000000000000000000000001>;
P_0x5555763f2bc0 .param/l "S_CORE_RST" 1 3 40, C4<011>;
P_0x5555763f2c00 .param/l "S_IDLE" 1 3 39, C4<110>;
P_0x5555763f2c40 .param/l "S_PADDING" 1 3 41, C4<111>;
P_0x5555763f2c80 .param/l "S_WDG_RST" 1 3 42, C4<101>;
P_0x5555763f2cc0 .param/l "WDG_RST_CYCLES" 0 3 15, +C4<00000000000000000000000000000001>;
L_0x7f7ed8bb8e78 .functor BUFT 1, C4<00000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x555576617a00_0 .net *"_ivl_11", 25 0, L_0x7f7ed8bb8e78;  1 drivers
L_0x7f7ed8bb8ec0 .functor BUFT 1, C4<00000000000000000000000000111011>, C4<0>, C4<0>, C4<0>;
v0x555576480330_0 .net/2u *"_ivl_12", 31 0, L_0x7f7ed8bb8ec0;  1 drivers
v0x5555763aec50_0 .net *"_ivl_14", 0 0, L_0x5555766b3840;  1 drivers
L_0x7f7ed8bb8f08 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v0x5555762eacf0_0 .net/2u *"_ivl_16", 0 0, L_0x7f7ed8bb8f08;  1 drivers
L_0x7f7ed8bb8f50 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x5555762e9c50_0 .net/2u *"_ivl_18", 0 0, L_0x7f7ed8bb8f50;  1 drivers
v0x555576446b10_0 .net *"_ivl_22", 31 0, L_0x5555766b3ba0;  1 drivers
L_0x7f7ed8bb8f98 .functor BUFT 1, C4<00000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x5555763b7f40_0 .net *"_ivl_25", 25 0, L_0x7f7ed8bb8f98;  1 drivers
L_0x7f7ed8bb8fe0 .functor BUFT 1, C4<00000000000000000000000000111101>, C4<0>, C4<0>, C4<0>;
v0x5555765cd4c0_0 .net/2u *"_ivl_26", 31 0, L_0x7f7ed8bb8fe0;  1 drivers
v0x5555765fdfd0_0 .net *"_ivl_28", 0 0, L_0x5555766b3d30;  1 drivers
L_0x7f7ed8bb9028 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v0x555576308700_0 .net/2u *"_ivl_30", 0 0, L_0x7f7ed8bb9028;  1 drivers
L_0x7f7ed8bb9070 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x555576306b50_0 .net/2u *"_ivl_32", 0 0, L_0x7f7ed8bb9070;  1 drivers
v0x5555766367f0_0 .net *"_ivl_36", 31 0, L_0x5555766b4060;  1 drivers
L_0x7f7ed8bb90b8 .functor BUFT 1, C4<00000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x555576644430_0 .net *"_ivl_39", 25 0, L_0x7f7ed8bb90b8;  1 drivers
L_0x7f7ed8bb9100 .functor BUFT 1, C4<00000000000000000000000000111110>, C4<0>, C4<0>, C4<0>;
v0x555576643300_0 .net/2u *"_ivl_40", 31 0, L_0x7f7ed8bb9100;  1 drivers
v0x5555765dfb80_0 .net *"_ivl_42", 0 0, L_0x5555766b4150;  1 drivers
L_0x7f7ed8bb9148 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v0x5555765b7840_0 .net/2u *"_ivl_44", 0 0, L_0x7f7ed8bb9148;  1 drivers
L_0x7f7ed8bb9190 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x5555764b0d30_0 .net/2u *"_ivl_46", 0 0, L_0x7f7ed8bb9190;  1 drivers
v0x55557662cbb0_0 .net *"_ivl_7", 2 0, v0x555576499fb0_0;  1 drivers
v0x5555765c7d80_0 .net *"_ivl_8", 31 0, L_0x5555766b37a0;  1 drivers
v0x555576610450_0 .net "clk", 0 0, v0x5555766940a0_0;  1 drivers
v0x55557660ee70_0 .var "cnt", 5 0;
v0x5555765da4a0_0 .net "core_res_n", 0 0, L_0x5555766b3470;  alias, 1 drivers
v0x5555765ecb60_0 .net "do_cnt", 0 0, L_0x5555766b3600;  1 drivers
v0x5555764b12b0_0 .net "done_padding", 0 0, L_0x5555766b3e70;  1 drivers
v0x555576499e40_0 .net "done_reset_core", 0 0, L_0x5555766b39c0;  1 drivers
v0x55557649a400_0 .net "done_reset_wdg", 0 0, L_0x5555766b4300;  1 drivers
v0x55557649a120_0 .net "inp", 3 0, L_0x5555766b3340;  1 drivers
v0x55557649a290_0 .var "next_state", 2 0;
v0x555576499fb0_0 .var "state", 2 0;
v0x5555764b18c0_0 .net "sys_res_n", 0 0, v0x5555766942c0_0;  1 drivers
v0x5555764b1750_0 .net "wdg_res_n", 0 0, L_0x5555766b3510;  alias, 1 drivers
v0x55557649a9b0_0 .net "wdg_to", 0 0, L_0x5555766b31c0;  alias, 1 drivers
E_0x5555764d5920 .event posedge, v0x555576610450_0;
E_0x5555764d6060 .event anyedge, v0x55557649a120_0, v0x555576499fb0_0;
L_0x5555766b3340 .concat [ 1 1 1 1], L_0x5555766b4300, L_0x5555766b3e70, L_0x5555766b39c0, L_0x5555766b31c0;
L_0x5555766b3470 .part v0x555576499fb0_0, 2, 1;
L_0x5555766b3510 .part v0x555576499fb0_0, 1, 1;
L_0x5555766b3600 .part v0x555576499fb0_0, 0, 1;
L_0x5555766b37a0 .concat [ 6 26 0 0], v0x55557660ee70_0, L_0x7f7ed8bb8e78;
L_0x5555766b3840 .cmp/eq 32, L_0x5555766b37a0, L_0x7f7ed8bb8ec0;
L_0x5555766b39c0 .functor MUXZ 1, L_0x7f7ed8bb8f50, L_0x7f7ed8bb8f08, L_0x5555766b3840, C4<>;
L_0x5555766b3ba0 .concat [ 6 26 0 0], v0x55557660ee70_0, L_0x7f7ed8bb8f98;
L_0x5555766b3d30 .cmp/eq 32, L_0x5555766b3ba0, L_0x7f7ed8bb8fe0;
L_0x5555766b3e70 .functor MUXZ 1, L_0x7f7ed8bb9070, L_0x7f7ed8bb9028, L_0x5555766b3d30, C4<>;
L_0x5555766b4060 .concat [ 6 26 0 0], v0x55557660ee70_0, L_0x7f7ed8bb90b8;
L_0x5555766b4150 .cmp/eq 32, L_0x5555766b4060, L_0x7f7ed8bb9100;
L_0x5555766b4300 .functor MUXZ 1, L_0x7f7ed8bb9190, L_0x7f7ed8bb9148, L_0x5555766b4150, C4<>;
S_0x5555765feea0 .scope module, "wdg_rv_inst" "wdg_top" 2 49, 4 8 0, S_0x5555763f68e0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /INPUT 1 "res_n";
    .port_info 2 /INPUT 1 "i_wb_cyc";
    .port_info 3 /INPUT 1 "i_wb_stb";
    .port_info 4 /OUTPUT 1 "o_wb_stall";
    .port_info 5 /INPUT 4 "i_wb_adr";
    .port_info 6 /INPUT 1 "i_wb_we";
    .port_info 7 /INPUT 32 "i_wb_dat";
    .port_info 8 /INPUT 4 "i_wb_sel";
    .port_info 9 /OUTPUT 1 "o_wb_ack";
    .port_info 10 /OUTPUT 1 "o_wb_err";
    .port_info 11 /OUTPUT 1 "o_wb_rty";
    .port_info 12 /OUTPUT 32 "o_wb_dat";
    .port_info 13 /OUTPUT 1 "o_irq1";
    .port_info 14 /OUTPUT 1 "o_irq2";
P_0x555576595410 .param/l "REG_ADDRESS_WIDTH" 0 4 10, +C4<00000000000000000000000000000100>;
P_0x555576595450 .param/l "REG_BASE_ADDRESS" 0 4 12, +C4<00000000000000000000000000000000>;
P_0x555576595490 .param/l "REG_DEFAULT_READ" 0 4 14, +C4<00000000000000000000000000000000>;
P_0x5555765954d0 .param/l "REG_ERROR_STATUS" 0 4 13, +C4<00000000000000000000000000000000>;
P_0x555576595510 .param/l "REG_INSERT_SLICER" 0 4 15, +C4<00000000000000000000000000000000>;
P_0x555576595550 .param/l "REG_PRE_DECODE" 0 4 11, +C4<00000000000000000000000000000000>;
P_0x555576595590 .param/l "REG_USE_STALLS" 0 4 16, +C4<00000000000000000000000000000001>;
P_0x5555765955d0 .param/l "WB_DATA_WIDTH" 0 4 18, +C4<00000000000000000000000000100000>;
P_0x555576595610 .param/l "WDG_PRECLKDIV_WIDTH" 0 4 21, +C4<00000000000000000000000000010100>;
P_0x555576595650 .param/l "WDG_TICK_BIT" 0 4 20, +C4<00000000000000000000000000000010>;
L_0x5555766b2e60 .functor AND 1, L_0x5555766b3230, L_0x5555766b2c70, C4<1>, C4<1>;
L_0x5555766b3150 .functor BUFZ 1, L_0x5555766b2b80, C4<0>, C4<0>, C4<0>;
L_0x5555766b31c0 .functor BUFZ 1, L_0x5555766b2ae0, C4<0>, C4<0>, C4<0>;
L_0x7f7ed8bb8da0 .functor BUFT 1, C4<0000000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x555576691850_0 .net/2u *"_ivl_0", 21 0, L_0x7f7ed8bb8da0;  1 drivers
L_0x7f7ed8bb8e30 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x555576691950_0 .net/2u *"_ivl_10", 0 0, L_0x7f7ed8bb8e30;  1 drivers
v0x555576691a30_0 .net *"_ivl_6", 0 0, L_0x5555766b2f70;  1 drivers
L_0x7f7ed8bb8de8 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v0x555576691ad0_0 .net/2u *"_ivl_8", 0 0, L_0x7f7ed8bb8de8;  1 drivers
v0x555576691bb0_0 .net "clk", 0 0, v0x5555766940a0_0;  alias, 1 drivers
v0x555576691ca0_0 .net "cnt", 9 0, v0x555576488870_0;  1 drivers
v0x555576691d60_0 .net "cnt0", 0 0, L_0x5555766b3010;  1 drivers
v0x555576691e00_0 .net "do_cnt", 0 0, L_0x5555766b2c70;  1 drivers
v0x555576691ea0_0 .net "i_wb_adr", 3 0, v0x5555766944f0_0;  1 drivers
v0x555576691f40_0 .net "i_wb_cyc", 0 0, v0x5555766945b0_0;  1 drivers
v0x555576692030_0 .net "i_wb_dat", 31 0, v0x555576694710_0;  1 drivers
v0x555576692120_0 .net "i_wb_sel", 3 0, v0x5555766947d0_0;  1 drivers
v0x555576692230_0 .net "i_wb_stb", 0 0, v0x555576694930_0;  1 drivers
v0x555576692320_0 .net "i_wb_we", 0 0, v0x5555766949d0_0;  1 drivers
v0x555576692410_0 .net "o_irq1", 0 0, L_0x5555766b3150;  1 drivers
v0x5555766924d0_0 .net "o_irq2", 0 0, L_0x5555766b31c0;  alias, 1 drivers
v0x555576692570_0 .net "o_wb_ack", 0 0, L_0x5555766aefa0;  alias, 1 drivers
v0x555576692660_0 .net "o_wb_dat", 31 0, L_0x5555766af1a0;  alias, 1 drivers
v0x555576692750_0 .net "o_wb_err", 0 0, L_0x5555766af100;  1 drivers
L_0x7f7ed8bb8b18 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x555576692840_0 .net "o_wb_rty", 0 0, L_0x7f7ed8bb8b18;  1 drivers
v0x555576692930_0 .net "o_wb_stall", 0 0, L_0x5555766aee40;  alias, 1 drivers
v0x555576692a20_0 .net "res_n", 0 0, L_0x5555766b3230;  1 drivers
v0x555576692cd0_0 .net "sw_trg_s1wto", 0 0, L_0x5555766a84c0;  1 drivers
v0x555576692d70_0 .net "sw_trg_s2wto", 0 0, L_0x5555766a9500;  1 drivers
v0x555576692e10_0 .net "wdcsr_s1wto", 0 0, L_0x5555766b2b80;  1 drivers
v0x555576692eb0_0 .net "wdcsr_s2wto", 0 0, L_0x5555766b2ae0;  1 drivers
v0x555576692f50_0 .net "wdcsr_wden", 0 0, L_0x5555766a6750;  1 drivers
v0x555576692ff0_0 .net "wdcsr_wtocnt", 9 0, L_0x5555766aa600;  1 drivers
v0x5555766930b0_0 .net "wdg_tick", 0 0, L_0x5555766b2ed0;  1 drivers
L_0x5555766b2870 .concat [ 10 22 0 0], v0x555576488870_0, L_0x7f7ed8bb8da0;
L_0x5555766b2f70 .cmp/eq 10, v0x555576488870_0, L_0x5555766aa600;
L_0x5555766b3010 .functor MUXZ 1, L_0x7f7ed8bb8e30, L_0x7f7ed8bb8de8, L_0x5555766b2f70, C4<>;
S_0x5555765fe780 .scope module, "clk_div_inst" "clkdiv" 4 129, 5 1 0, S_0x5555765feea0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /INPUT 1 "res_n";
    .port_info 2 /OUTPUT 1 "wdg_tick";
P_0x5555766170b0 .param/l "WDG_TICK_BIT" 0 5 3, +C4<00000000000000000000000000000010>;
P_0x5555766170f0 .param/l "WIDTH" 0 5 2, +C4<00000000000000000000000000010100>;
v0x555576456310_0 .net "clk", 0 0, v0x5555766940a0_0;  alias, 1 drivers
v0x555576456e30_0 .var "cnt", 19 0;
v0x555576455e80_0 .net "res_n", 0 0, L_0x5555766b3230;  alias, 1 drivers
v0x55557648dc60_0 .net "wdg_tick", 0 0, L_0x5555766b2ed0;  alias, 1 drivers
L_0x5555766b2ed0 .part v0x555576456e30_0, 2, 1;
S_0x5555765b7ff0 .scope module, "cntr_inst" "cntr" 4 117, 6 2 0, S_0x5555765feea0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "mtick_clk";
    .port_info 1 /INPUT 1 "res_n";
    .port_info 2 /INPUT 10 "cnt_thrhd";
    .port_info 3 /OUTPUT 10 "count_wdg";
P_0x55557659e530 .param/l "WIDTH" 0 6 4, +C4<00000000000000000000000000001010>;
v0x555576488700_0 .net "cnt_thrhd", 9 0, L_0x5555766aa600;  alias, 1 drivers
v0x555576488870_0 .var "count_wdg", 9 0;
v0x555576488590_0 .net "mtick_clk", 0 0, L_0x5555766b2ed0;  alias, 1 drivers
v0x5555763eaa30_0 .net "res_n", 0 0, L_0x5555766b2e60;  1 drivers
E_0x5555762fcc60/0 .event negedge, v0x5555763eaa30_0;
E_0x5555762fcc60/1 .event posedge, v0x55557648dc60_0;
E_0x5555762fcc60 .event/or E_0x5555762fcc60/0, E_0x5555762fcc60/1;
S_0x55557662c130 .scope module, "fsm_inst" "fsm" 4 101, 7 4 0, S_0x5555765feea0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /INPUT 1 "res_n";
    .port_info 2 /INPUT 1 "en";
    .port_info 3 /INPUT 1 "count0";
    .port_info 4 /OUTPUT 1 "s2wto";
    .port_info 5 /OUTPUT 1 "s1wto";
    .port_info 6 /OUTPUT 1 "do_cnt";
    .port_info 7 /INPUT 1 "sw_trg_s1wto";
    .port_info 8 /INPUT 1 "sw_trg_s2wto";
P_0x55557664bea0 .param/l "S_CNT0" 0 7 19, C4<001>;
P_0x55557664bee0 .param/l "S_CNT1" 0 7 21, C4<011>;
P_0x55557664bf20 .param/l "S_IDLE" 0 7 18, C4<000>;
P_0x55557664bf60 .param/l "S_RAISE_S1" 0 7 20, C4<010>;
P_0x55557664bfa0 .param/l "S_RAISE_S2" 0 7 22, C4<110>;
v0x55557647a050_0 .net *"_ivl_7", 2 0, v0x55557642ec30_0;  1 drivers
v0x555576479c70_0 .net "clk", 0 0, v0x5555766940a0_0;  alias, 1 drivers
v0x5555764799d0_0 .net "count0", 0 0, L_0x5555766b3010;  alias, 1 drivers
v0x555576382680_0 .net "do_cnt", 0 0, L_0x5555766b2c70;  alias, 1 drivers
v0x55557637cca0_0 .net "en", 0 0, L_0x5555766a6750;  alias, 1 drivers
v0x5555763f9c50_0 .net "inp", 3 0, L_0x5555766b29f0;  1 drivers
v0x5555763ea760_0 .var "next_state", 2 0;
v0x55557632b750_0 .net "res_n", 0 0, L_0x5555766b3230;  alias, 1 drivers
v0x555576408ac0_0 .net "s1wto", 0 0, L_0x5555766b2b80;  alias, 1 drivers
v0x55557642e960_0 .net "s2wto", 0 0, L_0x5555766b2ae0;  alias, 1 drivers
v0x55557642ec30_0 .var "state", 2 0;
v0x55557632bec0_0 .net "sw_trg_s1wto", 0 0, L_0x5555766a84c0;  alias, 1 drivers
v0x55557632bc00_0 .net "sw_trg_s2wto", 0 0, L_0x5555766a9500;  alias, 1 drivers
E_0x555576658470/0 .event negedge, v0x555576455e80_0;
E_0x555576658470/1 .event posedge, v0x555576610450_0;
E_0x555576658470 .event/or E_0x555576658470/0, E_0x555576658470/1;
E_0x555576369c90 .event anyedge, v0x5555763f9c50_0, v0x55557642ec30_0;
L_0x5555766b29f0 .concat [ 1 1 1 1], L_0x5555766a9500, L_0x5555766a84c0, L_0x5555766b3010, L_0x5555766a6750;
L_0x5555766b2ae0 .part v0x55557642ec30_0, 2, 1;
L_0x5555766b2b80 .part v0x55557642ec30_0, 1, 1;
L_0x5555766b2c70 .part v0x55557642ec30_0, 0, 1;
S_0x5555765c8c50 .scope module, "wdgrv_regs_inst" "wdgrv_regs" 4 69, 8 2 0, S_0x5555765feea0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "i_clk";
    .port_info 1 /INPUT 1 "i_rst_n";
    .port_info 2 /INPUT 1 "i_wb_cyc";
    .port_info 3 /INPUT 1 "i_wb_stb";
    .port_info 4 /OUTPUT 1 "o_wb_stall";
    .port_info 5 /INPUT 4 "i_wb_adr";
    .port_info 6 /INPUT 1 "i_wb_we";
    .port_info 7 /INPUT 32 "i_wb_dat";
    .port_info 8 /INPUT 4 "i_wb_sel";
    .port_info 9 /OUTPUT 1 "o_wb_ack";
    .port_info 10 /OUTPUT 1 "o_wb_err";
    .port_info 11 /OUTPUT 1 "o_wb_rty";
    .port_info 12 /OUTPUT 32 "o_wb_dat";
    .port_info 13 /OUTPUT 1 "o_wdcsr_wden";
    .port_info 14 /INPUT 1 "i_wdcsr_rvd1";
    .port_info 15 /OUTPUT 1 "o_wdcsr_s1wto";
    .port_info 16 /INPUT 1 "i_wdcsr_s1wto_hw_set";
    .port_info 17 /OUTPUT 1 "o_wdcsr_s1wto_write_trigger";
    .port_info 18 /OUTPUT 1 "o_wdcsr_s2wto";
    .port_info 19 /INPUT 1 "i_wdcsr_s2wto_hw_set";
    .port_info 20 /OUTPUT 1 "o_wdcsr_s2wto_write_trigger";
    .port_info 21 /OUTPUT 10 "o_wdcsr_wtocnt";
    .port_info 22 /INPUT 18 "i_wdcsr_rvd2";
    .port_info 23 /INPUT 32 "i_wdcnt_cnt";
P_0x555576630590 .param/l "ADDRESS_WIDTH" 0 8 3, +C4<00000000000000000000000000000100>;
P_0x5555766305d0 .param/l "BASE_ADDRESS" 0 8 5, C4<0000>;
P_0x555576630610 .param/l "DEFAULT_READ_DATA" 0 8 7, C4<00000000000000000000000000000000>;
P_0x555576630650 .param/l "ERROR_STATUS" 0 8 6, +C4<00000000000000000000000000000000>;
P_0x555576630690 .param/l "INSERT_SLICER" 0 8 8, +C4<00000000000000000000000000000000>;
P_0x5555766306d0 .param/l "PRE_DECODE" 0 8 4, +C4<00000000000000000000000000000000>;
P_0x555576630710 .param/l "USE_STALL" 0 8 9, +C4<00000000000000000000000000000001>;
v0x55557668f620_0 .net "i_clk", 0 0, v0x5555766940a0_0;  alias, 1 drivers
v0x55557668f8f0_0 .net "i_rst_n", 0 0, L_0x5555766b3230;  alias, 1 drivers
v0x55557668f9b0_0 .net "i_wb_adr", 3 0, v0x5555766944f0_0;  alias, 1 drivers
v0x55557668fab0_0 .net "i_wb_cyc", 0 0, v0x5555766945b0_0;  alias, 1 drivers
v0x55557668fb80_0 .net "i_wb_dat", 31 0, v0x555576694710_0;  alias, 1 drivers
v0x55557668fc20_0 .net "i_wb_sel", 3 0, v0x5555766947d0_0;  alias, 1 drivers
v0x55557668fcf0_0 .net "i_wb_stb", 0 0, v0x555576694930_0;  alias, 1 drivers
v0x55557668fdc0_0 .net "i_wb_we", 0 0, v0x5555766949d0_0;  alias, 1 drivers
v0x55557668fe90_0 .net "i_wdcnt_cnt", 31 0, L_0x5555766b2870;  1 drivers
o0x7f7ed8f6e618 .functor BUFZ 1, c4<z>; HiZ drive
v0x55557668ff60_0 .net "i_wdcsr_rvd1", 0 0, o0x7f7ed8f6e618;  0 drivers
o0x7f7ed8f6f3f8 .functor BUFZ 18, c4<zzzzzzzzzzzzzzzzzz>; HiZ drive
v0x555576690030_0 .net "i_wdcsr_rvd2", 17 0, o0x7f7ed8f6f3f8;  0 drivers
v0x555576690100_0 .net "i_wdcsr_s1wto_hw_set", 0 0, L_0x5555766b2b80;  alias, 1 drivers
v0x5555766901a0_0 .net "i_wdcsr_s2wto_hw_set", 0 0, L_0x5555766b2ae0;  alias, 1 drivers
v0x555576690240_0 .net "o_wb_ack", 0 0, L_0x5555766aefa0;  alias, 1 drivers
v0x5555766902e0_0 .net "o_wb_dat", 31 0, L_0x5555766af1a0;  alias, 1 drivers
v0x555576690380_0 .net "o_wb_err", 0 0, L_0x5555766af100;  alias, 1 drivers
v0x555576690450_0 .net "o_wb_rty", 0 0, L_0x7f7ed8bb8b18;  alias, 1 drivers
v0x555576690520_0 .net "o_wb_stall", 0 0, L_0x5555766aee40;  alias, 1 drivers
v0x5555766905f0_0 .net "o_wdcsr_s1wto", 0 0, L_0x5555766a86c0;  1 drivers
v0x5555766906c0_0 .net "o_wdcsr_s1wto_write_trigger", 0 0, L_0x5555766a84c0;  alias, 1 drivers
v0x5555766907b0_0 .net "o_wdcsr_s2wto", 0 0, L_0x5555766a9700;  1 drivers
v0x555576690850_0 .net "o_wdcsr_s2wto_write_trigger", 0 0, L_0x5555766a9500;  alias, 1 drivers
v0x555576690940_0 .net "o_wdcsr_wden", 0 0, L_0x5555766a6750;  alias, 1 drivers
v0x555576690a30_0 .net "o_wdcsr_wtocnt", 9 0, L_0x5555766aa600;  alias, 1 drivers
v0x555576690b20_0 .net "w_register_access", 1 0, L_0x5555766b08a0;  1 drivers
v0x555576690bc0_0 .net "w_register_active", 1 0, L_0x5555766adcf0;  1 drivers
v0x555576690c60_0 .net "w_register_address", 2 0, L_0x5555766b0910;  1 drivers
v0x555576690e10_0 .net "w_register_read_data", 63 0, L_0x5555766aded0;  1 drivers
v0x555576690f00_0 .net "w_register_ready", 1 0, L_0x5555766add90;  1 drivers
v0x555576690ff0_0 .net "w_register_status", 3 0, L_0x5555766ade30;  1 drivers
v0x5555766910e0_0 .net "w_register_strobe", 31 0, L_0x5555766b0a20;  1 drivers
v0x555576691180_0 .net "w_register_valid", 0 0, L_0x5555766b0830;  1 drivers
v0x555576691220_0 .net "w_register_value", 63 0, L_0x5555766adf70;  1 drivers
v0x5555766914d0_0 .net "w_register_write_data", 31 0, L_0x5555766b09b0;  1 drivers
L_0x5555766adcf0 .concat8 [ 1 1 0 0], L_0x555576695ab0, L_0x5555766ad890;
L_0x5555766add90 .concat8 [ 1 1 0 0], L_0x555576695b20, L_0x5555766ad900;
L_0x7f7ed8bb70f0 .functor BUFT 1, C4<00>, C4<0>, C4<0>, C4<0>;
L_0x7f7ed8bb85c0 .functor BUFT 1, C4<00>, C4<0>, C4<0>, C4<0>;
L_0x5555766ade30 .concat8 [ 2 2 0 0], L_0x7f7ed8bb70f0, L_0x7f7ed8bb85c0;
L_0x5555766aded0 .concat8 [ 32 32 0 0], L_0x555576695c60, L_0x5555766ada40;
L_0x5555766adf70 .concat8 [ 32 32 0 0], L_0x555576695de0, L_0x5555766adbc0;
S_0x5555765db370 .scope generate, "g_wdcnt" "g_wdcnt" 8 296, 8 296 0, S_0x5555765c8c50;
 .timescale 0 0;
v0x55557632b8c0_0 .net "w_bit_field_mask", 31 0, L_0x5555766b4670;  1 drivers
v0x55557662af20_0 .net "w_bit_field_read_data", 31 0, L_0x5555766ae550;  1 drivers
v0x55557662afe0_0 .net "w_bit_field_read_valid", 0 0, L_0x5555766ad0f0;  1 drivers
v0x55557662aa10_0 .net "w_bit_field_value", 31 0, L_0x5555766ae610;  1 drivers
v0x55557662aab0_0 .net "w_bit_field_write_data", 31 0, L_0x5555766adb50;  1 drivers
v0x55557662a4e0_0 .net "w_bit_field_write_valid", 0 0, L_0x5555766aca20;  1 drivers
S_0x5555765eda30 .scope generate, "__g_tie_off" "__g_tie_off" 8 304, 8 304 0, S_0x5555765db370;
 .timescale 0 0;
S_0x5555765b8710 .scope generate, "g[0]" "g[0]" 8 306, 8 306 0, S_0x5555765eda30;
 .timescale 0 0;
P_0x5555763d2d30 .param/l "__i" 1 8 306, +C4<00>;
S_0x5555765ed310 .scope generate, "g[1]" "g[1]" 8 306, 8 306 0, S_0x5555765eda30;
 .timescale 0 0;
P_0x55557636d9c0 .param/l "__i" 1 8 306, +C4<01>;
S_0x555576611f00 .scope generate, "g[2]" "g[2]" 8 306, 8 306 0, S_0x5555765eda30;
 .timescale 0 0;
P_0x5555763b1910 .param/l "__i" 1 8 306, +C4<010>;
S_0x555576611410 .scope generate, "g[3]" "g[3]" 8 306, 8 306 0, S_0x5555765eda30;
 .timescale 0 0;
P_0x5555763b1b20 .param/l "__i" 1 8 306, +C4<011>;
S_0x5555766185f0 .scope generate, "g[4]" "g[4]" 8 306, 8 306 0, S_0x5555765eda30;
 .timescale 0 0;
P_0x5555764da9c0 .param/l "__i" 1 8 306, +C4<0100>;
S_0x55557659d310 .scope generate, "g[5]" "g[5]" 8 306, 8 306 0, S_0x5555765eda30;
 .timescale 0 0;
P_0x5555764a82b0 .param/l "__i" 1 8 306, +C4<0101>;
S_0x5555765a3d50 .scope generate, "g[6]" "g[6]" 8 306, 8 306 0, S_0x5555765eda30;
 .timescale 0 0;
P_0x5555764a8140 .param/l "__i" 1 8 306, +C4<0110>;
S_0x5555765c8530 .scope generate, "g[7]" "g[7]" 8 306, 8 306 0, S_0x5555765eda30;
 .timescale 0 0;
P_0x55557636edc0 .param/l "__i" 1 8 306, +C4<0111>;
S_0x5555765dac50 .scope generate, "g[8]" "g[8]" 8 306, 8 306 0, S_0x5555765eda30;
 .timescale 0 0;
P_0x5555764d80e0 .param/l "__i" 1 8 306, +C4<01000>;
S_0x55557664c700 .scope generate, "g[9]" "g[9]" 8 306, 8 306 0, S_0x5555765eda30;
 .timescale 0 0;
P_0x55557649a6d0 .param/l "__i" 1 8 306, +C4<01001>;
S_0x55557664c370 .scope generate, "g[10]" "g[10]" 8 306, 8 306 0, S_0x5555765eda30;
 .timescale 0 0;
P_0x55557646fbe0 .param/l "__i" 1 8 306, +C4<01010>;
S_0x555576631b00 .scope generate, "g[11]" "g[11]" 8 306, 8 306 0, S_0x5555765eda30;
 .timescale 0 0;
P_0x5555764568c0 .param/l "__i" 1 8 306, +C4<01011>;
S_0x55557663f1c0 .scope generate, "g[12]" "g[12]" 8 306, 8 306 0, S_0x5555765eda30;
 .timescale 0 0;
P_0x55557647a5b0 .param/l "__i" 1 8 306, +C4<01100>;
S_0x555576637710 .scope generate, "g[13]" "g[13]" 8 306, 8 306 0, S_0x5555765eda30;
 .timescale 0 0;
P_0x5555763a9270 .param/l "__i" 1 8 306, +C4<01101>;
S_0x555576638540 .scope generate, "g[14]" "g[14]" 8 306, 8 306 0, S_0x5555765eda30;
 .timescale 0 0;
P_0x55557632c1c0 .param/l "__i" 1 8 306, +C4<01110>;
S_0x55557662e730 .scope generate, "g[15]" "g[15]" 8 306, 8 306 0, S_0x5555765eda30;
 .timescale 0 0;
P_0x55557632c0a0 .param/l "__i" 1 8 306, +C4<01111>;
S_0x55557662e340 .scope generate, "g[16]" "g[16]" 8 306, 8 306 0, S_0x5555765eda30;
 .timescale 0 0;
P_0x5555764094d0 .param/l "__i" 1 8 306, +C4<010000>;
S_0x55557662df50 .scope generate, "g[17]" "g[17]" 8 306, 8 306 0, S_0x5555765eda30;
 .timescale 0 0;
P_0x555576440860 .param/l "__i" 1 8 306, +C4<010001>;
S_0x5555765a57b0 .scope generate, "g[18]" "g[18]" 8 306, 8 306 0, S_0x5555765eda30;
 .timescale 0 0;
P_0x555576440fa0 .param/l "__i" 1 8 306, +C4<010010>;
S_0x5555765a53f0 .scope generate, "g[19]" "g[19]" 8 306, 8 306 0, S_0x5555765eda30;
 .timescale 0 0;
P_0x5555763d3290 .param/l "__i" 1 8 306, +C4<010011>;
S_0x5555765a5bd0 .scope generate, "g[20]" "g[20]" 8 306, 8 306 0, S_0x5555765eda30;
 .timescale 0 0;
P_0x55557636d630 .param/l "__i" 1 8 306, +C4<010100>;
S_0x5555765fd660 .scope generate, "g[21]" "g[21]" 8 306, 8 306 0, S_0x5555765eda30;
 .timescale 0 0;
P_0x5555764d7f50 .param/l "__i" 1 8 306, +C4<010101>;
S_0x5555765fc520 .scope generate, "g[22]" "g[22]" 8 306, 8 306 0, S_0x5555765eda30;
 .timescale 0 0;
P_0x55557662f210 .param/l "__i" 1 8 306, +C4<010110>;
S_0x5555765b6ed0 .scope generate, "g[23]" "g[23]" 8 306, 8 306 0, S_0x5555765eda30;
 .timescale 0 0;
P_0x55557664b240 .param/l "__i" 1 8 306, +C4<010111>;
S_0x5555765ec1f0 .scope generate, "g[24]" "g[24]" 8 306, 8 306 0, S_0x5555765eda30;
 .timescale 0 0;
P_0x5555765cef10 .param/l "__i" 1 8 306, +C4<011000>;
S_0x5555765eb0b0 .scope generate, "g[25]" "g[25]" 8 306, 8 306 0, S_0x5555765eda30;
 .timescale 0 0;
P_0x55557662f360 .param/l "__i" 1 8 306, +C4<011001>;
S_0x5555765d9b30 .scope generate, "g[26]" "g[26]" 8 306, 8 306 0, S_0x5555765eda30;
 .timescale 0 0;
P_0x5555763a9950 .param/l "__i" 1 8 306, +C4<011010>;
S_0x5555765d89f0 .scope generate, "g[27]" "g[27]" 8 306, 8 306 0, S_0x5555765eda30;
 .timescale 0 0;
P_0x55557661fcd0 .param/l "__i" 1 8 306, +C4<011011>;
S_0x55557660e4a0 .scope generate, "g[28]" "g[28]" 8 306, 8 306 0, S_0x5555765eda30;
 .timescale 0 0;
P_0x55557661db80 .param/l "__i" 1 8 306, +C4<011100>;
S_0x555576603960 .scope generate, "g[29]" "g[29]" 8 306, 8 306 0, S_0x5555765eda30;
 .timescale 0 0;
P_0x55557662d2d0 .param/l "__i" 1 8 306, +C4<011101>;
S_0x5555765c73b0 .scope generate, "g[30]" "g[30]" 8 306, 8 306 0, S_0x5555765eda30;
 .timescale 0 0;
P_0x55557662c930 .param/l "__i" 1 8 306, +C4<011110>;
S_0x5555765bca50 .scope generate, "g[31]" "g[31]" 8 306, 8 306 0, S_0x5555765eda30;
 .timescale 0 0;
P_0x55557662cdc0 .param/l "__i" 1 8 306, +C4<011111>;
S_0x55557661a050 .scope generate, "g_cnt" "g_cnt" 8 331, 8 331 0, S_0x5555765db370;
 .timescale 0 0;
S_0x555576619c90 .scope module, "u_bit_field" "rggen_bit_field" 8 337, 9 2 0, S_0x55557661a050;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "i_clk";
    .port_info 1 /INPUT 1 "i_rst_n";
    .port_info 2 /INPUT 1 "i_sw_write_valid";
    .port_info 3 /INPUT 1 "i_sw_write_enable";
    .port_info 4 /INPUT 1 "i_sw_read_valid";
    .port_info 5 /INPUT 32 "i_sw_mask";
    .port_info 6 /INPUT 32 "i_sw_write_data";
    .port_info 7 /OUTPUT 32 "o_sw_read_data";
    .port_info 8 /OUTPUT 32 "o_sw_value";
    .port_info 9 /OUTPUT 1 "o_write_trigger";
    .port_info 10 /OUTPUT 1 "o_read_trigger";
    .port_info 11 /INPUT 1 "i_hw_write_enable";
    .port_info 12 /INPUT 32 "i_hw_write_data";
    .port_info 13 /INPUT 32 "i_hw_set";
    .port_info 14 /INPUT 32 "i_hw_clear";
    .port_info 15 /INPUT 32 "i_value";
    .port_info 16 /INPUT 32 "i_mask";
    .port_info 17 /OUTPUT 32 "o_value";
    .port_info 18 /OUTPUT 32 "o_value_unmasked";
P_0x555576499770 .param/l "EXTERNAL_MASK" 0 9 17, C4<0>;
P_0x5555764997b0 .param/l "EXTERNAL_READ_DATA" 0 9 16, +C4<00000000000000000000000000000001>;
P_0x5555764997f0 .param/l "HW_ACCESS" 0 9 12, C4<000>;
P_0x555576499830 .param/l "HW_CLEAR_WIDTH" 0 9 14, +C4<00000000000000000000000000100000>;
P_0x555576499870 .param/l "HW_SET_WIDTH" 0 9 13, +C4<00000000000000000000000000100000>;
P_0x5555764998b0 .param/l "HW_WRITE_ENABLE_POLARITY" 0 9 11, C4<1>;
P_0x5555764998f0 .param/l "INITIAL_VALUE" 0 9 4, C4<00000000000000000000000000000000>;
P_0x555576499930 .param/l "PRECEDENCE_ACCESS" 0 9 5, +C4<00000000000000000000000000000001>;
P_0x555576499970 .param/l "STORAGE" 0 9 15, +C4<00000000000000000000000000000000>;
P_0x5555764999b0 .param/l "SW_READABLE" 1 9 41, C4<1>;
P_0x5555764999f0 .param/l "SW_READ_ACTION" 0 9 6, +C4<00000000000000000000000000000001>;
P_0x555576499a30 .param/l "SW_READ_UPDATE" 1 9 42, C4<0>;
P_0x555576499a70 .param/l "SW_WRITABLE" 1 9 40, C4<1>;
P_0x555576499ab0 .param/l "SW_WRITE_ACTION" 0 9 7, +C4<00000000000000000000000000000001>;
P_0x555576499af0 .param/l "SW_WRITE_CONTROL" 0 9 8, C4<0>;
P_0x555576499b30 .param/l "SW_WRITE_ENABLE_POLARITY" 0 9 10, C4<1>;
P_0x555576499b70 .param/l "SW_WRITE_ONCE" 0 9 9, C4<0>;
P_0x555576499bb0 .param/l "TRIGGER" 0 9 18, +C4<00000000000000000000000000000000>;
P_0x555576499bf0 .param/l "WIDTH" 0 9 3, +C4<00000000000000000000000000100000>;
L_0x5555766ae550 .functor BUFZ 32, L_0x5555766ae4e0, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0x5555766ae610 .functor BUFZ 32, L_0x5555766ae420, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0x5555766ae860 .functor BUFZ 32, L_0x5555766ae420, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0x5555766ae8d0 .functor BUFZ 32, L_0x5555766ae420, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
v0x5555765ff280_0 .net "i_clk", 0 0, v0x5555766940a0_0;  alias, 1 drivers
L_0x7f7ed8bb8a88 .functor BUFT 1, C4<00000000000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x5555765ff620_0 .net "i_hw_clear", 31 0, L_0x7f7ed8bb8a88;  1 drivers
L_0x7f7ed8bb8a40 .functor BUFT 1, C4<00000000000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x55557659e840_0 .net "i_hw_set", 31 0, L_0x7f7ed8bb8a40;  1 drivers
L_0x7f7ed8bb89f8 .functor BUFT 1, C4<00000000000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x555576576270_0 .net "i_hw_write_data", 31 0, L_0x7f7ed8bb89f8;  1 drivers
L_0x7f7ed8bb89b0 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x5555765a2030_0 .net "i_hw_write_enable", 0 0, L_0x7f7ed8bb89b0;  1 drivers
L_0x7f7ed8bb8ad0 .functor BUFT 1, C4<11111111111111111111111111111111>, C4<0>, C4<0>, C4<0>;
v0x5555765a2bf0_0 .net "i_mask", 31 0, L_0x7f7ed8bb8ad0;  1 drivers
v0x5555765a5f60_0 .net "i_rst_n", 0 0, L_0x5555766b3230;  alias, 1 drivers
v0x5555765a6f40_0 .net "i_sw_mask", 31 0, L_0x5555766b4670;  alias, 1 drivers
v0x5555765a7550_0 .net "i_sw_read_valid", 0 0, L_0x5555766ad0f0;  alias, 1 drivers
v0x55557662d680_0 .net "i_sw_write_data", 31 0, L_0x5555766adb50;  alias, 1 drivers
L_0x7f7ed8bb8968 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x55557663e3f0_0 .net "i_sw_write_enable", 0 0, L_0x7f7ed8bb8968;  1 drivers
v0x55557663fb80_0 .net "i_sw_write_valid", 0 0, L_0x5555766aca20;  alias, 1 drivers
v0x55557661d730_0 .net "i_value", 31 0, L_0x5555766b2870;  alias, 1 drivers
v0x55557653fee0_0 .net "o_read_trigger", 0 0, L_0x5555766ae7c0;  1 drivers
v0x5555765ce160_0 .net "o_sw_read_data", 31 0, L_0x5555766ae550;  alias, 1 drivers
v0x5555765e0820_0 .net "o_sw_value", 31 0, L_0x5555766ae610;  alias, 1 drivers
v0x555576644ca0_0 .net "o_value", 31 0, L_0x5555766ae860;  1 drivers
v0x555576642130_0 .net "o_value_unmasked", 31 0, L_0x5555766ae8d0;  1 drivers
v0x555576641e60_0 .net "o_write_trigger", 0 0, L_0x5555766ae6d0;  1 drivers
L_0x7f7ed8bb8848 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x555576641f20_0 .net "w_hw_update", 0 0, L_0x7f7ed8bb8848;  1 drivers
v0x5555765a39a0_0 .net "w_read_data", 31 0, L_0x5555766ae4e0;  1 drivers
v0x5555765a3a60_0 .net "w_sw_update", 1 0, L_0x5555766ae010;  1 drivers
L_0x7f7ed8bb8890 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x5555765eada0_0 .net "w_sw_write_done", 0 0, L_0x7f7ed8bb8890;  1 drivers
v0x5555765eae60_0 .net "w_trigger", 1 0, L_0x5555766ae2e0;  1 drivers
v0x5555765d86e0_0 .net "w_value", 31 0, L_0x5555766ae420;  1 drivers
L_0x7f7ed8bb87b8 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x5555766ae010 .concat8 [ 1 1 0 0], L_0x7f7ed8bb87b8, L_0x5555766ae150;
L_0x7f7ed8bb88d8 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x7f7ed8bb8920 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x5555766ae2e0 .concat8 [ 1 1 0 0], L_0x7f7ed8bb88d8, L_0x7f7ed8bb8920;
L_0x5555766ae6d0 .part L_0x5555766ae2e0, 0, 1;
L_0x5555766ae7c0 .part L_0x5555766ae2e0, 1, 1;
S_0x5555764a64f0 .scope generate, "g_read_data" "g_read_data" 9 382, 9 382 0, S_0x555576619c90;
 .timescale 0 0;
L_0x5555766ae4e0 .functor BUFZ 32, L_0x5555766b2870, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
S_0x55557661a470 .scope generate, "g_read_trigger" "g_read_trigger" 9 304, 9 304 0, S_0x555576619c90;
 .timescale 0 0;
v0x55557632c650_0 .net/2u *"_ivl_0", 0 0, L_0x7f7ed8bb8920;  1 drivers
S_0x55557662b5c0 .scope generate, "g_sw_read_update" "g_sw_read_update" 9 245, 9 245 0, S_0x555576619c90;
 .timescale 0 0;
v0x5555765b9eb0_0 .net/2u *"_ivl_0", 0 0, L_0x7f7ed8bb87b8;  1 drivers
S_0x55557659f260 .scope generate, "g_sw_write_done" "g_sw_write_done" 9 268, 9 268 0, S_0x555576619c90;
 .timescale 0 0;
S_0x5555765a0810 .scope generate, "g_sw_write_update" "g_sw_write_update" 9 252, 9 252 0, S_0x555576619c90;
 .timescale 0 0;
v0x5555765c9b60_0 .net *"_ivl_0", 31 0, L_0x5555766ae0b0;  1 drivers
L_0x7f7ed8bb8800 .functor BUFT 1, C4<0000000000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x5555765c9020_0 .net *"_ivl_3", 30 0, L_0x7f7ed8bb8800;  1 drivers
v0x5555765c93b0_0 .net *"_ivl_5", 0 0, L_0x5555766ae150;  1 drivers
L_0x5555766ae0b0 .concat [ 1 31 0 0], L_0x5555766aca20, L_0x7f7ed8bb8800;
L_0x5555766ae150 .ufunc/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcnt.g_cnt.u_bit_field.get_sw_write_update, 1, L_0x5555766ae0b0, L_0x7f7ed8bb8968, L_0x7f7ed8bb8890 (v0x555576600220_0, v0x5555765ffe80_0, v0x5555765ffa50_0) S_0x5555765a8080;
S_0x555576613a70 .scope generate, "g_value" "g_value" 9 323, 9 323 0, S_0x555576619c90;
 .timescale 0 0;
L_0x5555766ae420 .functor BUFZ 32, L_0x5555766b2870, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
S_0x5555766150b0 .scope generate, "g_write_trigger" "g_write_trigger" 9 287, 9 287 0, S_0x555576619c90;
 .timescale 0 0;
v0x555576602d00_0 .net/2u *"_ivl_0", 0 0, L_0x7f7ed8bb88d8;  1 drivers
S_0x55557664ca30 .scope generate, "genblk3" "genblk3" 9 259, 9 259 0, S_0x555576619c90;
 .timescale 0 0;
S_0x55557664a370 .scope autofunction.vec4.s32, "get_hw_next_value" "get_hw_next_value" 9 177, 9 177 0, S_0x555576619c90;
 .timescale 0 0;
v0x555576600640_0 .var "clear", 31 0;
v0x555576610520_0 .var "current_value", 31 0;
; Variable get_hw_next_value is vec4 return value of scope S_0x55557664a370
v0x5555766101c0_0 .var/i "i", 31 0;
v0x5555765c9f50_0 .var "set", 31 0;
v0x5555765cd350 .array "set_clear", 1 0, 31 0;
v0x5555765dbe90_0 .var "value", 31 0;
v0x5555765dc220_0 .var "write_data", 31 0;
v0x5555765db710_0 .var "write_enable", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcnt.g_cnt.u_bit_field.get_hw_next_value ;
    %pushi/vec4 0, 0, 32;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x5555765cd350, 4, 0;
    %pushi/vec4 0, 0, 32;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x5555765cd350, 4, 0;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555766101c0_0, 0, 32;
T_0.0 ; Top of for-loop
    %load/vec4 v0x5555766101c0_0;
    %cmpi/s 32, 0, 32;
	  %jmp/0xz T_0.1, 5;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x5555765cd350, 4;
    %load/vec4 v0x5555766101c0_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_0.3, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x5555766101c0_0;
    %store/vec4 v0x5555765dbe90_0, 4, 1;
    %jmp T_0.4;
T_0.3 ;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x5555765cd350, 4;
    %load/vec4 v0x5555766101c0_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_0.5, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x5555766101c0_0;
    %store/vec4 v0x5555765dbe90_0, 4, 1;
    %jmp T_0.6;
T_0.5 ;
    %load/vec4 v0x555576610520_0;
    %load/vec4 v0x5555766101c0_0;
    %part/s 1;
    %ix/getv/s 4, v0x5555766101c0_0;
    %store/vec4 v0x5555765dbe90_0, 4, 1;
T_0.6 ;
T_0.4 ;
T_0.2 ; for-loop step statement
    %load/vec4 v0x5555766101c0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555766101c0_0, 0, 32;
    %jmp T_0.0;
T_0.1 ; for-loop exit label
    %load/vec4 v0x5555765dbe90_0;
    %ret/vec4 0, 0, 32;  Assign to get_hw_next_value (store_vec4_to_lval)
    %end;
S_0x555576645a20 .scope autofunction.vec4.s1, "get_hw_update" "get_hw_update" 9 72, 9 72 0, S_0x555576619c90;
 .timescale 0 0;
v0x5555765dba70_0 .var "clear", 31 0;
; Variable get_hw_update is vec4 return value of scope S_0x555576645a20
v0x5555765dfa10_0 .var "set", 31 0;
v0x5555765ee550_0 .var "update", 2 0;
v0x5555765ee8e0_0 .var "write_enable", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcnt.g_cnt.u_bit_field.get_hw_update ;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x5555765ee550_0, 4, 1;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x5555765ee550_0, 4, 1;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 2, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x5555765ee550_0, 4, 1;
    %load/vec4 v0x5555765ee550_0;
    %parti/s 1, 0, 2;
    %flag_set/vec4 8;
    %jmp/1 T_1.8, 8;
    %load/vec4 v0x5555765ee550_0;
    %parti/s 1, 1, 2;
    %flag_set/vec4 9;
    %flag_or 8, 9;
T_1.8;
    %flag_get/vec4 8;
    %jmp/1 T_1.7, 8;
    %load/vec4 v0x5555765ee550_0;
    %parti/s 1, 2, 3;
    %or;
T_1.7;
    %ret/vec4 0, 0, 1;  Assign to get_hw_update (store_vec4_to_lval)
    %end;
S_0x5555765a8700 .scope autofunction.vec4.s32, "get_sw_read_next_value" "get_sw_read_next_value" 9 86, 9 86 0, S_0x555576619c90;
 .timescale 0 0;
v0x5555765eddd0_0 .var "current_value", 31 0;
; Variable get_sw_read_next_value is vec4 return value of scope S_0x5555765a8700
v0x5555765aad20_0 .var "mask", 31 0;
v0x5555765a8e80_0 .var "value", 31 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcnt.g_cnt.u_bit_field.get_sw_read_next_value ;
    %pushi/vec4 1, 0, 32;
    %dup/vec4;
    %pushi/vec4 2, 0, 32;
    %cmp/u;
    %jmp/1 T_2.9, 6;
    %dup/vec4;
    %pushi/vec4 3, 0, 32;
    %cmp/u;
    %jmp/1 T_2.10, 6;
    %load/vec4 v0x5555765eddd0_0;
    %store/vec4 v0x5555765a8e80_0, 0, 32;
    %jmp T_2.12;
T_2.9 ;
    %load/vec4 v0x5555765aad20_0;
    %cmpi/ne 0, 0, 32;
    %flag_mov 8, 4;
    %jmp/0 T_2.13, 8;
    %pushi/vec4 0, 0, 32;
    %jmp/1 T_2.14, 8;
T_2.13 ; End of true expr.
    %load/vec4 v0x5555765eddd0_0;
    %jmp/0 T_2.14, 8;
 ; End of false expr.
    %blend;
T_2.14;
    %store/vec4 v0x5555765a8e80_0, 0, 32;
    %jmp T_2.12;
T_2.10 ;
    %load/vec4 v0x5555765aad20_0;
    %cmpi/ne 0, 0, 32;
    %flag_mov 8, 4;
    %jmp/0 T_2.15, 8;
    %pushi/vec4 4294967295, 0, 32;
    %jmp/1 T_2.16, 8;
T_2.15 ; End of true expr.
    %load/vec4 v0x5555765eddd0_0;
    %jmp/0 T_2.16, 8;
 ; End of false expr.
    %blend;
T_2.16;
    %store/vec4 v0x5555765a8e80_0, 0, 32;
    %jmp T_2.12;
T_2.12 ;
    %pop/vec4 1;
    %load/vec4 v0x5555765a8e80_0;
    %ret/vec4 0, 0, 32;  Assign to get_sw_read_next_value (store_vec4_to_lval)
    %end;
S_0x5555765a8380 .scope autofunction.vec4.s32, "get_sw_write_next_value" "get_sw_write_next_value" 9 101, 9 101 0, S_0x555576619c90;
 .timescale 0 0;
v0x5555765b9290_0 .var "current_value", 31 0;
; Variable get_sw_write_next_value is vec4 return value of scope S_0x5555765a8380
v0x5555765b9a40_0 .var/i "i", 31 0;
v0x5555765b8ae0_0 .var "mask", 31 0;
v0x5555765b8e70_0 .var "value", 31 0;
v0x5555765f1350_0 .var "write_data", 31 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcnt.g_cnt.u_bit_field.get_sw_write_next_value ;
    %load/vec4 v0x5555765b9290_0;
    %store/vec4 v0x5555765b8e70_0, 0, 32;
    %pushi/vec4 1, 0, 32;
    %dup/vec4;
    %pushi/vec4 1, 0, 32;
    %cmp/u;
    %jmp/1 T_3.17, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 32;
    %cmp/u;
    %jmp/1 T_3.18, 6;
    %dup/vec4;
    %pushi/vec4 3, 0, 32;
    %cmp/u;
    %jmp/1 T_3.19, 6;
    %dup/vec4;
    %pushi/vec4 4, 0, 32;
    %cmp/u;
    %jmp/1 T_3.20, 6;
    %dup/vec4;
    %pushi/vec4 5, 0, 32;
    %cmp/u;
    %jmp/1 T_3.21, 6;
    %dup/vec4;
    %pushi/vec4 6, 0, 32;
    %cmp/u;
    %jmp/1 T_3.22, 6;
    %dup/vec4;
    %pushi/vec4 7, 0, 32;
    %cmp/u;
    %jmp/1 T_3.23, 6;
    %dup/vec4;
    %pushi/vec4 8, 0, 32;
    %cmp/u;
    %jmp/1 T_3.24, 6;
    %dup/vec4;
    %pushi/vec4 9, 0, 32;
    %cmp/u;
    %jmp/1 T_3.25, 6;
    %jmp T_3.27;
T_3.17 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555765b9a40_0, 0, 32;
T_3.28 ; Top of for-loop
    %load/vec4 v0x5555765b9a40_0;
    %cmpi/s 32, 0, 32;
	  %jmp/0xz T_3.29, 5;
    %load/vec4 v0x5555765b8ae0_0;
    %load/vec4 v0x5555765b9a40_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_3.31, 8;
    %load/vec4 v0x5555765f1350_0;
    %load/vec4 v0x5555765b9a40_0;
    %part/s 1;
    %ix/getv/s 4, v0x5555765b9a40_0;
    %store/vec4 v0x5555765b8e70_0, 4, 1;
T_3.31 ;
T_3.30 ; for-loop step statement
    %load/vec4 v0x5555765b9a40_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555765b9a40_0, 0, 32;
    %jmp T_3.28;
T_3.29 ; for-loop exit label
    %jmp T_3.27;
T_3.18 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555765b9a40_0, 0, 32;
T_3.33 ; Top of for-loop
    %load/vec4 v0x5555765b9a40_0;
    %cmpi/s 32, 0, 32;
	  %jmp/0xz T_3.34, 5;
    %load/vec4 v0x5555765b8ae0_0;
    %load/vec4 v0x5555765b9a40_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_3.38, 9;
    %load/vec4 v0x5555765f1350_0;
    %load/vec4 v0x5555765b9a40_0;
    %part/s 1;
    %nor/r;
    %and;
T_3.38;
    %flag_set/vec4 8;
    %jmp/0xz  T_3.36, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x5555765b9a40_0;
    %store/vec4 v0x5555765b8e70_0, 4, 1;
T_3.36 ;
T_3.35 ; for-loop step statement
    %load/vec4 v0x5555765b9a40_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555765b9a40_0, 0, 32;
    %jmp T_3.33;
T_3.34 ; for-loop exit label
    %jmp T_3.27;
T_3.19 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555765b9a40_0, 0, 32;
T_3.39 ; Top of for-loop
    %load/vec4 v0x5555765b9a40_0;
    %cmpi/s 32, 0, 32;
	  %jmp/0xz T_3.40, 5;
    %load/vec4 v0x5555765b8ae0_0;
    %load/vec4 v0x5555765b9a40_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_3.44, 9;
    %load/vec4 v0x5555765f1350_0;
    %load/vec4 v0x5555765b9a40_0;
    %part/s 1;
    %and;
T_3.44;
    %flag_set/vec4 8;
    %jmp/0xz  T_3.42, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x5555765b9a40_0;
    %store/vec4 v0x5555765b8e70_0, 4, 1;
T_3.42 ;
T_3.41 ; for-loop step statement
    %load/vec4 v0x5555765b9a40_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555765b9a40_0, 0, 32;
    %jmp T_3.39;
T_3.40 ; for-loop exit label
    %jmp T_3.27;
T_3.20 ;
    %load/vec4 v0x5555765b8ae0_0;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_3.45, 4;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555765b8e70_0, 0, 32;
T_3.45 ;
    %jmp T_3.27;
T_3.21 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555765b9a40_0, 0, 32;
T_3.47 ; Top of for-loop
    %load/vec4 v0x5555765b9a40_0;
    %cmpi/s 32, 0, 32;
	  %jmp/0xz T_3.48, 5;
    %load/vec4 v0x5555765b8ae0_0;
    %load/vec4 v0x5555765b9a40_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_3.52, 9;
    %load/vec4 v0x5555765f1350_0;
    %load/vec4 v0x5555765b9a40_0;
    %part/s 1;
    %nor/r;
    %and;
T_3.52;
    %flag_set/vec4 8;
    %jmp/0xz  T_3.50, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x5555765b9a40_0;
    %store/vec4 v0x5555765b8e70_0, 4, 1;
T_3.50 ;
T_3.49 ; for-loop step statement
    %load/vec4 v0x5555765b9a40_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555765b9a40_0, 0, 32;
    %jmp T_3.47;
T_3.48 ; for-loop exit label
    %jmp T_3.27;
T_3.22 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555765b9a40_0, 0, 32;
T_3.53 ; Top of for-loop
    %load/vec4 v0x5555765b9a40_0;
    %cmpi/s 32, 0, 32;
	  %jmp/0xz T_3.54, 5;
    %load/vec4 v0x5555765b8ae0_0;
    %load/vec4 v0x5555765b9a40_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_3.58, 9;
    %load/vec4 v0x5555765f1350_0;
    %load/vec4 v0x5555765b9a40_0;
    %part/s 1;
    %and;
T_3.58;
    %flag_set/vec4 8;
    %jmp/0xz  T_3.56, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x5555765b9a40_0;
    %store/vec4 v0x5555765b8e70_0, 4, 1;
T_3.56 ;
T_3.55 ; for-loop step statement
    %load/vec4 v0x5555765b9a40_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555765b9a40_0, 0, 32;
    %jmp T_3.53;
T_3.54 ; for-loop exit label
    %jmp T_3.27;
T_3.23 ;
    %load/vec4 v0x5555765b8ae0_0;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_3.59, 4;
    %pushi/vec4 4294967295, 0, 32;
    %store/vec4 v0x5555765b8e70_0, 0, 32;
T_3.59 ;
    %jmp T_3.27;
T_3.24 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555765b9a40_0, 0, 32;
T_3.61 ; Top of for-loop
    %load/vec4 v0x5555765b9a40_0;
    %cmpi/s 32, 0, 32;
	  %jmp/0xz T_3.62, 5;
    %load/vec4 v0x5555765b8ae0_0;
    %load/vec4 v0x5555765b9a40_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_3.66, 9;
    %load/vec4 v0x5555765f1350_0;
    %load/vec4 v0x5555765b9a40_0;
    %part/s 1;
    %nor/r;
    %and;
T_3.66;
    %flag_set/vec4 8;
    %jmp/0xz  T_3.64, 8;
    %load/vec4 v0x5555765b9290_0;
    %load/vec4 v0x5555765b9a40_0;
    %part/s 1;
    %inv;
    %ix/getv/s 4, v0x5555765b9a40_0;
    %store/vec4 v0x5555765b8e70_0, 4, 1;
T_3.64 ;
T_3.63 ; for-loop step statement
    %load/vec4 v0x5555765b9a40_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555765b9a40_0, 0, 32;
    %jmp T_3.61;
T_3.62 ; for-loop exit label
    %jmp T_3.27;
T_3.25 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555765b9a40_0, 0, 32;
T_3.67 ; Top of for-loop
    %load/vec4 v0x5555765b9a40_0;
    %cmpi/s 32, 0, 32;
	  %jmp/0xz T_3.68, 5;
    %load/vec4 v0x5555765b8ae0_0;
    %load/vec4 v0x5555765b9a40_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_3.72, 9;
    %load/vec4 v0x5555765f1350_0;
    %load/vec4 v0x5555765b9a40_0;
    %part/s 1;
    %and;
T_3.72;
    %flag_set/vec4 8;
    %jmp/0xz  T_3.70, 8;
    %load/vec4 v0x5555765b9290_0;
    %load/vec4 v0x5555765b9a40_0;
    %part/s 1;
    %inv;
    %ix/getv/s 4, v0x5555765b9a40_0;
    %store/vec4 v0x5555765b8e70_0, 4, 1;
T_3.70 ;
T_3.69 ; for-loop step statement
    %load/vec4 v0x5555765b9a40_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555765b9a40_0, 0, 32;
    %jmp T_3.67;
T_3.68 ; for-loop exit label
    %jmp T_3.27;
T_3.27 ;
    %pop/vec4 1;
    %load/vec4 v0x5555765b8e70_0;
    %ret/vec4 0, 0, 32;  Assign to get_sw_write_next_value (store_vec4_to_lval)
    %end;
S_0x5555765a8080 .scope autofunction.vec4.s1, "get_sw_write_update" "get_sw_write_update" 9 47, 9 47 0, S_0x555576619c90;
 .timescale 0 0;
; Variable get_sw_write_update is vec4 return value of scope S_0x5555765a8080
v0x5555765fc240_0 .var "update", 2 0;
v0x5555765ffa50_0 .var "write_done", 0 0;
v0x5555765ffe80_0 .var "write_enable", 0 0;
v0x555576600220_0 .var "write_valid", 31 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcnt.g_cnt.u_bit_field.get_sw_write_update ;
    %load/vec4 v0x555576600220_0;
    %pad/u 1;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x5555765fc240_0, 4, 1;
    %pushi/vec4 1, 0, 1;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x5555765fc240_0, 4, 1;
    %pushi/vec4 1, 0, 1;
    %ix/load 4, 2, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x5555765fc240_0, 4, 1;
    %load/vec4 v0x5555765fc240_0;
    %parti/s 1, 0, 2;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_4.74, 9;
    %load/vec4 v0x5555765fc240_0;
    %parti/s 1, 1, 2;
    %and;
T_4.74;
    %flag_set/vec4 8;
    %flag_get/vec4 8;
    %jmp/0 T_4.73, 8;
    %load/vec4 v0x5555765fc240_0;
    %parti/s 1, 2, 3;
    %and;
T_4.73;
    %ret/vec4 0, 0, 1;  Assign to get_sw_write_update (store_vec4_to_lval)
    %end;
S_0x55557661d0c0 .scope module, "u_register" "rggen_default_register" 8 311, 10 1 0, S_0x5555765db370;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "i_clk";
    .port_info 1 /INPUT 1 "i_rst_n";
    .port_info 2 /INPUT 1 "i_register_valid";
    .port_info 3 /INPUT 2 "i_register_access";
    .port_info 4 /INPUT 3 "i_register_address";
    .port_info 5 /INPUT 32 "i_register_write_data";
    .port_info 6 /INPUT 32 "i_register_strobe";
    .port_info 7 /OUTPUT 1 "o_register_active";
    .port_info 8 /OUTPUT 1 "o_register_ready";
    .port_info 9 /OUTPUT 2 "o_register_status";
    .port_info 10 /OUTPUT 32 "o_register_read_data";
    .port_info 11 /OUTPUT 32 "o_register_value";
    .port_info 12 /OUTPUT 1 "o_bit_field_write_valid";
    .port_info 13 /OUTPUT 1 "o_bit_field_read_valid";
    .port_info 14 /OUTPUT 32 "o_bit_field_mask";
    .port_info 15 /OUTPUT 32 "o_bit_field_write_data";
    .port_info 16 /INPUT 32 "i_bit_field_read_data";
    .port_info 17 /INPUT 32 "i_bit_field_value";
P_0x55557661cdf0 .param/l "ADDRESS_WIDTH" 0 10 4, +C4<00000000000000000000000000000011>;
P_0x55557661ce30 .param/l "BUS_WIDTH" 0 10 6, +C4<00000000000000000000000000100000>;
P_0x55557661ce70 .param/l "DATA_WIDTH" 0 10 7, +C4<00000000000000000000000000100000>;
P_0x55557661ceb0 .param/l "OFFSET_ADDRESS" 0 10 5, C4<100>;
P_0x55557661cef0 .param/l "READABLE" 0 10 2, +C4<00000000000000000000000000000001>;
P_0x55557661cf30 .param/l "WRITABLE" 0 10 3, +C4<00000000000000000000000000000000>;
v0x5555765a8a60_0 .net "i_bit_field_read_data", 31 0, L_0x5555766ae550;  alias, 1 drivers
v0x5555766027e0_0 .net "i_bit_field_value", 31 0, L_0x5555766ae610;  alias, 1 drivers
v0x5555766028a0_0 .net "i_clk", 0 0, v0x5555766940a0_0;  alias, 1 drivers
v0x5555765c82d0_0 .net "i_register_access", 1 0, L_0x5555766b08a0;  alias, 1 drivers
v0x5555765c7f80_0 .net "i_register_address", 2 0, L_0x5555766b0910;  alias, 1 drivers
v0x5555765c7940_0 .net "i_register_strobe", 31 0, L_0x5555766b0a20;  alias, 1 drivers
v0x5555765c7a00_0 .net "i_register_valid", 0 0, L_0x5555766b0830;  alias, 1 drivers
v0x5555765c6d10_0 .net "i_register_write_data", 31 0, L_0x5555766b09b0;  alias, 1 drivers
v0x5555765c6db0_0 .net "i_rst_n", 0 0, L_0x5555766b3230;  alias, 1 drivers
v0x5555765c6890_0 .net "o_bit_field_mask", 31 0, L_0x5555766b4670;  alias, 1 drivers
v0x5555765c62d0_0 .net "o_bit_field_read_valid", 0 0, L_0x5555766ad0f0;  alias, 1 drivers
v0x5555765c6370_0 .net "o_bit_field_write_data", 31 0, L_0x5555766adb50;  alias, 1 drivers
v0x5555765bb880_0 .net "o_bit_field_write_valid", 0 0, L_0x5555766aca20;  alias, 1 drivers
v0x5555766197e0_0 .net "o_register_active", 0 0, L_0x5555766ad890;  1 drivers
v0x555576619880_0 .net "o_register_read_data", 31 0, L_0x5555766ada40;  1 drivers
v0x555576618b20_0 .net "o_register_ready", 0 0, L_0x5555766ad900;  1 drivers
v0x555576618bc0_0 .net "o_register_status", 1 0, L_0x7f7ed8bb85c0;  1 drivers
v0x5555766122f0_0 .net "o_register_value", 31 0, L_0x5555766adbc0;  1 drivers
S_0x5555766313e0 .scope module, "u_register_common" "rggen_register_common" 10 35, 11 2 0, S_0x55557661d0c0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "i_clk";
    .port_info 1 /INPUT 1 "i_rst_n";
    .port_info 2 /INPUT 1 "i_register_valid";
    .port_info 3 /INPUT 2 "i_register_access";
    .port_info 4 /INPUT 3 "i_register_address";
    .port_info 5 /INPUT 32 "i_register_write_data";
    .port_info 6 /INPUT 32 "i_register_strobe";
    .port_info 7 /OUTPUT 1 "o_register_active";
    .port_info 8 /OUTPUT 1 "o_register_ready";
    .port_info 9 /OUTPUT 2 "o_register_status";
    .port_info 10 /OUTPUT 32 "o_register_read_data";
    .port_info 11 /OUTPUT 32 "o_register_value";
    .port_info 12 /INPUT 1 "i_additional_match";
    .port_info 13 /OUTPUT 1 "o_bit_field_write_valid";
    .port_info 14 /OUTPUT 1 "o_bit_field_read_valid";
    .port_info 15 /OUTPUT 32 "o_bit_field_mask";
    .port_info 16 /OUTPUT 32 "o_bit_field_write_data";
    .port_info 17 /INPUT 32 "i_bit_field_read_data";
    .port_info 18 /INPUT 32 "i_bit_field_value";
P_0x5555764d7980 .param/l "ADDRESS_WIDTH" 0 11 5, +C4<00000000000000000000000000000011>;
P_0x5555764d79c0 .param/l "BUS_BYTE_WIDTH" 1 11 32, +C4<00000000000000000000000000000100>;
P_0x5555764d7a00 .param/l "BUS_WIDTH" 0 11 7, +C4<00000000000000000000000000100000>;
P_0x5555764d7a40 .param/l "DATA_BYTE_WIDTH" 1 11 33, +C4<00000000000000000000000000000100>;
P_0x5555764d7a80 .param/l "DATA_WIDTH" 0 11 8, +C4<00000000000000000000000000100000>;
P_0x5555764d7ac0 .param/l "OFFSET_ADDRESS" 0 11 6, C4<100>;
P_0x5555764d7b00 .param/l "READABLE" 0 11 3, +C4<00000000000000000000000000000001>;
P_0x5555764d7b40 .param/l "USE_ADDITIONAL_MATCH" 0 11 9, C4<0>;
P_0x5555764d7b80 .param/l "WORDS" 1 11 31, +C4<00000000000000000000000000000001>;
P_0x5555764d7bc0 .param/l "WRITABLE" 0 11 4, +C4<00000000000000000000000000000000>;
L_0x7f7ed8bb8650 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x5555766ac8d0 .functor OR 1, L_0x5555766ad290, L_0x7f7ed8bb8650, C4<0>, C4<0>;
L_0x5555766ac940 .functor AND 1, L_0x5555766ac8d0, L_0x5555766ad460, C4<1>, C4<1>;
L_0x7f7ed8bb8608 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x7f7ed8bb8698 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x5555766ac9b0 .functor AND 1, L_0x7f7ed8bb8608, L_0x7f7ed8bb8698, C4<1>, C4<1>;
L_0x5555766aca20 .functor OR 1, L_0x5555766ac940, L_0x5555766ac9b0, C4<0>, C4<0>;
L_0x5555766acba0 .functor OR 1, L_0x5555766ad290, L_0x7f7ed8bb8650, C4<0>, C4<0>;
L_0x5555766acda0 .functor AND 1, L_0x5555766acba0, L_0x5555766accb0, C4<1>, C4<1>;
L_0x5555766acfe0 .functor AND 1, L_0x7f7ed8bb8608, L_0x5555766acef0, C4<1>, C4<1>;
L_0x5555766ad0f0 .functor OR 1, L_0x5555766acda0, L_0x5555766acfe0, C4<0>, C4<0>;
L_0x5555766ad290 .functor AND 1, L_0x5555766b0830, L_0x5555766ac860, C4<1>, C4<1>;
L_0x5555766ad6b0 .functor BUFZ 32, L_0x5555766b09b0, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0x5555766ad890 .functor BUFZ 1, L_0x5555766ac860, C4<0>, C4<0>, C4<0>;
L_0x5555766ada40 .functor BUFZ 32, L_0x5555766adc80, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0x5555766adbc0 .functor BUFZ 32, L_0x5555766ae610, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0x5555766b4670 .functor BUFT 32, L_0x5555766ad500, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0x5555766adb50 .functor BUFT 32, L_0x5555766ad6b0, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
v0x5555765b6830_0 .net *"_ivl_1", 0 0, L_0x5555766ac8d0;  1 drivers
v0x5555765b68f0_0 .net *"_ivl_11", 0 0, L_0x5555766acba0;  1 drivers
v0x5555765b6340_0 .net *"_ivl_14", 0 0, L_0x5555766accb0;  1 drivers
v0x5555765b5df0_0 .net *"_ivl_16", 0 0, L_0x5555766acda0;  1 drivers
v0x5555765b5eb0_0 .net *"_ivl_19", 0 0, L_0x5555766acef0;  1 drivers
v0x5555765aa800_0 .net *"_ivl_21", 0 0, L_0x5555766acfe0;  1 drivers
v0x5555765aa8c0_0 .net *"_ivl_4", 0 0, L_0x5555766ac940;  1 drivers
v0x5555765ed0d0_0 .net *"_ivl_7", 0 0, L_0x5555766ac9b0;  1 drivers
L_0x7f7ed8bb8770 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v0x5555765ecd60_0 .net "i_additional_match", 0 0, L_0x7f7ed8bb8770;  1 drivers
v0x5555765ece00_0 .net "i_bit_field_read_data", 31 0, L_0x5555766ae550;  alias, 1 drivers
v0x5555765ec750_0 .net "i_bit_field_value", 31 0, L_0x5555766ae610;  alias, 1 drivers
v0x5555765ec810_0 .net "i_clk", 0 0, v0x5555766940a0_0;  alias, 1 drivers
v0x5555765ebb50_0 .net "i_register_access", 1 0, L_0x5555766b08a0;  alias, 1 drivers
v0x5555765ebc20_0 .net "i_register_address", 2 0, L_0x5555766b0910;  alias, 1 drivers
v0x5555765eb670_0 .net "i_register_strobe", 31 0, L_0x5555766b0a20;  alias, 1 drivers
v0x5555765df4f0_0 .net "i_register_valid", 0 0, L_0x5555766b0830;  alias, 1 drivers
v0x5555765df5b0_0 .net "i_register_write_data", 31 0, L_0x5555766b09b0;  alias, 1 drivers
v0x5555765da9f0_0 .net "i_rst_n", 0 0, L_0x5555766b3230;  alias, 1 drivers
v0x5555765daa90_0 .net "o_bit_field_mask", 31 0, L_0x5555766b4670;  alias, 1 drivers
v0x5555765da6a0_0 .net "o_bit_field_read_valid", 0 0, L_0x5555766ad0f0;  alias, 1 drivers
v0x5555765da770_0 .net "o_bit_field_write_data", 31 0, L_0x5555766adb50;  alias, 1 drivers
v0x5555765da090_0 .net "o_bit_field_write_valid", 0 0, L_0x5555766aca20;  alias, 1 drivers
v0x5555765da160_0 .net "o_register_active", 0 0, L_0x5555766ad890;  alias, 1 drivers
v0x5555765d9490_0 .net "o_register_read_data", 31 0, L_0x5555766ada40;  alias, 1 drivers
v0x5555765d9530_0 .net "o_register_ready", 0 0, L_0x5555766ad900;  alias, 1 drivers
v0x5555765d8f80_0 .net "o_register_status", 1 0, L_0x7f7ed8bb85c0;  alias, 1 drivers
v0x5555765cce30_0 .net "o_register_value", 31 0, L_0x5555766adbc0;  alias, 1 drivers
v0x5555765d75a0_0 .net "w_active", 0 0, L_0x5555766ac860;  1 drivers
v0x5555765d7660_0 .net "w_backdoor_valid", 0 0, L_0x7f7ed8bb8608;  1 drivers
v0x55557660f3c0_0 .net "w_frontdoor_valid", 0 0, L_0x5555766ad290;  1 drivers
v0x55557660f480 .array "w_mask", 1 0;
v0x55557660f480_0 .net v0x55557660f480 0, 31 0, L_0x5555766ad500; 1 drivers
L_0x7f7ed8bb86e0 .functor BUFT 1, C4<00000000000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x55557660f480_1 .net v0x55557660f480 1, 31 0, L_0x7f7ed8bb86e0; 1 drivers
v0x55557660f070_0 .net "w_match", 0 0, L_0x5555766ac750;  1 drivers
v0x55557660f130_0 .net "w_pending_valid", 0 0, L_0x7f7ed8bb8650;  1 drivers
v0x55557660ea30_0 .net "w_read_data", 31 0, L_0x5555766adc80;  1 drivers
v0x55557660eaf0 .array "w_write", 1 0;
v0x55557660eaf0_0 .net v0x55557660eaf0 0, 0 0, L_0x5555766ad460; 1 drivers
v0x55557660eaf0_1 .net v0x55557660eaf0 1, 0 0, L_0x7f7ed8bb8698; 1 drivers
v0x55557660de00 .array "w_write_data", 1 0;
v0x55557660de00_0 .net v0x55557660de00 0, 31 0, L_0x5555766ad6b0; 1 drivers
L_0x7f7ed8bb8728 .functor BUFT 1, C4<00000000000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x55557660de00_1 .net v0x55557660de00 1, 31 0, L_0x7f7ed8bb8728; 1 drivers
L_0x5555766accb0 .reduce/nor L_0x5555766ad460;
L_0x5555766acef0 .reduce/nor L_0x7f7ed8bb8698;
L_0x5555766ad460 .part L_0x5555766b08a0, 0, 1;
L_0x5555766ad500 .ufunc/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcnt.u_register.u_register_common.get_mask, 32, L_0x5555766ac750, L_0x5555766b0a20 (v0x5555765fcab0_0, v0x5555765f0e30_0) S_0x5555765db0a0;
L_0x5555766ad900 .reduce/nor L_0x7f7ed8bb8608;
S_0x5555763b1300 .scope autofunction.vec4.s3, "calc_start_address" "calc_start_address" 11 67, 11 67 0, S_0x5555766313e0;
 .timescale 0 0;
; Variable calc_start_address is vec4 return value of scope S_0x5555763b1300
v0x5555765a8b00_0 .var/i "delta", 31 0;
v0x55557661d430_0 .var/i "index", 31 0;
v0x55557661d4d0_0 .var "offset_address", 2 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcnt.u_register.u_register_common.calc_start_address ;
    %pushi/vec4 4, 0, 3;
    %store/vec4 v0x55557661d4d0_0, 0, 3;
    %load/vec4 v0x55557661d430_0;
    %muli 4, 0, 32;
    %store/vec4 v0x5555765a8b00_0, 0, 32;
    %load/vec4 v0x55557661d4d0_0;
    %load/vec4 v0x5555765a8b00_0;
    %parti/s 3, 0, 2;
    %add;
    %ret/vec4 0, 0, 3;  Assign to calc_start_address (store_vec4_to_lval)
    %end;
S_0x555576636110 .scope generate, "g_decoder[0]" "g_decoder[0]" 11 42, 11 42 0, S_0x5555766313e0;
 .timescale 0 0;
P_0x5555765b9370 .param/l "g_i" 1 11 42, +C4<00>;
S_0x555576635770 .scope module, "u_decoder" "rggen_address_decoder" 11 51, 12 1 0, S_0x555576636110;
 .timescale 0 0;
    .port_info 0 /INPUT 3 "i_address";
    .port_info 1 /INPUT 2 "i_access";
    .port_info 2 /INPUT 1 "i_additional_match";
    .port_info 3 /OUTPUT 1 "o_match";
P_0x55557636cf60 .param/l "ACCESS_BIT" 1 12 16, +C4<00000000000000000000000000000000>;
P_0x55557636cfa0 .param/l "BEGIN_ADDRESS" 1 12 17, C4<1>;
P_0x55557636cfe0 .param/l "BEGIN_ADDRESS_ALL_0" 1 12 19, C4<0>;
P_0x55557636d020 .param/l "BUS_WIDTH" 0 12 5, +C4<00000000000000000000000000100000>;
P_0x55557636d060 .param/l "BYTE_SIZE" 0 12 7, +C4<00000000000000000000000000000100>;
P_0x55557636d0a0 .param/l "END_ADDRESS" 1 12 18, C4<1>;
P_0x55557636d0e0 .param/l "END_ADDRESS_ALL_1" 1 12 20, C4<1>;
P_0x55557636d120 .param/l "LSB" 1 12 15, +C4<000000000000000000000000000000010>;
P_0x55557636d160 .param/l "READABLE" 0 12 2, +C4<00000000000000000000000000000001>;
P_0x55557636d1a0 .param/l "START_ADDRESS" 0 12 6, C4<100>;
P_0x55557636d1e0 .param/l "USE_ADDITIONAL_MATCH" 0 12 8, C4<0>;
P_0x55557636d220 .param/l "WIDTH" 0 12 4, +C4<00000000000000000000000000000011>;
P_0x55557636d260 .param/l "WRITABLE" 0 12 3, +C4<00000000000000000000000000000000>;
L_0x5555766ac640 .functor AND 1, L_0x5555766abdb0, L_0x5555766ac530, C4<1>, C4<1>;
L_0x7f7ed8bb8578 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
L_0x5555766ac750 .functor AND 1, L_0x5555766ac640, L_0x7f7ed8bb8578, C4<1>, C4<1>;
v0x55557659da10_0 .net *"_ivl_3", 0 0, L_0x5555766ac640;  1 drivers
v0x55557659dad0_0 .net "i_access", 1 0, L_0x5555766b08a0;  alias, 1 drivers
v0x55557659d660_0 .net "i_additional_match", 0 0, L_0x7f7ed8bb8770;  alias, 1 drivers
v0x55557659d730_0 .net "i_address", 2 0, L_0x5555766b0910;  alias, 1 drivers
v0x5555765fe520_0 .net "o_match", 0 0, L_0x5555766ac750;  alias, 1 drivers
v0x5555765fe1d0_0 .net "w_access_match", 0 0, L_0x5555766ac530;  1 drivers
v0x5555765fe290_0 .net "w_additional_match", 0 0, L_0x7f7ed8bb8578;  1 drivers
v0x5555765fdbc0_0 .net "w_address_match", 0 0, L_0x5555766abdb0;  1 drivers
L_0x5555766ac350 .part L_0x5555766b0910, 2, 1;
L_0x5555766ac490 .part L_0x5555766b08a0, 0, 1;
S_0x555576634dd0 .scope autofunction.vec4.s1, "calc_end_address" "calc_end_address" 12 38, 12 38 0, S_0x555576635770;
 .timescale 0 0;
v0x555576630f00_0 .var "address", 2 0;
v0x555576630a80_0 .var/i "byte_size", 31 0;
; Variable calc_end_address is vec4 return value of scope S_0x555576634dd0
v0x55557663abc0_0 .var/i "delta", 31 0;
v0x55557663a6b0_0 .var "start_address", 2 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcnt.u_register.u_register_common.g_decoder\x5B0\x5D.u_decoder.calc_end_address ;
    %load/vec4 v0x555576630a80_0;
    %subi 1, 0, 32;
    %store/vec4 v0x55557663abc0_0, 0, 32;
    %load/vec4 v0x55557663a6b0_0;
    %load/vec4 v0x55557663abc0_0;
    %parti/s 3, 0, 2;
    %add;
    %store/vec4 v0x555576630f00_0, 0, 3;
    %load/vec4 v0x555576630f00_0;
    %parti/s 1, 2, 3;
    %ret/vec4 0, 0, 1;  Assign to calc_end_address (store_vec4_to_lval)
    %end;
S_0x5555766343d0 .scope autofunction.vec4.u32, "clog2" "clog2" 12 22, 12 22 0, S_0x555576635770;
 .timescale 0 0;
; Variable clog2 is vec4 return value of scope S_0x5555766343d0
v0x555576639bc0_0 .var/i "n", 31 0;
v0x555576639950_0 .var/i "result", 31 0;
v0x555576639a10_0 .var/i "value", 31 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcnt.u_register.u_register_common.g_decoder\x5B0\x5D.u_decoder.clog2 ;
    %load/vec4 v0x555576639bc0_0;
    %subi 1, 0, 32;
    %store/vec4 v0x555576639a10_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x555576639950_0, 0, 32;
T_7.75 ;
    %load/vec4 v0x555576639a10_0;
    %cmpi/s 0, 0, 32;
    %flag_or 5, 4; GT is !LE
    %flag_inv 5;
    %jmp/0xz T_7.76, 5;
    %load/vec4 v0x555576639950_0;
    %addi 1, 0, 32;
    %store/vec4 v0x555576639950_0, 0, 32;
    %load/vec4 v0x555576639a10_0;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %shiftr 4;
    %store/vec4 v0x555576639a10_0, 0, 32;
    %jmp T_7.75;
T_7.76 ;
    %load/vec4 v0x555576639950_0;
    %ret/vec4 0, 0, 32;  Assign to clog2 (store_vec4_to_lval)
    %end;
S_0x5555765a2fb0 .scope generate, "g_access_match" "g_access_match" 12 79, 12 79 0, S_0x555576635770;
 .timescale 0 0;
L_0x7f7ed8bb8530 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x5555766ac530 .functor XNOR 1, L_0x5555766ac490, L_0x7f7ed8bb8530, C4<0>, C4<0>;
v0x5555765a4f40_0 .net *"_ivl_0", 0 0, L_0x5555766ac490;  1 drivers
v0x5555765a4fe0_0 .net/2u *"_ivl_1", 0 0, L_0x7f7ed8bb8530;  1 drivers
S_0x5555765a23f0 .scope generate, "g_additional_match" "g_additional_match" 12 86, 12 86 0, S_0x555576635770;
 .timescale 0 0;
S_0x5555765febd0 .scope generate, "g_address_match" "g_address_match" 12 58, 12 58 0, S_0x555576635770;
 .timescale 0 0;
L_0x7f7ed8bb84e8 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
L_0x5555766abdb0 .functor XNOR 1, L_0x5555766ac350, L_0x7f7ed8bb84e8, C4<0>, C4<0>;
v0x5555765a4280_0 .net *"_ivl_0", 0 0, L_0x5555766ac350;  1 drivers
v0x5555765a4320_0 .net/2u *"_ivl_1", 0 0, L_0x7f7ed8bb84e8;  1 drivers
S_0x5555765b8440 .scope generate, "g_match" "g_match" 11 59, 11 59 0, S_0x5555766313e0;
 .timescale 0 0;
L_0x5555766ac860 .functor BUFZ 1, L_0x5555766ac750, C4<0>, C4<0>, C4<0>;
S_0x5555765db0a0 .scope autofunction.vec4.s32, "get_mask" "get_mask" 11 97, 11 97 0, S_0x5555766313e0;
 .timescale 0 0;
; Variable get_mask is vec4 return value of scope S_0x5555765db0a0
v0x5555765fd060_0 .var "mask", 31 0;
v0x5555765fcab0_0 .var "match", 0 0;
v0x5555765f0e30_0 .var "strobe", 31 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcnt.u_register.u_register_common.get_mask ;
    %load/vec4 v0x5555765f0e30_0;
    %store/vec4 v0x5555765fd060_0, 0, 32;
    %load/vec4 v0x5555765fd060_0;
    %ret/vec4 0, 0, 32;  Assign to get_mask (store_vec4_to_lval)
    %end;
S_0x5555765c8980 .scope module, "u_read_data_mux" "rggen_mux" 11 134, 13 1 0, S_0x5555766313e0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "i_select";
    .port_info 1 /INPUT 32 "i_data";
    .port_info 2 /OUTPUT 32 "o_data";
P_0x555576656590 .param/l "ENTRIES" 0 13 3, +C4<00000000000000000000000000000001>;
P_0x5555766565d0 .param/l "WIDTH" 0 13 2, +C4<00000000000000000000000000100000>;
v0x5555765b7a90_0 .net "i_data", 31 0, L_0x5555766ae550;  alias, 1 drivers
v0x5555765b7430_0 .net "i_select", 0 0, L_0x5555766ac750;  alias, 1 drivers
v0x5555765b7500_0 .net "o_data", 31 0, L_0x5555766adc80;  alias, 1 drivers
S_0x555576617850 .scope generate, "g" "g" 13 10, 13 10 0, S_0x5555765c8980;
 .timescale 0 0;
L_0x5555766adc80 .functor BUFZ 32, L_0x5555766ae550, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
S_0x555576616c90 .scope generate, "g_wdcsr" "g_wdcsr" 8 82, 8 82 0, S_0x5555765c8c50;
 .timescale 0 0;
v0x555576366410_0 .net "w_bit_field_mask", 31 0, L_0x5555766b44e0;  1 drivers
v0x5555766825a0_0 .net "w_bit_field_read_data", 31 0, L_0x5555766abe20;  1 drivers
v0x555576682660_0 .net "w_bit_field_read_valid", 0 0, L_0x555576695680;  1 drivers
v0x555576682810_0 .net "w_bit_field_value", 31 0, L_0x5555766ac0a0;  1 drivers
v0x555576682900_0 .net "w_bit_field_write_data", 31 0, L_0x555576695d70;  1 drivers
v0x555576682a60_0 .net "w_bit_field_write_valid", 0 0, L_0x555576694ff0;  1 drivers
L_0x5555766a6950 .part L_0x5555766b44e0, 0, 1;
L_0x5555766a69f0 .part L_0x555576695d70, 0, 1;
L_0x5555766a75a0 .part L_0x5555766b44e0, 1, 1;
L_0x5555766a76d0 .part L_0x555576695d70, 1, 1;
L_0x5555766a88b0 .part L_0x5555766b44e0, 2, 1;
L_0x5555766a8950 .part L_0x555576695d70, 2, 1;
L_0x5555766a98f0 .part L_0x5555766b44e0, 3, 1;
L_0x5555766a9990 .part L_0x555576695d70, 3, 1;
L_0x5555766aa860 .part L_0x5555766b44e0, 4, 10;
L_0x5555766aa900 .part L_0x555576695d70, 4, 10;
L_0x5555766abb30 .part L_0x5555766b44e0, 14, 18;
L_0x5555766abbd0 .part L_0x555576695d70, 14, 18;
LS_0x5555766abe20_0_0 .concat8 [ 1 1 1 1], L_0x5555766a6490, L_0x5555766a70f0, L_0x5555766a8390, L_0x5555766a93d0;
LS_0x5555766abe20_0_4 .concat8 [ 10 18 0 0], L_0x5555766aa2e0, L_0x5555766ab590;
L_0x5555766abe20 .concat8 [ 4 28 0 0], LS_0x5555766abe20_0_0, LS_0x5555766abe20_0_4;
LS_0x5555766ac0a0_0_0 .concat8 [ 1 1 1 1], L_0x5555766a6550, L_0x5555766a71b0, L_0x5555766a8450, L_0x5555766a9490;
LS_0x5555766ac0a0_0_4 .concat8 [ 10 18 0 0], L_0x5555766aa3a0, L_0x5555766ab680;
L_0x5555766ac0a0 .concat8 [ 4 28 0 0], LS_0x5555766ac0a0_0_0, LS_0x5555766ac0a0_0_4;
S_0x555576637380 .scope generate, "__g_tie_off" "__g_tie_off" 8 90, 8 90 0, S_0x555576616c90;
 .timescale 0 0;
S_0x55557660f620 .scope generate, "g[0]" "g[0]" 8 92, 8 92 0, S_0x555576637380;
 .timescale 0 0;
P_0x55557661f770 .param/l "__i" 1 8 92, +C4<00>;
S_0x55557659fe60 .scope generate, "g[1]" "g[1]" 8 92, 8 92 0, S_0x555576637380;
 .timescale 0 0;
P_0x5555765a7d80 .param/l "__i" 1 8 92, +C4<01>;
S_0x5555765a4c60 .scope generate, "g[2]" "g[2]" 8 92, 8 92 0, S_0x555576637380;
 .timescale 0 0;
P_0x55557661ca80 .param/l "__i" 1 8 92, +C4<010>;
S_0x5555765a3460 .scope generate, "g[3]" "g[3]" 8 92, 8 92 0, S_0x555576637380;
 .timescale 0 0;
P_0x5555765b5b70 .param/l "__i" 1 8 92, +C4<011>;
S_0x5555765a18f0 .scope generate, "g[4]" "g[4]" 8 92, 8 92 0, S_0x555576637380;
 .timescale 0 0;
P_0x55557660d190 .param/l "__i" 1 8 92, +C4<0100>;
S_0x55557659e280 .scope generate, "g[5]" "g[5]" 8 92, 8 92 0, S_0x555576637380;
 .timescale 0 0;
P_0x5555765c60a0 .param/l "__i" 1 8 92, +C4<0101>;
S_0x555576614670 .scope generate, "g[6]" "g[6]" 8 92, 8 92 0, S_0x555576637380;
 .timescale 0 0;
P_0x55557662a2b0 .param/l "__i" 1 8 92, +C4<0110>;
S_0x555576619500 .scope generate, "g[7]" "g[7]" 8 92, 8 92 0, S_0x555576637380;
 .timescale 0 0;
P_0x5555765fd380 .param/l "__i" 1 8 92, +C4<0111>;
S_0x555576617d00 .scope generate, "g[8]" "g[8]" 8 92, 8 92 0, S_0x555576637380;
 .timescale 0 0;
P_0x55557660d140 .param/l "__i" 1 8 92, +C4<01000>;
S_0x555576616190 .scope generate, "g[9]" "g[9]" 8 92, 8 92 0, S_0x555576637380;
 .timescale 0 0;
P_0x5555765b6ba0 .param/l "__i" 1 8 92, +C4<01001>;
S_0x555576612b60 .scope generate, "g[10]" "g[10]" 8 92, 8 92 0, S_0x555576637380;
 .timescale 0 0;
P_0x5555765b6cd0 .param/l "__i" 1 8 92, +C4<01010>;
S_0x55557659f7b0 .scope generate, "g[11]" "g[11]" 8 92, 8 92 0, S_0x555576637380;
 .timescale 0 0;
P_0x5555765b1e90 .param/l "__i" 1 8 92, +C4<01011>;
S_0x5555765a2d50 .scope generate, "g[12]" "g[12]" 8 92, 8 92 0, S_0x555576637380;
 .timescale 0 0;
P_0x5555765ebec0 .param/l "__i" 1 8 92, +C4<01100>;
S_0x5555765a2190 .scope generate, "g[13]" "g[13]" 8 92, 8 92 0, S_0x555576637380;
 .timescale 0 0;
P_0x5555765ebfa0 .param/l "__i" 1 8 92, +C4<01101>;
S_0x5555765a0fa0 .scope generate, "g[14]" "g[14]" 8 92, 8 92 0, S_0x555576637380;
 .timescale 0 0;
P_0x5555765d9800 .param/l "__i" 1 8 92, +C4<01110>;
S_0x5555765ed760 .scope generate, "g[15]" "g[15]" 8 92, 8 92 0, S_0x555576637380;
 .timescale 0 0;
P_0x5555765d98e0 .param/l "__i" 1 8 92, +C4<01111>;
S_0x55557660fb00 .scope generate, "g[16]" "g[16]" 8 92, 8 92 0, S_0x555576637380;
 .timescale 0 0;
P_0x55557660e280 .param/l "__i" 1 8 92, +C4<010000>;
S_0x555576613fc0 .scope generate, "g[17]" "g[17]" 8 92, 8 92 0, S_0x555576637380;
 .timescale 0 0;
P_0x5555765c70f0 .param/l "__i" 1 8 92, +C4<010001>;
S_0x5555766175f0 .scope generate, "g[18]" "g[18]" 8 92, 8 92 0, S_0x555576637380;
 .timescale 0 0;
P_0x55557662b290 .param/l "__i" 1 8 92, +C4<010010>;
S_0x555576616a30 .scope generate, "g[19]" "g[19]" 8 92, 8 92 0, S_0x555576637380;
 .timescale 0 0;
P_0x55557662b370 .param/l "__i" 1 8 92, +C4<010011>;
S_0x555576615840 .scope generate, "g[20]" "g[20]" 8 92, 8 92 0, S_0x555576637380;
 .timescale 0 0;
P_0x5555765f8200 .param/l "__i" 1 8 92, +C4<010100>;
S_0x5555765a6800 .scope generate, "g[21]" "g[21]" 8 92, 8 92 0, S_0x555576637380;
 .timescale 0 0;
P_0x5555765a69e0 .param/l "__i" 1 8 92, +C4<010101>;
S_0x5555763d2370 .scope generate, "g[22]" "g[22]" 8 92, 8 92 0, S_0x555576637380;
 .timescale 0 0;
P_0x5555763d2550 .param/l "__i" 1 8 92, +C4<010110>;
S_0x5555763d2630 .scope generate, "g[23]" "g[23]" 8 92, 8 92 0, S_0x555576637380;
 .timescale 0 0;
P_0x5555765b1ad0 .param/l "__i" 1 8 92, +C4<010111>;
S_0x5555763e0ce0 .scope generate, "g[24]" "g[24]" 8 92, 8 92 0, S_0x555576637380;
 .timescale 0 0;
P_0x5555763e0ec0 .param/l "__i" 1 8 92, +C4<011000>;
S_0x5555763e0fa0 .scope generate, "g[25]" "g[25]" 8 92, 8 92 0, S_0x555576637380;
 .timescale 0 0;
P_0x5555765b1bb0 .param/l "__i" 1 8 92, +C4<011001>;
S_0x55557643fff0 .scope generate, "g[26]" "g[26]" 8 92, 8 92 0, S_0x555576637380;
 .timescale 0 0;
P_0x5555764401f0 .param/l "__i" 1 8 92, +C4<011010>;
S_0x5555764402d0 .scope generate, "g[27]" "g[27]" 8 92, 8 92 0, S_0x555576637380;
 .timescale 0 0;
P_0x5555765e9990 .param/l "__i" 1 8 92, +C4<011011>;
S_0x55557644eb50 .scope generate, "g[28]" "g[28]" 8 92, 8 92 0, S_0x555576637380;
 .timescale 0 0;
P_0x55557644ed30 .param/l "__i" 1 8 92, +C4<011100>;
S_0x55557644ee10 .scope generate, "g[29]" "g[29]" 8 92, 8 92 0, S_0x555576637380;
 .timescale 0 0;
P_0x5555765e9a70 .param/l "__i" 1 8 92, +C4<011101>;
S_0x5555764083b0 .scope generate, "g[30]" "g[30]" 8 92, 8 92 0, S_0x555576637380;
 .timescale 0 0;
P_0x5555764085b0 .param/l "__i" 1 8 92, +C4<011110>;
S_0x555576408690 .scope generate, "g[31]" "g[31]" 8 92, 8 92 0, S_0x555576637380;
 .timescale 0 0;
P_0x5555765d72d0 .param/l "__i" 1 8 92, +C4<011111>;
S_0x55557642e410 .scope generate, "g_rvd1" "g_rvd1" 8 145, 8 145 0, S_0x555576616c90;
 .timescale 0 0;
S_0x55557642e5f0 .scope module, "u_bit_field" "rggen_bit_field" 8 151, 9 2 0, S_0x55557642e410;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "i_clk";
    .port_info 1 /INPUT 1 "i_rst_n";
    .port_info 2 /INPUT 1 "i_sw_write_valid";
    .port_info 3 /INPUT 1 "i_sw_write_enable";
    .port_info 4 /INPUT 1 "i_sw_read_valid";
    .port_info 5 /INPUT 1 "i_sw_mask";
    .port_info 6 /INPUT 1 "i_sw_write_data";
    .port_info 7 /OUTPUT 1 "o_sw_read_data";
    .port_info 8 /OUTPUT 1 "o_sw_value";
    .port_info 9 /OUTPUT 1 "o_write_trigger";
    .port_info 10 /OUTPUT 1 "o_read_trigger";
    .port_info 11 /INPUT 1 "i_hw_write_enable";
    .port_info 12 /INPUT 1 "i_hw_write_data";
    .port_info 13 /INPUT 1 "i_hw_set";
    .port_info 14 /INPUT 1 "i_hw_clear";
    .port_info 15 /INPUT 1 "i_value";
    .port_info 16 /INPUT 1 "i_mask";
    .port_info 17 /OUTPUT 1 "o_value";
    .port_info 18 /OUTPUT 1 "o_value_unmasked";
P_0x555576487ec0 .param/l "EXTERNAL_MASK" 0 9 17, C4<0>;
P_0x555576487f00 .param/l "EXTERNAL_READ_DATA" 0 9 16, +C4<00000000000000000000000000000001>;
P_0x555576487f40 .param/l "HW_ACCESS" 0 9 12, C4<000>;
P_0x555576487f80 .param/l "HW_CLEAR_WIDTH" 0 9 14, +C4<00000000000000000000000000000001>;
P_0x555576487fc0 .param/l "HW_SET_WIDTH" 0 9 13, +C4<00000000000000000000000000000001>;
P_0x555576488000 .param/l "HW_WRITE_ENABLE_POLARITY" 0 9 11, C4<1>;
P_0x555576488040 .param/l "INITIAL_VALUE" 0 9 4, C4<0>;
P_0x555576488080 .param/l "PRECEDENCE_ACCESS" 0 9 5, +C4<00000000000000000000000000000001>;
P_0x5555764880c0 .param/l "STORAGE" 0 9 15, +C4<00000000000000000000000000000000>;
P_0x555576488100 .param/l "SW_READABLE" 1 9 41, C4<1>;
P_0x555576488140 .param/l "SW_READ_ACTION" 0 9 6, +C4<00000000000000000000000000000001>;
P_0x555576488180 .param/l "SW_READ_UPDATE" 1 9 42, C4<0>;
P_0x5555764881c0 .param/l "SW_WRITABLE" 1 9 40, C4<1>;
P_0x555576488200 .param/l "SW_WRITE_ACTION" 0 9 7, +C4<00000000000000000000000000000001>;
P_0x555576488240 .param/l "SW_WRITE_CONTROL" 0 9 8, C4<0>;
P_0x555576488280 .param/l "SW_WRITE_ENABLE_POLARITY" 0 9 10, C4<1>;
P_0x5555764882c0 .param/l "SW_WRITE_ONCE" 0 9 9, C4<0>;
P_0x555576488300 .param/l "TRIGGER" 0 9 18, +C4<00000000000000000000000000000000>;
P_0x555576488340 .param/l "WIDTH" 0 9 3, +C4<00000000000000000000000000000001>;
L_0x5555766a70f0 .functor BUFZ 1, L_0x5555766a7080, C4<0>, C4<0>, C4<0>;
L_0x5555766a71b0 .functor BUFZ 1, L_0x5555766a6fc0, C4<0>, C4<0>, C4<0>;
L_0x5555766a7430 .functor BUFZ 1, L_0x5555766a6fc0, C4<0>, C4<0>, C4<0>;
L_0x5555766a74d0 .functor BUFZ 1, L_0x5555766a6fc0, C4<0>, C4<0>, C4<0>;
v0x555576658880_0 .net "i_clk", 0 0, v0x5555766940a0_0;  alias, 1 drivers
L_0x7f7ed8bb78d0 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x555576658920_0 .net "i_hw_clear", 0 0, L_0x7f7ed8bb78d0;  1 drivers
L_0x7f7ed8bb7888 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x5555766589c0_0 .net "i_hw_set", 0 0, L_0x7f7ed8bb7888;  1 drivers
L_0x7f7ed8bb7840 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x555576658a60_0 .net "i_hw_write_data", 0 0, L_0x7f7ed8bb7840;  1 drivers
L_0x7f7ed8bb77f8 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x555576658b00_0 .net "i_hw_write_enable", 0 0, L_0x7f7ed8bb77f8;  1 drivers
L_0x7f7ed8bb7918 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v0x555576658ba0_0 .net "i_mask", 0 0, L_0x7f7ed8bb7918;  1 drivers
v0x555576658c40_0 .net "i_rst_n", 0 0, L_0x5555766b3230;  alias, 1 drivers
v0x555576658ce0_0 .net "i_sw_mask", 0 0, L_0x5555766a75a0;  1 drivers
v0x555576658dc0_0 .net "i_sw_read_valid", 0 0, L_0x555576695680;  alias, 1 drivers
v0x555576658f10_0 .net "i_sw_write_data", 0 0, L_0x5555766a76d0;  1 drivers
L_0x7f7ed8bb77b0 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x555576658ff0_0 .net "i_sw_write_enable", 0 0, L_0x7f7ed8bb77b0;  1 drivers
v0x5555766590b0_0 .net "i_sw_write_valid", 0 0, L_0x555576694ff0;  alias, 1 drivers
v0x555576659170_0 .net "i_value", 0 0, o0x7f7ed8f6e618;  alias, 0 drivers
v0x555576659250_0 .net "o_read_trigger", 0 0, L_0x5555766a7360;  1 drivers
v0x555576659310_0 .net "o_sw_read_data", 0 0, L_0x5555766a70f0;  1 drivers
v0x5555766593f0_0 .net "o_sw_value", 0 0, L_0x5555766a71b0;  1 drivers
v0x5555766594d0_0 .net "o_value", 0 0, L_0x5555766a7430;  1 drivers
v0x5555766596c0_0 .net "o_value_unmasked", 0 0, L_0x5555766a74d0;  1 drivers
v0x5555766597a0_0 .net "o_write_trigger", 0 0, L_0x5555766a7270;  1 drivers
L_0x7f7ed8bb7690 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x555576659860_0 .net "w_hw_update", 0 0, L_0x7f7ed8bb7690;  1 drivers
v0x555576659920_0 .net "w_read_data", 0 0, L_0x5555766a7080;  1 drivers
v0x555576659a00_0 .net "w_sw_update", 1 0, L_0x5555766a6bb0;  1 drivers
L_0x7f7ed8bb76d8 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x555576659ae0_0 .net "w_sw_write_done", 0 0, L_0x7f7ed8bb76d8;  1 drivers
v0x555576659ba0_0 .net "w_trigger", 1 0, L_0x5555766a6e50;  1 drivers
v0x555576659c80_0 .net "w_value", 0 0, L_0x5555766a6fc0;  1 drivers
L_0x7f7ed8bb7648 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x5555766a6bb0 .concat8 [ 1 1 0 0], L_0x7f7ed8bb7648, L_0x5555766a6c80;
L_0x7f7ed8bb7720 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x7f7ed8bb7768 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x5555766a6e50 .concat8 [ 1 1 0 0], L_0x7f7ed8bb7720, L_0x7f7ed8bb7768;
L_0x5555766a7270 .part L_0x5555766a6e50, 0, 1;
L_0x5555766a7360 .part L_0x5555766a6e50, 1, 1;
S_0x555576390ce0 .scope generate, "g_read_data" "g_read_data" 9 382, 9 382 0, S_0x55557642e5f0;
 .timescale 0 0;
L_0x5555766a7080 .functor BUFZ 1, o0x7f7ed8f6e618, C4<0>, C4<0>, C4<0>;
S_0x555576390ec0 .scope generate, "g_read_trigger" "g_read_trigger" 9 304, 9 304 0, S_0x55557642e5f0;
 .timescale 0 0;
v0x5555763910c0_0 .net/2u *"_ivl_0", 0 0, L_0x7f7ed8bb7768;  1 drivers
S_0x555576398330 .scope generate, "g_sw_read_update" "g_sw_read_update" 9 245, 9 245 0, S_0x55557642e5f0;
 .timescale 0 0;
v0x555576398510_0 .net/2u *"_ivl_0", 0 0, L_0x7f7ed8bb7648;  1 drivers
S_0x5555763985f0 .scope generate, "g_sw_write_done" "g_sw_write_done" 9 268, 9 268 0, S_0x55557642e5f0;
 .timescale 0 0;
S_0x5555763a8c30 .scope generate, "g_sw_write_update" "g_sw_write_update" 9 252, 9 252 0, S_0x55557642e5f0;
 .timescale 0 0;
v0x5555763a8e60_0 .net *"_ivl_1", 0 0, L_0x5555766a6c80;  1 drivers
L_0x5555766a6c80 .ufunc/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_rvd1.u_bit_field.get_sw_write_update, 1, L_0x555576694ff0, L_0x7f7ed8bb77b0, L_0x7f7ed8bb76d8 (v0x5555766587e0_0, v0x5555763ea630_0, v0x5555763ea590_0) S_0x5555763ea1f0;
S_0x5555763a8f60 .scope generate, "g_value" "g_value" 9 323, 9 323 0, S_0x55557642e5f0;
 .timescale 0 0;
L_0x5555766a6fc0 .functor BUFZ 1, o0x7f7ed8f6e618, C4<0>, C4<0>, C4<0>;
S_0x555576326bf0 .scope generate, "g_write_trigger" "g_write_trigger" 9 287, 9 287 0, S_0x55557642e5f0;
 .timescale 0 0;
v0x555576326dd0_0 .net/2u *"_ivl_0", 0 0, L_0x7f7ed8bb7720;  1 drivers
S_0x555576326ed0 .scope generate, "genblk3" "genblk3" 9 259, 9 259 0, S_0x55557642e5f0;
 .timescale 0 0;
S_0x555576479440 .scope autofunction.vec4.s1, "get_hw_next_value" "get_hw_next_value" 9 177, 9 177 0, S_0x55557642e5f0;
 .timescale 0 0;
v0x555576479620_0 .var "clear", 0 0;
v0x555576479720_0 .var "current_value", 0 0;
; Variable get_hw_next_value is vec4 return value of scope S_0x555576479440
v0x5555762d8d40_0 .var/i "i", 31 0;
v0x5555762d8e20_0 .var "set", 0 0;
v0x5555762d8f00 .array "set_clear", 1 0, 0 0;
v0x5555762d8fc0_0 .var "value", 0 0;
v0x5555762d90a0_0 .var "write_data", 0 0;
v0x55557637c0d0_0 .var "write_enable", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_rvd1.u_bit_field.get_hw_next_value ;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x5555762d8f00, 4, 0;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x5555762d8f00, 4, 0;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555762d8d40_0, 0, 32;
T_9.77 ; Top of for-loop
    %load/vec4 v0x5555762d8d40_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_9.78, 5;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x5555762d8f00, 4;
    %load/vec4 v0x5555762d8d40_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_9.80, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x5555762d8d40_0;
    %store/vec4 v0x5555762d8fc0_0, 4, 1;
    %jmp T_9.81;
T_9.80 ;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x5555762d8f00, 4;
    %load/vec4 v0x5555762d8d40_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_9.82, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x5555762d8d40_0;
    %store/vec4 v0x5555762d8fc0_0, 4, 1;
    %jmp T_9.83;
T_9.82 ;
    %load/vec4 v0x555576479720_0;
    %load/vec4 v0x5555762d8d40_0;
    %part/s 1;
    %ix/getv/s 4, v0x5555762d8d40_0;
    %store/vec4 v0x5555762d8fc0_0, 4, 1;
T_9.83 ;
T_9.81 ;
T_9.79 ; for-loop step statement
    %load/vec4 v0x5555762d8d40_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555762d8d40_0, 0, 32;
    %jmp T_9.77;
T_9.78 ; for-loop exit label
    %load/vec4 v0x5555762d8fc0_0;
    %ret/vec4 0, 0, 1;  Assign to get_hw_next_value (store_vec4_to_lval)
    %end;
S_0x55557637c190 .scope autofunction.vec4.s1, "get_hw_update" "get_hw_update" 9 72, 9 72 0, S_0x55557642e5f0;
 .timescale 0 0;
v0x55557637c320_0 .var "clear", 0 0;
; Variable get_hw_update is vec4 return value of scope S_0x55557637c190
v0x55557637c4e0_0 .var "set", 0 0;
v0x5555764558a0_0 .var "update", 2 0;
v0x555576455980_0 .var "write_enable", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_rvd1.u_bit_field.get_hw_update ;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x5555764558a0_0, 4, 1;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x5555764558a0_0, 4, 1;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 2, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x5555764558a0_0, 4, 1;
    %load/vec4 v0x5555764558a0_0;
    %parti/s 1, 0, 2;
    %flag_set/vec4 8;
    %jmp/1 T_10.85, 8;
    %load/vec4 v0x5555764558a0_0;
    %parti/s 1, 1, 2;
    %flag_set/vec4 9;
    %flag_or 8, 9;
T_10.85;
    %flag_get/vec4 8;
    %jmp/1 T_10.84, 8;
    %load/vec4 v0x5555764558a0_0;
    %parti/s 1, 2, 3;
    %or;
T_10.84;
    %ret/vec4 0, 0, 1;  Assign to get_hw_update (store_vec4_to_lval)
    %end;
S_0x555576455a40 .scope autofunction.vec4.s1, "get_sw_read_next_value" "get_sw_read_next_value" 9 86, 9 86 0, S_0x55557642e5f0;
 .timescale 0 0;
v0x555576455c20_0 .var "current_value", 0 0;
; Variable get_sw_read_next_value is vec4 return value of scope S_0x555576455a40
v0x55557646f590_0 .var "mask", 0 0;
v0x55557646f650_0 .var "value", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_rvd1.u_bit_field.get_sw_read_next_value ;
    %pushi/vec4 1, 0, 32;
    %dup/vec4;
    %pushi/vec4 2, 0, 32;
    %cmp/u;
    %jmp/1 T_11.86, 6;
    %dup/vec4;
    %pushi/vec4 3, 0, 32;
    %cmp/u;
    %jmp/1 T_11.87, 6;
    %load/vec4 v0x555576455c20_0;
    %store/vec4 v0x55557646f650_0, 0, 1;
    %jmp T_11.89;
T_11.86 ;
    %load/vec4 v0x55557646f590_0;
    %cmpi/ne 0, 0, 1;
    %flag_mov 8, 4;
    %jmp/0 T_11.90, 8;
    %pushi/vec4 0, 0, 1;
    %jmp/1 T_11.91, 8;
T_11.90 ; End of true expr.
    %load/vec4 v0x555576455c20_0;
    %jmp/0 T_11.91, 8;
 ; End of false expr.
    %blend;
T_11.91;
    %store/vec4 v0x55557646f650_0, 0, 1;
    %jmp T_11.89;
T_11.87 ;
    %load/vec4 v0x55557646f590_0;
    %cmpi/ne 0, 0, 1;
    %flag_mov 8, 4;
    %jmp/0 T_11.92, 8;
    %pushi/vec4 1, 0, 1;
    %jmp/1 T_11.93, 8;
T_11.92 ; End of true expr.
    %load/vec4 v0x555576455c20_0;
    %jmp/0 T_11.93, 8;
 ; End of false expr.
    %blend;
T_11.93;
    %store/vec4 v0x55557646f650_0, 0, 1;
    %jmp T_11.89;
T_11.89 ;
    %pop/vec4 1;
    %load/vec4 v0x55557646f650_0;
    %ret/vec4 0, 0, 1;  Assign to get_sw_read_next_value (store_vec4_to_lval)
    %end;
S_0x55557646f730 .scope autofunction.vec4.s1, "get_sw_write_next_value" "get_sw_write_next_value" 9 101, 9 101 0, S_0x55557642e5f0;
 .timescale 0 0;
v0x55557646f8c0_0 .var "current_value", 0 0;
; Variable get_sw_write_next_value is vec4 return value of scope S_0x55557646f730
v0x5555764d5450_0 .var/i "i", 31 0;
v0x5555764d5510_0 .var "mask", 0 0;
v0x5555764d55f0_0 .var "value", 0 0;
v0x5555764d5720_0 .var "write_data", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_rvd1.u_bit_field.get_sw_write_next_value ;
    %load/vec4 v0x55557646f8c0_0;
    %store/vec4 v0x5555764d55f0_0, 0, 1;
    %pushi/vec4 1, 0, 32;
    %dup/vec4;
    %pushi/vec4 1, 0, 32;
    %cmp/u;
    %jmp/1 T_12.94, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 32;
    %cmp/u;
    %jmp/1 T_12.95, 6;
    %dup/vec4;
    %pushi/vec4 3, 0, 32;
    %cmp/u;
    %jmp/1 T_12.96, 6;
    %dup/vec4;
    %pushi/vec4 4, 0, 32;
    %cmp/u;
    %jmp/1 T_12.97, 6;
    %dup/vec4;
    %pushi/vec4 5, 0, 32;
    %cmp/u;
    %jmp/1 T_12.98, 6;
    %dup/vec4;
    %pushi/vec4 6, 0, 32;
    %cmp/u;
    %jmp/1 T_12.99, 6;
    %dup/vec4;
    %pushi/vec4 7, 0, 32;
    %cmp/u;
    %jmp/1 T_12.100, 6;
    %dup/vec4;
    %pushi/vec4 8, 0, 32;
    %cmp/u;
    %jmp/1 T_12.101, 6;
    %dup/vec4;
    %pushi/vec4 9, 0, 32;
    %cmp/u;
    %jmp/1 T_12.102, 6;
    %jmp T_12.104;
T_12.94 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555764d5450_0, 0, 32;
T_12.105 ; Top of for-loop
    %load/vec4 v0x5555764d5450_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_12.106, 5;
    %load/vec4 v0x5555764d5510_0;
    %load/vec4 v0x5555764d5450_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_12.108, 8;
    %load/vec4 v0x5555764d5720_0;
    %load/vec4 v0x5555764d5450_0;
    %part/s 1;
    %ix/getv/s 4, v0x5555764d5450_0;
    %store/vec4 v0x5555764d55f0_0, 4, 1;
T_12.108 ;
T_12.107 ; for-loop step statement
    %load/vec4 v0x5555764d5450_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555764d5450_0, 0, 32;
    %jmp T_12.105;
T_12.106 ; for-loop exit label
    %jmp T_12.104;
T_12.95 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555764d5450_0, 0, 32;
T_12.110 ; Top of for-loop
    %load/vec4 v0x5555764d5450_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_12.111, 5;
    %load/vec4 v0x5555764d5510_0;
    %load/vec4 v0x5555764d5450_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_12.115, 9;
    %load/vec4 v0x5555764d5720_0;
    %load/vec4 v0x5555764d5450_0;
    %part/s 1;
    %nor/r;
    %and;
T_12.115;
    %flag_set/vec4 8;
    %jmp/0xz  T_12.113, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x5555764d5450_0;
    %store/vec4 v0x5555764d55f0_0, 4, 1;
T_12.113 ;
T_12.112 ; for-loop step statement
    %load/vec4 v0x5555764d5450_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555764d5450_0, 0, 32;
    %jmp T_12.110;
T_12.111 ; for-loop exit label
    %jmp T_12.104;
T_12.96 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555764d5450_0, 0, 32;
T_12.116 ; Top of for-loop
    %load/vec4 v0x5555764d5450_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_12.117, 5;
    %load/vec4 v0x5555764d5510_0;
    %load/vec4 v0x5555764d5450_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_12.121, 9;
    %load/vec4 v0x5555764d5720_0;
    %load/vec4 v0x5555764d5450_0;
    %part/s 1;
    %and;
T_12.121;
    %flag_set/vec4 8;
    %jmp/0xz  T_12.119, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x5555764d5450_0;
    %store/vec4 v0x5555764d55f0_0, 4, 1;
T_12.119 ;
T_12.118 ; for-loop step statement
    %load/vec4 v0x5555764d5450_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555764d5450_0, 0, 32;
    %jmp T_12.116;
T_12.117 ; for-loop exit label
    %jmp T_12.104;
T_12.97 ;
    %load/vec4 v0x5555764d5510_0;
    %cmpi/ne 0, 0, 1;
    %jmp/0xz  T_12.122, 4;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x5555764d55f0_0, 0, 1;
T_12.122 ;
    %jmp T_12.104;
T_12.98 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555764d5450_0, 0, 32;
T_12.124 ; Top of for-loop
    %load/vec4 v0x5555764d5450_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_12.125, 5;
    %load/vec4 v0x5555764d5510_0;
    %load/vec4 v0x5555764d5450_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_12.129, 9;
    %load/vec4 v0x5555764d5720_0;
    %load/vec4 v0x5555764d5450_0;
    %part/s 1;
    %nor/r;
    %and;
T_12.129;
    %flag_set/vec4 8;
    %jmp/0xz  T_12.127, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x5555764d5450_0;
    %store/vec4 v0x5555764d55f0_0, 4, 1;
T_12.127 ;
T_12.126 ; for-loop step statement
    %load/vec4 v0x5555764d5450_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555764d5450_0, 0, 32;
    %jmp T_12.124;
T_12.125 ; for-loop exit label
    %jmp T_12.104;
T_12.99 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555764d5450_0, 0, 32;
T_12.130 ; Top of for-loop
    %load/vec4 v0x5555764d5450_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_12.131, 5;
    %load/vec4 v0x5555764d5510_0;
    %load/vec4 v0x5555764d5450_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_12.135, 9;
    %load/vec4 v0x5555764d5720_0;
    %load/vec4 v0x5555764d5450_0;
    %part/s 1;
    %and;
T_12.135;
    %flag_set/vec4 8;
    %jmp/0xz  T_12.133, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x5555764d5450_0;
    %store/vec4 v0x5555764d55f0_0, 4, 1;
T_12.133 ;
T_12.132 ; for-loop step statement
    %load/vec4 v0x5555764d5450_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555764d5450_0, 0, 32;
    %jmp T_12.130;
T_12.131 ; for-loop exit label
    %jmp T_12.104;
T_12.100 ;
    %load/vec4 v0x5555764d5510_0;
    %cmpi/ne 0, 0, 1;
    %jmp/0xz  T_12.136, 4;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x5555764d55f0_0, 0, 1;
T_12.136 ;
    %jmp T_12.104;
T_12.101 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555764d5450_0, 0, 32;
T_12.138 ; Top of for-loop
    %load/vec4 v0x5555764d5450_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_12.139, 5;
    %load/vec4 v0x5555764d5510_0;
    %load/vec4 v0x5555764d5450_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_12.143, 9;
    %load/vec4 v0x5555764d5720_0;
    %load/vec4 v0x5555764d5450_0;
    %part/s 1;
    %nor/r;
    %and;
T_12.143;
    %flag_set/vec4 8;
    %jmp/0xz  T_12.141, 8;
    %load/vec4 v0x55557646f8c0_0;
    %load/vec4 v0x5555764d5450_0;
    %part/s 1;
    %inv;
    %ix/getv/s 4, v0x5555764d5450_0;
    %store/vec4 v0x5555764d55f0_0, 4, 1;
T_12.141 ;
T_12.140 ; for-loop step statement
    %load/vec4 v0x5555764d5450_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555764d5450_0, 0, 32;
    %jmp T_12.138;
T_12.139 ; for-loop exit label
    %jmp T_12.104;
T_12.102 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555764d5450_0, 0, 32;
T_12.144 ; Top of for-loop
    %load/vec4 v0x5555764d5450_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_12.145, 5;
    %load/vec4 v0x5555764d5510_0;
    %load/vec4 v0x5555764d5450_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_12.149, 9;
    %load/vec4 v0x5555764d5720_0;
    %load/vec4 v0x5555764d5450_0;
    %part/s 1;
    %and;
T_12.149;
    %flag_set/vec4 8;
    %jmp/0xz  T_12.147, 8;
    %load/vec4 v0x55557646f8c0_0;
    %load/vec4 v0x5555764d5450_0;
    %part/s 1;
    %inv;
    %ix/getv/s 4, v0x5555764d5450_0;
    %store/vec4 v0x5555764d55f0_0, 4, 1;
T_12.147 ;
T_12.146 ; for-loop step statement
    %load/vec4 v0x5555764d5450_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555764d5450_0, 0, 32;
    %jmp T_12.144;
T_12.145 ; for-loop exit label
    %jmp T_12.104;
T_12.104 ;
    %pop/vec4 1;
    %load/vec4 v0x5555764d55f0_0;
    %ret/vec4 0, 0, 1;  Assign to get_sw_write_next_value (store_vec4_to_lval)
    %end;
S_0x5555763ea1f0 .scope autofunction.vec4.s1, "get_sw_write_update" "get_sw_write_update" 9 47, 9 47 0, S_0x55557642e5f0;
 .timescale 0 0;
; Variable get_sw_write_update is vec4 return value of scope S_0x5555763ea1f0
v0x5555763ea4b0_0 .var "update", 2 0;
v0x5555763ea590_0 .var "write_done", 0 0;
v0x5555763ea630_0 .var "write_enable", 0 0;
v0x5555766587e0_0 .var "write_valid", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_rvd1.u_bit_field.get_sw_write_update ;
    %load/vec4 v0x5555766587e0_0;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x5555763ea4b0_0, 4, 1;
    %pushi/vec4 1, 0, 1;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x5555763ea4b0_0, 4, 1;
    %pushi/vec4 1, 0, 1;
    %ix/load 4, 2, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x5555763ea4b0_0, 4, 1;
    %load/vec4 v0x5555763ea4b0_0;
    %parti/s 1, 0, 2;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_13.151, 9;
    %load/vec4 v0x5555763ea4b0_0;
    %parti/s 1, 1, 2;
    %and;
T_13.151;
    %flag_set/vec4 8;
    %flag_get/vec4 8;
    %jmp/0 T_13.150, 8;
    %load/vec4 v0x5555763ea4b0_0;
    %parti/s 1, 2, 3;
    %and;
T_13.150;
    %ret/vec4 0, 0, 1;  Assign to get_sw_write_update (store_vec4_to_lval)
    %end;
S_0x55557665a060 .scope generate, "g_rvd2" "g_rvd2" 8 267, 8 267 0, S_0x555576616c90;
 .timescale 0 0;
S_0x55557665a240 .scope module, "u_bit_field" "rggen_bit_field" 8 273, 9 2 0, S_0x55557665a060;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "i_clk";
    .port_info 1 /INPUT 1 "i_rst_n";
    .port_info 2 /INPUT 1 "i_sw_write_valid";
    .port_info 3 /INPUT 1 "i_sw_write_enable";
    .port_info 4 /INPUT 1 "i_sw_read_valid";
    .port_info 5 /INPUT 18 "i_sw_mask";
    .port_info 6 /INPUT 18 "i_sw_write_data";
    .port_info 7 /OUTPUT 18 "o_sw_read_data";
    .port_info 8 /OUTPUT 18 "o_sw_value";
    .port_info 9 /OUTPUT 1 "o_write_trigger";
    .port_info 10 /OUTPUT 1 "o_read_trigger";
    .port_info 11 /INPUT 1 "i_hw_write_enable";
    .port_info 12 /INPUT 18 "i_hw_write_data";
    .port_info 13 /INPUT 18 "i_hw_set";
    .port_info 14 /INPUT 18 "i_hw_clear";
    .port_info 15 /INPUT 18 "i_value";
    .port_info 16 /INPUT 18 "i_mask";
    .port_info 17 /OUTPUT 18 "o_value";
    .port_info 18 /OUTPUT 18 "o_value_unmasked";
P_0x55557665a420 .param/l "EXTERNAL_MASK" 0 9 17, C4<0>;
P_0x55557665a460 .param/l "EXTERNAL_READ_DATA" 0 9 16, +C4<00000000000000000000000000000001>;
P_0x55557665a4a0 .param/l "HW_ACCESS" 0 9 12, C4<000>;
P_0x55557665a4e0 .param/l "HW_CLEAR_WIDTH" 0 9 14, +C4<00000000000000000000000000010010>;
P_0x55557665a520 .param/l "HW_SET_WIDTH" 0 9 13, +C4<00000000000000000000000000010010>;
P_0x55557665a560 .param/l "HW_WRITE_ENABLE_POLARITY" 0 9 11, C4<1>;
P_0x55557665a5a0 .param/l "INITIAL_VALUE" 0 9 4, C4<000000000000000000>;
P_0x55557665a5e0 .param/l "PRECEDENCE_ACCESS" 0 9 5, +C4<00000000000000000000000000000001>;
P_0x55557665a620 .param/l "STORAGE" 0 9 15, +C4<00000000000000000000000000000000>;
P_0x55557665a660 .param/l "SW_READABLE" 1 9 41, C4<1>;
P_0x55557665a6a0 .param/l "SW_READ_ACTION" 0 9 6, +C4<00000000000000000000000000000001>;
P_0x55557665a6e0 .param/l "SW_READ_UPDATE" 1 9 42, C4<0>;
P_0x55557665a720 .param/l "SW_WRITABLE" 1 9 40, C4<1>;
P_0x55557665a760 .param/l "SW_WRITE_ACTION" 0 9 7, +C4<00000000000000000000000000000001>;
P_0x55557665a7a0 .param/l "SW_WRITE_CONTROL" 0 9 8, C4<0>;
P_0x55557665a7e0 .param/l "SW_WRITE_ENABLE_POLARITY" 0 9 10, C4<1>;
P_0x55557665a820 .param/l "SW_WRITE_ONCE" 0 9 9, C4<0>;
P_0x55557665a860 .param/l "TRIGGER" 0 9 18, +C4<00000000000000000000000000000000>;
P_0x55557665a8a0 .param/l "WIDTH" 0 9 3, +C4<00000000000000000000000000010010>;
L_0x5555766ab590 .functor BUFZ 18, L_0x5555766ab520, C4<000000000000000000>, C4<000000000000000000>, C4<000000000000000000>;
L_0x5555766ab680 .functor BUFZ 18, L_0x5555766ab460, C4<000000000000000000>, C4<000000000000000000>, C4<000000000000000000>;
L_0x5555766ab930 .functor BUFZ 18, L_0x5555766ab460, C4<000000000000000000>, C4<000000000000000000>, C4<000000000000000000>;
L_0x5555766ab9d0 .functor BUFZ 18, L_0x5555766ab460, C4<000000000000000000>, C4<000000000000000000>, C4<000000000000000000>;
v0x55557665ecd0_0 .net "i_clk", 0 0, v0x5555766940a0_0;  alias, 1 drivers
L_0x7f7ed8bb8458 .functor BUFT 1, C4<000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x55557665ed90_0 .net "i_hw_clear", 17 0, L_0x7f7ed8bb8458;  1 drivers
L_0x7f7ed8bb8410 .functor BUFT 1, C4<000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x55557665ee70_0 .net "i_hw_set", 17 0, L_0x7f7ed8bb8410;  1 drivers
L_0x7f7ed8bb83c8 .functor BUFT 1, C4<000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x55557665ef30_0 .net "i_hw_write_data", 17 0, L_0x7f7ed8bb83c8;  1 drivers
L_0x7f7ed8bb8380 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x55557665f010_0 .net "i_hw_write_enable", 0 0, L_0x7f7ed8bb8380;  1 drivers
L_0x7f7ed8bb84a0 .functor BUFT 1, C4<111111111111111111>, C4<0>, C4<0>, C4<0>;
v0x55557665f120_0 .net "i_mask", 17 0, L_0x7f7ed8bb84a0;  1 drivers
v0x55557665f200_0 .net "i_rst_n", 0 0, L_0x5555766b3230;  alias, 1 drivers
v0x55557665f2a0_0 .net "i_sw_mask", 17 0, L_0x5555766abb30;  1 drivers
v0x55557665f380_0 .net "i_sw_read_valid", 0 0, L_0x555576695680;  alias, 1 drivers
v0x55557665f4b0_0 .net "i_sw_write_data", 17 0, L_0x5555766abbd0;  1 drivers
L_0x7f7ed8bb8338 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x55557665f570_0 .net "i_sw_write_enable", 0 0, L_0x7f7ed8bb8338;  1 drivers
v0x55557665f630_0 .net "i_sw_write_valid", 0 0, L_0x555576694ff0;  alias, 1 drivers
v0x55557665f700_0 .net "i_value", 17 0, o0x7f7ed8f6f3f8;  alias, 0 drivers
v0x55557665f7c0_0 .net "o_read_trigger", 0 0, L_0x5555766ab830;  1 drivers
v0x55557665f880_0 .net "o_sw_read_data", 17 0, L_0x5555766ab590;  1 drivers
v0x55557665f960_0 .net "o_sw_value", 17 0, L_0x5555766ab680;  1 drivers
v0x55557665fa40_0 .net "o_value", 17 0, L_0x5555766ab930;  1 drivers
v0x55557665fc30_0 .net "o_value_unmasked", 17 0, L_0x5555766ab9d0;  1 drivers
v0x55557665fd10_0 .net "o_write_trigger", 0 0, L_0x5555766ab740;  1 drivers
L_0x7f7ed8bb8218 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x55557665fdd0_0 .net "w_hw_update", 0 0, L_0x7f7ed8bb8218;  1 drivers
v0x55557665fe90_0 .net "w_read_data", 17 0, L_0x5555766ab520;  1 drivers
v0x55557665ff70_0 .net "w_sw_update", 1 0, L_0x5555766aab80;  1 drivers
L_0x7f7ed8bb8260 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x555576660050_0 .net "w_sw_write_done", 0 0, L_0x7f7ed8bb8260;  1 drivers
v0x555576660110_0 .net "w_trigger", 1 0, L_0x5555766ab320;  1 drivers
v0x5555766601f0_0 .net "w_value", 17 0, L_0x5555766ab460;  1 drivers
L_0x7f7ed8bb8188 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x5555766aab80 .concat8 [ 1 1 0 0], L_0x7f7ed8bb8188, L_0x5555766aad50;
L_0x7f7ed8bb82a8 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x7f7ed8bb82f0 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x5555766ab320 .concat8 [ 1 1 0 0], L_0x7f7ed8bb82a8, L_0x7f7ed8bb82f0;
L_0x5555766ab740 .part L_0x5555766ab320, 0, 1;
L_0x5555766ab830 .part L_0x5555766ab320, 1, 1;
S_0x55557665b4b0 .scope generate, "g_read_data" "g_read_data" 9 382, 9 382 0, S_0x55557665a240;
 .timescale 0 0;
L_0x5555766ab520 .functor BUFZ 18, o0x7f7ed8f6f3f8, C4<000000000000000000>, C4<000000000000000000>, C4<000000000000000000>;
S_0x55557665b640 .scope generate, "g_read_trigger" "g_read_trigger" 9 304, 9 304 0, S_0x55557665a240;
 .timescale 0 0;
v0x55557665b840_0 .net/2u *"_ivl_0", 0 0, L_0x7f7ed8bb82f0;  1 drivers
S_0x55557665b920 .scope generate, "g_sw_read_update" "g_sw_read_update" 9 245, 9 245 0, S_0x55557665a240;
 .timescale 0 0;
v0x55557665bb30_0 .net/2u *"_ivl_0", 0 0, L_0x7f7ed8bb8188;  1 drivers
S_0x55557665bc10 .scope generate, "g_sw_write_done" "g_sw_write_done" 9 268, 9 268 0, S_0x55557665a240;
 .timescale 0 0;
S_0x55557665bdf0 .scope generate, "g_sw_write_update" "g_sw_write_update" 9 252, 9 252 0, S_0x55557665a240;
 .timescale 0 0;
v0x55557665c020_0 .net *"_ivl_0", 17 0, L_0x5555766aac50;  1 drivers
L_0x7f7ed8bb81d0 .functor BUFT 1, C4<00000000000000000>, C4<0>, C4<0>, C4<0>;
v0x55557665c120_0 .net *"_ivl_3", 16 0, L_0x7f7ed8bb81d0;  1 drivers
v0x55557665c200_0 .net *"_ivl_5", 0 0, L_0x5555766aad50;  1 drivers
L_0x5555766aac50 .concat [ 1 17 0 0], L_0x555576694ff0, L_0x7f7ed8bb81d0;
L_0x5555766aad50 .ufunc/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_rvd2.u_bit_field.get_sw_write_update, 1, L_0x5555766aac50, L_0x7f7ed8bb8338, L_0x7f7ed8bb8260 (v0x55557665eba0_0, v0x55557665eae0_0, v0x55557665ea40_0) S_0x55557665e6a0;
S_0x55557665c2c0 .scope generate, "g_value" "g_value" 9 323, 9 323 0, S_0x55557665a240;
 .timescale 0 0;
L_0x5555766ab460 .functor BUFZ 18, o0x7f7ed8f6f3f8, C4<000000000000000000>, C4<000000000000000000>, C4<000000000000000000>;
S_0x55557665c4a0 .scope generate, "g_write_trigger" "g_write_trigger" 9 287, 9 287 0, S_0x55557665a240;
 .timescale 0 0;
v0x55557665c680_0 .net/2u *"_ivl_0", 0 0, L_0x7f7ed8bb82a8;  1 drivers
S_0x55557665c780 .scope generate, "genblk3" "genblk3" 9 259, 9 259 0, S_0x55557665a240;
 .timescale 0 0;
S_0x55557665c960 .scope autofunction.vec4.s18, "get_hw_next_value" "get_hw_next_value" 9 177, 9 177 0, S_0x55557665a240;
 .timescale 0 0;
v0x55557665cb40_0 .var "clear", 17 0;
v0x55557665cc40_0 .var "current_value", 17 0;
; Variable get_hw_next_value is vec4 return value of scope S_0x55557665c960
v0x55557665ce10_0 .var/i "i", 31 0;
v0x55557665cef0_0 .var "set", 17 0;
v0x55557665cfd0 .array "set_clear", 1 0, 17 0;
v0x55557665d090_0 .var "value", 17 0;
v0x55557665d170_0 .var "write_data", 17 0;
v0x55557665d250_0 .var "write_enable", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_rvd2.u_bit_field.get_hw_next_value ;
    %pushi/vec4 0, 0, 18;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x55557665cfd0, 4, 0;
    %pushi/vec4 0, 0, 18;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x55557665cfd0, 4, 0;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55557665ce10_0, 0, 32;
T_14.152 ; Top of for-loop
    %load/vec4 v0x55557665ce10_0;
    %cmpi/s 18, 0, 32;
	  %jmp/0xz T_14.153, 5;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x55557665cfd0, 4;
    %load/vec4 v0x55557665ce10_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_14.155, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x55557665ce10_0;
    %store/vec4 v0x55557665d090_0, 4, 1;
    %jmp T_14.156;
T_14.155 ;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x55557665cfd0, 4;
    %load/vec4 v0x55557665ce10_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_14.157, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x55557665ce10_0;
    %store/vec4 v0x55557665d090_0, 4, 1;
    %jmp T_14.158;
T_14.157 ;
    %load/vec4 v0x55557665cc40_0;
    %load/vec4 v0x55557665ce10_0;
    %part/s 1;
    %ix/getv/s 4, v0x55557665ce10_0;
    %store/vec4 v0x55557665d090_0, 4, 1;
T_14.158 ;
T_14.156 ;
T_14.154 ; for-loop step statement
    %load/vec4 v0x55557665ce10_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55557665ce10_0, 0, 32;
    %jmp T_14.152;
T_14.153 ; for-loop exit label
    %load/vec4 v0x55557665d090_0;
    %ret/vec4 0, 0, 18;  Assign to get_hw_next_value (store_vec4_to_lval)
    %end;
S_0x55557665d3a0 .scope autofunction.vec4.s1, "get_hw_update" "get_hw_update" 9 72, 9 72 0, S_0x55557665a240;
 .timescale 0 0;
v0x55557665d530_0 .var "clear", 17 0;
; Variable get_hw_update is vec4 return value of scope S_0x55557665d3a0
v0x55557665d6f0_0 .var "set", 17 0;
v0x55557665d7b0_0 .var "update", 2 0;
v0x55557665d890_0 .var "write_enable", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_rvd2.u_bit_field.get_hw_update ;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x55557665d7b0_0, 4, 1;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x55557665d7b0_0, 4, 1;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 2, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x55557665d7b0_0, 4, 1;
    %load/vec4 v0x55557665d7b0_0;
    %parti/s 1, 0, 2;
    %flag_set/vec4 8;
    %jmp/1 T_15.160, 8;
    %load/vec4 v0x55557665d7b0_0;
    %parti/s 1, 1, 2;
    %flag_set/vec4 9;
    %flag_or 8, 9;
T_15.160;
    %flag_get/vec4 8;
    %jmp/1 T_15.159, 8;
    %load/vec4 v0x55557665d7b0_0;
    %parti/s 1, 2, 3;
    %or;
T_15.159;
    %ret/vec4 0, 0, 1;  Assign to get_hw_update (store_vec4_to_lval)
    %end;
S_0x55557665d9a0 .scope autofunction.vec4.s18, "get_sw_read_next_value" "get_sw_read_next_value" 9 86, 9 86 0, S_0x55557665a240;
 .timescale 0 0;
v0x55557665db80_0 .var "current_value", 17 0;
; Variable get_sw_read_next_value is vec4 return value of scope S_0x55557665d9a0
v0x55557665dd60_0 .var "mask", 17 0;
v0x55557665de20_0 .var "value", 17 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_rvd2.u_bit_field.get_sw_read_next_value ;
    %pushi/vec4 1, 0, 32;
    %dup/vec4;
    %pushi/vec4 2, 0, 32;
    %cmp/u;
    %jmp/1 T_16.161, 6;
    %dup/vec4;
    %pushi/vec4 3, 0, 32;
    %cmp/u;
    %jmp/1 T_16.162, 6;
    %load/vec4 v0x55557665db80_0;
    %store/vec4 v0x55557665de20_0, 0, 18;
    %jmp T_16.164;
T_16.161 ;
    %load/vec4 v0x55557665dd60_0;
    %cmpi/ne 0, 0, 18;
    %flag_mov 8, 4;
    %jmp/0 T_16.165, 8;
    %pushi/vec4 0, 0, 18;
    %jmp/1 T_16.166, 8;
T_16.165 ; End of true expr.
    %load/vec4 v0x55557665db80_0;
    %jmp/0 T_16.166, 8;
 ; End of false expr.
    %blend;
T_16.166;
    %store/vec4 v0x55557665de20_0, 0, 18;
    %jmp T_16.164;
T_16.162 ;
    %load/vec4 v0x55557665dd60_0;
    %cmpi/ne 0, 0, 18;
    %flag_mov 8, 4;
    %jmp/0 T_16.167, 8;
    %pushi/vec4 262143, 0, 18;
    %jmp/1 T_16.168, 8;
T_16.167 ; End of true expr.
    %load/vec4 v0x55557665db80_0;
    %jmp/0 T_16.168, 8;
 ; End of false expr.
    %blend;
T_16.168;
    %store/vec4 v0x55557665de20_0, 0, 18;
    %jmp T_16.164;
T_16.164 ;
    %pop/vec4 1;
    %load/vec4 v0x55557665de20_0;
    %ret/vec4 0, 0, 18;  Assign to get_sw_read_next_value (store_vec4_to_lval)
    %end;
S_0x55557665df00 .scope autofunction.vec4.s18, "get_sw_write_next_value" "get_sw_write_next_value" 9 101, 9 101 0, S_0x55557665a240;
 .timescale 0 0;
v0x55557665e0e0_0 .var "current_value", 17 0;
; Variable get_sw_write_next_value is vec4 return value of scope S_0x55557665df00
v0x55557665e2c0_0 .var/i "i", 31 0;
v0x55557665e3b0_0 .var "mask", 17 0;
v0x55557665e490_0 .var "value", 17 0;
v0x55557665e5c0_0 .var "write_data", 17 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_rvd2.u_bit_field.get_sw_write_next_value ;
    %load/vec4 v0x55557665e0e0_0;
    %store/vec4 v0x55557665e490_0, 0, 18;
    %pushi/vec4 1, 0, 32;
    %dup/vec4;
    %pushi/vec4 1, 0, 32;
    %cmp/u;
    %jmp/1 T_17.169, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 32;
    %cmp/u;
    %jmp/1 T_17.170, 6;
    %dup/vec4;
    %pushi/vec4 3, 0, 32;
    %cmp/u;
    %jmp/1 T_17.171, 6;
    %dup/vec4;
    %pushi/vec4 4, 0, 32;
    %cmp/u;
    %jmp/1 T_17.172, 6;
    %dup/vec4;
    %pushi/vec4 5, 0, 32;
    %cmp/u;
    %jmp/1 T_17.173, 6;
    %dup/vec4;
    %pushi/vec4 6, 0, 32;
    %cmp/u;
    %jmp/1 T_17.174, 6;
    %dup/vec4;
    %pushi/vec4 7, 0, 32;
    %cmp/u;
    %jmp/1 T_17.175, 6;
    %dup/vec4;
    %pushi/vec4 8, 0, 32;
    %cmp/u;
    %jmp/1 T_17.176, 6;
    %dup/vec4;
    %pushi/vec4 9, 0, 32;
    %cmp/u;
    %jmp/1 T_17.177, 6;
    %jmp T_17.179;
T_17.169 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55557665e2c0_0, 0, 32;
T_17.180 ; Top of for-loop
    %load/vec4 v0x55557665e2c0_0;
    %cmpi/s 18, 0, 32;
	  %jmp/0xz T_17.181, 5;
    %load/vec4 v0x55557665e3b0_0;
    %load/vec4 v0x55557665e2c0_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_17.183, 8;
    %load/vec4 v0x55557665e5c0_0;
    %load/vec4 v0x55557665e2c0_0;
    %part/s 1;
    %ix/getv/s 4, v0x55557665e2c0_0;
    %store/vec4 v0x55557665e490_0, 4, 1;
T_17.183 ;
T_17.182 ; for-loop step statement
    %load/vec4 v0x55557665e2c0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55557665e2c0_0, 0, 32;
    %jmp T_17.180;
T_17.181 ; for-loop exit label
    %jmp T_17.179;
T_17.170 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55557665e2c0_0, 0, 32;
T_17.185 ; Top of for-loop
    %load/vec4 v0x55557665e2c0_0;
    %cmpi/s 18, 0, 32;
	  %jmp/0xz T_17.186, 5;
    %load/vec4 v0x55557665e3b0_0;
    %load/vec4 v0x55557665e2c0_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_17.190, 9;
    %load/vec4 v0x55557665e5c0_0;
    %load/vec4 v0x55557665e2c0_0;
    %part/s 1;
    %nor/r;
    %and;
T_17.190;
    %flag_set/vec4 8;
    %jmp/0xz  T_17.188, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x55557665e2c0_0;
    %store/vec4 v0x55557665e490_0, 4, 1;
T_17.188 ;
T_17.187 ; for-loop step statement
    %load/vec4 v0x55557665e2c0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55557665e2c0_0, 0, 32;
    %jmp T_17.185;
T_17.186 ; for-loop exit label
    %jmp T_17.179;
T_17.171 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55557665e2c0_0, 0, 32;
T_17.191 ; Top of for-loop
    %load/vec4 v0x55557665e2c0_0;
    %cmpi/s 18, 0, 32;
	  %jmp/0xz T_17.192, 5;
    %load/vec4 v0x55557665e3b0_0;
    %load/vec4 v0x55557665e2c0_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_17.196, 9;
    %load/vec4 v0x55557665e5c0_0;
    %load/vec4 v0x55557665e2c0_0;
    %part/s 1;
    %and;
T_17.196;
    %flag_set/vec4 8;
    %jmp/0xz  T_17.194, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x55557665e2c0_0;
    %store/vec4 v0x55557665e490_0, 4, 1;
T_17.194 ;
T_17.193 ; for-loop step statement
    %load/vec4 v0x55557665e2c0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55557665e2c0_0, 0, 32;
    %jmp T_17.191;
T_17.192 ; for-loop exit label
    %jmp T_17.179;
T_17.172 ;
    %load/vec4 v0x55557665e3b0_0;
    %cmpi/ne 0, 0, 18;
    %jmp/0xz  T_17.197, 4;
    %pushi/vec4 0, 0, 18;
    %store/vec4 v0x55557665e490_0, 0, 18;
T_17.197 ;
    %jmp T_17.179;
T_17.173 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55557665e2c0_0, 0, 32;
T_17.199 ; Top of for-loop
    %load/vec4 v0x55557665e2c0_0;
    %cmpi/s 18, 0, 32;
	  %jmp/0xz T_17.200, 5;
    %load/vec4 v0x55557665e3b0_0;
    %load/vec4 v0x55557665e2c0_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_17.204, 9;
    %load/vec4 v0x55557665e5c0_0;
    %load/vec4 v0x55557665e2c0_0;
    %part/s 1;
    %nor/r;
    %and;
T_17.204;
    %flag_set/vec4 8;
    %jmp/0xz  T_17.202, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x55557665e2c0_0;
    %store/vec4 v0x55557665e490_0, 4, 1;
T_17.202 ;
T_17.201 ; for-loop step statement
    %load/vec4 v0x55557665e2c0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55557665e2c0_0, 0, 32;
    %jmp T_17.199;
T_17.200 ; for-loop exit label
    %jmp T_17.179;
T_17.174 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55557665e2c0_0, 0, 32;
T_17.205 ; Top of for-loop
    %load/vec4 v0x55557665e2c0_0;
    %cmpi/s 18, 0, 32;
	  %jmp/0xz T_17.206, 5;
    %load/vec4 v0x55557665e3b0_0;
    %load/vec4 v0x55557665e2c0_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_17.210, 9;
    %load/vec4 v0x55557665e5c0_0;
    %load/vec4 v0x55557665e2c0_0;
    %part/s 1;
    %and;
T_17.210;
    %flag_set/vec4 8;
    %jmp/0xz  T_17.208, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x55557665e2c0_0;
    %store/vec4 v0x55557665e490_0, 4, 1;
T_17.208 ;
T_17.207 ; for-loop step statement
    %load/vec4 v0x55557665e2c0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55557665e2c0_0, 0, 32;
    %jmp T_17.205;
T_17.206 ; for-loop exit label
    %jmp T_17.179;
T_17.175 ;
    %load/vec4 v0x55557665e3b0_0;
    %cmpi/ne 0, 0, 18;
    %jmp/0xz  T_17.211, 4;
    %pushi/vec4 262143, 0, 18;
    %store/vec4 v0x55557665e490_0, 0, 18;
T_17.211 ;
    %jmp T_17.179;
T_17.176 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55557665e2c0_0, 0, 32;
T_17.213 ; Top of for-loop
    %load/vec4 v0x55557665e2c0_0;
    %cmpi/s 18, 0, 32;
	  %jmp/0xz T_17.214, 5;
    %load/vec4 v0x55557665e3b0_0;
    %load/vec4 v0x55557665e2c0_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_17.218, 9;
    %load/vec4 v0x55557665e5c0_0;
    %load/vec4 v0x55557665e2c0_0;
    %part/s 1;
    %nor/r;
    %and;
T_17.218;
    %flag_set/vec4 8;
    %jmp/0xz  T_17.216, 8;
    %load/vec4 v0x55557665e0e0_0;
    %load/vec4 v0x55557665e2c0_0;
    %part/s 1;
    %inv;
    %ix/getv/s 4, v0x55557665e2c0_0;
    %store/vec4 v0x55557665e490_0, 4, 1;
T_17.216 ;
T_17.215 ; for-loop step statement
    %load/vec4 v0x55557665e2c0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55557665e2c0_0, 0, 32;
    %jmp T_17.213;
T_17.214 ; for-loop exit label
    %jmp T_17.179;
T_17.177 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55557665e2c0_0, 0, 32;
T_17.219 ; Top of for-loop
    %load/vec4 v0x55557665e2c0_0;
    %cmpi/s 18, 0, 32;
	  %jmp/0xz T_17.220, 5;
    %load/vec4 v0x55557665e3b0_0;
    %load/vec4 v0x55557665e2c0_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_17.224, 9;
    %load/vec4 v0x55557665e5c0_0;
    %load/vec4 v0x55557665e2c0_0;
    %part/s 1;
    %and;
T_17.224;
    %flag_set/vec4 8;
    %jmp/0xz  T_17.222, 8;
    %load/vec4 v0x55557665e0e0_0;
    %load/vec4 v0x55557665e2c0_0;
    %part/s 1;
    %inv;
    %ix/getv/s 4, v0x55557665e2c0_0;
    %store/vec4 v0x55557665e490_0, 4, 1;
T_17.222 ;
T_17.221 ; for-loop step statement
    %load/vec4 v0x55557665e2c0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55557665e2c0_0, 0, 32;
    %jmp T_17.219;
T_17.220 ; for-loop exit label
    %jmp T_17.179;
T_17.179 ;
    %pop/vec4 1;
    %load/vec4 v0x55557665e490_0;
    %ret/vec4 0, 0, 18;  Assign to get_sw_write_next_value (store_vec4_to_lval)
    %end;
S_0x55557665e6a0 .scope autofunction.vec4.s1, "get_sw_write_update" "get_sw_write_update" 9 47, 9 47 0, S_0x55557665a240;
 .timescale 0 0;
; Variable get_sw_write_update is vec4 return value of scope S_0x55557665e6a0
v0x55557665e960_0 .var "update", 2 0;
v0x55557665ea40_0 .var "write_done", 0 0;
v0x55557665eae0_0 .var "write_enable", 0 0;
v0x55557665eba0_0 .var "write_valid", 17 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_rvd2.u_bit_field.get_sw_write_update ;
    %load/vec4 v0x55557665eba0_0;
    %pad/u 1;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x55557665e960_0, 4, 1;
    %pushi/vec4 1, 0, 1;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x55557665e960_0, 4, 1;
    %pushi/vec4 1, 0, 1;
    %ix/load 4, 2, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x55557665e960_0, 4, 1;
    %load/vec4 v0x55557665e960_0;
    %parti/s 1, 0, 2;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_18.226, 9;
    %load/vec4 v0x55557665e960_0;
    %parti/s 1, 1, 2;
    %and;
T_18.226;
    %flag_set/vec4 8;
    %flag_get/vec4 8;
    %jmp/0 T_18.225, 8;
    %load/vec4 v0x55557665e960_0;
    %parti/s 1, 2, 3;
    %and;
T_18.225;
    %ret/vec4 0, 0, 1;  Assign to get_sw_write_update (store_vec4_to_lval)
    %end;
S_0x5555766605d0 .scope generate, "g_s1wto" "g_s1wto" 8 173, 8 173 0, S_0x555576616c90;
 .timescale 0 0;
S_0x555576660760 .scope module, "u_bit_field" "rggen_bit_field" 8 184, 9 2 0, S_0x5555766605d0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "i_clk";
    .port_info 1 /INPUT 1 "i_rst_n";
    .port_info 2 /INPUT 1 "i_sw_write_valid";
    .port_info 3 /INPUT 1 "i_sw_write_enable";
    .port_info 4 /INPUT 1 "i_sw_read_valid";
    .port_info 5 /INPUT 1 "i_sw_mask";
    .port_info 6 /INPUT 1 "i_sw_write_data";
    .port_info 7 /OUTPUT 1 "o_sw_read_data";
    .port_info 8 /OUTPUT 1 "o_sw_value";
    .port_info 9 /OUTPUT 1 "o_write_trigger";
    .port_info 10 /OUTPUT 1 "o_read_trigger";
    .port_info 11 /INPUT 1 "i_hw_write_enable";
    .port_info 12 /INPUT 1 "i_hw_write_data";
    .port_info 13 /INPUT 1 "i_hw_set";
    .port_info 14 /INPUT 1 "i_hw_clear";
    .port_info 15 /INPUT 1 "i_value";
    .port_info 16 /INPUT 1 "i_mask";
    .port_info 17 /OUTPUT 1 "o_value";
    .port_info 18 /OUTPUT 1 "o_value_unmasked";
P_0x555576660960 .param/l "EXTERNAL_MASK" 0 9 17, C4<0>;
P_0x5555766609a0 .param/l "EXTERNAL_READ_DATA" 0 9 16, +C4<00000000000000000000000000000000>;
P_0x5555766609e0 .param/l "HW_ACCESS" 0 9 12, C4<010>;
P_0x555576660a20 .param/l "HW_CLEAR_WIDTH" 0 9 14, +C4<00000000000000000000000000000001>;
P_0x555576660a60 .param/l "HW_SET_WIDTH" 0 9 13, +C4<00000000000000000000000000000001>;
P_0x555576660aa0 .param/l "HW_WRITE_ENABLE_POLARITY" 0 9 11, C4<1>;
P_0x555576660ae0 .param/l "INITIAL_VALUE" 0 9 4, C4<0>;
P_0x555576660b20 .param/l "PRECEDENCE_ACCESS" 0 9 5, +C4<00000000000000000000000000000001>;
P_0x555576660b60 .param/l "STORAGE" 0 9 15, +C4<00000000000000000000000000000001>;
P_0x555576660ba0 .param/l "SW_READABLE" 1 9 41, C4<1>;
P_0x555576660be0 .param/l "SW_READ_ACTION" 0 9 6, +C4<00000000000000000000000000000001>;
P_0x555576660c20 .param/l "SW_READ_UPDATE" 1 9 42, C4<0>;
P_0x555576660c60 .param/l "SW_WRITABLE" 1 9 40, C4<1>;
P_0x555576660ca0 .param/l "SW_WRITE_ACTION" 0 9 7, +C4<00000000000000000000000000000010>;
P_0x555576660ce0 .param/l "SW_WRITE_CONTROL" 0 9 8, C4<0>;
P_0x555576660d20 .param/l "SW_WRITE_ENABLE_POLARITY" 0 9 10, C4<1>;
P_0x555576660d60 .param/l "SW_WRITE_ONCE" 0 9 9, +C4<00000000000000000000000000000000>;
P_0x555576660da0 .param/l "TRIGGER" 0 9 18, +C4<00000000000000000000000000000001>;
P_0x555576660de0 .param/l "WIDTH" 0 9 3, +C4<00000000000000000000000000000001>;
L_0x5555766a8390 .functor BUFZ 1, L_0x5555766a82a0, C4<0>, C4<0>, C4<0>;
L_0x5555766a8450 .functor BUFZ 1, v0x555576662af0_0, C4<0>, C4<0>, C4<0>;
L_0x5555766a86c0 .functor BUFZ 1, v0x555576662af0_0, C4<0>, C4<0>, C4<0>;
L_0x5555766a8810 .functor BUFZ 1, v0x555576662af0_0, C4<0>, C4<0>, C4<0>;
v0x5555766652d0_0 .net "i_clk", 0 0, v0x5555766940a0_0;  alias, 1 drivers
L_0x7f7ed8bb7ac8 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x5555766654a0_0 .net "i_hw_clear", 0 0, L_0x7f7ed8bb7ac8;  1 drivers
v0x555576665580_0 .net "i_hw_set", 0 0, L_0x5555766b2b80;  alias, 1 drivers
L_0x7f7ed8bb7a80 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x555576665650_0 .net "i_hw_write_data", 0 0, L_0x7f7ed8bb7a80;  1 drivers
L_0x7f7ed8bb7a38 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x555576665710_0 .net "i_hw_write_enable", 0 0, L_0x7f7ed8bb7a38;  1 drivers
L_0x7f7ed8bb7b58 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v0x555576665820_0 .net "i_mask", 0 0, L_0x7f7ed8bb7b58;  1 drivers
v0x555576665900_0 .net "i_rst_n", 0 0, L_0x5555766b3230;  alias, 1 drivers
v0x5555766659a0_0 .net "i_sw_mask", 0 0, L_0x5555766a88b0;  1 drivers
v0x555576665a80_0 .net "i_sw_read_valid", 0 0, L_0x555576695680;  alias, 1 drivers
v0x555576665b20_0 .net "i_sw_write_data", 0 0, L_0x5555766a8950;  1 drivers
L_0x7f7ed8bb79f0 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v0x555576665c00_0 .net "i_sw_write_enable", 0 0, L_0x7f7ed8bb79f0;  1 drivers
v0x555576665cc0_0 .net "i_sw_write_valid", 0 0, L_0x555576694ff0;  alias, 1 drivers
L_0x7f7ed8bb7b10 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x555576665db0_0 .net "i_value", 0 0, L_0x7f7ed8bb7b10;  1 drivers
v0x555576665e90_0 .net "o_read_trigger", 0 0, L_0x5555766a85f0;  1 drivers
v0x555576665f50_0 .net "o_sw_read_data", 0 0, L_0x5555766a8390;  1 drivers
v0x555576666030_0 .net "o_sw_value", 0 0, L_0x5555766a8450;  1 drivers
v0x555576666110_0 .net "o_value", 0 0, L_0x5555766a86c0;  alias, 1 drivers
v0x555576666300_0 .net "o_value_unmasked", 0 0, L_0x5555766a8810;  1 drivers
v0x5555766663e0_0 .net "o_write_trigger", 0 0, L_0x5555766a84c0;  alias, 1 drivers
v0x555576666480_0 .net "w_hw_update", 0 0, L_0x5555766a7d60;  1 drivers
v0x555576666520_0 .net "w_read_data", 0 0, L_0x5555766a82a0;  1 drivers
v0x555576666600_0 .net "w_sw_update", 1 0, L_0x5555766a7b90;  1 drivers
L_0x7f7ed8bb79a8 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x5555766666e0_0 .net "w_sw_write_done", 0 0, L_0x7f7ed8bb79a8;  1 drivers
v0x5555766667a0_0 .net "w_trigger", 1 0, L_0x5555766a7ff0;  1 drivers
v0x555576666880_0 .net "w_value", 0 0, v0x555576662af0_0;  1 drivers
L_0x7f7ed8bb7960 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x5555766a7b90 .concat8 [ 1 1 0 0], L_0x7f7ed8bb7960, L_0x5555766a7c60;
L_0x5555766a7ff0 .concat8 [ 1 1 0 0], v0x555576662ed0_0, v0x555576662060_0;
L_0x5555766a84c0 .part L_0x5555766a7ff0, 0, 1;
L_0x5555766a85f0 .part L_0x5555766a7ff0, 1, 1;
S_0x5555766619b0 .scope generate, "g_hw_update" "g_hw_update" 9 259, 9 259 0, S_0x555576660760;
 .timescale 0 0;
L_0x5555766a7d60 .ufunc/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_s1wto.u_bit_field.get_hw_update, 1, L_0x7f7ed8bb7a38, L_0x5555766b2b80, L_0x7f7ed8bb7ac8 (v0x555576663e90_0, v0x555576663cf0_0, v0x555576663b30_0) S_0x5555766639a0;
S_0x555576661b90 .scope generate, "g_read_data" "g_read_data" 9 382, 9 382 0, S_0x555576660760;
 .timescale 0 0;
L_0x5555766a82a0 .functor BUFZ 1, v0x555576662af0_0, C4<0>, C4<0>, C4<0>;
S_0x555576661d90 .scope generate, "g_read_trigger" "g_read_trigger" 9 304, 9 304 0, S_0x555576660760;
 .timescale 0 0;
v0x555576661fa0_0 .net *"_ivl_1", 0 0, v0x555576662060_0;  1 drivers
v0x555576662060_0 .var "r_trigger", 0 0;
S_0x555576662120 .scope generate, "g_sw_read_update" "g_sw_read_update" 9 245, 9 245 0, S_0x555576660760;
 .timescale 0 0;
v0x555576662300_0 .net/2u *"_ivl_0", 0 0, L_0x7f7ed8bb7960;  1 drivers
S_0x555576662400 .scope generate, "g_sw_write_done" "g_sw_write_done" 9 268, 9 268 0, S_0x555576660760;
 .timescale 0 0;
S_0x555576662630 .scope generate, "g_sw_write_update" "g_sw_write_update" 9 252, 9 252 0, S_0x555576660760;
 .timescale 0 0;
v0x555576662810_0 .net *"_ivl_1", 0 0, L_0x5555766a7c60;  1 drivers
L_0x5555766a7c60 .ufunc/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_s1wto.u_bit_field.get_sw_write_update, 1, L_0x555576694ff0, L_0x7f7ed8bb79f0, L_0x7f7ed8bb79a8 (v0x5555766651a0_0, v0x5555766650e0_0, v0x555576665040_0) S_0x555576664ca0;
S_0x555576662910 .scope generate, "g_value" "g_value" 9 326, 9 326 0, S_0x555576660760;
 .timescale 0 0;
v0x555576662af0_0 .var "r_value", 0 0;
S_0x555576662bf0 .scope generate, "g_write_trigger" "g_write_trigger" 9 287, 9 287 0, S_0x555576660760;
 .timescale 0 0;
v0x555576662dd0_0 .net *"_ivl_1", 0 0, v0x555576662ed0_0;  1 drivers
v0x555576662ed0_0 .var "r_trigger", 0 0;
S_0x555576662f90 .scope autofunction.vec4.s1, "get_hw_next_value" "get_hw_next_value" 9 177, 9 177 0, S_0x555576660760;
 .timescale 0 0;
v0x555576663170_0 .var "clear", 0 0;
v0x555576663270_0 .var "current_value", 0 0;
; Variable get_hw_next_value is vec4 return value of scope S_0x555576662f90
v0x555576663410_0 .var/i "i", 31 0;
v0x5555766634f0_0 .var "set", 0 0;
v0x5555766635d0 .array "set_clear", 1 0, 0 0;
v0x555576663690_0 .var "value", 0 0;
v0x555576663770_0 .var "write_data", 0 0;
v0x555576663850_0 .var "write_enable", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_s1wto.u_bit_field.get_hw_next_value ;
    %load/vec4 v0x5555766634f0_0;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x5555766635d0, 4, 0;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x5555766635d0, 4, 0;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x555576663410_0, 0, 32;
T_19.227 ; Top of for-loop
    %load/vec4 v0x555576663410_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_19.228, 5;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x5555766635d0, 4;
    %load/vec4 v0x555576663410_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_19.230, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x555576663410_0;
    %store/vec4 v0x555576663690_0, 4, 1;
    %jmp T_19.231;
T_19.230 ;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x5555766635d0, 4;
    %load/vec4 v0x555576663410_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_19.232, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x555576663410_0;
    %store/vec4 v0x555576663690_0, 4, 1;
    %jmp T_19.233;
T_19.232 ;
    %load/vec4 v0x555576663270_0;
    %load/vec4 v0x555576663410_0;
    %part/s 1;
    %ix/getv/s 4, v0x555576663410_0;
    %store/vec4 v0x555576663690_0, 4, 1;
T_19.233 ;
T_19.231 ;
T_19.229 ; for-loop step statement
    %load/vec4 v0x555576663410_0;
    %addi 1, 0, 32;
    %store/vec4 v0x555576663410_0, 0, 32;
    %jmp T_19.227;
T_19.228 ; for-loop exit label
    %load/vec4 v0x555576663690_0;
    %ret/vec4 0, 0, 1;  Assign to get_hw_next_value (store_vec4_to_lval)
    %end;
S_0x5555766639a0 .scope autofunction.vec4.s1, "get_hw_update" "get_hw_update" 9 72, 9 72 0, S_0x555576660760;
 .timescale 0 0;
v0x555576663b30_0 .var "clear", 0 0;
; Variable get_hw_update is vec4 return value of scope S_0x5555766639a0
v0x555576663cf0_0 .var "set", 0 0;
v0x555576663db0_0 .var "update", 2 0;
v0x555576663e90_0 .var "write_enable", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_s1wto.u_bit_field.get_hw_update ;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x555576663db0_0, 4, 1;
    %pushi/vec4 1, 0, 1;
    %flag_set/vec4 8;
    %flag_get/vec4 8;
    %jmp/0 T_20.234, 8;
    %load/vec4 v0x555576663cf0_0;
    %pushi/vec4 0, 0, 1;
    %cmp/ne;
    %flag_get/vec4 4;
    %and;
T_20.234;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x555576663db0_0, 4, 1;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 2, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x555576663db0_0, 4, 1;
    %load/vec4 v0x555576663db0_0;
    %parti/s 1, 0, 2;
    %flag_set/vec4 8;
    %jmp/1 T_20.236, 8;
    %load/vec4 v0x555576663db0_0;
    %parti/s 1, 1, 2;
    %flag_set/vec4 9;
    %flag_or 8, 9;
T_20.236;
    %flag_get/vec4 8;
    %jmp/1 T_20.235, 8;
    %load/vec4 v0x555576663db0_0;
    %parti/s 1, 2, 3;
    %or;
T_20.235;
    %ret/vec4 0, 0, 1;  Assign to get_hw_update (store_vec4_to_lval)
    %end;
S_0x555576663fa0 .scope autofunction.vec4.s1, "get_sw_read_next_value" "get_sw_read_next_value" 9 86, 9 86 0, S_0x555576660760;
 .timescale 0 0;
v0x555576664180_0 .var "current_value", 0 0;
; Variable get_sw_read_next_value is vec4 return value of scope S_0x555576663fa0
v0x555576664360_0 .var "mask", 0 0;
v0x555576664420_0 .var "value", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_s1wto.u_bit_field.get_sw_read_next_value ;
    %pushi/vec4 1, 0, 32;
    %dup/vec4;
    %pushi/vec4 2, 0, 32;
    %cmp/u;
    %jmp/1 T_21.237, 6;
    %dup/vec4;
    %pushi/vec4 3, 0, 32;
    %cmp/u;
    %jmp/1 T_21.238, 6;
    %load/vec4 v0x555576664180_0;
    %store/vec4 v0x555576664420_0, 0, 1;
    %jmp T_21.240;
T_21.237 ;
    %load/vec4 v0x555576664360_0;
    %cmpi/ne 0, 0, 1;
    %flag_mov 8, 4;
    %jmp/0 T_21.241, 8;
    %pushi/vec4 0, 0, 1;
    %jmp/1 T_21.242, 8;
T_21.241 ; End of true expr.
    %load/vec4 v0x555576664180_0;
    %jmp/0 T_21.242, 8;
 ; End of false expr.
    %blend;
T_21.242;
    %store/vec4 v0x555576664420_0, 0, 1;
    %jmp T_21.240;
T_21.238 ;
    %load/vec4 v0x555576664360_0;
    %cmpi/ne 0, 0, 1;
    %flag_mov 8, 4;
    %jmp/0 T_21.243, 8;
    %pushi/vec4 1, 0, 1;
    %jmp/1 T_21.244, 8;
T_21.243 ; End of true expr.
    %load/vec4 v0x555576664180_0;
    %jmp/0 T_21.244, 8;
 ; End of false expr.
    %blend;
T_21.244;
    %store/vec4 v0x555576664420_0, 0, 1;
    %jmp T_21.240;
T_21.240 ;
    %pop/vec4 1;
    %load/vec4 v0x555576664420_0;
    %ret/vec4 0, 0, 1;  Assign to get_sw_read_next_value (store_vec4_to_lval)
    %end;
S_0x555576664500 .scope autofunction.vec4.s1, "get_sw_write_next_value" "get_sw_write_next_value" 9 101, 9 101 0, S_0x555576660760;
 .timescale 0 0;
v0x5555766646e0_0 .var "current_value", 0 0;
; Variable get_sw_write_next_value is vec4 return value of scope S_0x555576664500
v0x5555766648c0_0 .var/i "i", 31 0;
v0x5555766649b0_0 .var "mask", 0 0;
v0x555576664a90_0 .var "value", 0 0;
v0x555576664bc0_0 .var "write_data", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_s1wto.u_bit_field.get_sw_write_next_value ;
    %load/vec4 v0x5555766646e0_0;
    %store/vec4 v0x555576664a90_0, 0, 1;
    %pushi/vec4 2, 0, 32;
    %dup/vec4;
    %pushi/vec4 1, 0, 32;
    %cmp/u;
    %jmp/1 T_22.245, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 32;
    %cmp/u;
    %jmp/1 T_22.246, 6;
    %dup/vec4;
    %pushi/vec4 3, 0, 32;
    %cmp/u;
    %jmp/1 T_22.247, 6;
    %dup/vec4;
    %pushi/vec4 4, 0, 32;
    %cmp/u;
    %jmp/1 T_22.248, 6;
    %dup/vec4;
    %pushi/vec4 5, 0, 32;
    %cmp/u;
    %jmp/1 T_22.249, 6;
    %dup/vec4;
    %pushi/vec4 6, 0, 32;
    %cmp/u;
    %jmp/1 T_22.250, 6;
    %dup/vec4;
    %pushi/vec4 7, 0, 32;
    %cmp/u;
    %jmp/1 T_22.251, 6;
    %dup/vec4;
    %pushi/vec4 8, 0, 32;
    %cmp/u;
    %jmp/1 T_22.252, 6;
    %dup/vec4;
    %pushi/vec4 9, 0, 32;
    %cmp/u;
    %jmp/1 T_22.253, 6;
    %jmp T_22.255;
T_22.245 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555766648c0_0, 0, 32;
T_22.256 ; Top of for-loop
    %load/vec4 v0x5555766648c0_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_22.257, 5;
    %load/vec4 v0x5555766649b0_0;
    %load/vec4 v0x5555766648c0_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_22.259, 8;
    %load/vec4 v0x555576664bc0_0;
    %load/vec4 v0x5555766648c0_0;
    %part/s 1;
    %ix/getv/s 4, v0x5555766648c0_0;
    %store/vec4 v0x555576664a90_0, 4, 1;
T_22.259 ;
T_22.258 ; for-loop step statement
    %load/vec4 v0x5555766648c0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555766648c0_0, 0, 32;
    %jmp T_22.256;
T_22.257 ; for-loop exit label
    %jmp T_22.255;
T_22.246 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555766648c0_0, 0, 32;
T_22.261 ; Top of for-loop
    %load/vec4 v0x5555766648c0_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_22.262, 5;
    %load/vec4 v0x5555766649b0_0;
    %load/vec4 v0x5555766648c0_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_22.266, 9;
    %load/vec4 v0x555576664bc0_0;
    %load/vec4 v0x5555766648c0_0;
    %part/s 1;
    %nor/r;
    %and;
T_22.266;
    %flag_set/vec4 8;
    %jmp/0xz  T_22.264, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x5555766648c0_0;
    %store/vec4 v0x555576664a90_0, 4, 1;
T_22.264 ;
T_22.263 ; for-loop step statement
    %load/vec4 v0x5555766648c0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555766648c0_0, 0, 32;
    %jmp T_22.261;
T_22.262 ; for-loop exit label
    %jmp T_22.255;
T_22.247 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555766648c0_0, 0, 32;
T_22.267 ; Top of for-loop
    %load/vec4 v0x5555766648c0_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_22.268, 5;
    %load/vec4 v0x5555766649b0_0;
    %load/vec4 v0x5555766648c0_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_22.272, 9;
    %load/vec4 v0x555576664bc0_0;
    %load/vec4 v0x5555766648c0_0;
    %part/s 1;
    %and;
T_22.272;
    %flag_set/vec4 8;
    %jmp/0xz  T_22.270, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x5555766648c0_0;
    %store/vec4 v0x555576664a90_0, 4, 1;
T_22.270 ;
T_22.269 ; for-loop step statement
    %load/vec4 v0x5555766648c0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555766648c0_0, 0, 32;
    %jmp T_22.267;
T_22.268 ; for-loop exit label
    %jmp T_22.255;
T_22.248 ;
    %load/vec4 v0x5555766649b0_0;
    %cmpi/ne 0, 0, 1;
    %jmp/0xz  T_22.273, 4;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x555576664a90_0, 0, 1;
T_22.273 ;
    %jmp T_22.255;
T_22.249 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555766648c0_0, 0, 32;
T_22.275 ; Top of for-loop
    %load/vec4 v0x5555766648c0_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_22.276, 5;
    %load/vec4 v0x5555766649b0_0;
    %load/vec4 v0x5555766648c0_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_22.280, 9;
    %load/vec4 v0x555576664bc0_0;
    %load/vec4 v0x5555766648c0_0;
    %part/s 1;
    %nor/r;
    %and;
T_22.280;
    %flag_set/vec4 8;
    %jmp/0xz  T_22.278, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x5555766648c0_0;
    %store/vec4 v0x555576664a90_0, 4, 1;
T_22.278 ;
T_22.277 ; for-loop step statement
    %load/vec4 v0x5555766648c0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555766648c0_0, 0, 32;
    %jmp T_22.275;
T_22.276 ; for-loop exit label
    %jmp T_22.255;
T_22.250 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555766648c0_0, 0, 32;
T_22.281 ; Top of for-loop
    %load/vec4 v0x5555766648c0_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_22.282, 5;
    %load/vec4 v0x5555766649b0_0;
    %load/vec4 v0x5555766648c0_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_22.286, 9;
    %load/vec4 v0x555576664bc0_0;
    %load/vec4 v0x5555766648c0_0;
    %part/s 1;
    %and;
T_22.286;
    %flag_set/vec4 8;
    %jmp/0xz  T_22.284, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x5555766648c0_0;
    %store/vec4 v0x555576664a90_0, 4, 1;
T_22.284 ;
T_22.283 ; for-loop step statement
    %load/vec4 v0x5555766648c0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555766648c0_0, 0, 32;
    %jmp T_22.281;
T_22.282 ; for-loop exit label
    %jmp T_22.255;
T_22.251 ;
    %load/vec4 v0x5555766649b0_0;
    %cmpi/ne 0, 0, 1;
    %jmp/0xz  T_22.287, 4;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x555576664a90_0, 0, 1;
T_22.287 ;
    %jmp T_22.255;
T_22.252 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555766648c0_0, 0, 32;
T_22.289 ; Top of for-loop
    %load/vec4 v0x5555766648c0_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_22.290, 5;
    %load/vec4 v0x5555766649b0_0;
    %load/vec4 v0x5555766648c0_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_22.294, 9;
    %load/vec4 v0x555576664bc0_0;
    %load/vec4 v0x5555766648c0_0;
    %part/s 1;
    %nor/r;
    %and;
T_22.294;
    %flag_set/vec4 8;
    %jmp/0xz  T_22.292, 8;
    %load/vec4 v0x5555766646e0_0;
    %load/vec4 v0x5555766648c0_0;
    %part/s 1;
    %inv;
    %ix/getv/s 4, v0x5555766648c0_0;
    %store/vec4 v0x555576664a90_0, 4, 1;
T_22.292 ;
T_22.291 ; for-loop step statement
    %load/vec4 v0x5555766648c0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555766648c0_0, 0, 32;
    %jmp T_22.289;
T_22.290 ; for-loop exit label
    %jmp T_22.255;
T_22.253 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555766648c0_0, 0, 32;
T_22.295 ; Top of for-loop
    %load/vec4 v0x5555766648c0_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_22.296, 5;
    %load/vec4 v0x5555766649b0_0;
    %load/vec4 v0x5555766648c0_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_22.300, 9;
    %load/vec4 v0x555576664bc0_0;
    %load/vec4 v0x5555766648c0_0;
    %part/s 1;
    %and;
T_22.300;
    %flag_set/vec4 8;
    %jmp/0xz  T_22.298, 8;
    %load/vec4 v0x5555766646e0_0;
    %load/vec4 v0x5555766648c0_0;
    %part/s 1;
    %inv;
    %ix/getv/s 4, v0x5555766648c0_0;
    %store/vec4 v0x555576664a90_0, 4, 1;
T_22.298 ;
T_22.297 ; for-loop step statement
    %load/vec4 v0x5555766648c0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555766648c0_0, 0, 32;
    %jmp T_22.295;
T_22.296 ; for-loop exit label
    %jmp T_22.255;
T_22.255 ;
    %pop/vec4 1;
    %load/vec4 v0x555576664a90_0;
    %ret/vec4 0, 0, 1;  Assign to get_sw_write_next_value (store_vec4_to_lval)
    %end;
S_0x555576664ca0 .scope autofunction.vec4.s1, "get_sw_write_update" "get_sw_write_update" 9 47, 9 47 0, S_0x555576660760;
 .timescale 0 0;
; Variable get_sw_write_update is vec4 return value of scope S_0x555576664ca0
v0x555576664f60_0 .var "update", 2 0;
v0x555576665040_0 .var "write_done", 0 0;
v0x5555766650e0_0 .var "write_enable", 0 0;
v0x5555766651a0_0 .var "write_valid", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_s1wto.u_bit_field.get_sw_write_update ;
    %load/vec4 v0x5555766651a0_0;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x555576664f60_0, 4, 1;
    %pushi/vec4 1, 0, 1;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x555576664f60_0, 4, 1;
    %pushi/vec4 1, 0, 1;
    %ix/load 4, 2, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x555576664f60_0, 4, 1;
    %load/vec4 v0x555576664f60_0;
    %parti/s 1, 0, 2;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_23.302, 9;
    %load/vec4 v0x555576664f60_0;
    %parti/s 1, 1, 2;
    %and;
T_23.302;
    %flag_set/vec4 8;
    %flag_get/vec4 8;
    %jmp/0 T_23.301, 8;
    %load/vec4 v0x555576664f60_0;
    %parti/s 1, 2, 3;
    %and;
T_23.301;
    %ret/vec4 0, 0, 1;  Assign to get_sw_write_update (store_vec4_to_lval)
    %end;
S_0x555576666c60 .scope generate, "g_s2wto" "g_s2wto" 8 206, 8 206 0, S_0x555576616c90;
 .timescale 0 0;
S_0x555576666e90 .scope module, "u_bit_field" "rggen_bit_field" 8 217, 9 2 0, S_0x555576666c60;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "i_clk";
    .port_info 1 /INPUT 1 "i_rst_n";
    .port_info 2 /INPUT 1 "i_sw_write_valid";
    .port_info 3 /INPUT 1 "i_sw_write_enable";
    .port_info 4 /INPUT 1 "i_sw_read_valid";
    .port_info 5 /INPUT 1 "i_sw_mask";
    .port_info 6 /INPUT 1 "i_sw_write_data";
    .port_info 7 /OUTPUT 1 "o_sw_read_data";
    .port_info 8 /OUTPUT 1 "o_sw_value";
    .port_info 9 /OUTPUT 1 "o_write_trigger";
    .port_info 10 /OUTPUT 1 "o_read_trigger";
    .port_info 11 /INPUT 1 "i_hw_write_enable";
    .port_info 12 /INPUT 1 "i_hw_write_data";
    .port_info 13 /INPUT 1 "i_hw_set";
    .port_info 14 /INPUT 1 "i_hw_clear";
    .port_info 15 /INPUT 1 "i_value";
    .port_info 16 /INPUT 1 "i_mask";
    .port_info 17 /OUTPUT 1 "o_value";
    .port_info 18 /OUTPUT 1 "o_value_unmasked";
P_0x555576667090 .param/l "EXTERNAL_MASK" 0 9 17, C4<0>;
P_0x5555766670d0 .param/l "EXTERNAL_READ_DATA" 0 9 16, +C4<00000000000000000000000000000000>;
P_0x555576667110 .param/l "HW_ACCESS" 0 9 12, C4<010>;
P_0x555576667150 .param/l "HW_CLEAR_WIDTH" 0 9 14, +C4<00000000000000000000000000000001>;
P_0x555576667190 .param/l "HW_SET_WIDTH" 0 9 13, +C4<00000000000000000000000000000001>;
P_0x5555766671d0 .param/l "HW_WRITE_ENABLE_POLARITY" 0 9 11, C4<1>;
P_0x555576667210 .param/l "INITIAL_VALUE" 0 9 4, C4<0>;
P_0x555576667250 .param/l "PRECEDENCE_ACCESS" 0 9 5, +C4<00000000000000000000000000000001>;
P_0x555576667290 .param/l "STORAGE" 0 9 15, +C4<00000000000000000000000000000001>;
P_0x5555766672d0 .param/l "SW_READABLE" 1 9 41, C4<1>;
P_0x555576667310 .param/l "SW_READ_ACTION" 0 9 6, +C4<00000000000000000000000000000001>;
P_0x555576667350 .param/l "SW_READ_UPDATE" 1 9 42, C4<0>;
P_0x555576667390 .param/l "SW_WRITABLE" 1 9 40, C4<1>;
P_0x5555766673d0 .param/l "SW_WRITE_ACTION" 0 9 7, +C4<00000000000000000000000000000010>;
P_0x555576667410 .param/l "SW_WRITE_CONTROL" 0 9 8, C4<0>;
P_0x555576667450 .param/l "SW_WRITE_ENABLE_POLARITY" 0 9 10, C4<1>;
P_0x555576667490 .param/l "SW_WRITE_ONCE" 0 9 9, +C4<00000000000000000000000000000000>;
P_0x5555766674d0 .param/l "TRIGGER" 0 9 18, +C4<00000000000000000000000000000001>;
P_0x555576667510 .param/l "WIDTH" 0 9 3, +C4<00000000000000000000000000000001>;
L_0x5555766a93d0 .functor BUFZ 1, L_0x5555766a92e0, C4<0>, C4<0>, C4<0>;
L_0x5555766a9490 .functor BUFZ 1, v0x555576669190_0, C4<0>, C4<0>, C4<0>;
L_0x5555766a9700 .functor BUFZ 1, v0x555576669190_0, C4<0>, C4<0>, C4<0>;
L_0x5555766a9850 .functor BUFZ 1, v0x555576669190_0, C4<0>, C4<0>, C4<0>;
v0x55557666b970_0 .net "i_clk", 0 0, v0x5555766940a0_0;  alias, 1 drivers
L_0x7f7ed8bb7d08 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x55557666ba30_0 .net "i_hw_clear", 0 0, L_0x7f7ed8bb7d08;  1 drivers
v0x55557666bb10_0 .net "i_hw_set", 0 0, L_0x5555766b2ae0;  alias, 1 drivers
L_0x7f7ed8bb7cc0 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x55557666bbe0_0 .net "i_hw_write_data", 0 0, L_0x7f7ed8bb7cc0;  1 drivers
L_0x7f7ed8bb7c78 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x55557666bca0_0 .net "i_hw_write_enable", 0 0, L_0x7f7ed8bb7c78;  1 drivers
L_0x7f7ed8bb7d98 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v0x55557666bdb0_0 .net "i_mask", 0 0, L_0x7f7ed8bb7d98;  1 drivers
v0x55557666be90_0 .net "i_rst_n", 0 0, L_0x5555766b3230;  alias, 1 drivers
v0x55557666c040_0 .net "i_sw_mask", 0 0, L_0x5555766a98f0;  1 drivers
v0x55557666c120_0 .net "i_sw_read_valid", 0 0, L_0x555576695680;  alias, 1 drivers
v0x55557666c1c0_0 .net "i_sw_write_data", 0 0, L_0x5555766a9990;  1 drivers
L_0x7f7ed8bb7c30 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v0x55557666c2a0_0 .net "i_sw_write_enable", 0 0, L_0x7f7ed8bb7c30;  1 drivers
v0x55557666c360_0 .net "i_sw_write_valid", 0 0, L_0x555576694ff0;  alias, 1 drivers
L_0x7f7ed8bb7d50 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x55557666c400_0 .net "i_value", 0 0, L_0x7f7ed8bb7d50;  1 drivers
v0x55557666c4e0_0 .net "o_read_trigger", 0 0, L_0x5555766a9630;  1 drivers
v0x55557666c5a0_0 .net "o_sw_read_data", 0 0, L_0x5555766a93d0;  1 drivers
v0x55557666c680_0 .net "o_sw_value", 0 0, L_0x5555766a9490;  1 drivers
v0x55557666c760_0 .net "o_value", 0 0, L_0x5555766a9700;  alias, 1 drivers
v0x55557666c950_0 .net "o_value_unmasked", 0 0, L_0x5555766a9850;  1 drivers
v0x55557666ca30_0 .net "o_write_trigger", 0 0, L_0x5555766a9500;  alias, 1 drivers
v0x55557666cad0_0 .net "w_hw_update", 0 0, L_0x5555766a8da0;  1 drivers
v0x55557666cb70_0 .net "w_read_data", 0 0, L_0x5555766a92e0;  1 drivers
v0x55557666cc50_0 .net "w_sw_update", 1 0, L_0x5555766a8b30;  1 drivers
L_0x7f7ed8bb7be8 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x55557666cd30_0 .net "w_sw_write_done", 0 0, L_0x7f7ed8bb7be8;  1 drivers
v0x55557666cdf0_0 .net "w_trigger", 1 0, L_0x5555766a9030;  1 drivers
v0x55557666ced0_0 .net "w_value", 0 0, v0x555576669190_0;  1 drivers
L_0x7f7ed8bb7ba0 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x5555766a8b30 .concat8 [ 1 1 0 0], L_0x7f7ed8bb7ba0, L_0x5555766a8c50;
L_0x5555766a9030 .concat8 [ 1 1 0 0], v0x555576669570_0, v0x555576668700_0;
L_0x5555766a9500 .part L_0x5555766a9030, 0, 1;
L_0x5555766a9630 .part L_0x5555766a9030, 1, 1;
S_0x555576668050 .scope generate, "g_hw_update" "g_hw_update" 9 259, 9 259 0, S_0x555576666e90;
 .timescale 0 0;
L_0x5555766a8da0 .ufunc/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_s2wto.u_bit_field.get_hw_update, 1, L_0x7f7ed8bb7c78, L_0x5555766b2ae0, L_0x7f7ed8bb7d08 (v0x55557666a530_0, v0x55557666a390_0, v0x55557666a1d0_0) S_0x55557666a040;
S_0x555576668230 .scope generate, "g_read_data" "g_read_data" 9 382, 9 382 0, S_0x555576666e90;
 .timescale 0 0;
L_0x5555766a92e0 .functor BUFZ 1, v0x555576669190_0, C4<0>, C4<0>, C4<0>;
S_0x555576668430 .scope generate, "g_read_trigger" "g_read_trigger" 9 304, 9 304 0, S_0x555576666e90;
 .timescale 0 0;
v0x555576668640_0 .net *"_ivl_1", 0 0, v0x555576668700_0;  1 drivers
v0x555576668700_0 .var "r_trigger", 0 0;
S_0x5555766687c0 .scope generate, "g_sw_read_update" "g_sw_read_update" 9 245, 9 245 0, S_0x555576666e90;
 .timescale 0 0;
v0x5555766689a0_0 .net/2u *"_ivl_0", 0 0, L_0x7f7ed8bb7ba0;  1 drivers
S_0x555576668aa0 .scope generate, "g_sw_write_done" "g_sw_write_done" 9 268, 9 268 0, S_0x555576666e90;
 .timescale 0 0;
S_0x555576668cd0 .scope generate, "g_sw_write_update" "g_sw_write_update" 9 252, 9 252 0, S_0x555576666e90;
 .timescale 0 0;
v0x555576668eb0_0 .net *"_ivl_1", 0 0, L_0x5555766a8c50;  1 drivers
L_0x5555766a8c50 .ufunc/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_s2wto.u_bit_field.get_sw_write_update, 1, L_0x555576694ff0, L_0x7f7ed8bb7c30, L_0x7f7ed8bb7be8 (v0x55557666b840_0, v0x55557666b780_0, v0x55557666b6e0_0) S_0x55557666b340;
S_0x555576668fb0 .scope generate, "g_value" "g_value" 9 326, 9 326 0, S_0x555576666e90;
 .timescale 0 0;
v0x555576669190_0 .var "r_value", 0 0;
S_0x555576669290 .scope generate, "g_write_trigger" "g_write_trigger" 9 287, 9 287 0, S_0x555576666e90;
 .timescale 0 0;
v0x555576669470_0 .net *"_ivl_1", 0 0, v0x555576669570_0;  1 drivers
v0x555576669570_0 .var "r_trigger", 0 0;
S_0x555576669630 .scope autofunction.vec4.s1, "get_hw_next_value" "get_hw_next_value" 9 177, 9 177 0, S_0x555576666e90;
 .timescale 0 0;
v0x555576669810_0 .var "clear", 0 0;
v0x555576669910_0 .var "current_value", 0 0;
; Variable get_hw_next_value is vec4 return value of scope S_0x555576669630
v0x555576669ab0_0 .var/i "i", 31 0;
v0x555576669b90_0 .var "set", 0 0;
v0x555576669c70 .array "set_clear", 1 0, 0 0;
v0x555576669d30_0 .var "value", 0 0;
v0x555576669e10_0 .var "write_data", 0 0;
v0x555576669ef0_0 .var "write_enable", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_s2wto.u_bit_field.get_hw_next_value ;
    %load/vec4 v0x555576669b90_0;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x555576669c70, 4, 0;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x555576669c70, 4, 0;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x555576669ab0_0, 0, 32;
T_24.303 ; Top of for-loop
    %load/vec4 v0x555576669ab0_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_24.304, 5;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x555576669c70, 4;
    %load/vec4 v0x555576669ab0_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_24.306, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x555576669ab0_0;
    %store/vec4 v0x555576669d30_0, 4, 1;
    %jmp T_24.307;
T_24.306 ;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x555576669c70, 4;
    %load/vec4 v0x555576669ab0_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_24.308, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x555576669ab0_0;
    %store/vec4 v0x555576669d30_0, 4, 1;
    %jmp T_24.309;
T_24.308 ;
    %load/vec4 v0x555576669910_0;
    %load/vec4 v0x555576669ab0_0;
    %part/s 1;
    %ix/getv/s 4, v0x555576669ab0_0;
    %store/vec4 v0x555576669d30_0, 4, 1;
T_24.309 ;
T_24.307 ;
T_24.305 ; for-loop step statement
    %load/vec4 v0x555576669ab0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x555576669ab0_0, 0, 32;
    %jmp T_24.303;
T_24.304 ; for-loop exit label
    %load/vec4 v0x555576669d30_0;
    %ret/vec4 0, 0, 1;  Assign to get_hw_next_value (store_vec4_to_lval)
    %end;
S_0x55557666a040 .scope autofunction.vec4.s1, "get_hw_update" "get_hw_update" 9 72, 9 72 0, S_0x555576666e90;
 .timescale 0 0;
v0x55557666a1d0_0 .var "clear", 0 0;
; Variable get_hw_update is vec4 return value of scope S_0x55557666a040
v0x55557666a390_0 .var "set", 0 0;
v0x55557666a450_0 .var "update", 2 0;
v0x55557666a530_0 .var "write_enable", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_s2wto.u_bit_field.get_hw_update ;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x55557666a450_0, 4, 1;
    %pushi/vec4 1, 0, 1;
    %flag_set/vec4 8;
    %flag_get/vec4 8;
    %jmp/0 T_25.310, 8;
    %load/vec4 v0x55557666a390_0;
    %pushi/vec4 0, 0, 1;
    %cmp/ne;
    %flag_get/vec4 4;
    %and;
T_25.310;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x55557666a450_0, 4, 1;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 2, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x55557666a450_0, 4, 1;
    %load/vec4 v0x55557666a450_0;
    %parti/s 1, 0, 2;
    %flag_set/vec4 8;
    %jmp/1 T_25.312, 8;
    %load/vec4 v0x55557666a450_0;
    %parti/s 1, 1, 2;
    %flag_set/vec4 9;
    %flag_or 8, 9;
T_25.312;
    %flag_get/vec4 8;
    %jmp/1 T_25.311, 8;
    %load/vec4 v0x55557666a450_0;
    %parti/s 1, 2, 3;
    %or;
T_25.311;
    %ret/vec4 0, 0, 1;  Assign to get_hw_update (store_vec4_to_lval)
    %end;
S_0x55557666a640 .scope autofunction.vec4.s1, "get_sw_read_next_value" "get_sw_read_next_value" 9 86, 9 86 0, S_0x555576666e90;
 .timescale 0 0;
v0x55557666a820_0 .var "current_value", 0 0;
; Variable get_sw_read_next_value is vec4 return value of scope S_0x55557666a640
v0x55557666aa00_0 .var "mask", 0 0;
v0x55557666aac0_0 .var "value", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_s2wto.u_bit_field.get_sw_read_next_value ;
    %pushi/vec4 1, 0, 32;
    %dup/vec4;
    %pushi/vec4 2, 0, 32;
    %cmp/u;
    %jmp/1 T_26.313, 6;
    %dup/vec4;
    %pushi/vec4 3, 0, 32;
    %cmp/u;
    %jmp/1 T_26.314, 6;
    %load/vec4 v0x55557666a820_0;
    %store/vec4 v0x55557666aac0_0, 0, 1;
    %jmp T_26.316;
T_26.313 ;
    %load/vec4 v0x55557666aa00_0;
    %cmpi/ne 0, 0, 1;
    %flag_mov 8, 4;
    %jmp/0 T_26.317, 8;
    %pushi/vec4 0, 0, 1;
    %jmp/1 T_26.318, 8;
T_26.317 ; End of true expr.
    %load/vec4 v0x55557666a820_0;
    %jmp/0 T_26.318, 8;
 ; End of false expr.
    %blend;
T_26.318;
    %store/vec4 v0x55557666aac0_0, 0, 1;
    %jmp T_26.316;
T_26.314 ;
    %load/vec4 v0x55557666aa00_0;
    %cmpi/ne 0, 0, 1;
    %flag_mov 8, 4;
    %jmp/0 T_26.319, 8;
    %pushi/vec4 1, 0, 1;
    %jmp/1 T_26.320, 8;
T_26.319 ; End of true expr.
    %load/vec4 v0x55557666a820_0;
    %jmp/0 T_26.320, 8;
 ; End of false expr.
    %blend;
T_26.320;
    %store/vec4 v0x55557666aac0_0, 0, 1;
    %jmp T_26.316;
T_26.316 ;
    %pop/vec4 1;
    %load/vec4 v0x55557666aac0_0;
    %ret/vec4 0, 0, 1;  Assign to get_sw_read_next_value (store_vec4_to_lval)
    %end;
S_0x55557666aba0 .scope autofunction.vec4.s1, "get_sw_write_next_value" "get_sw_write_next_value" 9 101, 9 101 0, S_0x555576666e90;
 .timescale 0 0;
v0x55557666ad80_0 .var "current_value", 0 0;
; Variable get_sw_write_next_value is vec4 return value of scope S_0x55557666aba0
v0x55557666af60_0 .var/i "i", 31 0;
v0x55557666b050_0 .var "mask", 0 0;
v0x55557666b130_0 .var "value", 0 0;
v0x55557666b260_0 .var "write_data", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_s2wto.u_bit_field.get_sw_write_next_value ;
    %load/vec4 v0x55557666ad80_0;
    %store/vec4 v0x55557666b130_0, 0, 1;
    %pushi/vec4 2, 0, 32;
    %dup/vec4;
    %pushi/vec4 1, 0, 32;
    %cmp/u;
    %jmp/1 T_27.321, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 32;
    %cmp/u;
    %jmp/1 T_27.322, 6;
    %dup/vec4;
    %pushi/vec4 3, 0, 32;
    %cmp/u;
    %jmp/1 T_27.323, 6;
    %dup/vec4;
    %pushi/vec4 4, 0, 32;
    %cmp/u;
    %jmp/1 T_27.324, 6;
    %dup/vec4;
    %pushi/vec4 5, 0, 32;
    %cmp/u;
    %jmp/1 T_27.325, 6;
    %dup/vec4;
    %pushi/vec4 6, 0, 32;
    %cmp/u;
    %jmp/1 T_27.326, 6;
    %dup/vec4;
    %pushi/vec4 7, 0, 32;
    %cmp/u;
    %jmp/1 T_27.327, 6;
    %dup/vec4;
    %pushi/vec4 8, 0, 32;
    %cmp/u;
    %jmp/1 T_27.328, 6;
    %dup/vec4;
    %pushi/vec4 9, 0, 32;
    %cmp/u;
    %jmp/1 T_27.329, 6;
    %jmp T_27.331;
T_27.321 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55557666af60_0, 0, 32;
T_27.332 ; Top of for-loop
    %load/vec4 v0x55557666af60_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_27.333, 5;
    %load/vec4 v0x55557666b050_0;
    %load/vec4 v0x55557666af60_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_27.335, 8;
    %load/vec4 v0x55557666b260_0;
    %load/vec4 v0x55557666af60_0;
    %part/s 1;
    %ix/getv/s 4, v0x55557666af60_0;
    %store/vec4 v0x55557666b130_0, 4, 1;
T_27.335 ;
T_27.334 ; for-loop step statement
    %load/vec4 v0x55557666af60_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55557666af60_0, 0, 32;
    %jmp T_27.332;
T_27.333 ; for-loop exit label
    %jmp T_27.331;
T_27.322 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55557666af60_0, 0, 32;
T_27.337 ; Top of for-loop
    %load/vec4 v0x55557666af60_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_27.338, 5;
    %load/vec4 v0x55557666b050_0;
    %load/vec4 v0x55557666af60_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_27.342, 9;
    %load/vec4 v0x55557666b260_0;
    %load/vec4 v0x55557666af60_0;
    %part/s 1;
    %nor/r;
    %and;
T_27.342;
    %flag_set/vec4 8;
    %jmp/0xz  T_27.340, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x55557666af60_0;
    %store/vec4 v0x55557666b130_0, 4, 1;
T_27.340 ;
T_27.339 ; for-loop step statement
    %load/vec4 v0x55557666af60_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55557666af60_0, 0, 32;
    %jmp T_27.337;
T_27.338 ; for-loop exit label
    %jmp T_27.331;
T_27.323 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55557666af60_0, 0, 32;
T_27.343 ; Top of for-loop
    %load/vec4 v0x55557666af60_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_27.344, 5;
    %load/vec4 v0x55557666b050_0;
    %load/vec4 v0x55557666af60_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_27.348, 9;
    %load/vec4 v0x55557666b260_0;
    %load/vec4 v0x55557666af60_0;
    %part/s 1;
    %and;
T_27.348;
    %flag_set/vec4 8;
    %jmp/0xz  T_27.346, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x55557666af60_0;
    %store/vec4 v0x55557666b130_0, 4, 1;
T_27.346 ;
T_27.345 ; for-loop step statement
    %load/vec4 v0x55557666af60_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55557666af60_0, 0, 32;
    %jmp T_27.343;
T_27.344 ; for-loop exit label
    %jmp T_27.331;
T_27.324 ;
    %load/vec4 v0x55557666b050_0;
    %cmpi/ne 0, 0, 1;
    %jmp/0xz  T_27.349, 4;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x55557666b130_0, 0, 1;
T_27.349 ;
    %jmp T_27.331;
T_27.325 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55557666af60_0, 0, 32;
T_27.351 ; Top of for-loop
    %load/vec4 v0x55557666af60_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_27.352, 5;
    %load/vec4 v0x55557666b050_0;
    %load/vec4 v0x55557666af60_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_27.356, 9;
    %load/vec4 v0x55557666b260_0;
    %load/vec4 v0x55557666af60_0;
    %part/s 1;
    %nor/r;
    %and;
T_27.356;
    %flag_set/vec4 8;
    %jmp/0xz  T_27.354, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x55557666af60_0;
    %store/vec4 v0x55557666b130_0, 4, 1;
T_27.354 ;
T_27.353 ; for-loop step statement
    %load/vec4 v0x55557666af60_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55557666af60_0, 0, 32;
    %jmp T_27.351;
T_27.352 ; for-loop exit label
    %jmp T_27.331;
T_27.326 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55557666af60_0, 0, 32;
T_27.357 ; Top of for-loop
    %load/vec4 v0x55557666af60_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_27.358, 5;
    %load/vec4 v0x55557666b050_0;
    %load/vec4 v0x55557666af60_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_27.362, 9;
    %load/vec4 v0x55557666b260_0;
    %load/vec4 v0x55557666af60_0;
    %part/s 1;
    %and;
T_27.362;
    %flag_set/vec4 8;
    %jmp/0xz  T_27.360, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x55557666af60_0;
    %store/vec4 v0x55557666b130_0, 4, 1;
T_27.360 ;
T_27.359 ; for-loop step statement
    %load/vec4 v0x55557666af60_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55557666af60_0, 0, 32;
    %jmp T_27.357;
T_27.358 ; for-loop exit label
    %jmp T_27.331;
T_27.327 ;
    %load/vec4 v0x55557666b050_0;
    %cmpi/ne 0, 0, 1;
    %jmp/0xz  T_27.363, 4;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x55557666b130_0, 0, 1;
T_27.363 ;
    %jmp T_27.331;
T_27.328 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55557666af60_0, 0, 32;
T_27.365 ; Top of for-loop
    %load/vec4 v0x55557666af60_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_27.366, 5;
    %load/vec4 v0x55557666b050_0;
    %load/vec4 v0x55557666af60_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_27.370, 9;
    %load/vec4 v0x55557666b260_0;
    %load/vec4 v0x55557666af60_0;
    %part/s 1;
    %nor/r;
    %and;
T_27.370;
    %flag_set/vec4 8;
    %jmp/0xz  T_27.368, 8;
    %load/vec4 v0x55557666ad80_0;
    %load/vec4 v0x55557666af60_0;
    %part/s 1;
    %inv;
    %ix/getv/s 4, v0x55557666af60_0;
    %store/vec4 v0x55557666b130_0, 4, 1;
T_27.368 ;
T_27.367 ; for-loop step statement
    %load/vec4 v0x55557666af60_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55557666af60_0, 0, 32;
    %jmp T_27.365;
T_27.366 ; for-loop exit label
    %jmp T_27.331;
T_27.329 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55557666af60_0, 0, 32;
T_27.371 ; Top of for-loop
    %load/vec4 v0x55557666af60_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_27.372, 5;
    %load/vec4 v0x55557666b050_0;
    %load/vec4 v0x55557666af60_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_27.376, 9;
    %load/vec4 v0x55557666b260_0;
    %load/vec4 v0x55557666af60_0;
    %part/s 1;
    %and;
T_27.376;
    %flag_set/vec4 8;
    %jmp/0xz  T_27.374, 8;
    %load/vec4 v0x55557666ad80_0;
    %load/vec4 v0x55557666af60_0;
    %part/s 1;
    %inv;
    %ix/getv/s 4, v0x55557666af60_0;
    %store/vec4 v0x55557666b130_0, 4, 1;
T_27.374 ;
T_27.373 ; for-loop step statement
    %load/vec4 v0x55557666af60_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55557666af60_0, 0, 32;
    %jmp T_27.371;
T_27.372 ; for-loop exit label
    %jmp T_27.331;
T_27.331 ;
    %pop/vec4 1;
    %load/vec4 v0x55557666b130_0;
    %ret/vec4 0, 0, 1;  Assign to get_sw_write_next_value (store_vec4_to_lval)
    %end;
S_0x55557666b340 .scope autofunction.vec4.s1, "get_sw_write_update" "get_sw_write_update" 9 47, 9 47 0, S_0x555576666e90;
 .timescale 0 0;
; Variable get_sw_write_update is vec4 return value of scope S_0x55557666b340
v0x55557666b600_0 .var "update", 2 0;
v0x55557666b6e0_0 .var "write_done", 0 0;
v0x55557666b780_0 .var "write_enable", 0 0;
v0x55557666b840_0 .var "write_valid", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_s2wto.u_bit_field.get_sw_write_update ;
    %load/vec4 v0x55557666b840_0;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x55557666b600_0, 4, 1;
    %pushi/vec4 1, 0, 1;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x55557666b600_0, 4, 1;
    %pushi/vec4 1, 0, 1;
    %ix/load 4, 2, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x55557666b600_0, 4, 1;
    %load/vec4 v0x55557666b600_0;
    %parti/s 1, 0, 2;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_28.378, 9;
    %load/vec4 v0x55557666b600_0;
    %parti/s 1, 1, 2;
    %and;
T_28.378;
    %flag_set/vec4 8;
    %flag_get/vec4 8;
    %jmp/0 T_28.377, 8;
    %load/vec4 v0x55557666b600_0;
    %parti/s 1, 2, 3;
    %and;
T_28.377;
    %ret/vec4 0, 0, 1;  Assign to get_sw_write_update (store_vec4_to_lval)
    %end;
S_0x55557666d2b0 .scope generate, "g_wden" "g_wden" 8 117, 8 117 0, S_0x555576616c90;
 .timescale 0 0;
S_0x55557666d440 .scope module, "u_bit_field" "rggen_bit_field" 8 123, 9 2 0, S_0x55557666d2b0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "i_clk";
    .port_info 1 /INPUT 1 "i_rst_n";
    .port_info 2 /INPUT 1 "i_sw_write_valid";
    .port_info 3 /INPUT 1 "i_sw_write_enable";
    .port_info 4 /INPUT 1 "i_sw_read_valid";
    .port_info 5 /INPUT 1 "i_sw_mask";
    .port_info 6 /INPUT 1 "i_sw_write_data";
    .port_info 7 /OUTPUT 1 "o_sw_read_data";
    .port_info 8 /OUTPUT 1 "o_sw_value";
    .port_info 9 /OUTPUT 1 "o_write_trigger";
    .port_info 10 /OUTPUT 1 "o_read_trigger";
    .port_info 11 /INPUT 1 "i_hw_write_enable";
    .port_info 12 /INPUT 1 "i_hw_write_data";
    .port_info 13 /INPUT 1 "i_hw_set";
    .port_info 14 /INPUT 1 "i_hw_clear";
    .port_info 15 /INPUT 1 "i_value";
    .port_info 16 /INPUT 1 "i_mask";
    .port_info 17 /OUTPUT 1 "o_value";
    .port_info 18 /OUTPUT 1 "o_value_unmasked";
P_0x55557666d640 .param/l "EXTERNAL_MASK" 0 9 17, C4<0>;
P_0x55557666d680 .param/l "EXTERNAL_READ_DATA" 0 9 16, C4<0>;
P_0x55557666d6c0 .param/l "HW_ACCESS" 0 9 12, C4<000>;
P_0x55557666d700 .param/l "HW_CLEAR_WIDTH" 0 9 14, +C4<00000000000000000000000000000001>;
P_0x55557666d740 .param/l "HW_SET_WIDTH" 0 9 13, +C4<00000000000000000000000000000001>;
P_0x55557666d780 .param/l "HW_WRITE_ENABLE_POLARITY" 0 9 11, C4<1>;
P_0x55557666d7c0 .param/l "INITIAL_VALUE" 0 9 4, C4<0>;
P_0x55557666d800 .param/l "PRECEDENCE_ACCESS" 0 9 5, +C4<00000000000000000000000000000001>;
P_0x55557666d840 .param/l "STORAGE" 0 9 15, C4<1>;
P_0x55557666d880 .param/l "SW_READABLE" 1 9 41, C4<1>;
P_0x55557666d8c0 .param/l "SW_READ_ACTION" 0 9 6, +C4<00000000000000000000000000000001>;
P_0x55557666d900 .param/l "SW_READ_UPDATE" 1 9 42, C4<0>;
P_0x55557666d940 .param/l "SW_WRITABLE" 1 9 40, C4<1>;
P_0x55557666d980 .param/l "SW_WRITE_ACTION" 0 9 7, +C4<00000000000000000000000000000001>;
P_0x55557666d9c0 .param/l "SW_WRITE_CONTROL" 0 9 8, C4<0>;
P_0x55557666da00 .param/l "SW_WRITE_ENABLE_POLARITY" 0 9 10, C4<1>;
P_0x55557666da40 .param/l "SW_WRITE_ONCE" 0 9 9, +C4<00000000000000000000000000000000>;
P_0x55557666da80 .param/l "TRIGGER" 0 9 18, +C4<00000000000000000000000000000000>;
P_0x55557666dac0 .param/l "WIDTH" 0 9 3, +C4<00000000000000000000000000000001>;
L_0x5555766a6490 .functor BUFZ 1, L_0x5555766a63d0, C4<0>, C4<0>, C4<0>;
L_0x5555766a6550 .functor BUFZ 1, v0x55557666f510_0, C4<0>, C4<0>, C4<0>;
L_0x5555766a6750 .functor BUFZ 1, v0x55557666f510_0, C4<0>, C4<0>, C4<0>;
L_0x5555766a68e0 .functor BUFZ 1, v0x55557666f510_0, C4<0>, C4<0>, C4<0>;
v0x555576671e10_0 .net "i_clk", 0 0, v0x5555766940a0_0;  alias, 1 drivers
L_0x7f7ed8bb7570 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x555576671ed0_0 .net "i_hw_clear", 0 0, L_0x7f7ed8bb7570;  1 drivers
L_0x7f7ed8bb7528 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x555576671fb0_0 .net "i_hw_set", 0 0, L_0x7f7ed8bb7528;  1 drivers
L_0x7f7ed8bb74e0 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x555576672070_0 .net "i_hw_write_data", 0 0, L_0x7f7ed8bb74e0;  1 drivers
L_0x7f7ed8bb7498 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x555576672150_0 .net "i_hw_write_enable", 0 0, L_0x7f7ed8bb7498;  1 drivers
L_0x7f7ed8bb7600 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v0x555576672260_0 .net "i_mask", 0 0, L_0x7f7ed8bb7600;  1 drivers
v0x555576672340_0 .net "i_rst_n", 0 0, L_0x5555766b3230;  alias, 1 drivers
v0x5555766723e0_0 .net "i_sw_mask", 0 0, L_0x5555766a6950;  1 drivers
v0x5555766724c0_0 .net "i_sw_read_valid", 0 0, L_0x555576695680;  alias, 1 drivers
v0x555576672680_0 .net "i_sw_write_data", 0 0, L_0x5555766a69f0;  1 drivers
L_0x7f7ed8bb7450 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v0x555576672760_0 .net "i_sw_write_enable", 0 0, L_0x7f7ed8bb7450;  1 drivers
v0x555576672820_0 .net "i_sw_write_valid", 0 0, L_0x555576694ff0;  alias, 1 drivers
L_0x7f7ed8bb75b8 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x555576672950_0 .net "i_value", 0 0, L_0x7f7ed8bb75b8;  1 drivers
v0x555576672a30_0 .net "o_read_trigger", 0 0, L_0x5555766a66b0;  1 drivers
v0x555576672af0_0 .net "o_sw_read_data", 0 0, L_0x5555766a6490;  1 drivers
v0x555576672bd0_0 .net "o_sw_value", 0 0, L_0x5555766a6550;  1 drivers
v0x555576672cb0_0 .net "o_value", 0 0, L_0x5555766a6750;  alias, 1 drivers
v0x555576672e80_0 .net "o_value_unmasked", 0 0, L_0x5555766a68e0;  1 drivers
v0x555576672f40_0 .net "o_write_trigger", 0 0, L_0x5555766a65c0;  1 drivers
L_0x7f7ed8bb7330 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x555576673000_0 .net "w_hw_update", 0 0, L_0x7f7ed8bb7330;  1 drivers
v0x5555766730c0_0 .net "w_read_data", 0 0, L_0x5555766a63d0;  1 drivers
v0x5555766731a0_0 .net "w_sw_update", 1 0, L_0x5555766a6040;  1 drivers
L_0x7f7ed8bb7378 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x555576673280_0 .net "w_sw_write_done", 0 0, L_0x7f7ed8bb7378;  1 drivers
v0x555576673340_0 .net "w_trigger", 1 0, L_0x5555766a6220;  1 drivers
v0x555576673420_0 .net "w_value", 0 0, v0x55557666f510_0;  1 drivers
L_0x7f7ed8bb72e8 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x5555766a6040 .concat8 [ 1 1 0 0], L_0x7f7ed8bb72e8, L_0x5555766a60e0;
L_0x7f7ed8bb73c0 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x7f7ed8bb7408 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x5555766a6220 .concat8 [ 1 1 0 0], L_0x7f7ed8bb73c0, L_0x7f7ed8bb7408;
L_0x5555766a65c0 .part L_0x5555766a6220, 0, 1;
L_0x5555766a66b0 .part L_0x5555766a6220, 1, 1;
S_0x55557666e670 .scope generate, "g_read_data" "g_read_data" 9 382, 9 382 0, S_0x55557666d440;
 .timescale 0 0;
L_0x5555766a63d0 .functor BUFZ 1, v0x55557666f510_0, C4<0>, C4<0>, C4<0>;
S_0x55557666e850 .scope generate, "g_read_trigger" "g_read_trigger" 9 304, 9 304 0, S_0x55557666d440;
 .timescale 0 0;
v0x55557666ea50_0 .net/2u *"_ivl_0", 0 0, L_0x7f7ed8bb7408;  1 drivers
S_0x55557666eb30 .scope generate, "g_sw_read_update" "g_sw_read_update" 9 245, 9 245 0, S_0x55557666d440;
 .timescale 0 0;
v0x55557666ed40_0 .net/2u *"_ivl_0", 0 0, L_0x7f7ed8bb72e8;  1 drivers
S_0x55557666ee20 .scope generate, "g_sw_write_done" "g_sw_write_done" 9 268, 9 268 0, S_0x55557666d440;
 .timescale 0 0;
S_0x55557666f000 .scope generate, "g_sw_write_update" "g_sw_write_update" 9 252, 9 252 0, S_0x55557666d440;
 .timescale 0 0;
v0x55557666f230_0 .net *"_ivl_1", 0 0, L_0x5555766a60e0;  1 drivers
L_0x5555766a60e0 .ufunc/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_wden.u_bit_field.get_sw_write_update, 1, L_0x555576694ff0, L_0x7f7ed8bb7450, L_0x7f7ed8bb7378 (v0x555576671ce0_0, v0x555576671c20_0, v0x555576671b80_0) S_0x5555766717e0;
S_0x55557666f330 .scope generate, "g_value" "g_value" 9 326, 9 326 0, S_0x55557666d440;
 .timescale 0 0;
v0x55557666f510_0 .var "r_value", 0 0;
S_0x55557666f610 .scope generate, "g_write_trigger" "g_write_trigger" 9 287, 9 287 0, S_0x55557666d440;
 .timescale 0 0;
v0x55557666f7f0_0 .net/2u *"_ivl_0", 0 0, L_0x7f7ed8bb73c0;  1 drivers
S_0x55557666f8f0 .scope generate, "genblk3" "genblk3" 9 259, 9 259 0, S_0x55557666d440;
 .timescale 0 0;
S_0x55557666fad0 .scope autofunction.vec4.s1, "get_hw_next_value" "get_hw_next_value" 9 177, 9 177 0, S_0x55557666d440;
 .timescale 0 0;
v0x55557666fcb0_0 .var "clear", 0 0;
v0x55557666fdb0_0 .var "current_value", 0 0;
; Variable get_hw_next_value is vec4 return value of scope S_0x55557666fad0
v0x55557666ff50_0 .var/i "i", 31 0;
v0x555576670030_0 .var "set", 0 0;
v0x555576670110 .array "set_clear", 1 0, 0 0;
v0x5555766701d0_0 .var "value", 0 0;
v0x5555766702b0_0 .var "write_data", 0 0;
v0x555576670390_0 .var "write_enable", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_wden.u_bit_field.get_hw_next_value ;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x555576670110, 4, 0;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x555576670110, 4, 0;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55557666ff50_0, 0, 32;
T_29.379 ; Top of for-loop
    %load/vec4 v0x55557666ff50_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_29.380, 5;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x555576670110, 4;
    %load/vec4 v0x55557666ff50_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_29.382, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x55557666ff50_0;
    %store/vec4 v0x5555766701d0_0, 4, 1;
    %jmp T_29.383;
T_29.382 ;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x555576670110, 4;
    %load/vec4 v0x55557666ff50_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_29.384, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x55557666ff50_0;
    %store/vec4 v0x5555766701d0_0, 4, 1;
    %jmp T_29.385;
T_29.384 ;
    %load/vec4 v0x55557666fdb0_0;
    %load/vec4 v0x55557666ff50_0;
    %part/s 1;
    %ix/getv/s 4, v0x55557666ff50_0;
    %store/vec4 v0x5555766701d0_0, 4, 1;
T_29.385 ;
T_29.383 ;
T_29.381 ; for-loop step statement
    %load/vec4 v0x55557666ff50_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55557666ff50_0, 0, 32;
    %jmp T_29.379;
T_29.380 ; for-loop exit label
    %load/vec4 v0x5555766701d0_0;
    %ret/vec4 0, 0, 1;  Assign to get_hw_next_value (store_vec4_to_lval)
    %end;
S_0x5555766704e0 .scope autofunction.vec4.s1, "get_hw_update" "get_hw_update" 9 72, 9 72 0, S_0x55557666d440;
 .timescale 0 0;
v0x555576670670_0 .var "clear", 0 0;
; Variable get_hw_update is vec4 return value of scope S_0x5555766704e0
v0x555576670830_0 .var "set", 0 0;
v0x5555766708f0_0 .var "update", 2 0;
v0x5555766709d0_0 .var "write_enable", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_wden.u_bit_field.get_hw_update ;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x5555766708f0_0, 4, 1;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x5555766708f0_0, 4, 1;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 2, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x5555766708f0_0, 4, 1;
    %load/vec4 v0x5555766708f0_0;
    %parti/s 1, 0, 2;
    %flag_set/vec4 8;
    %jmp/1 T_30.387, 8;
    %load/vec4 v0x5555766708f0_0;
    %parti/s 1, 1, 2;
    %flag_set/vec4 9;
    %flag_or 8, 9;
T_30.387;
    %flag_get/vec4 8;
    %jmp/1 T_30.386, 8;
    %load/vec4 v0x5555766708f0_0;
    %parti/s 1, 2, 3;
    %or;
T_30.386;
    %ret/vec4 0, 0, 1;  Assign to get_hw_update (store_vec4_to_lval)
    %end;
S_0x555576670ae0 .scope autofunction.vec4.s1, "get_sw_read_next_value" "get_sw_read_next_value" 9 86, 9 86 0, S_0x55557666d440;
 .timescale 0 0;
v0x555576670cc0_0 .var "current_value", 0 0;
; Variable get_sw_read_next_value is vec4 return value of scope S_0x555576670ae0
v0x555576670ea0_0 .var "mask", 0 0;
v0x555576670f60_0 .var "value", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_wden.u_bit_field.get_sw_read_next_value ;
    %pushi/vec4 1, 0, 32;
    %dup/vec4;
    %pushi/vec4 2, 0, 32;
    %cmp/u;
    %jmp/1 T_31.388, 6;
    %dup/vec4;
    %pushi/vec4 3, 0, 32;
    %cmp/u;
    %jmp/1 T_31.389, 6;
    %load/vec4 v0x555576670cc0_0;
    %store/vec4 v0x555576670f60_0, 0, 1;
    %jmp T_31.391;
T_31.388 ;
    %load/vec4 v0x555576670ea0_0;
    %cmpi/ne 0, 0, 1;
    %flag_mov 8, 4;
    %jmp/0 T_31.392, 8;
    %pushi/vec4 0, 0, 1;
    %jmp/1 T_31.393, 8;
T_31.392 ; End of true expr.
    %load/vec4 v0x555576670cc0_0;
    %jmp/0 T_31.393, 8;
 ; End of false expr.
    %blend;
T_31.393;
    %store/vec4 v0x555576670f60_0, 0, 1;
    %jmp T_31.391;
T_31.389 ;
    %load/vec4 v0x555576670ea0_0;
    %cmpi/ne 0, 0, 1;
    %flag_mov 8, 4;
    %jmp/0 T_31.394, 8;
    %pushi/vec4 1, 0, 1;
    %jmp/1 T_31.395, 8;
T_31.394 ; End of true expr.
    %load/vec4 v0x555576670cc0_0;
    %jmp/0 T_31.395, 8;
 ; End of false expr.
    %blend;
T_31.395;
    %store/vec4 v0x555576670f60_0, 0, 1;
    %jmp T_31.391;
T_31.391 ;
    %pop/vec4 1;
    %load/vec4 v0x555576670f60_0;
    %ret/vec4 0, 0, 1;  Assign to get_sw_read_next_value (store_vec4_to_lval)
    %end;
S_0x555576671040 .scope autofunction.vec4.s1, "get_sw_write_next_value" "get_sw_write_next_value" 9 101, 9 101 0, S_0x55557666d440;
 .timescale 0 0;
v0x555576671220_0 .var "current_value", 0 0;
; Variable get_sw_write_next_value is vec4 return value of scope S_0x555576671040
v0x555576671400_0 .var/i "i", 31 0;
v0x5555766714f0_0 .var "mask", 0 0;
v0x5555766715d0_0 .var "value", 0 0;
v0x555576671700_0 .var "write_data", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_wden.u_bit_field.get_sw_write_next_value ;
    %load/vec4 v0x555576671220_0;
    %store/vec4 v0x5555766715d0_0, 0, 1;
    %pushi/vec4 1, 0, 32;
    %dup/vec4;
    %pushi/vec4 1, 0, 32;
    %cmp/u;
    %jmp/1 T_32.396, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 32;
    %cmp/u;
    %jmp/1 T_32.397, 6;
    %dup/vec4;
    %pushi/vec4 3, 0, 32;
    %cmp/u;
    %jmp/1 T_32.398, 6;
    %dup/vec4;
    %pushi/vec4 4, 0, 32;
    %cmp/u;
    %jmp/1 T_32.399, 6;
    %dup/vec4;
    %pushi/vec4 5, 0, 32;
    %cmp/u;
    %jmp/1 T_32.400, 6;
    %dup/vec4;
    %pushi/vec4 6, 0, 32;
    %cmp/u;
    %jmp/1 T_32.401, 6;
    %dup/vec4;
    %pushi/vec4 7, 0, 32;
    %cmp/u;
    %jmp/1 T_32.402, 6;
    %dup/vec4;
    %pushi/vec4 8, 0, 32;
    %cmp/u;
    %jmp/1 T_32.403, 6;
    %dup/vec4;
    %pushi/vec4 9, 0, 32;
    %cmp/u;
    %jmp/1 T_32.404, 6;
    %jmp T_32.406;
T_32.396 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x555576671400_0, 0, 32;
T_32.407 ; Top of for-loop
    %load/vec4 v0x555576671400_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_32.408, 5;
    %load/vec4 v0x5555766714f0_0;
    %load/vec4 v0x555576671400_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_32.410, 8;
    %load/vec4 v0x555576671700_0;
    %load/vec4 v0x555576671400_0;
    %part/s 1;
    %ix/getv/s 4, v0x555576671400_0;
    %store/vec4 v0x5555766715d0_0, 4, 1;
T_32.410 ;
T_32.409 ; for-loop step statement
    %load/vec4 v0x555576671400_0;
    %addi 1, 0, 32;
    %store/vec4 v0x555576671400_0, 0, 32;
    %jmp T_32.407;
T_32.408 ; for-loop exit label
    %jmp T_32.406;
T_32.397 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x555576671400_0, 0, 32;
T_32.412 ; Top of for-loop
    %load/vec4 v0x555576671400_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_32.413, 5;
    %load/vec4 v0x5555766714f0_0;
    %load/vec4 v0x555576671400_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_32.417, 9;
    %load/vec4 v0x555576671700_0;
    %load/vec4 v0x555576671400_0;
    %part/s 1;
    %nor/r;
    %and;
T_32.417;
    %flag_set/vec4 8;
    %jmp/0xz  T_32.415, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x555576671400_0;
    %store/vec4 v0x5555766715d0_0, 4, 1;
T_32.415 ;
T_32.414 ; for-loop step statement
    %load/vec4 v0x555576671400_0;
    %addi 1, 0, 32;
    %store/vec4 v0x555576671400_0, 0, 32;
    %jmp T_32.412;
T_32.413 ; for-loop exit label
    %jmp T_32.406;
T_32.398 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x555576671400_0, 0, 32;
T_32.418 ; Top of for-loop
    %load/vec4 v0x555576671400_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_32.419, 5;
    %load/vec4 v0x5555766714f0_0;
    %load/vec4 v0x555576671400_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_32.423, 9;
    %load/vec4 v0x555576671700_0;
    %load/vec4 v0x555576671400_0;
    %part/s 1;
    %and;
T_32.423;
    %flag_set/vec4 8;
    %jmp/0xz  T_32.421, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x555576671400_0;
    %store/vec4 v0x5555766715d0_0, 4, 1;
T_32.421 ;
T_32.420 ; for-loop step statement
    %load/vec4 v0x555576671400_0;
    %addi 1, 0, 32;
    %store/vec4 v0x555576671400_0, 0, 32;
    %jmp T_32.418;
T_32.419 ; for-loop exit label
    %jmp T_32.406;
T_32.399 ;
    %load/vec4 v0x5555766714f0_0;
    %cmpi/ne 0, 0, 1;
    %jmp/0xz  T_32.424, 4;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x5555766715d0_0, 0, 1;
T_32.424 ;
    %jmp T_32.406;
T_32.400 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x555576671400_0, 0, 32;
T_32.426 ; Top of for-loop
    %load/vec4 v0x555576671400_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_32.427, 5;
    %load/vec4 v0x5555766714f0_0;
    %load/vec4 v0x555576671400_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_32.431, 9;
    %load/vec4 v0x555576671700_0;
    %load/vec4 v0x555576671400_0;
    %part/s 1;
    %nor/r;
    %and;
T_32.431;
    %flag_set/vec4 8;
    %jmp/0xz  T_32.429, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x555576671400_0;
    %store/vec4 v0x5555766715d0_0, 4, 1;
T_32.429 ;
T_32.428 ; for-loop step statement
    %load/vec4 v0x555576671400_0;
    %addi 1, 0, 32;
    %store/vec4 v0x555576671400_0, 0, 32;
    %jmp T_32.426;
T_32.427 ; for-loop exit label
    %jmp T_32.406;
T_32.401 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x555576671400_0, 0, 32;
T_32.432 ; Top of for-loop
    %load/vec4 v0x555576671400_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_32.433, 5;
    %load/vec4 v0x5555766714f0_0;
    %load/vec4 v0x555576671400_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_32.437, 9;
    %load/vec4 v0x555576671700_0;
    %load/vec4 v0x555576671400_0;
    %part/s 1;
    %and;
T_32.437;
    %flag_set/vec4 8;
    %jmp/0xz  T_32.435, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x555576671400_0;
    %store/vec4 v0x5555766715d0_0, 4, 1;
T_32.435 ;
T_32.434 ; for-loop step statement
    %load/vec4 v0x555576671400_0;
    %addi 1, 0, 32;
    %store/vec4 v0x555576671400_0, 0, 32;
    %jmp T_32.432;
T_32.433 ; for-loop exit label
    %jmp T_32.406;
T_32.402 ;
    %load/vec4 v0x5555766714f0_0;
    %cmpi/ne 0, 0, 1;
    %jmp/0xz  T_32.438, 4;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x5555766715d0_0, 0, 1;
T_32.438 ;
    %jmp T_32.406;
T_32.403 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x555576671400_0, 0, 32;
T_32.440 ; Top of for-loop
    %load/vec4 v0x555576671400_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_32.441, 5;
    %load/vec4 v0x5555766714f0_0;
    %load/vec4 v0x555576671400_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_32.445, 9;
    %load/vec4 v0x555576671700_0;
    %load/vec4 v0x555576671400_0;
    %part/s 1;
    %nor/r;
    %and;
T_32.445;
    %flag_set/vec4 8;
    %jmp/0xz  T_32.443, 8;
    %load/vec4 v0x555576671220_0;
    %load/vec4 v0x555576671400_0;
    %part/s 1;
    %inv;
    %ix/getv/s 4, v0x555576671400_0;
    %store/vec4 v0x5555766715d0_0, 4, 1;
T_32.443 ;
T_32.442 ; for-loop step statement
    %load/vec4 v0x555576671400_0;
    %addi 1, 0, 32;
    %store/vec4 v0x555576671400_0, 0, 32;
    %jmp T_32.440;
T_32.441 ; for-loop exit label
    %jmp T_32.406;
T_32.404 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x555576671400_0, 0, 32;
T_32.446 ; Top of for-loop
    %load/vec4 v0x555576671400_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_32.447, 5;
    %load/vec4 v0x5555766714f0_0;
    %load/vec4 v0x555576671400_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_32.451, 9;
    %load/vec4 v0x555576671700_0;
    %load/vec4 v0x555576671400_0;
    %part/s 1;
    %and;
T_32.451;
    %flag_set/vec4 8;
    %jmp/0xz  T_32.449, 8;
    %load/vec4 v0x555576671220_0;
    %load/vec4 v0x555576671400_0;
    %part/s 1;
    %inv;
    %ix/getv/s 4, v0x555576671400_0;
    %store/vec4 v0x5555766715d0_0, 4, 1;
T_32.449 ;
T_32.448 ; for-loop step statement
    %load/vec4 v0x555576671400_0;
    %addi 1, 0, 32;
    %store/vec4 v0x555576671400_0, 0, 32;
    %jmp T_32.446;
T_32.447 ; for-loop exit label
    %jmp T_32.406;
T_32.406 ;
    %pop/vec4 1;
    %load/vec4 v0x5555766715d0_0;
    %ret/vec4 0, 0, 1;  Assign to get_sw_write_next_value (store_vec4_to_lval)
    %end;
S_0x5555766717e0 .scope autofunction.vec4.s1, "get_sw_write_update" "get_sw_write_update" 9 47, 9 47 0, S_0x55557666d440;
 .timescale 0 0;
; Variable get_sw_write_update is vec4 return value of scope S_0x5555766717e0
v0x555576671aa0_0 .var "update", 2 0;
v0x555576671b80_0 .var "write_done", 0 0;
v0x555576671c20_0 .var "write_enable", 0 0;
v0x555576671ce0_0 .var "write_valid", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_wden.u_bit_field.get_sw_write_update ;
    %load/vec4 v0x555576671ce0_0;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x555576671aa0_0, 4, 1;
    %pushi/vec4 1, 0, 1;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x555576671aa0_0, 4, 1;
    %pushi/vec4 1, 0, 1;
    %ix/load 4, 2, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x555576671aa0_0, 4, 1;
    %load/vec4 v0x555576671aa0_0;
    %parti/s 1, 0, 2;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_33.453, 9;
    %load/vec4 v0x555576671aa0_0;
    %parti/s 1, 1, 2;
    %and;
T_33.453;
    %flag_set/vec4 8;
    %flag_get/vec4 8;
    %jmp/0 T_33.452, 8;
    %load/vec4 v0x555576671aa0_0;
    %parti/s 1, 2, 3;
    %and;
T_33.452;
    %ret/vec4 0, 0, 1;  Assign to get_sw_write_update (store_vec4_to_lval)
    %end;
S_0x555576673800 .scope generate, "g_wtocnt" "g_wtocnt" 8 239, 8 239 0, S_0x555576616c90;
 .timescale 0 0;
S_0x555576673990 .scope module, "u_bit_field" "rggen_bit_field" 8 245, 9 2 0, S_0x555576673800;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "i_clk";
    .port_info 1 /INPUT 1 "i_rst_n";
    .port_info 2 /INPUT 1 "i_sw_write_valid";
    .port_info 3 /INPUT 1 "i_sw_write_enable";
    .port_info 4 /INPUT 1 "i_sw_read_valid";
    .port_info 5 /INPUT 10 "i_sw_mask";
    .port_info 6 /INPUT 10 "i_sw_write_data";
    .port_info 7 /OUTPUT 10 "o_sw_read_data";
    .port_info 8 /OUTPUT 10 "o_sw_value";
    .port_info 9 /OUTPUT 1 "o_write_trigger";
    .port_info 10 /OUTPUT 1 "o_read_trigger";
    .port_info 11 /INPUT 1 "i_hw_write_enable";
    .port_info 12 /INPUT 10 "i_hw_write_data";
    .port_info 13 /INPUT 10 "i_hw_set";
    .port_info 14 /INPUT 10 "i_hw_clear";
    .port_info 15 /INPUT 10 "i_value";
    .port_info 16 /INPUT 10 "i_mask";
    .port_info 17 /OUTPUT 10 "o_value";
    .port_info 18 /OUTPUT 10 "o_value_unmasked";
P_0x555576673b40 .param/l "EXTERNAL_MASK" 0 9 17, C4<0>;
P_0x555576673b80 .param/l "EXTERNAL_READ_DATA" 0 9 16, C4<0>;
P_0x555576673bc0 .param/l "HW_ACCESS" 0 9 12, C4<000>;
P_0x555576673c00 .param/l "HW_CLEAR_WIDTH" 0 9 14, +C4<00000000000000000000000000001010>;
P_0x555576673c40 .param/l "HW_SET_WIDTH" 0 9 13, +C4<00000000000000000000000000001010>;
P_0x555576673c80 .param/l "HW_WRITE_ENABLE_POLARITY" 0 9 11, C4<1>;
P_0x555576673cc0 .param/l "INITIAL_VALUE" 0 9 4, C4<1111111111>;
P_0x555576673d00 .param/l "PRECEDENCE_ACCESS" 0 9 5, +C4<00000000000000000000000000000001>;
P_0x555576673d40 .param/l "STORAGE" 0 9 15, C4<1>;
P_0x555576673d80 .param/l "SW_READABLE" 1 9 41, C4<1>;
P_0x555576673dc0 .param/l "SW_READ_ACTION" 0 9 6, +C4<00000000000000000000000000000001>;
P_0x555576673e00 .param/l "SW_READ_UPDATE" 1 9 42, C4<0>;
P_0x555576673e40 .param/l "SW_WRITABLE" 1 9 40, C4<1>;
P_0x555576673e80 .param/l "SW_WRITE_ACTION" 0 9 7, +C4<00000000000000000000000000000001>;
P_0x555576673ec0 .param/l "SW_WRITE_CONTROL" 0 9 8, C4<0>;
P_0x555576673f00 .param/l "SW_WRITE_ENABLE_POLARITY" 0 9 10, C4<1>;
P_0x555576673f40 .param/l "SW_WRITE_ONCE" 0 9 9, +C4<00000000000000000000000000000000>;
P_0x555576673f80 .param/l "TRIGGER" 0 9 18, +C4<00000000000000000000000000000000>;
P_0x555576673fc0 .param/l "WIDTH" 0 9 3, +C4<00000000000000000000000000001010>;
L_0x5555766aa2e0 .functor BUFZ 10, L_0x5555766aa1f0, C4<0000000000>, C4<0000000000>, C4<0000000000>;
L_0x5555766aa3a0 .functor BUFZ 10, v0x555576675b60_0, C4<0000000000>, C4<0000000000>, C4<0000000000>;
L_0x5555766aa600 .functor BUFZ 10, v0x555576675b60_0, C4<0000000000>, C4<0000000000>, C4<0000000000>;
L_0x5555766aa790 .functor BUFZ 10, v0x555576675b60_0, C4<0000000000>, C4<0000000000>, C4<0000000000>;
v0x555576678490_0 .net "i_clk", 0 0, v0x5555766940a0_0;  alias, 1 drivers
L_0x7f7ed8bb80b0 .functor BUFT 1, C4<0000000000>, C4<0>, C4<0>, C4<0>;
v0x555576678550_0 .net "i_hw_clear", 9 0, L_0x7f7ed8bb80b0;  1 drivers
L_0x7f7ed8bb8068 .functor BUFT 1, C4<0000000000>, C4<0>, C4<0>, C4<0>;
v0x555576678630_0 .net "i_hw_set", 9 0, L_0x7f7ed8bb8068;  1 drivers
L_0x7f7ed8bb8020 .functor BUFT 1, C4<0000000000>, C4<0>, C4<0>, C4<0>;
v0x5555766786f0_0 .net "i_hw_write_data", 9 0, L_0x7f7ed8bb8020;  1 drivers
L_0x7f7ed8bb7fd8 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x5555766787d0_0 .net "i_hw_write_enable", 0 0, L_0x7f7ed8bb7fd8;  1 drivers
L_0x7f7ed8bb8140 .functor BUFT 1, C4<1111111111>, C4<0>, C4<0>, C4<0>;
v0x5555766788e0_0 .net "i_mask", 9 0, L_0x7f7ed8bb8140;  1 drivers
v0x5555766789c0_0 .net "i_rst_n", 0 0, L_0x5555766b3230;  alias, 1 drivers
v0x555576678a60_0 .net "i_sw_mask", 9 0, L_0x5555766aa860;  1 drivers
v0x555576678b40_0 .net "i_sw_read_valid", 0 0, L_0x555576695680;  alias, 1 drivers
v0x555576678c70_0 .net "i_sw_write_data", 9 0, L_0x5555766aa900;  1 drivers
L_0x7f7ed8bb7f90 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v0x555576678d50_0 .net "i_sw_write_enable", 0 0, L_0x7f7ed8bb7f90;  1 drivers
v0x555576678e10_0 .net "i_sw_write_valid", 0 0, L_0x555576694ff0;  alias, 1 drivers
L_0x7f7ed8bb80f8 .functor BUFT 1, C4<0000000000>, C4<0>, C4<0>, C4<0>;
v0x555576678eb0_0 .net "i_value", 9 0, L_0x7f7ed8bb80f8;  1 drivers
v0x555576678f90_0 .net "o_read_trigger", 0 0, L_0x5555766aa530;  1 drivers
v0x555576679050_0 .net "o_sw_read_data", 9 0, L_0x5555766aa2e0;  1 drivers
v0x555576679130_0 .net "o_sw_value", 9 0, L_0x5555766aa3a0;  1 drivers
v0x555576679210_0 .net "o_value", 9 0, L_0x5555766aa600;  alias, 1 drivers
v0x5555766793e0_0 .net "o_value_unmasked", 9 0, L_0x5555766aa790;  1 drivers
v0x5555766794a0_0 .net "o_write_trigger", 0 0, L_0x5555766aa410;  1 drivers
L_0x7f7ed8bb7e70 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x555576679560_0 .net "w_hw_update", 0 0, L_0x7f7ed8bb7e70;  1 drivers
v0x555576679620_0 .net "w_read_data", 9 0, L_0x5555766aa1f0;  1 drivers
v0x555576679700_0 .net "w_sw_update", 1 0, L_0x5555766a9bb0;  1 drivers
L_0x7f7ed8bb7eb8 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x5555766797e0_0 .net "w_sw_write_done", 0 0, L_0x7f7ed8bb7eb8;  1 drivers
v0x5555766798a0_0 .net "w_trigger", 1 0, L_0x5555766a9fe0;  1 drivers
v0x555576679980_0 .net "w_value", 9 0, v0x555576675b60_0;  1 drivers
L_0x7f7ed8bb7de0 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x5555766a9bb0 .concat8 [ 1 1 0 0], L_0x7f7ed8bb7de0, L_0x5555766a9e20;
L_0x7f7ed8bb7f00 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x7f7ed8bb7f48 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x5555766a9fe0 .concat8 [ 1 1 0 0], L_0x7f7ed8bb7f00, L_0x7f7ed8bb7f48;
L_0x5555766aa410 .part L_0x5555766a9fe0, 0, 1;
L_0x5555766aa530 .part L_0x5555766a9fe0, 1, 1;
S_0x555576674b70 .scope generate, "g_read_data" "g_read_data" 9 382, 9 382 0, S_0x555576673990;
 .timescale 0 0;
L_0x5555766aa1f0 .functor BUFZ 10, v0x555576675b60_0, C4<0000000000>, C4<0000000000>, C4<0000000000>;
S_0x555576674d00 .scope generate, "g_read_trigger" "g_read_trigger" 9 304, 9 304 0, S_0x555576673990;
 .timescale 0 0;
v0x555576674f00_0 .net/2u *"_ivl_0", 0 0, L_0x7f7ed8bb7f48;  1 drivers
S_0x555576674fe0 .scope generate, "g_sw_read_update" "g_sw_read_update" 9 245, 9 245 0, S_0x555576673990;
 .timescale 0 0;
v0x5555766751f0_0 .net/2u *"_ivl_0", 0 0, L_0x7f7ed8bb7de0;  1 drivers
S_0x5555766752d0 .scope generate, "g_sw_write_done" "g_sw_write_done" 9 268, 9 268 0, S_0x555576673990;
 .timescale 0 0;
S_0x5555766754b0 .scope generate, "g_sw_write_update" "g_sw_write_update" 9 252, 9 252 0, S_0x555576673990;
 .timescale 0 0;
v0x5555766756e0_0 .net *"_ivl_0", 9 0, L_0x5555766a9cd0;  1 drivers
L_0x7f7ed8bb7e28 .functor BUFT 1, C4<000000000>, C4<0>, C4<0>, C4<0>;
v0x5555766757e0_0 .net *"_ivl_3", 8 0, L_0x7f7ed8bb7e28;  1 drivers
v0x5555766758c0_0 .net *"_ivl_5", 0 0, L_0x5555766a9e20;  1 drivers
L_0x5555766a9cd0 .concat [ 1 9 0 0], L_0x555576694ff0, L_0x7f7ed8bb7e28;
L_0x5555766a9e20 .ufunc/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_wtocnt.u_bit_field.get_sw_write_update, 1, L_0x5555766a9cd0, L_0x7f7ed8bb7f90, L_0x7f7ed8bb7eb8 (v0x555576678360_0, v0x5555766782a0_0, v0x555576678200_0) S_0x555576677e60;
S_0x555576675980 .scope generate, "g_value" "g_value" 9 326, 9 326 0, S_0x555576673990;
 .timescale 0 0;
v0x555576675b60_0 .var "r_value", 9 0;
S_0x555576675c60 .scope generate, "g_write_trigger" "g_write_trigger" 9 287, 9 287 0, S_0x555576673990;
 .timescale 0 0;
v0x555576675e40_0 .net/2u *"_ivl_0", 0 0, L_0x7f7ed8bb7f00;  1 drivers
S_0x555576675f40 .scope generate, "genblk3" "genblk3" 9 259, 9 259 0, S_0x555576673990;
 .timescale 0 0;
S_0x555576676120 .scope autofunction.vec4.s10, "get_hw_next_value" "get_hw_next_value" 9 177, 9 177 0, S_0x555576673990;
 .timescale 0 0;
v0x555576676300_0 .var "clear", 9 0;
v0x555576676400_0 .var "current_value", 9 0;
; Variable get_hw_next_value is vec4 return value of scope S_0x555576676120
v0x5555766765d0_0 .var/i "i", 31 0;
v0x5555766766b0_0 .var "set", 9 0;
v0x555576676790 .array "set_clear", 1 0, 9 0;
v0x555576676850_0 .var "value", 9 0;
v0x555576676930_0 .var "write_data", 9 0;
v0x555576676a10_0 .var "write_enable", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_wtocnt.u_bit_field.get_hw_next_value ;
    %pushi/vec4 0, 0, 10;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x555576676790, 4, 0;
    %pushi/vec4 0, 0, 10;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x555576676790, 4, 0;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555766765d0_0, 0, 32;
T_34.454 ; Top of for-loop
    %load/vec4 v0x5555766765d0_0;
    %cmpi/s 10, 0, 32;
	  %jmp/0xz T_34.455, 5;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x555576676790, 4;
    %load/vec4 v0x5555766765d0_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_34.457, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x5555766765d0_0;
    %store/vec4 v0x555576676850_0, 4, 1;
    %jmp T_34.458;
T_34.457 ;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x555576676790, 4;
    %load/vec4 v0x5555766765d0_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_34.459, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x5555766765d0_0;
    %store/vec4 v0x555576676850_0, 4, 1;
    %jmp T_34.460;
T_34.459 ;
    %load/vec4 v0x555576676400_0;
    %load/vec4 v0x5555766765d0_0;
    %part/s 1;
    %ix/getv/s 4, v0x5555766765d0_0;
    %store/vec4 v0x555576676850_0, 4, 1;
T_34.460 ;
T_34.458 ;
T_34.456 ; for-loop step statement
    %load/vec4 v0x5555766765d0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555766765d0_0, 0, 32;
    %jmp T_34.454;
T_34.455 ; for-loop exit label
    %load/vec4 v0x555576676850_0;
    %ret/vec4 0, 0, 10;  Assign to get_hw_next_value (store_vec4_to_lval)
    %end;
S_0x555576676b60 .scope autofunction.vec4.s1, "get_hw_update" "get_hw_update" 9 72, 9 72 0, S_0x555576673990;
 .timescale 0 0;
v0x555576676cf0_0 .var "clear", 9 0;
; Variable get_hw_update is vec4 return value of scope S_0x555576676b60
v0x555576676eb0_0 .var "set", 9 0;
v0x555576676f70_0 .var "update", 2 0;
v0x555576677050_0 .var "write_enable", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_wtocnt.u_bit_field.get_hw_update ;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x555576676f70_0, 4, 1;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x555576676f70_0, 4, 1;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 2, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x555576676f70_0, 4, 1;
    %load/vec4 v0x555576676f70_0;
    %parti/s 1, 0, 2;
    %flag_set/vec4 8;
    %jmp/1 T_35.462, 8;
    %load/vec4 v0x555576676f70_0;
    %parti/s 1, 1, 2;
    %flag_set/vec4 9;
    %flag_or 8, 9;
T_35.462;
    %flag_get/vec4 8;
    %jmp/1 T_35.461, 8;
    %load/vec4 v0x555576676f70_0;
    %parti/s 1, 2, 3;
    %or;
T_35.461;
    %ret/vec4 0, 0, 1;  Assign to get_hw_update (store_vec4_to_lval)
    %end;
S_0x555576677160 .scope autofunction.vec4.s10, "get_sw_read_next_value" "get_sw_read_next_value" 9 86, 9 86 0, S_0x555576673990;
 .timescale 0 0;
v0x555576677340_0 .var "current_value", 9 0;
; Variable get_sw_read_next_value is vec4 return value of scope S_0x555576677160
v0x555576677520_0 .var "mask", 9 0;
v0x5555766775e0_0 .var "value", 9 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_wtocnt.u_bit_field.get_sw_read_next_value ;
    %pushi/vec4 1, 0, 32;
    %dup/vec4;
    %pushi/vec4 2, 0, 32;
    %cmp/u;
    %jmp/1 T_36.463, 6;
    %dup/vec4;
    %pushi/vec4 3, 0, 32;
    %cmp/u;
    %jmp/1 T_36.464, 6;
    %load/vec4 v0x555576677340_0;
    %store/vec4 v0x5555766775e0_0, 0, 10;
    %jmp T_36.466;
T_36.463 ;
    %load/vec4 v0x555576677520_0;
    %cmpi/ne 0, 0, 10;
    %flag_mov 8, 4;
    %jmp/0 T_36.467, 8;
    %pushi/vec4 0, 0, 10;
    %jmp/1 T_36.468, 8;
T_36.467 ; End of true expr.
    %load/vec4 v0x555576677340_0;
    %jmp/0 T_36.468, 8;
 ; End of false expr.
    %blend;
T_36.468;
    %store/vec4 v0x5555766775e0_0, 0, 10;
    %jmp T_36.466;
T_36.464 ;
    %load/vec4 v0x555576677520_0;
    %cmpi/ne 0, 0, 10;
    %flag_mov 8, 4;
    %jmp/0 T_36.469, 8;
    %pushi/vec4 1023, 0, 10;
    %jmp/1 T_36.470, 8;
T_36.469 ; End of true expr.
    %load/vec4 v0x555576677340_0;
    %jmp/0 T_36.470, 8;
 ; End of false expr.
    %blend;
T_36.470;
    %store/vec4 v0x5555766775e0_0, 0, 10;
    %jmp T_36.466;
T_36.466 ;
    %pop/vec4 1;
    %load/vec4 v0x5555766775e0_0;
    %ret/vec4 0, 0, 10;  Assign to get_sw_read_next_value (store_vec4_to_lval)
    %end;
S_0x5555766776c0 .scope autofunction.vec4.s10, "get_sw_write_next_value" "get_sw_write_next_value" 9 101, 9 101 0, S_0x555576673990;
 .timescale 0 0;
v0x5555766778a0_0 .var "current_value", 9 0;
; Variable get_sw_write_next_value is vec4 return value of scope S_0x5555766776c0
v0x555576677a80_0 .var/i "i", 31 0;
v0x555576677b70_0 .var "mask", 9 0;
v0x555576677c50_0 .var "value", 9 0;
v0x555576677d80_0 .var "write_data", 9 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_wtocnt.u_bit_field.get_sw_write_next_value ;
    %load/vec4 v0x5555766778a0_0;
    %store/vec4 v0x555576677c50_0, 0, 10;
    %pushi/vec4 1, 0, 32;
    %dup/vec4;
    %pushi/vec4 1, 0, 32;
    %cmp/u;
    %jmp/1 T_37.471, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 32;
    %cmp/u;
    %jmp/1 T_37.472, 6;
    %dup/vec4;
    %pushi/vec4 3, 0, 32;
    %cmp/u;
    %jmp/1 T_37.473, 6;
    %dup/vec4;
    %pushi/vec4 4, 0, 32;
    %cmp/u;
    %jmp/1 T_37.474, 6;
    %dup/vec4;
    %pushi/vec4 5, 0, 32;
    %cmp/u;
    %jmp/1 T_37.475, 6;
    %dup/vec4;
    %pushi/vec4 6, 0, 32;
    %cmp/u;
    %jmp/1 T_37.476, 6;
    %dup/vec4;
    %pushi/vec4 7, 0, 32;
    %cmp/u;
    %jmp/1 T_37.477, 6;
    %dup/vec4;
    %pushi/vec4 8, 0, 32;
    %cmp/u;
    %jmp/1 T_37.478, 6;
    %dup/vec4;
    %pushi/vec4 9, 0, 32;
    %cmp/u;
    %jmp/1 T_37.479, 6;
    %jmp T_37.481;
T_37.471 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x555576677a80_0, 0, 32;
T_37.482 ; Top of for-loop
    %load/vec4 v0x555576677a80_0;
    %cmpi/s 10, 0, 32;
	  %jmp/0xz T_37.483, 5;
    %load/vec4 v0x555576677b70_0;
    %load/vec4 v0x555576677a80_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_37.485, 8;
    %load/vec4 v0x555576677d80_0;
    %load/vec4 v0x555576677a80_0;
    %part/s 1;
    %ix/getv/s 4, v0x555576677a80_0;
    %store/vec4 v0x555576677c50_0, 4, 1;
T_37.485 ;
T_37.484 ; for-loop step statement
    %load/vec4 v0x555576677a80_0;
    %addi 1, 0, 32;
    %store/vec4 v0x555576677a80_0, 0, 32;
    %jmp T_37.482;
T_37.483 ; for-loop exit label
    %jmp T_37.481;
T_37.472 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x555576677a80_0, 0, 32;
T_37.487 ; Top of for-loop
    %load/vec4 v0x555576677a80_0;
    %cmpi/s 10, 0, 32;
	  %jmp/0xz T_37.488, 5;
    %load/vec4 v0x555576677b70_0;
    %load/vec4 v0x555576677a80_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_37.492, 9;
    %load/vec4 v0x555576677d80_0;
    %load/vec4 v0x555576677a80_0;
    %part/s 1;
    %nor/r;
    %and;
T_37.492;
    %flag_set/vec4 8;
    %jmp/0xz  T_37.490, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x555576677a80_0;
    %store/vec4 v0x555576677c50_0, 4, 1;
T_37.490 ;
T_37.489 ; for-loop step statement
    %load/vec4 v0x555576677a80_0;
    %addi 1, 0, 32;
    %store/vec4 v0x555576677a80_0, 0, 32;
    %jmp T_37.487;
T_37.488 ; for-loop exit label
    %jmp T_37.481;
T_37.473 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x555576677a80_0, 0, 32;
T_37.493 ; Top of for-loop
    %load/vec4 v0x555576677a80_0;
    %cmpi/s 10, 0, 32;
	  %jmp/0xz T_37.494, 5;
    %load/vec4 v0x555576677b70_0;
    %load/vec4 v0x555576677a80_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_37.498, 9;
    %load/vec4 v0x555576677d80_0;
    %load/vec4 v0x555576677a80_0;
    %part/s 1;
    %and;
T_37.498;
    %flag_set/vec4 8;
    %jmp/0xz  T_37.496, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x555576677a80_0;
    %store/vec4 v0x555576677c50_0, 4, 1;
T_37.496 ;
T_37.495 ; for-loop step statement
    %load/vec4 v0x555576677a80_0;
    %addi 1, 0, 32;
    %store/vec4 v0x555576677a80_0, 0, 32;
    %jmp T_37.493;
T_37.494 ; for-loop exit label
    %jmp T_37.481;
T_37.474 ;
    %load/vec4 v0x555576677b70_0;
    %cmpi/ne 0, 0, 10;
    %jmp/0xz  T_37.499, 4;
    %pushi/vec4 0, 0, 10;
    %store/vec4 v0x555576677c50_0, 0, 10;
T_37.499 ;
    %jmp T_37.481;
T_37.475 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x555576677a80_0, 0, 32;
T_37.501 ; Top of for-loop
    %load/vec4 v0x555576677a80_0;
    %cmpi/s 10, 0, 32;
	  %jmp/0xz T_37.502, 5;
    %load/vec4 v0x555576677b70_0;
    %load/vec4 v0x555576677a80_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_37.506, 9;
    %load/vec4 v0x555576677d80_0;
    %load/vec4 v0x555576677a80_0;
    %part/s 1;
    %nor/r;
    %and;
T_37.506;
    %flag_set/vec4 8;
    %jmp/0xz  T_37.504, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x555576677a80_0;
    %store/vec4 v0x555576677c50_0, 4, 1;
T_37.504 ;
T_37.503 ; for-loop step statement
    %load/vec4 v0x555576677a80_0;
    %addi 1, 0, 32;
    %store/vec4 v0x555576677a80_0, 0, 32;
    %jmp T_37.501;
T_37.502 ; for-loop exit label
    %jmp T_37.481;
T_37.476 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x555576677a80_0, 0, 32;
T_37.507 ; Top of for-loop
    %load/vec4 v0x555576677a80_0;
    %cmpi/s 10, 0, 32;
	  %jmp/0xz T_37.508, 5;
    %load/vec4 v0x555576677b70_0;
    %load/vec4 v0x555576677a80_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_37.512, 9;
    %load/vec4 v0x555576677d80_0;
    %load/vec4 v0x555576677a80_0;
    %part/s 1;
    %and;
T_37.512;
    %flag_set/vec4 8;
    %jmp/0xz  T_37.510, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x555576677a80_0;
    %store/vec4 v0x555576677c50_0, 4, 1;
T_37.510 ;
T_37.509 ; for-loop step statement
    %load/vec4 v0x555576677a80_0;
    %addi 1, 0, 32;
    %store/vec4 v0x555576677a80_0, 0, 32;
    %jmp T_37.507;
T_37.508 ; for-loop exit label
    %jmp T_37.481;
T_37.477 ;
    %load/vec4 v0x555576677b70_0;
    %cmpi/ne 0, 0, 10;
    %jmp/0xz  T_37.513, 4;
    %pushi/vec4 1023, 0, 10;
    %store/vec4 v0x555576677c50_0, 0, 10;
T_37.513 ;
    %jmp T_37.481;
T_37.478 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x555576677a80_0, 0, 32;
T_37.515 ; Top of for-loop
    %load/vec4 v0x555576677a80_0;
    %cmpi/s 10, 0, 32;
	  %jmp/0xz T_37.516, 5;
    %load/vec4 v0x555576677b70_0;
    %load/vec4 v0x555576677a80_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_37.520, 9;
    %load/vec4 v0x555576677d80_0;
    %load/vec4 v0x555576677a80_0;
    %part/s 1;
    %nor/r;
    %and;
T_37.520;
    %flag_set/vec4 8;
    %jmp/0xz  T_37.518, 8;
    %load/vec4 v0x5555766778a0_0;
    %load/vec4 v0x555576677a80_0;
    %part/s 1;
    %inv;
    %ix/getv/s 4, v0x555576677a80_0;
    %store/vec4 v0x555576677c50_0, 4, 1;
T_37.518 ;
T_37.517 ; for-loop step statement
    %load/vec4 v0x555576677a80_0;
    %addi 1, 0, 32;
    %store/vec4 v0x555576677a80_0, 0, 32;
    %jmp T_37.515;
T_37.516 ; for-loop exit label
    %jmp T_37.481;
T_37.479 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x555576677a80_0, 0, 32;
T_37.521 ; Top of for-loop
    %load/vec4 v0x555576677a80_0;
    %cmpi/s 10, 0, 32;
	  %jmp/0xz T_37.522, 5;
    %load/vec4 v0x555576677b70_0;
    %load/vec4 v0x555576677a80_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_37.526, 9;
    %load/vec4 v0x555576677d80_0;
    %load/vec4 v0x555576677a80_0;
    %part/s 1;
    %and;
T_37.526;
    %flag_set/vec4 8;
    %jmp/0xz  T_37.524, 8;
    %load/vec4 v0x5555766778a0_0;
    %load/vec4 v0x555576677a80_0;
    %part/s 1;
    %inv;
    %ix/getv/s 4, v0x555576677a80_0;
    %store/vec4 v0x555576677c50_0, 4, 1;
T_37.524 ;
T_37.523 ; for-loop step statement
    %load/vec4 v0x555576677a80_0;
    %addi 1, 0, 32;
    %store/vec4 v0x555576677a80_0, 0, 32;
    %jmp T_37.521;
T_37.522 ; for-loop exit label
    %jmp T_37.481;
T_37.481 ;
    %pop/vec4 1;
    %load/vec4 v0x555576677c50_0;
    %ret/vec4 0, 0, 10;  Assign to get_sw_write_next_value (store_vec4_to_lval)
    %end;
S_0x555576677e60 .scope autofunction.vec4.s1, "get_sw_write_update" "get_sw_write_update" 9 47, 9 47 0, S_0x555576673990;
 .timescale 0 0;
; Variable get_sw_write_update is vec4 return value of scope S_0x555576677e60
v0x555576678120_0 .var "update", 2 0;
v0x555576678200_0 .var "write_done", 0 0;
v0x5555766782a0_0 .var "write_enable", 0 0;
v0x555576678360_0 .var "write_valid", 9 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_wtocnt.u_bit_field.get_sw_write_update ;
    %load/vec4 v0x555576678360_0;
    %pad/u 1;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x555576678120_0, 4, 1;
    %pushi/vec4 1, 0, 1;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x555576678120_0, 4, 1;
    %pushi/vec4 1, 0, 1;
    %ix/load 4, 2, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x555576678120_0, 4, 1;
    %load/vec4 v0x555576678120_0;
    %parti/s 1, 0, 2;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_38.528, 9;
    %load/vec4 v0x555576678120_0;
    %parti/s 1, 1, 2;
    %and;
T_38.528;
    %flag_set/vec4 8;
    %flag_get/vec4 8;
    %jmp/0 T_38.527, 8;
    %load/vec4 v0x555576678120_0;
    %parti/s 1, 2, 3;
    %and;
T_38.527;
    %ret/vec4 0, 0, 1;  Assign to get_sw_write_update (store_vec4_to_lval)
    %end;
S_0x555576679d60 .scope module, "u_register" "rggen_default_register" 8 97, 10 1 0, S_0x555576616c90;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "i_clk";
    .port_info 1 /INPUT 1 "i_rst_n";
    .port_info 2 /INPUT 1 "i_register_valid";
    .port_info 3 /INPUT 2 "i_register_access";
    .port_info 4 /INPUT 3 "i_register_address";
    .port_info 5 /INPUT 32 "i_register_write_data";
    .port_info 6 /INPUT 32 "i_register_strobe";
    .port_info 7 /OUTPUT 1 "o_register_active";
    .port_info 8 /OUTPUT 1 "o_register_ready";
    .port_info 9 /OUTPUT 2 "o_register_status";
    .port_info 10 /OUTPUT 32 "o_register_read_data";
    .port_info 11 /OUTPUT 32 "o_register_value";
    .port_info 12 /OUTPUT 1 "o_bit_field_write_valid";
    .port_info 13 /OUTPUT 1 "o_bit_field_read_valid";
    .port_info 14 /OUTPUT 32 "o_bit_field_mask";
    .port_info 15 /OUTPUT 32 "o_bit_field_write_data";
    .port_info 16 /INPUT 32 "i_bit_field_read_data";
    .port_info 17 /INPUT 32 "i_bit_field_value";
P_0x555576679ef0 .param/l "ADDRESS_WIDTH" 0 10 4, +C4<00000000000000000000000000000011>;
P_0x555576679f30 .param/l "BUS_WIDTH" 0 10 6, +C4<00000000000000000000000000100000>;
P_0x555576679f70 .param/l "DATA_WIDTH" 0 10 7, +C4<00000000000000000000000000100000>;
P_0x555576679fb0 .param/l "OFFSET_ADDRESS" 0 10 5, C4<000>;
P_0x555576679ff0 .param/l "READABLE" 0 10 2, +C4<00000000000000000000000000000001>;
P_0x55557667a030 .param/l "WRITABLE" 0 10 3, +C4<00000000000000000000000000000001>;
v0x55557667af50_0 .net "i_bit_field_read_data", 31 0, L_0x5555766abe20;  alias, 1 drivers
v0x5555766816b0_0 .net "i_bit_field_value", 31 0, L_0x5555766ac0a0;  alias, 1 drivers
v0x555576681770_0 .net "i_clk", 0 0, v0x5555766940a0_0;  alias, 1 drivers
v0x555576681810_0 .net "i_register_access", 1 0, L_0x5555766b08a0;  alias, 1 drivers
v0x5555766818b0_0 .net "i_register_address", 2 0, L_0x5555766b0910;  alias, 1 drivers
v0x5555766819a0_0 .net "i_register_strobe", 31 0, L_0x5555766b0a20;  alias, 1 drivers
v0x555576681a60_0 .net "i_register_valid", 0 0, L_0x5555766b0830;  alias, 1 drivers
v0x555576681b00_0 .net "i_register_write_data", 31 0, L_0x5555766b09b0;  alias, 1 drivers
v0x555576681bc0_0 .net "i_rst_n", 0 0, L_0x5555766b3230;  alias, 1 drivers
v0x555576681c60_0 .net "o_bit_field_mask", 31 0, L_0x5555766b44e0;  alias, 1 drivers
v0x555576681d20_0 .net "o_bit_field_read_valid", 0 0, L_0x555576695680;  alias, 1 drivers
v0x555576681dc0_0 .net "o_bit_field_write_data", 31 0, L_0x555576695d70;  alias, 1 drivers
v0x555576681e60_0 .net "o_bit_field_write_valid", 0 0, L_0x555576694ff0;  alias, 1 drivers
v0x555576681f00_0 .net "o_register_active", 0 0, L_0x555576695ab0;  1 drivers
v0x555576681fa0_0 .net "o_register_read_data", 31 0, L_0x555576695c60;  1 drivers
v0x555576682070_0 .net "o_register_ready", 0 0, L_0x555576695b20;  1 drivers
v0x555576682140_0 .net "o_register_status", 1 0, L_0x7f7ed8bb70f0;  1 drivers
v0x555576682210_0 .net "o_register_value", 31 0, L_0x555576695de0;  1 drivers
S_0x55557667a5e0 .scope module, "u_register_common" "rggen_register_common" 10 35, 11 2 0, S_0x555576679d60;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "i_clk";
    .port_info 1 /INPUT 1 "i_rst_n";
    .port_info 2 /INPUT 1 "i_register_valid";
    .port_info 3 /INPUT 2 "i_register_access";
    .port_info 4 /INPUT 3 "i_register_address";
    .port_info 5 /INPUT 32 "i_register_write_data";
    .port_info 6 /INPUT 32 "i_register_strobe";
    .port_info 7 /OUTPUT 1 "o_register_active";
    .port_info 8 /OUTPUT 1 "o_register_ready";
    .port_info 9 /OUTPUT 2 "o_register_status";
    .port_info 10 /OUTPUT 32 "o_register_read_data";
    .port_info 11 /OUTPUT 32 "o_register_value";
    .port_info 12 /INPUT 1 "i_additional_match";
    .port_info 13 /OUTPUT 1 "o_bit_field_write_valid";
    .port_info 14 /OUTPUT 1 "o_bit_field_read_valid";
    .port_info 15 /OUTPUT 32 "o_bit_field_mask";
    .port_info 16 /OUTPUT 32 "o_bit_field_write_data";
    .port_info 17 /INPUT 32 "i_bit_field_read_data";
    .port_info 18 /INPUT 32 "i_bit_field_value";
P_0x55557667a7c0 .param/l "ADDRESS_WIDTH" 0 11 5, +C4<00000000000000000000000000000011>;
P_0x55557667a800 .param/l "BUS_BYTE_WIDTH" 1 11 32, +C4<00000000000000000000000000000100>;
P_0x55557667a840 .param/l "BUS_WIDTH" 0 11 7, +C4<00000000000000000000000000100000>;
P_0x55557667a880 .param/l "DATA_BYTE_WIDTH" 1 11 33, +C4<00000000000000000000000000000100>;
P_0x55557667a8c0 .param/l "DATA_WIDTH" 0 11 8, +C4<00000000000000000000000000100000>;
P_0x55557667a900 .param/l "OFFSET_ADDRESS" 0 11 6, C4<000>;
P_0x55557667a940 .param/l "READABLE" 0 11 3, +C4<00000000000000000000000000000001>;
P_0x55557667a980 .param/l "USE_ADDITIONAL_MATCH" 0 11 9, C4<0>;
P_0x55557667a9c0 .param/l "WORDS" 1 11 31, +C4<00000000000000000000000000000001>;
P_0x55557667aa00 .param/l "WRITABLE" 0 11 4, +C4<00000000000000000000000000000001>;
L_0x7f7ed8bb7180 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x555576694ea0 .functor OR 1, L_0x5555766957e0, L_0x7f7ed8bb7180, C4<0>, C4<0>;
L_0x555576694f10 .functor AND 1, L_0x555576694ea0, L_0x5555766958a0, C4<1>, C4<1>;
L_0x7f7ed8bb7138 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x7f7ed8bb71c8 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x555576694f80 .functor AND 1, L_0x7f7ed8bb7138, L_0x7f7ed8bb71c8, C4<1>, C4<1>;
L_0x555576694ff0 .functor OR 1, L_0x555576694f10, L_0x555576694f80, C4<0>, C4<0>;
L_0x555576695130 .functor OR 1, L_0x5555766957e0, L_0x7f7ed8bb7180, C4<0>, C4<0>;
L_0x555576695330 .functor AND 1, L_0x555576695130, L_0x555576695240, C4<1>, C4<1>;
L_0x555576695570 .functor AND 1, L_0x7f7ed8bb7138, L_0x555576695480, C4<1>, C4<1>;
L_0x555576695680 .functor OR 1, L_0x555576695330, L_0x555576695570, C4<0>, C4<0>;
L_0x5555766957e0 .functor AND 1, L_0x5555766b0830, L_0x555576694e30, C4<1>, C4<1>;
L_0x5555766959e0 .functor BUFZ 32, L_0x5555766b09b0, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0x555576695ab0 .functor BUFZ 1, L_0x555576694e30, C4<0>, C4<0>, C4<0>;
L_0x555576695c60 .functor BUFZ 32, L_0x555576695ea0, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0x555576695de0 .functor BUFZ 32, L_0x5555766ac0a0, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0x5555766b44e0 .functor BUFT 32, L_0x555576695940, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0x555576695d70 .functor BUFT 32, L_0x5555766959e0, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
v0x55557667f210_0 .net *"_ivl_1", 0 0, L_0x555576694ea0;  1 drivers
v0x55557667f2d0_0 .net *"_ivl_11", 0 0, L_0x555576695130;  1 drivers
v0x55557667f390_0 .net *"_ivl_14", 0 0, L_0x555576695240;  1 drivers
v0x55557667f460_0 .net *"_ivl_16", 0 0, L_0x555576695330;  1 drivers
v0x55557667f520_0 .net *"_ivl_19", 0 0, L_0x555576695480;  1 drivers
v0x55557667f630_0 .net *"_ivl_21", 0 0, L_0x555576695570;  1 drivers
v0x55557667f6f0_0 .net *"_ivl_4", 0 0, L_0x555576694f10;  1 drivers
v0x55557667f7b0_0 .net *"_ivl_7", 0 0, L_0x555576694f80;  1 drivers
L_0x7f7ed8bb72a0 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v0x55557667f870_0 .net "i_additional_match", 0 0, L_0x7f7ed8bb72a0;  1 drivers
v0x55557667f910_0 .net "i_bit_field_read_data", 31 0, L_0x5555766abe20;  alias, 1 drivers
v0x55557667f9e0_0 .net "i_bit_field_value", 31 0, L_0x5555766ac0a0;  alias, 1 drivers
v0x55557667faa0_0 .net "i_clk", 0 0, v0x5555766940a0_0;  alias, 1 drivers
v0x55557667fb40_0 .net "i_register_access", 1 0, L_0x5555766b08a0;  alias, 1 drivers
v0x55557667fc90_0 .net "i_register_address", 2 0, L_0x5555766b0910;  alias, 1 drivers
v0x55557667fde0_0 .net "i_register_strobe", 31 0, L_0x5555766b0a20;  alias, 1 drivers
v0x55557667fea0_0 .net "i_register_valid", 0 0, L_0x5555766b0830;  alias, 1 drivers
v0x55557667ff40_0 .net "i_register_write_data", 31 0, L_0x5555766b09b0;  alias, 1 drivers
v0x555576680160_0 .net "i_rst_n", 0 0, L_0x5555766b3230;  alias, 1 drivers
v0x555576680200_0 .net "o_bit_field_mask", 31 0, L_0x5555766b44e0;  alias, 1 drivers
v0x5555766802e0_0 .net "o_bit_field_read_valid", 0 0, L_0x555576695680;  alias, 1 drivers
v0x555576680380_0 .net "o_bit_field_write_data", 31 0, L_0x555576695d70;  alias, 1 drivers
v0x555576680460_0 .net "o_bit_field_write_valid", 0 0, L_0x555576694ff0;  alias, 1 drivers
v0x555576680500_0 .net "o_register_active", 0 0, L_0x555576695ab0;  alias, 1 drivers
v0x5555766805c0_0 .net "o_register_read_data", 31 0, L_0x555576695c60;  alias, 1 drivers
v0x5555766806a0_0 .net "o_register_ready", 0 0, L_0x555576695b20;  alias, 1 drivers
v0x555576680760_0 .net "o_register_status", 1 0, L_0x7f7ed8bb70f0;  alias, 1 drivers
v0x555576680840_0 .net "o_register_value", 31 0, L_0x555576695de0;  alias, 1 drivers
v0x555576680920_0 .net "w_active", 0 0, L_0x555576694e30;  1 drivers
v0x5555766809e0_0 .net "w_backdoor_valid", 0 0, L_0x7f7ed8bb7138;  1 drivers
v0x555576680aa0_0 .net "w_frontdoor_valid", 0 0, L_0x5555766957e0;  1 drivers
v0x555576680b60 .array "w_mask", 1 0;
v0x555576680b60_0 .net v0x555576680b60 0, 31 0, L_0x555576695940; 1 drivers
L_0x7f7ed8bb7210 .functor BUFT 1, C4<00000000000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x555576680b60_1 .net v0x555576680b60 1, 31 0, L_0x7f7ed8bb7210; 1 drivers
v0x555576680c80_0 .net "w_match", 0 0, L_0x555576654620;  1 drivers
v0x555576680d90_0 .net "w_pending_valid", 0 0, L_0x7f7ed8bb7180;  1 drivers
v0x555576681060_0 .net "w_read_data", 31 0, L_0x555576695ea0;  1 drivers
v0x555576681120 .array "w_write", 1 0;
v0x555576681120_0 .net v0x555576681120 0, 0 0, L_0x5555766958a0; 1 drivers
v0x555576681120_1 .net v0x555576681120 1, 0 0, L_0x7f7ed8bb71c8; 1 drivers
v0x555576681200 .array "w_write_data", 1 0;
v0x555576681200_0 .net v0x555576681200 0, 31 0, L_0x5555766959e0; 1 drivers
L_0x7f7ed8bb7258 .functor BUFT 1, C4<00000000000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x555576681200_1 .net v0x555576681200 1, 31 0, L_0x7f7ed8bb7258; 1 drivers
L_0x555576695240 .reduce/nor L_0x5555766958a0;
L_0x555576695480 .reduce/nor L_0x7f7ed8bb71c8;
L_0x5555766958a0 .part L_0x5555766b08a0, 0, 1;
L_0x555576695940 .ufunc/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.u_register.u_register_common.get_mask, 32, L_0x555576654620, L_0x5555766b0a20 (v0x55557667e6c0_0, v0x55557667e7b0_0) S_0x55557667e320;
L_0x555576695b20 .reduce/nor L_0x7f7ed8bb7138;
S_0x55557667b260 .scope autofunction.vec4.s3, "calc_start_address" "calc_start_address" 11 67, 11 67 0, S_0x55557667a5e0;
 .timescale 0 0;
; Variable calc_start_address is vec4 return value of scope S_0x55557667b260
v0x55557667b540_0 .var/i "delta", 31 0;
v0x55557667b620_0 .var/i "index", 31 0;
v0x55557667b710_0 .var "offset_address", 2 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.u_register.u_register_common.calc_start_address ;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0x55557667b710_0, 0, 3;
    %load/vec4 v0x55557667b620_0;
    %muli 4, 0, 32;
    %store/vec4 v0x55557667b540_0, 0, 32;
    %load/vec4 v0x55557667b710_0;
    %load/vec4 v0x55557667b540_0;
    %parti/s 3, 0, 2;
    %add;
    %ret/vec4 0, 0, 3;  Assign to calc_start_address (store_vec4_to_lval)
    %end;
S_0x55557667b7f0 .scope generate, "g_decoder[0]" "g_decoder[0]" 11 42, 11 42 0, S_0x55557667a5e0;
 .timescale 0 0;
P_0x55557667ba10 .param/l "g_i" 1 11 42, +C4<00>;
S_0x55557667bad0 .scope module, "u_decoder" "rggen_address_decoder" 11 51, 12 1 0, S_0x55557667b7f0;
 .timescale 0 0;
    .port_info 0 /INPUT 3 "i_address";
    .port_info 1 /INPUT 2 "i_access";
    .port_info 2 /INPUT 1 "i_additional_match";
    .port_info 3 /OUTPUT 1 "o_match";
P_0x55557667bcb0 .param/l "ACCESS_BIT" 1 12 16, +C4<00000000000000000000000000000000>;
P_0x55557667bcf0 .param/l "BEGIN_ADDRESS" 1 12 17, C4<0>;
P_0x55557667bd30 .param/l "BEGIN_ADDRESS_ALL_0" 1 12 19, C4<1>;
P_0x55557667bd70 .param/l "BUS_WIDTH" 0 12 5, +C4<00000000000000000000000000100000>;
P_0x55557667bdb0 .param/l "BYTE_SIZE" 0 12 7, +C4<00000000000000000000000000000100>;
P_0x55557667bdf0 .param/l "END_ADDRESS" 1 12 18, C4<0>;
P_0x55557667be30 .param/l "END_ADDRESS_ALL_1" 1 12 20, C4<0>;
P_0x55557667be70 .param/l "LSB" 1 12 15, +C4<000000000000000000000000000000010>;
P_0x55557667beb0 .param/l "READABLE" 0 12 2, +C4<00000000000000000000000000000001>;
P_0x55557667bef0 .param/l "START_ADDRESS" 0 12 6, C4<000>;
P_0x55557667bf30 .param/l "USE_ADDITIONAL_MATCH" 0 12 8, C4<0>;
P_0x55557667bf70 .param/l "WIDTH" 0 12 4, +C4<00000000000000000000000000000011>;
P_0x55557667bfb0 .param/l "WRITABLE" 0 12 3, +C4<00000000000000000000000000000001>;
L_0x7f7ed8bb7060 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
L_0x55557664b080 .functor AND 1, L_0x5555765cee00, L_0x7f7ed8bb7060, C4<1>, C4<1>;
L_0x7f7ed8bb70a8 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
L_0x555576654620 .functor AND 1, L_0x55557664b080, L_0x7f7ed8bb70a8, C4<1>, C4<1>;
v0x55557667da70_0 .net *"_ivl_2", 0 0, L_0x55557664b080;  1 drivers
v0x55557667db50_0 .net "i_access", 1 0, L_0x5555766b08a0;  alias, 1 drivers
v0x55557667dc10_0 .net "i_additional_match", 0 0, L_0x7f7ed8bb72a0;  alias, 1 drivers
v0x55557667dcb0_0 .net "i_address", 2 0, L_0x5555766b0910;  alias, 1 drivers
v0x55557667dd70_0 .net "o_match", 0 0, L_0x555576654620;  alias, 1 drivers
v0x55557667de80_0 .net "w_access_match", 0 0, L_0x7f7ed8bb7060;  1 drivers
v0x55557667df40_0 .net "w_additional_match", 0 0, L_0x7f7ed8bb70a8;  1 drivers
v0x55557667e000_0 .net "w_address_match", 0 0, L_0x5555765cee00;  1 drivers
L_0x555576694bb0 .part L_0x5555766b0910, 2, 1;
S_0x55557667c670 .scope autofunction.vec4.s1, "calc_end_address" "calc_end_address" 12 38, 12 38 0, S_0x55557667bad0;
 .timescale 0 0;
v0x55557667c850_0 .var "address", 2 0;
v0x55557667c950_0 .var/i "byte_size", 31 0;
; Variable calc_end_address is vec4 return value of scope S_0x55557667c670
v0x55557667cb20_0 .var/i "delta", 31 0;
v0x55557667cc00_0 .var "start_address", 2 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.u_register.u_register_common.g_decoder\x5B0\x5D.u_decoder.calc_end_address ;
    %load/vec4 v0x55557667c950_0;
    %subi 1, 0, 32;
    %store/vec4 v0x55557667cb20_0, 0, 32;
    %load/vec4 v0x55557667cc00_0;
    %load/vec4 v0x55557667cb20_0;
    %parti/s 3, 0, 2;
    %add;
    %store/vec4 v0x55557667c850_0, 0, 3;
    %load/vec4 v0x55557667c850_0;
    %parti/s 1, 2, 3;
    %ret/vec4 0, 0, 1;  Assign to calc_end_address (store_vec4_to_lval)
    %end;
S_0x55557667cd30 .scope autofunction.vec4.u32, "clog2" "clog2" 12 22, 12 22 0, S_0x55557667bad0;
 .timescale 0 0;
; Variable clog2 is vec4 return value of scope S_0x55557667cd30
v0x55557667d010_0 .var/i "n", 31 0;
v0x55557667d0f0_0 .var/i "result", 31 0;
v0x55557667d1b0_0 .var/i "value", 31 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.u_register.u_register_common.g_decoder\x5B0\x5D.u_decoder.clog2 ;
    %load/vec4 v0x55557667d010_0;
    %subi 1, 0, 32;
    %store/vec4 v0x55557667d1b0_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55557667d0f0_0, 0, 32;
T_41.529 ;
    %load/vec4 v0x55557667d1b0_0;
    %cmpi/s 0, 0, 32;
    %flag_or 5, 4; GT is !LE
    %flag_inv 5;
    %jmp/0xz T_41.530, 5;
    %load/vec4 v0x55557667d0f0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55557667d0f0_0, 0, 32;
    %load/vec4 v0x55557667d1b0_0;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %shiftr 4;
    %store/vec4 v0x55557667d1b0_0, 0, 32;
    %jmp T_41.529;
T_41.530 ;
    %load/vec4 v0x55557667d0f0_0;
    %ret/vec4 0, 0, 32;  Assign to clog2 (store_vec4_to_lval)
    %end;
S_0x55557667d290 .scope generate, "g_access_match" "g_access_match" 12 76, 12 76 0, S_0x55557667bad0;
 .timescale 0 0;
S_0x55557667d4a0 .scope generate, "g_additional_match" "g_additional_match" 12 86, 12 86 0, S_0x55557667bad0;
 .timescale 0 0;
S_0x55557667d680 .scope generate, "g_address_match" "g_address_match" 12 58, 12 58 0, S_0x55557667bad0;
 .timescale 0 0;
L_0x7f7ed8bb7018 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x5555765cee00 .functor XNOR 1, L_0x555576694bb0, L_0x7f7ed8bb7018, C4<0>, C4<0>;
v0x55557667d8b0_0 .net *"_ivl_0", 0 0, L_0x555576694bb0;  1 drivers
v0x55557667d990_0 .net/2u *"_ivl_1", 0 0, L_0x7f7ed8bb7018;  1 drivers
S_0x55557667e140 .scope generate, "g_match" "g_match" 11 59, 11 59 0, S_0x55557667a5e0;
 .timescale 0 0;
L_0x555576694e30 .functor BUFZ 1, L_0x555576654620, C4<0>, C4<0>, C4<0>;
S_0x55557667e320 .scope autofunction.vec4.s32, "get_mask" "get_mask" 11 97, 11 97 0, S_0x55557667a5e0;
 .timescale 0 0;
; Variable get_mask is vec4 return value of scope S_0x55557667e320
v0x55557667e5e0_0 .var "mask", 31 0;
v0x55557667e6c0_0 .var "match", 0 0;
v0x55557667e7b0_0 .var "strobe", 31 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.u_register.u_register_common.get_mask ;
    %load/vec4 v0x55557667e7b0_0;
    %store/vec4 v0x55557667e5e0_0, 0, 32;
    %load/vec4 v0x55557667e5e0_0;
    %ret/vec4 0, 0, 32;  Assign to get_mask (store_vec4_to_lval)
    %end;
S_0x55557667e890 .scope module, "u_read_data_mux" "rggen_mux" 11 134, 13 1 0, S_0x55557667a5e0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "i_select";
    .port_info 1 /INPUT 32 "i_data";
    .port_info 2 /OUTPUT 32 "o_data";
P_0x55557667eac0 .param/l "ENTRIES" 0 13 3, +C4<00000000000000000000000000000001>;
P_0x55557667eb00 .param/l "WIDTH" 0 13 2, +C4<00000000000000000000000000100000>;
v0x55557667eed0_0 .net "i_data", 31 0, L_0x5555766abe20;  alias, 1 drivers
v0x55557667efd0_0 .net "i_select", 0 0, L_0x555576654620;  alias, 1 drivers
v0x55557667f0c0_0 .net "o_data", 31 0, L_0x555576695ea0;  alias, 1 drivers
S_0x55557667ecd0 .scope generate, "g" "g" 13 10, 13 10 0, S_0x55557667e890;
 .timescale 0 0;
L_0x555576695ea0 .functor BUFZ 32, L_0x5555766abe20, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
S_0x555576682c10 .scope module, "u_adapter" "rggen_wishbone_adapter" 8 58, 14 1 0, S_0x5555765c8c50;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "i_clk";
    .port_info 1 /INPUT 1 "i_rst_n";
    .port_info 2 /INPUT 1 "i_wb_cyc";
    .port_info 3 /INPUT 1 "i_wb_stb";
    .port_info 4 /OUTPUT 1 "o_wb_stall";
    .port_info 5 /INPUT 4 "i_wb_adr";
    .port_info 6 /INPUT 1 "i_wb_we";
    .port_info 7 /INPUT 32 "i_wb_dat";
    .port_info 8 /INPUT 4 "i_wb_sel";
    .port_info 9 /OUTPUT 1 "o_wb_ack";
    .port_info 10 /OUTPUT 1 "o_wb_err";
    .port_info 11 /OUTPUT 1 "o_wb_rty";
    .port_info 12 /OUTPUT 32 "o_wb_dat";
    .port_info 13 /OUTPUT 1 "o_register_valid";
    .port_info 14 /OUTPUT 2 "o_register_access";
    .port_info 15 /OUTPUT 3 "o_register_address";
    .port_info 16 /OUTPUT 32 "o_register_write_data";
    .port_info 17 /OUTPUT 32 "o_register_strobe";
    .port_info 18 /INPUT 2 "i_register_active";
    .port_info 19 /INPUT 2 "i_register_ready";
    .port_info 20 /INPUT 4 "i_register_status";
    .port_info 21 /INPUT 64 "i_register_read_data";
P_0x555576655830 .param/l "ADDRESS_WIDTH" 0 14 2, +C4<00000000000000000000000000000100>;
P_0x555576655870 .param/l "BASE_ADDRESS" 0 14 7, C4<0000>;
P_0x5555766558b0 .param/l "BUS_WIDTH" 0 14 4, +C4<00000000000000000000000000100000>;
P_0x5555766558f0 .param/l "BYTE_SIZE" 0 14 8, +C4<00000000000000000000000000001000>;
P_0x555576655930 .param/l "DEFAULT_READ_DATA" 0 14 10, C4<00000000000000000000000000000000>;
P_0x555576655970 .param/l "ERROR_STATUS" 0 14 9, +C4<00000000000000000000000000000000>;
P_0x5555766559b0 .param/l "INSERT_SLICER" 0 14 11, +C4<00000000000000000000000000000000>;
P_0x5555766559f0 .param/l "LOCAL_ADDRESS_WIDTH" 0 14 3, +C4<00000000000000000000000000000011>;
P_0x555576655a30 .param/l "PRE_DECODE" 0 14 6, +C4<00000000000000000000000000000000>;
P_0x555576655a70 .param/l "REGISTERS" 0 14 5, +C4<00000000000000000000000000000010>;
P_0x555576655ab0 .param/l "USE_STALL" 0 14 12, +C4<00000000000000000000000000000001>;
L_0x5555766af1a0 .functor BUFZ 32, v0x55557668e720_0, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0x5555766af4c0 .functor AND 1, L_0x5555766af2d0, L_0x5555766af3d0, C4<1>, C4<1>;
L_0x5555766aff00 .functor AND 1, v0x5555766945b0_0, v0x555576694930_0, C4<1>, C4<1>;
L_0x7f7ed8bb8b60 .functor BUFT 1, C4<00>, C4<0>, C4<0>, C4<0>;
v0x555576684790_0 .net/2u *"_ivl_12", 1 0, L_0x7f7ed8bb8b60;  1 drivers
v0x55557668c8d0_0 .net *"_ivl_14", 0 0, L_0x5555766af2d0;  1 drivers
L_0x7f7ed8bb8ba8 .functor BUFT 1, C4<00>, C4<0>, C4<0>, C4<0>;
v0x55557668c990_0 .net/2u *"_ivl_16", 1 0, L_0x7f7ed8bb8ba8;  1 drivers
v0x55557668ca80_0 .net *"_ivl_18", 0 0, L_0x5555766af3d0;  1 drivers
v0x55557668cb40_0 .net *"_ivl_23", 0 0, L_0x5555766af620;  1 drivers
L_0x7f7ed8bb8bf0 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v0x55557668cc20_0 .net/2u *"_ivl_24", 0 0, L_0x7f7ed8bb8bf0;  1 drivers
v0x55557668cd00_0 .net *"_ivl_26", 1 0, L_0x5555766af700;  1 drivers
L_0x7f7ed8bb8c38 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v0x55557668cde0_0 .net/2u *"_ivl_28", 0 0, L_0x7f7ed8bb8c38;  1 drivers
v0x55557668cec0_0 .net *"_ivl_30", 1 0, L_0x5555766af840;  1 drivers
v0x55557668d030_0 .net *"_ivl_35", 0 0, L_0x5555766afba0;  1 drivers
v0x55557668d110_0 .net *"_ivl_39", 0 0, L_0x5555766afe60;  1 drivers
v0x55557668d1f0_0 .net *"_ivl_43", 0 0, L_0x5555766b0140;  1 drivers
v0x55557668d2d0_0 .net *"_ivl_50", 0 0, L_0x5555766aff00;  1 drivers
v0x55557668d390_0 .net "i_clk", 0 0, v0x5555766940a0_0;  alias, 1 drivers
v0x55557668d430_0 .net "i_register_active", 1 0, L_0x5555766adcf0;  alias, 1 drivers
v0x55557668d4f0_0 .net "i_register_read_data", 63 0, L_0x5555766aded0;  alias, 1 drivers
v0x55557668d5b0_0 .net "i_register_ready", 1 0, L_0x5555766add90;  alias, 1 drivers
v0x55557668d760_0 .net "i_register_status", 3 0, L_0x5555766ade30;  alias, 1 drivers
v0x55557668d830_0 .net "i_rst_n", 0 0, L_0x5555766b3230;  alias, 1 drivers
v0x55557668d8d0_0 .net "i_wb_adr", 3 0, v0x5555766944f0_0;  alias, 1 drivers
v0x55557668d990_0 .net "i_wb_cyc", 0 0, v0x5555766945b0_0;  alias, 1 drivers
v0x55557668da50_0 .net "i_wb_dat", 31 0, v0x555576694710_0;  alias, 1 drivers
v0x55557668db30_0 .net "i_wb_sel", 3 0, v0x5555766947d0_0;  alias, 1 drivers
v0x55557668dc10_0 .net "i_wb_stb", 0 0, v0x555576694930_0;  alias, 1 drivers
v0x55557668dcd0_0 .net "i_wb_we", 0 0, v0x5555766949d0_0;  alias, 1 drivers
v0x55557668dd90_0 .net "o_register_access", 1 0, L_0x5555766b08a0;  alias, 1 drivers
v0x55557668de50_0 .net "o_register_address", 2 0, L_0x5555766b0910;  alias, 1 drivers
v0x55557668df10_0 .net "o_register_strobe", 31 0, L_0x5555766b0a20;  alias, 1 drivers
v0x55557668dfd0_0 .net "o_register_valid", 0 0, L_0x5555766b0830;  alias, 1 drivers
v0x55557668e070_0 .net "o_register_write_data", 31 0, L_0x5555766b09b0;  alias, 1 drivers
v0x55557668e130_0 .net "o_wb_ack", 0 0, L_0x5555766aefa0;  alias, 1 drivers
v0x55557668e1f0_0 .net "o_wb_dat", 31 0, L_0x5555766af1a0;  alias, 1 drivers
v0x55557668e2d0_0 .net "o_wb_err", 0 0, L_0x5555766af100;  alias, 1 drivers
v0x55557668e5a0_0 .net "o_wb_rty", 0 0, L_0x7f7ed8bb8b18;  alias, 1 drivers
v0x55557668e660_0 .net "o_wb_stall", 0 0, L_0x5555766aee40;  alias, 1 drivers
v0x55557668e720_0 .var "r_response_data", 31 0;
v0x55557668e800_0 .var "r_response_valid", 1 0;
v0x55557668e8e0_0 .net "w_bus_access", 1 0, L_0x5555766af9c0;  1 drivers
v0x55557668e9d0_0 .net "w_bus_address", 3 0, L_0x5555766afd30;  1 drivers
v0x55557668eaa0_0 .net "w_bus_read_data", 31 0, L_0x5555766b2460;  1 drivers
v0x55557668eb70_0 .net "w_bus_ready", 0 0, L_0x5555766b2240;  1 drivers
v0x55557668ec40_0 .net "w_bus_status", 1 0, L_0x5555766b2350;  1 drivers
v0x55557668ed10_0 .net "w_bus_strobe", 3 0, L_0x5555766b0260;  1 drivers
v0x55557668ede0_0 .net "w_bus_valid", 0 0, L_0x5555766af4c0;  1 drivers
v0x55557668eeb0_0 .net "w_bus_write_data", 31 0, L_0x5555766aff70;  1 drivers
v0x55557668ef80_0 .net "w_request_valid", 1 0, L_0x5555766b0430;  1 drivers
v0x55557668f020_0 .net "w_wb_adr", 3 0, v0x555576683970_0;  1 drivers
v0x55557668f0e0_0 .net "w_wb_dat", 31 0, v0x555576683a60_0;  1 drivers
v0x55557668f1c0_0 .net "w_wb_sel", 3 0, v0x555576683b40_0;  1 drivers
v0x55557668f2a0_0 .net "w_wb_we", 0 0, v0x555576683c70_0;  1 drivers
L_0x5555766aee40 .part L_0x5555766b0430, 1, 1;
L_0x5555766aefa0 .part v0x55557668e800_0, 0, 1;
L_0x5555766af100 .part v0x55557668e800_0, 1, 1;
L_0x5555766af2d0 .cmp/ne 2, L_0x5555766b0430, L_0x7f7ed8bb8b60;
L_0x5555766af3d0 .cmp/eq 2, v0x55557668e800_0, L_0x7f7ed8bb8ba8;
L_0x5555766af620 .part L_0x5555766b0430, 1, 1;
L_0x5555766af700 .concat [ 1 1 0 0], v0x555576683c70_0, L_0x7f7ed8bb8bf0;
L_0x5555766af840 .concat [ 1 1 0 0], v0x5555766949d0_0, L_0x7f7ed8bb8c38;
L_0x5555766af9c0 .functor MUXZ 2, L_0x5555766af840, L_0x5555766af700, L_0x5555766af620, C4<>;
L_0x5555766afba0 .part L_0x5555766b0430, 1, 1;
L_0x5555766afd30 .functor MUXZ 4, v0x5555766944f0_0, v0x555576683970_0, L_0x5555766afba0, C4<>;
L_0x5555766afe60 .part L_0x5555766b0430, 1, 1;
L_0x5555766aff70 .functor MUXZ 32, v0x555576694710_0, v0x555576683a60_0, L_0x5555766afe60, C4<>;
L_0x5555766b0140 .part L_0x5555766b0430, 1, 1;
L_0x5555766b0260 .functor MUXZ 4, v0x5555766947d0_0, v0x555576683b40_0, L_0x5555766b0140, C4<>;
L_0x5555766b0430 .concat8 [ 1 1 0 0], L_0x5555766aff00, v0x5555766838b0_0;
S_0x5555766835d0 .scope generate, "g_stall" "g_stall" 14 67, 14 67 0, S_0x555576682c10;
 .timescale 0 0;
v0x5555766837b0_0 .net *"_ivl_1", 0 0, v0x5555766838b0_0;  1 drivers
v0x5555766838b0_0 .var "r_request_valid", 0 0;
v0x555576683970_0 .var "r_wb_adr", 3 0;
v0x555576683a60_0 .var "r_wb_dat", 31 0;
v0x555576683b40_0 .var "r_wb_sel", 3 0;
v0x555576683c70_0 .var "r_wb_we", 0 0;
S_0x555576683d30 .scope module, "u_adapter_common" "rggen_adapter_common" 14 153, 15 2 0, S_0x555576682c10;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "i_clk";
    .port_info 1 /INPUT 1 "i_rst_n";
    .port_info 2 /INPUT 1 "i_bus_valid";
    .port_info 3 /INPUT 2 "i_bus_access";
    .port_info 4 /INPUT 4 "i_bus_address";
    .port_info 5 /INPUT 32 "i_bus_write_data";
    .port_info 6 /INPUT 4 "i_bus_strobe";
    .port_info 7 /OUTPUT 1 "o_bus_ready";
    .port_info 8 /OUTPUT 2 "o_bus_status";
    .port_info 9 /OUTPUT 32 "o_bus_read_data";
    .port_info 10 /OUTPUT 1 "o_register_valid";
    .port_info 11 /OUTPUT 2 "o_register_access";
    .port_info 12 /OUTPUT 3 "o_register_address";
    .port_info 13 /OUTPUT 32 "o_register_write_data";
    .port_info 14 /OUTPUT 32 "o_register_strobe";
    .port_info 15 /INPUT 2 "i_register_active";
    .port_info 16 /INPUT 2 "i_register_ready";
    .port_info 17 /INPUT 4 "i_register_status";
    .port_info 18 /INPUT 64 "i_register_read_data";
P_0x555576683f30 .param/l "ADDRESS_WIDTH" 0 15 3, +C4<00000000000000000000000000000100>;
P_0x555576683f70 .param/l "BASE_ADDRESS" 0 15 9, C4<0000>;
P_0x555576683fb0 .param/l "BUS_WIDTH" 0 15 5, +C4<00000000000000000000000000100000>;
P_0x555576683ff0 .param/l "BYTE_SIZE" 0 15 10, +C4<00000000000000000000000000001000>;
P_0x555576684030 .param/l "DEFAULT_READ_DATA" 0 15 13, C4<00000000000000000000000000000000>;
P_0x555576684070 .param/l "ERROR_STATUS" 0 15 12, +C4<00000000000000000000000000000000>;
P_0x5555766840b0 .param/l "INSERT_SLICER" 0 15 14, +C4<00000000000000000000000000000000>;
P_0x5555766840f0 .param/l "LOCAL_ADDRESS_WIDTH" 0 15 4, +C4<00000000000000000000000000000011>;
P_0x555576684130 .param/l "PRE_DECODE" 0 15 8, +C4<00000000000000000000000000000000>;
P_0x555576684170 .param/l "REGISTERS" 0 15 7, +C4<00000000000000000000000000000010>;
P_0x5555766841b0 .param/l "RESPONSE_WIDTH" 1 15 36, +C4<00000000000000000000000000000100010>;
P_0x5555766841f0 .param/l "STROBE_WIDTH" 0 15 6, +C4<00000000000000000000000000000100>;
P_0x555576684230 .param/l "USE_READ_STROBE" 0 15 11, +C4<00000000000000000000000000000000>;
L_0x5555766b2240 .functor BUFZ 1, L_0x5555766b1560, C4<0>, C4<0>, C4<0>;
L_0x7f7ed8bb8c80 .functor BUFT 1, C4<00>, C4<0>, C4<0>, C4<0>;
L_0x5555766b2350 .functor BUFZ 2, L_0x7f7ed8bb8c80, C4<00>, C4<00>, C4<00>;
L_0x5555766b2460 .functor BUFZ 32, L_0x5555766b0b50, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0x5555766b2760 .functor OR 1, L_0x5555766b2570, L_0x5555766b2660, C4<0>, C4<0>;
v0x55557668ab70_0 .net *"_ivl_21", 0 0, L_0x5555766b2570;  1 drivers
v0x55557668ac30_0 .net *"_ivl_23", 0 0, L_0x5555766b2660;  1 drivers
v0x55557668acf0_0 .net "i_bus_access", 1 0, L_0x5555766af9c0;  alias, 1 drivers
v0x55557668ade0_0 .net "i_bus_address", 3 0, L_0x5555766afd30;  alias, 1 drivers
v0x55557668aec0_0 .net "i_bus_strobe", 3 0, L_0x5555766b0260;  alias, 1 drivers
v0x55557668aff0_0 .net "i_bus_valid", 0 0, L_0x5555766af4c0;  alias, 1 drivers
v0x55557668b0b0_0 .net "i_bus_write_data", 31 0, L_0x5555766aff70;  alias, 1 drivers
v0x55557668b190_0 .net "i_clk", 0 0, v0x5555766940a0_0;  alias, 1 drivers
v0x55557668b230_0 .net "i_register_active", 1 0, L_0x5555766adcf0;  alias, 1 drivers
v0x55557668b2f0_0 .net "i_register_read_data", 63 0, L_0x5555766aded0;  alias, 1 drivers
v0x55557668b3b0_0 .net "i_register_ready", 1 0, L_0x5555766add90;  alias, 1 drivers
v0x55557668b490_0 .net "i_register_status", 3 0, L_0x5555766ade30;  alias, 1 drivers
v0x55557668b570_0 .net "i_rst_n", 0 0, L_0x5555766b3230;  alias, 1 drivers
v0x55557668b610_0 .net "o_bus_read_data", 31 0, L_0x5555766b2460;  alias, 1 drivers
v0x55557668b6f0_0 .net "o_bus_ready", 0 0, L_0x5555766b2240;  alias, 1 drivers
v0x55557668b7b0_0 .net "o_bus_status", 1 0, L_0x5555766b2350;  alias, 1 drivers
v0x55557668b890_0 .net "o_register_access", 1 0, L_0x5555766b08a0;  alias, 1 drivers
v0x55557668ba60_0 .net "o_register_address", 2 0, L_0x5555766b0910;  alias, 1 drivers
v0x55557668bb20_0 .net "o_register_strobe", 31 0, L_0x5555766b0a20;  alias, 1 drivers
v0x55557668bbe0_0 .net "o_register_valid", 0 0, L_0x5555766b0830;  alias, 1 drivers
v0x55557668bc80_0 .net "o_register_write_data", 31 0, L_0x5555766b09b0;  alias, 1 drivers
v0x55557668bdd0_0 .var "r_busy", 0 0;
v0x55557668be90_0 .net "w_bus_ready", 0 0, L_0x5555766b1560;  1 drivers
L_0x7f7ed8bb8d58 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v0x55557668bf50_0 .net "w_inside_range", 0 0, L_0x7f7ed8bb8d58;  1 drivers
v0x55557668c010_0 .net "w_register_active", 0 0, L_0x5555766b0d20;  1 drivers
v0x55557668c0d0_0 .net "w_register_inactive", 0 0, L_0x5555766b2760;  1 drivers
v0x55557668c190_0 .net "w_register_read_data", 31 0, L_0x5555766b0b50;  1 drivers
v0x55557668c270_0 .net "w_register_ready", 0 0, L_0x5555766b0bf0;  1 drivers
v0x55557668c330_0 .net "w_register_response", 33 0, L_0x5555766b1910;  1 drivers
v0x55557668c3f0_0 .net "w_register_status", 1 0, L_0x7f7ed8bb8c80;  1 drivers
v0x55557668c4d0_0 .net "w_response", 67 0, L_0x5555766b10c0;  1 drivers
L_0x5555766b0b50 .part L_0x5555766b1910, 2, 32;
L_0x5555766b0bf0 .part L_0x5555766b1910, 1, 1;
L_0x5555766b0d20 .part L_0x5555766b1910, 0, 1;
L_0x5555766b0dc0 .part L_0x5555766aded0, 0, 32;
L_0x5555766b0ef0 .part L_0x5555766add90, 0, 1;
L_0x5555766b10c0 .concat8 [ 34 34 0 0], L_0x5555766b1020, L_0x5555766b1380;
L_0x5555766b11f0 .part L_0x5555766aded0, 32, 32;
L_0x5555766b1290 .part L_0x5555766add90, 1, 1;
L_0x5555766b2570 .reduce/nor L_0x5555766b0d20;
L_0x5555766b2660 .reduce/nor L_0x7f7ed8bb8d58;
S_0x555576684bd0 .scope generate, "g_no_request_slicer" "g_no_request_slicer" 15 82, 15 82 0, S_0x555576683d30;
 .timescale 0 0;
L_0x5555766b0720 .functor AND 1, L_0x5555766af4c0, L_0x7f7ed8bb8d58, C4<1>, C4<1>;
L_0x5555766b0830 .functor AND 1, L_0x5555766b0720, L_0x5555766b0790, C4<1>, C4<1>;
L_0x5555766b08a0 .functor BUFZ 2, L_0x5555766af9c0, C4<00>, C4<00>, C4<00>;
L_0x5555766b09b0 .functor BUFZ 32, L_0x5555766aff70, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
v0x555576684db0_0 .net *"_ivl_1", 0 0, L_0x5555766b0720;  1 drivers
v0x555576684e90_0 .net *"_ivl_3", 0 0, L_0x5555766b0790;  1 drivers
L_0x5555766b0790 .reduce/nor v0x55557668bdd0_0;
L_0x5555766b0910 .ufunc/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.u_adapter.u_adapter_common.get_local_address, 3, L_0x5555766afd30 (v0x555576686220_0) S_0x555576686040;
L_0x5555766b0a20 .ufunc/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.u_adapter.u_adapter_common.get_register_strobe, 32, L_0x5555766af9c0, L_0x5555766b0260 (v0x555576686700_0, v0x555576686a80_0) S_0x5555766864d0;
S_0x555576684f50 .scope generate, "g_reponse" "g_reponse" 15 172, 15 172 0, S_0x555576683d30;
 .timescale 0 0;
S_0x555576685150 .scope generate, "g[0]" "g[0]" 15 188, 15 188 0, S_0x555576684f50;
 .timescale 0 0;
P_0x555576685350 .param/l "i" 1 15 188, +C4<00>;
v0x555576685430_0 .net *"_ivl_0", 31 0, L_0x5555766b0dc0;  1 drivers
v0x555576685510_0 .net *"_ivl_1", 0 0, L_0x5555766b0ef0;  1 drivers
L_0x7f7ed8bb8cc8 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v0x5555766855f0_0 .net/2u *"_ivl_2", 0 0, L_0x7f7ed8bb8cc8;  1 drivers
v0x5555766856e0_0 .net *"_ivl_4", 33 0, L_0x5555766b1020;  1 drivers
L_0x5555766b1020 .concat [ 1 1 32 0], L_0x7f7ed8bb8cc8, L_0x5555766b0ef0, L_0x5555766b0dc0;
S_0x5555766857c0 .scope generate, "g[1]" "g[1]" 15 188, 15 188 0, S_0x555576684f50;
 .timescale 0 0;
P_0x5555766859e0 .param/l "i" 1 15 188, +C4<01>;
v0x555576685aa0_0 .net *"_ivl_0", 31 0, L_0x5555766b11f0;  1 drivers
v0x555576685b80_0 .net *"_ivl_1", 0 0, L_0x5555766b1290;  1 drivers
L_0x7f7ed8bb8d10 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v0x555576685c60_0 .net/2u *"_ivl_2", 0 0, L_0x7f7ed8bb8d10;  1 drivers
v0x555576685d50_0 .net *"_ivl_4", 33 0, L_0x5555766b1380;  1 drivers
L_0x5555766b1380 .concat [ 1 1 32 0], L_0x7f7ed8bb8d10, L_0x5555766b1290, L_0x5555766b11f0;
S_0x555576685e30 .scope generate, "g_response_ready" "g_response_ready" 15 218, 15 218 0, S_0x555576683d30;
 .timescale 0 0;
L_0x5555766b1560 .functor OR 1, L_0x5555766b0bf0, L_0x5555766b2760, C4<0>, C4<0>;
S_0x555576686040 .scope autofunction.vec4.s3, "get_local_address" "get_local_address" 15 131, 15 131 0, S_0x555576683d30;
 .timescale 0 0;
v0x555576686220_0 .var "address", 3 0;
; Variable get_local_address is vec4 return value of scope S_0x555576686040
v0x5555766863e0_0 .var "local_address", 3 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.u_adapter.u_adapter_common.get_local_address ;
    %load/vec4 v0x555576686220_0;
    %store/vec4 v0x5555766863e0_0, 0, 4;
    %load/vec4 v0x5555766863e0_0;
    %parti/s 3, 0, 2;
    %ret/vec4 0, 0, 3;  Assign to get_local_address (store_vec4_to_lval)
    %end;
S_0x5555766864d0 .scope autofunction.vec4.s32, "get_register_strobe" "get_register_strobe" 15 147, 15 147 0, S_0x555576683d30;
 .timescale 0 0;
v0x555576686700_0 .var "access", 1 0;
; Variable get_register_strobe is vec4 return value of scope S_0x5555766864d0
v0x5555766868e0_0 .var/i "i", 31 0;
v0x5555766869a0_0 .var "register_strobe", 31 0;
v0x555576686a80_0 .var "strobe", 3 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.u_adapter.u_adapter_common.get_register_strobe ;
    %pushi/vec4 1, 0, 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_44.533, 9;
    %load/vec4 v0x555576686700_0;
    %pushi/vec4 2, 0, 2;
    %cmp/e;
    %flag_get/vec4 4;
    %and;
T_44.533;
    %flag_set/vec4 8;
    %jmp/0xz  T_44.531, 8;
    %pushi/vec4 4294967295, 0, 32;
    %store/vec4 v0x5555766869a0_0, 0, 32;
    %jmp T_44.532;
T_44.531 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555766868e0_0, 0, 32;
T_44.534 ; Top of for-loop
    %load/vec4 v0x5555766868e0_0;
    %cmpi/s 4, 0, 32;
	  %jmp/0xz T_44.535, 5;
    %load/vec4 v0x555576686a80_0;
    %load/vec4 v0x5555766868e0_0;
    %part/s 1;
    %replicate 8;
    %load/vec4 v0x5555766868e0_0;
    %muli 8, 0, 32;
    %ix/vec4/s 4;
    %store/vec4 v0x5555766869a0_0, 4, 8;
T_44.536 ; for-loop step statement
    %load/vec4 v0x5555766868e0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555766868e0_0, 0, 32;
    %jmp T_44.534;
T_44.535 ; for-loop exit label
T_44.532 ;
    %load/vec4 v0x5555766869a0_0;
    %ret/vec4 0, 0, 32;  Assign to get_register_strobe (store_vec4_to_lval)
    %end;
S_0x555576686bb0 .scope autofunction.vec4.s1, "pre_decode" "pre_decode" 15 66, 15 66 0, S_0x555576683d30;
 .timescale 0 0;
v0x555576686d90_0 .var "address", 3 0;
v0x555576686e90_0 .var "begin_address", 3 0;
v0x555576686f70_0 .var/i "delta", 31 0;
v0x555576687030_0 .var "end_address", 3 0;
; Variable pre_decode is vec4 return value of scope S_0x555576686bb0
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.u_adapter.u_adapter_common.pre_decode ;
    %pushi/vec4 7, 0, 32;
    %store/vec4 v0x555576686f70_0, 0, 32;
    %pushi/vec4 0, 0, 4;
    %store/vec4 v0x555576686e90_0, 0, 4;
    %load/vec4 v0x555576686e90_0;
    %load/vec4 v0x555576686f70_0;
    %parti/s 4, 0, 2;
    %add;
    %store/vec4 v0x555576687030_0, 0, 4;
    %load/vec4 v0x555576686e90_0;
    %load/vec4 v0x555576686d90_0;
    %cmp/u;
    %flag_or 5, 4;
    %flag_get/vec4 5;
    %jmp/0 T_45.537, 5;
    %load/vec4 v0x555576686d90_0;
    %load/vec4 v0x555576687030_0;
    %cmp/u;
    %flag_get/vec4 4;
    %flag_get/vec4 5;
    %or;
    %and;
T_45.537;
    %ret/vec4 0, 0, 1;  Assign to pre_decode (store_vec4_to_lval)
    %end;
S_0x555576687220 .scope module, "u_response_mux" "rggen_mux" 15 206, 13 1 0, S_0x555576683d30;
 .timescale 0 0;
    .port_info 0 /INPUT 2 "i_select";
    .port_info 1 /INPUT 68 "i_data";
    .port_info 2 /OUTPUT 34 "o_data";
P_0x5555766728c0 .param/l "ENTRIES" 0 13 3, +C4<00000000000000000000000000000010>;
P_0x555576672900 .param/l "WIDTH" 0 13 2, +C4<00000000000000000000000000000100010>;
v0x55557668a850_0 .net "i_data", 67 0, L_0x5555766b10c0;  alias, 1 drivers
v0x55557668a930_0 .net "i_select", 1 0, L_0x5555766adcf0;  alias, 1 drivers
v0x55557668aa10_0 .net "o_data", 33 0, L_0x5555766b1910;  alias, 1 drivers
L_0x5555766b19d0 .part L_0x5555766b10c0, 0, 34;
L_0x5555766b1a70 .part L_0x5555766adcf0, 0, 1;
L_0x5555766b1e40 .part L_0x5555766b10c0, 34, 34;
L_0x5555766b1f70 .part L_0x5555766adcf0, 1, 1;
S_0x555576687590 .scope generate, "g" "g" 13 10, 13 10 0, S_0x555576687220;
 .timescale 0 0;
v0x55557668a760_0 .net "masked_data", 67 0, L_0x5555766b1d10;  1 drivers
L_0x5555766b1d10 .concat8 [ 34 34 0 0], L_0x5555766b1c00, L_0x5555766b20e0;
S_0x555576687790 .scope generate, "g[0]" "g[0]" 13 14, 13 14 0, S_0x555576687590;
 .timescale 0 0;
P_0x5555766879b0 .param/l "i" 1 13 14, +C4<00>;
L_0x5555766b1c00 .functor AND 34, L_0x5555766b19d0, L_0x5555766b1b10, C4<1111111111111111111111111111111111>, C4<1111111111111111111111111111111111>;
v0x5555766874a0_0 .net *"_ivl_0", 33 0, L_0x5555766b19d0;  1 drivers
v0x555576687ad0_0 .net *"_ivl_1", 0 0, L_0x5555766b1a70;  1 drivers
v0x555576687bb0_0 .net *"_ivl_3", 33 0, L_0x5555766b1b10;  1 drivers
v0x555576687ca0_0 .net *"_ivl_4", 33 0, L_0x5555766b1c00;  1 drivers
L_0x5555766b1b10 .repeat 34, 34, L_0x5555766b1a70;
S_0x555576687d80 .scope generate, "g[1]" "g[1]" 13 14, 13 14 0, S_0x555576687590;
 .timescale 0 0;
P_0x555576687fa0 .param/l "i" 1 13 14, +C4<01>;
L_0x5555766b20e0 .functor AND 34, L_0x5555766b1e40, L_0x5555766b2040, C4<1111111111111111111111111111111111>, C4<1111111111111111111111111111111111>;
v0x555576688060_0 .net *"_ivl_0", 33 0, L_0x5555766b1e40;  1 drivers
v0x555576688140_0 .net *"_ivl_1", 0 0, L_0x5555766b1f70;  1 drivers
v0x555576688220_0 .net *"_ivl_3", 33 0, L_0x5555766b2040;  1 drivers
v0x555576688310_0 .net *"_ivl_4", 33 0, L_0x5555766b20e0;  1 drivers
L_0x5555766b2040 .repeat 34, 34, L_0x5555766b1f70;
S_0x5555766883f0 .scope module, "u_reducer" "rggen_or_reducer" 13 21, 16 1 0, S_0x555576687590;
 .timescale 0 0;
    .port_info 0 /INPUT 68 "i_data";
    .port_info 1 /OUTPUT 34 "o_result";
P_0x55557662c3a0 .param/l "N" 0 16 3, +C4<00000000000000000000000000000010>;
P_0x55557662c3e0 .param/l "NEXT_N" 1 16 79, +C4<00000000000000000000000000000001>;
P_0x55557662c420 .param/l "OFFSET_LIST" 1 16 78, C4<00000000000000100000000000000000>;
P_0x55557662c460 .param/l "SUB_N_LIST" 1 16 77, C4<00000000000000000000000000000010>;
P_0x55557662c4a0 .param/l "WIDTH" 0 16 2, +C4<00000000000000000000000000000100010>;
v0x55557668a460_0 .net "i_data", 67 0, L_0x5555766b1d10;  alias, 1 drivers
v0x55557668a560_0 .net "next_data", 33 0, L_0x5555766b1800;  1 drivers
v0x55557668a640_0 .net "o_result", 33 0, L_0x5555766b1910;  alias, 1 drivers
L_0x5555766b1670 .part L_0x5555766b1d10, 0, 34;
L_0x5555766b1760 .part L_0x5555766b1d10, 34, 34;
S_0x555576688970 .scope generate, "g_or_loop[0]" "g_or_loop[0]" 16 85, 16 85 0, S_0x5555766883f0;
 .timescale 0 0;
P_0x555576688b90 .param/l "i" 1 16 85, +C4<00>;
S_0x555576688c70 .scope generate, "g" "g" 16 94, 16 94 0, S_0x555576688970;
 .timescale 0 0;
L_0x5555766b1800 .functor OR 34, L_0x5555766b1670, L_0x5555766b1760, C4<0000000000000000000000000000000000>, C4<0000000000000000000000000000000000>;
v0x555576688850_0 .net *"_ivl_0", 33 0, L_0x5555766b1670;  1 drivers
v0x555576688eb0_0 .net *"_ivl_1", 33 0, L_0x5555766b1760;  1 drivers
S_0x555576688f90 .scope generate, "g_reduce" "g_reduce" 16 102, 16 102 0, S_0x5555766883f0;
 .timescale 0 0;
L_0x5555766b1910 .functor BUFZ 34, L_0x5555766b1800, C4<0000000000000000000000000000000000>, C4<0000000000000000000000000000000000>, C4<0000000000000000000000000000000000>;
S_0x555576689190 .scope autofunction.vec4.u32, "get_next_n" "get_next_n" 16 62, 16 62 0, S_0x5555766883f0;
 .timescale 0 0;
; Variable get_next_n is vec4 return value of scope S_0x555576689190
v0x555576689460_0 .var/i "i", 31 0;
v0x555576689540_0 .var/i "next_n", 31 0;
v0x555576689630_0 .var "sub_n_list", 31 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.u_adapter.u_adapter_common.u_response_mux.g.u_reducer.get_next_n ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x555576689540_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x555576689460_0, 0, 32;
T_46.538 ; Top of for-loop
    %load/vec4 v0x555576689460_0;
    %cmpi/s 2, 0, 32;
	  %jmp/0xz T_46.539, 5;
    %load/vec4 v0x555576689540_0;
    %load/vec4 v0x555576689630_0;
    %load/vec4 v0x555576689460_0;
    %muli 16, 0, 32;
    %part/s 16;
    %pad/u 32;
    %cmpi/ne 0, 0, 32;
    %flag_mov 8, 4;
    %jmp/0 T_46.541, 8;
    %pushi/vec4 1, 0, 32;
    %jmp/1 T_46.542, 8;
T_46.541 ; End of true expr.
    %pushi/vec4 0, 0, 32;
    %jmp/0 T_46.542, 8;
 ; End of false expr.
    %blend;
T_46.542;
    %add;
    %store/vec4 v0x555576689540_0, 0, 32;
T_46.540 ; for-loop step statement
    %load/vec4 v0x555576689460_0;
    %addi 1, 0, 32;
    %store/vec4 v0x555576689460_0, 0, 32;
    %jmp T_46.538;
T_46.539 ; for-loop exit label
    %load/vec4 v0x555576689540_0;
    %ret/vec4 0, 0, 32;  Assign to get_next_n (store_vec4_to_lval)
    %end;
S_0x555576689710 .scope autofunction.vec4.s32, "get_offset_list" "get_offset_list" 16 43, 16 43 0, S_0x5555766883f0;
 .timescale 0 0;
; Variable get_offset_list is vec4 return value of scope S_0x555576689710
v0x5555766899f0_0 .var/i "i", 31 0;
v0x555576689ad0_0 .var "list", 31 0;
v0x555576689bc0_0 .var "sub_n_list", 31 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.u_adapter.u_adapter_common.u_response_mux.g.u_reducer.get_offset_list ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555766899f0_0, 0, 32;
T_47.543 ; Top of for-loop
    %load/vec4 v0x5555766899f0_0;
    %cmpi/s 2, 0, 32;
	  %jmp/0xz T_47.544, 5;
    %load/vec4 v0x5555766899f0_0;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_47.546, 4;
    %pushi/vec4 0, 0, 16;
    %load/vec4 v0x5555766899f0_0;
    %muli 16, 0, 32;
    %ix/vec4/s 4;
    %store/vec4 v0x555576689ad0_0, 4, 16;
    %jmp T_47.547;
T_47.546 ;
    %load/vec4 v0x555576689bc0_0;
    %load/vec4 v0x5555766899f0_0;
    %subi 1, 0, 32;
    %muli 16, 0, 32;
    %part/s 16;
    %load/vec4 v0x555576689ad0_0;
    %load/vec4 v0x5555766899f0_0;
    %subi 1, 0, 32;
    %muli 16, 0, 32;
    %part/s 16;
    %add;
    %load/vec4 v0x5555766899f0_0;
    %muli 16, 0, 32;
    %ix/vec4/s 4;
    %store/vec4 v0x555576689ad0_0, 4, 16;
T_47.547 ;
T_47.545 ; for-loop step statement
    %load/vec4 v0x5555766899f0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555766899f0_0, 0, 32;
    %jmp T_47.543;
T_47.544 ; for-loop exit label
    %load/vec4 v0x555576689ad0_0;
    %ret/vec4 0, 0, 32;  Assign to get_offset_list (store_vec4_to_lval)
    %end;
S_0x555576689ca0 .scope autofunction.vec4.s32, "get_sub_n_list" "get_sub_n_list" 16 8, 16 8 0, S_0x5555766883f0;
 .timescale 0 0;
v0x555576689ed0_0 .var "current_n", 15 0;
; Variable get_sub_n_list is vec4 return value of scope S_0x555576689ca0
v0x55557668a0b0_0 .var "half_n", 15 0;
v0x55557668a170_0 .var "list", 31 0;
v0x55557668a250_0 .var/i "list_index", 31 0;
v0x55557668a380_0 .var/i "n", 31 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.u_adapter.u_adapter_common.u_response_mux.g.u_reducer.get_sub_n_list ;
    %load/vec4 v0x55557668a380_0;
    %parti/s 16, 0, 2;
    %store/vec4 v0x555576689ed0_0, 0, 16;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55557668a250_0, 0, 32;
T_48.548 ;
    %load/vec4 v0x555576689ed0_0;
    %pad/u 32;
    %cmpi/u 0, 0, 32;
    %flag_or 5, 4; GT is !LE
    %flag_inv 5;
    %jmp/0xz T_48.549, 5;
    %load/vec4 v0x555576689ed0_0;
    %pad/u 32;
    %pushi/vec4 2, 0, 32;
    %div;
    %pad/u 16;
    %store/vec4 v0x55557668a0b0_0, 0, 16;
    %load/vec4 v0x555576689ed0_0;
    %pad/u 32;
    %cmpi/u 4, 0, 32;
    %flag_or 5, 4; GT is !LE
    %flag_inv 5;
    %flag_get/vec4 5;
    %jmp/0 T_48.552, 5;
    %load/vec4 v0x55557668a0b0_0;
    %pad/u 32;
    %cmpi/u 4, 0, 32;
    %flag_get/vec4 4;
    %flag_get/vec4 5;
    %or;
    %and;
T_48.552;
    %flag_set/vec4 8;
    %jmp/0xz  T_48.550, 8;
    %load/vec4 v0x55557668a0b0_0;
    %load/vec4 v0x55557668a250_0;
    %muli 16, 0, 32;
    %ix/vec4/s 4;
    %store/vec4 v0x55557668a170_0, 4, 16;
    %jmp T_48.551;
T_48.550 ;
    %load/vec4 v0x555576689ed0_0;
    %pad/u 32;
    %cmpi/u 4, 0, 32;
    %flag_inv 5; GE is !LT
    %jmp/0xz  T_48.553, 5;
    %pushi/vec4 4, 0, 16;
    %load/vec4 v0x55557668a250_0;
    %muli 16, 0, 32;
    %ix/vec4/s 4;
    %store/vec4 v0x55557668a170_0, 4, 16;
    %jmp T_48.554;
T_48.553 ;
    %load/vec4 v0x555576689ed0_0;
    %load/vec4 v0x55557668a250_0;
    %muli 16, 0, 32;
    %ix/vec4/s 4;
    %store/vec4 v0x55557668a170_0, 4, 16;
T_48.554 ;
T_48.551 ;
    %load/vec4 v0x555576689ed0_0;
    %load/vec4 v0x55557668a170_0;
    %load/vec4 v0x55557668a250_0;
    %muli 16, 0, 32;
    %part/s 16;
    %sub;
    %store/vec4 v0x555576689ed0_0, 0, 16;
    %load/vec4 v0x55557668a250_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55557668a250_0, 0, 32;
    %jmp T_48.548;
T_48.549 ;
T_48.555 ;
    %load/vec4 v0x55557668a250_0;
    %cmpi/s 2, 0, 32;
    %jmp/0xz T_48.556, 5;
    %pushi/vec4 0, 0, 16;
    %load/vec4 v0x55557668a250_0;
    %muli 16, 0, 32;
    %ix/vec4/s 4;
    %store/vec4 v0x55557668a170_0, 4, 16;
    %load/vec4 v0x55557668a250_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55557668a250_0, 0, 32;
    %jmp T_48.555;
T_48.556 ;
    %load/vec4 v0x55557668a170_0;
    %ret/vec4 0, 0, 32;  Assign to get_sub_n_list (store_vec4_to_lval)
    %end;
S_0x555576693380 .scope autotask, "wishbone_readwdg" "wishbone_readwdg" 2 309, 2 309 0, S_0x5555763f68e0;
 .timescale 0 0;
v0x555576693560_0 .var "rdata", 31 0;
TD_wdg_tb.wishbone_readwdg ;
    %alloc S_0x5555766939e0;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x555576693eb0_0, 0, 1;
    %pushi/vec4 4, 0, 32;
    %store/vec4 v0x555576693c10_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x555576693f70_0, 0, 32;
    %pushi/vec4 15, 0, 4;
    %store/vec4 v0x555576693df0_0, 0, 4;
    %fork TD_wdg_tb.wishbone_transaction, S_0x5555766939e0;
    %join;
    %load/vec4 v0x555576693d10_0;
    %store/vec4 v0x555576693560_0, 0, 32;
    %free S_0x5555766939e0;
    %vpi_call 2 320 "$display", "xxxxxxxxxxxxxxxxxxxxx" {0 0 0};
    %vpi_call 2 321 "$display", "!!!read data: %d !!!", v0x555576693560_0 {0 0 0};
    %vpi_call 2 322 "$display", "xxxxxxxxxxxxxxxxxxxxx" {0 0 0};
    %end;
S_0x555576693640 .scope autotask, "wishbone_set_wdcsr" "wishbone_set_wdcsr" 2 279, 2 279 0, S_0x5555763f68e0;
 .timescale 0 0;
v0x555576693820_0 .var "en", 0 0;
v0x555576693900_0 .var "wtocnt", 9 0;
TD_wdg_tb.wishbone_set_wdcsr ;
    %vpi_call 2 285 "$display", "-  Sending WDCSR Register Access -" {0 0 0};
    %vpi_call 2 286 "$display", "Enable     : 0x%08h", v0x555576693820_0 {0 0 0};
    %vpi_call 2 287 "$display", "WTOCNT     : 0x%08h", v0x555576693900_0 {0 0 0};
    %alloc S_0x5555766939e0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x555576693eb0_0, 0, 1;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x555576693c10_0, 0, 32;
    %pushi/vec4 0, 0, 18;
    %load/vec4 v0x555576693900_0;
    %concat/vec4; draw_concat_vec4
    %concati/vec4 0, 0, 2;
    %concati/vec4 0, 0, 1;
    %load/vec4 v0x555576693820_0;
    %concat/vec4; draw_concat_vec4
    %store/vec4 v0x555576693f70_0, 0, 32;
    %pushi/vec4 15, 0, 4;
    %store/vec4 v0x555576693df0_0, 0, 4;
    %fork TD_wdg_tb.wishbone_transaction, S_0x5555766939e0;
    %join;
    %load/vec4 v0x555576693d10_0;
    %store/vec4 v0x555576694220_0, 0, 32;
    %free S_0x5555766939e0;
    %end;
S_0x5555766939e0 .scope autotask, "wishbone_transaction" "wishbone_transaction" 2 211, 2 211 0, S_0x5555763f68e0;
 .timescale 0 0;
v0x555576693c10_0 .var "address", 31 0;
v0x555576693d10_0 .var "read_data", 31 0;
v0x555576693df0_0 .var "sel", 3 0;
v0x555576693eb0_0 .var "write", 0 0;
v0x555576693f70_0 .var "write_data", 31 0;
TD_wdg_tb.wishbone_transaction ;
T_51.557 ;
    %load/vec4 v0x555576694890_0;
    %flag_set/vec4 8;
    %jmp/0xz T_51.558, 8;
    %wait E_0x5555764d5920;
    %jmp T_51.557;
T_51.558 ;
    %load/vec4 v0x555576693c10_0;
    %pad/u 4;
    %store/vec4 v0x5555766944f0_0, 0, 4;
    %load/vec4 v0x555576693f70_0;
    %store/vec4 v0x555576694710_0, 0, 32;
    %load/vec4 v0x555576693df0_0;
    %store/vec4 v0x5555766947d0_0, 0, 4;
    %load/vec4 v0x555576693eb0_0;
    %store/vec4 v0x5555766949d0_0, 0, 1;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x5555766945b0_0, 0, 1;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x555576694930_0, 0, 1;
    %vpi_call 2 235 "$display", "----------------------------------" {0 0 0};
    %vpi_call 2 236 "$display", "- Wishbone Transaction Initiated -" {0 0 0};
    %vpi_call 2 237 "$display", "----------------------------------" {0 0 0};
    %load/vec4 v0x555576693eb0_0;
    %flag_set/vec4 8;
    %jmp/0 T_51.559, 8;
    %pushi/vec4 1465010516, 0, 32; draw_string_vec4
    %pushi/vec4 69, 0, 8; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %jmp/1 T_51.560, 8;
T_51.559 ; End of true expr.
    %pushi/vec4 5391681, 0, 32; draw_string_vec4
    %pushi/vec4 68, 0, 8; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %jmp/0 T_51.560, 8;
 ; End of false expr.
    %blend;
T_51.560;
    %vpi_call 2 238 "$display", "Mode       : %s", S<0,vec4,u40> {1 0 0};
    %vpi_call 2 239 "$display", "Address    : 0x%08h", v0x555576693c10_0 {0 0 0};
    %vpi_call 2 240 "$display", "Write Data : 0x%08h", v0x555576693f70_0 {0 0 0};
    %vpi_call 2 241 "$display", "Byte Sel   : 0b%b", v0x555576693df0_0 {0 0 0};
    %vpi_call 2 242 "$display", "----------------------------------" {0 0 0};
    %vpi_call 2 248 "$display", "Waiting for ACK..." {0 0 0};
    %pushi/vec4 100000, 0, 32;
    %store/vec4 v0x555576694360_0, 0, 32;
T_51.561 ;
    %load/vec4 v0x555576694450_0;
    %nor/r;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_51.563, 9;
    %pushi/vec4 0, 0, 32;
    %load/vec4 v0x555576694360_0;
    %cmp/s;
    %flag_get/vec4 5;
    %and;
T_51.563;
    %flag_set/vec4 8;
    %jmp/0xz T_51.562, 8;
    %wait E_0x5555764d5920;
    %load/vec4 v0x555576694360_0;
    %subi 1, 0, 32;
    %store/vec4 v0x555576694360_0, 0, 32;
    %vpi_call 2 257 "$display", "timeout %d", v0x555576694360_0 {0 0 0};
    %jmp T_51.561;
T_51.562 ;
    %load/vec4 v0x555576694360_0;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_51.564, 4;
    %vpi_call 2 261 "$display", "ERROR: Timeout waiting for ACK!" {0 0 0};
    %jmp T_51.565;
T_51.564 ;
    %vpi_call 2 264 "$display", "Received ACK" {0 0 0};
    %load/vec4 v0x555576693eb0_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_51.566, 8;
    %load/vec4 v0x555576694650_0;
    %store/vec4 v0x555576693d10_0, 0, 32;
T_51.566 ;
T_51.565 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x5555766945b0_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x555576694930_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x5555766949d0_0, 0, 1;
    %end;
    .scope S_0x55557666f330;
T_52 ;
    %wait E_0x555576658470;
    %load/vec4 v0x555576672340_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_52.0, 8;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x55557666f510_0, 0;
    %jmp T_52.1;
T_52.0 ;
    %pushi/vec4 1, 0, 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_52.4, 9;
    %load/vec4 v0x5555766731a0_0;
    %parti/s 1, 1, 2;
    %and;
T_52.4;
    %flag_set/vec4 8;
    %jmp/0xz  T_52.2, 8;
    %alloc S_0x555576671040;
    %load/vec4 v0x55557666f510_0;
    %load/vec4 v0x5555766723e0_0;
    %load/vec4 v0x555576672680_0;
    %store/vec4 v0x555576671700_0, 0, 1;
    %store/vec4 v0x5555766714f0_0, 0, 1;
    %store/vec4 v0x555576671220_0, 0, 1;
    %callf/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_wden.u_bit_field.get_sw_write_next_value, S_0x555576671040;
    %free S_0x555576671040;
    %assign/vec4 v0x55557666f510_0, 0;
T_52.2 ;
T_52.1 ;
    %jmp T_52;
    .thread T_52;
    .scope S_0x555576662bf0;
T_53 ;
    %wait E_0x555576658470;
    %load/vec4 v0x555576665900_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_53.0, 8;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x555576662ed0_0, 0;
    %jmp T_53.1;
T_53.0 ;
    %load/vec4 v0x555576666600_0;
    %parti/s 1, 1, 2;
    %flag_set/vec4 8;
    %flag_get/vec4 8;
    %jmp/0 T_53.2, 8;
    %load/vec4 v0x5555766659a0_0;
    %pushi/vec4 0, 0, 1;
    %cmp/ne;
    %flag_get/vec4 4;
    %and;
T_53.2;
    %assign/vec4 v0x555576662ed0_0, 0;
T_53.1 ;
    %jmp T_53;
    .thread T_53;
    .scope S_0x555576661d90;
T_54 ;
    %wait E_0x555576658470;
    %load/vec4 v0x555576665900_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_54.0, 8;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x555576662060_0, 0;
    %jmp T_54.1;
T_54.0 ;
    %load/vec4 v0x555576665a80_0;
    %flag_set/vec4 8;
    %flag_get/vec4 8;
    %jmp/0 T_54.2, 8;
    %load/vec4 v0x555576665820_0;
    %pushi/vec4 0, 0, 1;
    %cmp/ne;
    %flag_get/vec4 4;
    %and;
T_54.2;
    %assign/vec4 v0x555576662060_0, 0;
T_54.1 ;
    %jmp T_54;
    .thread T_54;
    .scope S_0x555576662910;
T_55 ;
    %wait E_0x555576658470;
    %load/vec4 v0x555576665900_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_55.0, 8;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x555576662af0_0, 0;
    %jmp T_55.1;
T_55.0 ;
    %pushi/vec4 1, 0, 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_55.4, 9;
    %load/vec4 v0x555576666480_0;
    %and;
T_55.4;
    %flag_set/vec4 8;
    %jmp/0xz  T_55.2, 8;
    %alloc S_0x555576662f90;
    %load/vec4 v0x555576662af0_0;
    %load/vec4 v0x555576665710_0;
    %load/vec4 v0x555576665b20_0;
    %load/vec4 v0x555576665580_0;
    %load/vec4 v0x5555766654a0_0;
    %store/vec4 v0x555576663170_0, 0, 1;
    %store/vec4 v0x5555766634f0_0, 0, 1;
    %store/vec4 v0x555576663770_0, 0, 1;
    %store/vec4 v0x555576663850_0, 0, 1;
    %store/vec4 v0x555576663270_0, 0, 1;
    %callf/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_s1wto.u_bit_field.get_hw_next_value, S_0x555576662f90;
    %free S_0x555576662f90;
    %assign/vec4 v0x555576662af0_0, 0;
    %jmp T_55.3;
T_55.2 ;
    %pushi/vec4 1, 0, 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_55.7, 9;
    %load/vec4 v0x555576666600_0;
    %parti/s 1, 1, 2;
    %and;
T_55.7;
    %flag_set/vec4 8;
    %jmp/0xz  T_55.5, 8;
    %alloc S_0x555576664500;
    %load/vec4 v0x555576662af0_0;
    %load/vec4 v0x5555766659a0_0;
    %load/vec4 v0x555576665b20_0;
    %store/vec4 v0x555576664bc0_0, 0, 1;
    %store/vec4 v0x5555766649b0_0, 0, 1;
    %store/vec4 v0x5555766646e0_0, 0, 1;
    %callf/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_s1wto.u_bit_field.get_sw_write_next_value, S_0x555576664500;
    %free S_0x555576664500;
    %assign/vec4 v0x555576662af0_0, 0;
T_55.5 ;
T_55.3 ;
T_55.1 ;
    %jmp T_55;
    .thread T_55;
    .scope S_0x555576669290;
T_56 ;
    %wait E_0x555576658470;
    %load/vec4 v0x55557666be90_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_56.0, 8;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x555576669570_0, 0;
    %jmp T_56.1;
T_56.0 ;
    %load/vec4 v0x55557666cc50_0;
    %parti/s 1, 1, 2;
    %flag_set/vec4 8;
    %flag_get/vec4 8;
    %jmp/0 T_56.2, 8;
    %load/vec4 v0x55557666c040_0;
    %pushi/vec4 0, 0, 1;
    %cmp/ne;
    %flag_get/vec4 4;
    %and;
T_56.2;
    %assign/vec4 v0x555576669570_0, 0;
T_56.1 ;
    %jmp T_56;
    .thread T_56;
    .scope S_0x555576668430;
T_57 ;
    %wait E_0x555576658470;
    %load/vec4 v0x55557666be90_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_57.0, 8;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x555576668700_0, 0;
    %jmp T_57.1;
T_57.0 ;
    %load/vec4 v0x55557666c120_0;
    %flag_set/vec4 8;
    %flag_get/vec4 8;
    %jmp/0 T_57.2, 8;
    %load/vec4 v0x55557666bdb0_0;
    %pushi/vec4 0, 0, 1;
    %cmp/ne;
    %flag_get/vec4 4;
    %and;
T_57.2;
    %assign/vec4 v0x555576668700_0, 0;
T_57.1 ;
    %jmp T_57;
    .thread T_57;
    .scope S_0x555576668fb0;
T_58 ;
    %wait E_0x555576658470;
    %load/vec4 v0x55557666be90_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_58.0, 8;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x555576669190_0, 0;
    %jmp T_58.1;
T_58.0 ;
    %pushi/vec4 1, 0, 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_58.4, 9;
    %load/vec4 v0x55557666cad0_0;
    %and;
T_58.4;
    %flag_set/vec4 8;
    %jmp/0xz  T_58.2, 8;
    %alloc S_0x555576669630;
    %load/vec4 v0x555576669190_0;
    %load/vec4 v0x55557666bca0_0;
    %load/vec4 v0x55557666c1c0_0;
    %load/vec4 v0x55557666bb10_0;
    %load/vec4 v0x55557666ba30_0;
    %store/vec4 v0x555576669810_0, 0, 1;
    %store/vec4 v0x555576669b90_0, 0, 1;
    %store/vec4 v0x555576669e10_0, 0, 1;
    %store/vec4 v0x555576669ef0_0, 0, 1;
    %store/vec4 v0x555576669910_0, 0, 1;
    %callf/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_s2wto.u_bit_field.get_hw_next_value, S_0x555576669630;
    %free S_0x555576669630;
    %assign/vec4 v0x555576669190_0, 0;
    %jmp T_58.3;
T_58.2 ;
    %pushi/vec4 1, 0, 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_58.7, 9;
    %load/vec4 v0x55557666cc50_0;
    %parti/s 1, 1, 2;
    %and;
T_58.7;
    %flag_set/vec4 8;
    %jmp/0xz  T_58.5, 8;
    %alloc S_0x55557666aba0;
    %load/vec4 v0x555576669190_0;
    %load/vec4 v0x55557666c040_0;
    %load/vec4 v0x55557666c1c0_0;
    %store/vec4 v0x55557666b260_0, 0, 1;
    %store/vec4 v0x55557666b050_0, 0, 1;
    %store/vec4 v0x55557666ad80_0, 0, 1;
    %callf/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_s2wto.u_bit_field.get_sw_write_next_value, S_0x55557666aba0;
    %free S_0x55557666aba0;
    %assign/vec4 v0x555576669190_0, 0;
T_58.5 ;
T_58.3 ;
T_58.1 ;
    %jmp T_58;
    .thread T_58;
    .scope S_0x555576675980;
T_59 ;
    %wait E_0x555576658470;
    %load/vec4 v0x5555766789c0_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_59.0, 8;
    %pushi/vec4 1023, 0, 10;
    %assign/vec4 v0x555576675b60_0, 0;
    %jmp T_59.1;
T_59.0 ;
    %pushi/vec4 1, 0, 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_59.4, 9;
    %load/vec4 v0x555576679700_0;
    %parti/s 1, 1, 2;
    %and;
T_59.4;
    %flag_set/vec4 8;
    %jmp/0xz  T_59.2, 8;
    %alloc S_0x5555766776c0;
    %load/vec4 v0x555576675b60_0;
    %load/vec4 v0x555576678a60_0;
    %load/vec4 v0x555576678c70_0;
    %store/vec4 v0x555576677d80_0, 0, 10;
    %store/vec4 v0x555576677b70_0, 0, 10;
    %store/vec4 v0x5555766778a0_0, 0, 10;
    %callf/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_wtocnt.u_bit_field.get_sw_write_next_value, S_0x5555766776c0;
    %free S_0x5555766776c0;
    %assign/vec4 v0x555576675b60_0, 0;
T_59.2 ;
T_59.1 ;
    %jmp T_59;
    .thread T_59;
    .scope S_0x5555766835d0;
T_60 ;
    %wait E_0x555576658470;
    %load/vec4 v0x55557668d830_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_60.0, 8;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x5555766838b0_0, 0;
    %jmp T_60.1;
T_60.0 ;
    %load/vec4 v0x55557668e800_0;
    %cmpi/ne 0, 0, 2;
    %jmp/0xz  T_60.2, 4;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x5555766838b0_0, 0;
    %jmp T_60.3;
T_60.2 ;
    %load/vec4 v0x55557668ef80_0;
    %cmpi/e 1, 0, 2;
    %jmp/0xz  T_60.4, 4;
    %pushi/vec4 1, 0, 1;
    %assign/vec4 v0x5555766838b0_0, 0;
T_60.4 ;
T_60.3 ;
T_60.1 ;
    %jmp T_60;
    .thread T_60;
    .scope S_0x5555766835d0;
T_61 ;
    %wait E_0x555576658470;
    %load/vec4 v0x55557668d830_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_61.0, 8;
    %pushi/vec4 0, 0, 4;
    %assign/vec4 v0x555576683970_0, 0;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x555576683c70_0, 0;
    %pushi/vec4 0, 0, 32;
    %assign/vec4 v0x555576683a60_0, 0;
    %pushi/vec4 0, 0, 4;
    %assign/vec4 v0x555576683b40_0, 0;
    %jmp T_61.1;
T_61.0 ;
    %load/vec4 v0x55557668ef80_0;
    %cmpi/e 1, 0, 2;
    %jmp/0xz  T_61.2, 4;
    %load/vec4 v0x55557668d8d0_0;
    %assign/vec4 v0x555576683970_0, 0;
    %load/vec4 v0x55557668dcd0_0;
    %assign/vec4 v0x555576683c70_0, 0;
    %load/vec4 v0x55557668da50_0;
    %assign/vec4 v0x555576683a60_0, 0;
    %load/vec4 v0x55557668db30_0;
    %assign/vec4 v0x555576683b40_0, 0;
T_61.2 ;
T_61.1 ;
    %jmp T_61;
    .thread T_61;
    .scope S_0x555576683d30;
T_62 ;
    %wait E_0x555576658470;
    %load/vec4 v0x55557668b570_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_62.0, 8;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x55557668bdd0_0, 0;
    %jmp T_62.1;
T_62.0 ;
    %load/vec4 v0x55557668be90_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_62.2, 8;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x55557668bdd0_0, 0;
    %jmp T_62.3;
T_62.2 ;
    %load/vec4 v0x55557668aff0_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_62.4, 8;
    %pushi/vec4 1, 0, 1;
    %assign/vec4 v0x55557668bdd0_0, 0;
T_62.4 ;
T_62.3 ;
T_62.1 ;
    %jmp T_62;
    .thread T_62;
    .scope S_0x555576682c10;
T_63 ;
    %wait E_0x555576658470;
    %load/vec4 v0x55557668d830_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_63.0, 8;
    %pushi/vec4 0, 0, 2;
    %assign/vec4 v0x55557668e800_0, 0;
    %jmp T_63.1;
T_63.0 ;
    %load/vec4 v0x55557668e800_0;
    %cmpi/ne 0, 0, 2;
    %jmp/0xz  T_63.2, 4;
    %pushi/vec4 0, 0, 2;
    %assign/vec4 v0x55557668e800_0, 0;
    %jmp T_63.3;
T_63.2 ;
    %load/vec4 v0x55557668ede0_0;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_63.6, 9;
    %load/vec4 v0x55557668eb70_0;
    %and;
T_63.6;
    %flag_set/vec4 8;
    %jmp/0xz  T_63.4, 8;
    %load/vec4 v0x55557668ec40_0;
    %parti/s 1, 1, 2;
    %flag_set/vec4 8;
    %jmp/0xz  T_63.7, 8;
    %pushi/vec4 2, 0, 2;
    %assign/vec4 v0x55557668e800_0, 0;
    %jmp T_63.8;
T_63.7 ;
    %pushi/vec4 1, 0, 2;
    %assign/vec4 v0x55557668e800_0, 0;
T_63.8 ;
T_63.4 ;
T_63.3 ;
T_63.1 ;
    %jmp T_63;
    .thread T_63;
    .scope S_0x555576682c10;
T_64 ;
    %wait E_0x555576658470;
    %load/vec4 v0x55557668d830_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_64.0, 8;
    %pushi/vec4 0, 0, 32;
    %assign/vec4 v0x55557668e720_0, 0;
    %jmp T_64.1;
T_64.0 ;
    %load/vec4 v0x55557668ede0_0;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_64.4, 9;
    %load/vec4 v0x55557668eb70_0;
    %and;
T_64.4;
    %flag_set/vec4 8;
    %jmp/0xz  T_64.2, 8;
    %load/vec4 v0x55557668eaa0_0;
    %assign/vec4 v0x55557668e720_0, 0;
T_64.2 ;
T_64.1 ;
    %jmp T_64;
    .thread T_64;
    .scope S_0x55557662c130;
T_65 ;
    %wait E_0x555576369c90;
    %load/vec4 v0x5555763f9c50_0;
    %load/vec4 v0x55557642ec30_0;
    %concat/vec4; draw_concat_vec4
    %dup/vec4;
    %pushi/vec4 56, 56, 7;
    %cmp/x;
    %jmp/1 T_65.0, 4;
    %dup/vec4;
    %pushi/vec4 120, 104, 7;
    %cmp/x;
    %jmp/1 T_65.1, 4;
    %dup/vec4;
    %pushi/vec4 120, 112, 7;
    %cmp/x;
    %jmp/1 T_65.2, 4;
    %dup/vec4;
    %pushi/vec4 120, 56, 7;
    %cmp/x;
    %jmp/1 T_65.3, 4;
    %dup/vec4;
    %pushi/vec4 57, 56, 7;
    %cmp/x;
    %jmp/1 T_65.4, 4;
    %dup/vec4;
    %pushi/vec4 121, 104, 7;
    %cmp/x;
    %jmp/1 T_65.5, 4;
    %dup/vec4;
    %pushi/vec4 121, 112, 7;
    %cmp/x;
    %jmp/1 T_65.6, 4;
    %dup/vec4;
    %pushi/vec4 65, 0, 7;
    %cmp/x;
    %jmp/1 T_65.7, 4;
    %dup/vec4;
    %pushi/vec4 121, 24, 7;
    %cmp/x;
    %jmp/1 T_65.8, 4;
    %dup/vec4;
    %pushi/vec4 58, 56, 7;
    %cmp/x;
    %jmp/1 T_65.9, 4;
    %dup/vec4;
    %pushi/vec4 122, 104, 7;
    %cmp/x;
    %jmp/1 T_65.10, 4;
    %dup/vec4;
    %pushi/vec4 122, 112, 7;
    %cmp/x;
    %jmp/1 T_65.11, 4;
    %dup/vec4;
    %pushi/vec4 122, 120, 7;
    %cmp/x;
    %jmp/1 T_65.12, 4;
    %dup/vec4;
    %pushi/vec4 59, 56, 7;
    %cmp/x;
    %jmp/1 T_65.13, 4;
    %dup/vec4;
    %pushi/vec4 123, 104, 7;
    %cmp/x;
    %jmp/1 T_65.14, 4;
    %dup/vec4;
    %pushi/vec4 123, 112, 7;
    %cmp/x;
    %jmp/1 T_65.15, 4;
    %dup/vec4;
    %pushi/vec4 67, 0, 7;
    %cmp/x;
    %jmp/1 T_65.16, 4;
    %dup/vec4;
    %pushi/vec4 123, 24, 7;
    %cmp/x;
    %jmp/1 T_65.17, 4;
    %dup/vec4;
    %pushi/vec4 62, 56, 7;
    %cmp/x;
    %jmp/1 T_65.18, 4;
    %dup/vec4;
    %pushi/vec4 126, 104, 7;
    %cmp/x;
    %jmp/1 T_65.19, 4;
    %dup/vec4;
    %pushi/vec4 126, 112, 7;
    %cmp/x;
    %jmp/1 T_65.20, 4;
    %dup/vec4;
    %pushi/vec4 126, 120, 7;
    %cmp/x;
    %jmp/1 T_65.21, 4;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0x5555763ea760_0, 0, 3;
    %jmp T_65.23;
T_65.0 ;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0x5555763ea760_0, 0, 3;
    %jmp T_65.23;
T_65.1 ;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0x5555763ea760_0, 0, 3;
    %jmp T_65.23;
T_65.2 ;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0x5555763ea760_0, 0, 3;
    %jmp T_65.23;
T_65.3 ;
    %pushi/vec4 1, 0, 3;
    %store/vec4 v0x5555763ea760_0, 0, 3;
    %jmp T_65.23;
T_65.4 ;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0x5555763ea760_0, 0, 3;
    %jmp T_65.23;
T_65.5 ;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0x5555763ea760_0, 0, 3;
    %jmp T_65.23;
T_65.6 ;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0x5555763ea760_0, 0, 3;
    %jmp T_65.23;
T_65.7 ;
    %pushi/vec4 1, 0, 3;
    %store/vec4 v0x5555763ea760_0, 0, 3;
    %jmp T_65.23;
T_65.8 ;
    %pushi/vec4 2, 0, 3;
    %store/vec4 v0x5555763ea760_0, 0, 3;
    %jmp T_65.23;
T_65.9 ;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0x5555763ea760_0, 0, 3;
    %jmp T_65.23;
T_65.10 ;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0x5555763ea760_0, 0, 3;
    %jmp T_65.23;
T_65.11 ;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0x5555763ea760_0, 0, 3;
    %jmp T_65.23;
T_65.12 ;
    %pushi/vec4 3, 0, 3;
    %store/vec4 v0x5555763ea760_0, 0, 3;
    %jmp T_65.23;
T_65.13 ;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0x5555763ea760_0, 0, 3;
    %jmp T_65.23;
T_65.14 ;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0x5555763ea760_0, 0, 3;
    %jmp T_65.23;
T_65.15 ;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0x5555763ea760_0, 0, 3;
    %jmp T_65.23;
T_65.16 ;
    %pushi/vec4 3, 0, 3;
    %store/vec4 v0x5555763ea760_0, 0, 3;
    %jmp T_65.23;
T_65.17 ;
    %pushi/vec4 6, 0, 3;
    %store/vec4 v0x5555763ea760_0, 0, 3;
    %jmp T_65.23;
T_65.18 ;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0x5555763ea760_0, 0, 3;
    %jmp T_65.23;
T_65.19 ;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0x5555763ea760_0, 0, 3;
    %jmp T_65.23;
T_65.20 ;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0x5555763ea760_0, 0, 3;
    %jmp T_65.23;
T_65.21 ;
    %pushi/vec4 6, 0, 3;
    %store/vec4 v0x5555763ea760_0, 0, 3;
    %jmp T_65.23;
T_65.23 ;
    %pop/vec4 1;
    %jmp T_65;
    .thread T_65, $push;
    .scope S_0x55557662c130;
T_66 ;
    %wait E_0x555576658470;
    %load/vec4 v0x55557632b750_0;
    %inv;
    %flag_set/vec4 8;
    %jmp/0xz  T_66.0, 8;
    %pushi/vec4 0, 0, 3;
    %assign/vec4 v0x55557642ec30_0, 0;
    %jmp T_66.1;
T_66.0 ;
    %load/vec4 v0x5555763ea760_0;
    %assign/vec4 v0x55557642ec30_0, 0;
T_66.1 ;
    %jmp T_66;
    .thread T_66;
    .scope S_0x5555765b7ff0;
T_67 ;
    %wait E_0x5555762fcc60;
    %load/vec4 v0x5555763eaa30_0;
    %inv;
    %flag_set/vec4 8;
    %jmp/0xz  T_67.0, 8;
    %pushi/vec4 0, 0, 10;
    %assign/vec4 v0x555576488870_0, 0;
    %jmp T_67.1;
T_67.0 ;
    %load/vec4 v0x555576488870_0;
    %load/vec4 v0x555576488700_0;
    %cmp/e;
    %jmp/0xz  T_67.2, 4;
    %pushi/vec4 0, 0, 10;
    %assign/vec4 v0x555576488870_0, 0;
    %jmp T_67.3;
T_67.2 ;
    %load/vec4 v0x555576488870_0;
    %addi 1, 0, 10;
    %assign/vec4 v0x555576488870_0, 0;
T_67.3 ;
T_67.1 ;
    %jmp T_67;
    .thread T_67;
    .scope S_0x5555765fe780;
T_68 ;
    %wait E_0x5555764d5920;
    %load/vec4 v0x555576455e80_0;
    %inv;
    %flag_set/vec4 8;
    %jmp/0xz  T_68.0, 8;
    %pushi/vec4 0, 0, 20;
    %assign/vec4 v0x555576456e30_0, 0;
    %jmp T_68.1;
T_68.0 ;
    %load/vec4 v0x555576456e30_0;
    %addi 1, 0, 20;
    %assign/vec4 v0x555576456e30_0, 0;
T_68.1 ;
    %jmp T_68;
    .thread T_68;
    .scope S_0x55557659bdf0;
T_69 ;
    %wait E_0x5555764d6060;
    %load/vec4 v0x55557649a120_0;
    %load/vec4 v0x555576499fb0_0;
    %concat/vec4; draw_concat_vec4
    %dup/vec4;
    %pushi/vec4 6, 56, 7;
    %cmp/z;
    %jmp/1 T_69.0, 4;
    %dup/vec4;
    %pushi/vec4 70, 56, 7;
    %cmp/z;
    %jmp/1 T_69.1, 4;
    %dup/vec4;
    %pushi/vec4 3, 88, 7;
    %cmp/z;
    %jmp/1 T_69.2, 4;
    %dup/vec4;
    %pushi/vec4 35, 88, 7;
    %cmp/z;
    %jmp/1 T_69.3, 4;
    %dup/vec4;
    %pushi/vec4 7, 104, 7;
    %cmp/z;
    %jmp/1 T_69.4, 4;
    %dup/vec4;
    %pushi/vec4 23, 104, 7;
    %cmp/z;
    %jmp/1 T_69.5, 4;
    %dup/vec4;
    %pushi/vec4 5, 112, 7;
    %cmp/z;
    %jmp/1 T_69.6, 4;
    %dup/vec4;
    %pushi/vec4 13, 112, 7;
    %cmp/z;
    %jmp/1 T_69.7, 4;
    %load/vec4 v0x555576499fb0_0;
    %store/vec4 v0x55557649a290_0, 0, 3;
    %jmp T_69.9;
T_69.0 ;
    %pushi/vec4 6, 0, 3;
    %store/vec4 v0x55557649a290_0, 0, 3;
    %jmp T_69.9;
T_69.1 ;
    %pushi/vec4 3, 0, 3;
    %store/vec4 v0x55557649a290_0, 0, 3;
    %jmp T_69.9;
T_69.2 ;
    %pushi/vec4 3, 0, 3;
    %store/vec4 v0x55557649a290_0, 0, 3;
    %jmp T_69.9;
T_69.3 ;
    %pushi/vec4 7, 0, 3;
    %store/vec4 v0x55557649a290_0, 0, 3;
    %jmp T_69.9;
T_69.4 ;
    %pushi/vec4 7, 0, 3;
    %store/vec4 v0x55557649a290_0, 0, 3;
    %jmp T_69.9;
T_69.5 ;
    %pushi/vec4 5, 0, 3;
    %store/vec4 v0x55557649a290_0, 0, 3;
    %jmp T_69.9;
T_69.6 ;
    %pushi/vec4 5, 0, 3;
    %store/vec4 v0x55557649a290_0, 0, 3;
    %jmp T_69.9;
T_69.7 ;
    %pushi/vec4 6, 0, 3;
    %store/vec4 v0x55557649a290_0, 0, 3;
    %jmp T_69.9;
T_69.9 ;
    %pop/vec4 1;
    %jmp T_69;
    .thread T_69, $push;
    .scope S_0x55557659bdf0;
T_70 ;
    %wait E_0x5555764d5920;
    %load/vec4 v0x5555764b18c0_0;
    %inv;
    %flag_set/vec4 8;
    %jmp/0xz  T_70.0, 8;
    %pushi/vec4 6, 0, 3;
    %assign/vec4 v0x555576499fb0_0, 0;
    %jmp T_70.1;
T_70.0 ;
    %load/vec4 v0x55557649a290_0;
    %assign/vec4 v0x555576499fb0_0, 0;
T_70.1 ;
    %jmp T_70;
    .thread T_70;
    .scope S_0x55557659bdf0;
T_71 ;
    %wait E_0x5555764d5920;
    %load/vec4 v0x5555764b18c0_0;
    %inv;
    %flag_set/vec4 8;
    %jmp/0xz  T_71.0, 8;
    %pushi/vec4 0, 0, 6;
    %assign/vec4 v0x55557660ee70_0, 0;
    %jmp T_71.1;
T_71.0 ;
    %load/vec4 v0x5555765ecb60_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_71.2, 8;
    %load/vec4 v0x55557660ee70_0;
    %addi 1, 0, 6;
    %assign/vec4 v0x55557660ee70_0, 0;
    %jmp T_71.3;
T_71.2 ;
    %pushi/vec4 0, 0, 6;
    %assign/vec4 v0x55557660ee70_0, 0;
T_71.3 ;
T_71.1 ;
    %jmp T_71;
    .thread T_71;
    .scope S_0x5555763f68e0;
T_72 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x5555766940a0_0, 0, 1;
T_72.0 ;
    %delay 1, 0;
    %load/vec4 v0x5555766940a0_0;
    %inv;
    %store/vec4 v0x5555766940a0_0, 0, 1;
    %jmp T_72.0;
T_72.1 ;
    %end;
    .thread T_72;
    .scope S_0x5555763f68e0;
T_73 ;
    %vpi_call 2 138 "$dumpfile", "sim/out/wdg_rv_out.vcd" {0 0 0};
    %vpi_call 2 139 "$dumpvars", 32'sb00000000000000000000000000000000, S_0x5555763f68e0 {0 0 0};
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x5555766945b0_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x555576694930_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x5555766949d0_0, 0, 1;
    %pushi/vec4 0, 0, 4;
    %store/vec4 v0x5555766944f0_0, 0, 4;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x555576694710_0, 0, 32;
    %pushi/vec4 0, 0, 4;
    %store/vec4 v0x5555766947d0_0, 0, 4;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x5555766942c0_0, 0, 1;
    %delay 20, 0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x5555766942c0_0, 0, 1;
    %delay 100, 0;
    %delay 200, 0;
    %alloc S_0x555576693640;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x555576693820_0, 0, 1;
    %pushi/vec4 16, 0, 10;
    %store/vec4 v0x555576693900_0, 0, 10;
    %fork TD_wdg_tb.wishbone_set_wdcsr, S_0x555576693640;
    %join;
    %free S_0x555576693640;
    %delay 20, 0;
    %alloc S_0x555576693640;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x555576693820_0, 0, 1;
    %pushi/vec4 16, 0, 10;
    %store/vec4 v0x555576693900_0, 0, 10;
    %fork TD_wdg_tb.wishbone_set_wdcsr, S_0x555576693640;
    %join;
    %free S_0x555576693640;
    %delay 200, 0;
    %alloc S_0x555576693640;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x555576693820_0, 0, 1;
    %pushi/vec4 16, 0, 10;
    %store/vec4 v0x555576693900_0, 0, 10;
    %fork TD_wdg_tb.wishbone_set_wdcsr, S_0x555576693640;
    %join;
    %free S_0x555576693640;
    %vpi_call 2 176 "$display", "Sequence of reading the watchdog timer value" {0 0 0};
    %alloc S_0x555576693380;
    %fork TD_wdg_tb.wishbone_readwdg, S_0x555576693380;
    %join;
    %free S_0x555576693380;
    %delay 1, 0;
    %alloc S_0x555576693380;
    %fork TD_wdg_tb.wishbone_readwdg, S_0x555576693380;
    %join;
    %free S_0x555576693380;
    %delay 10, 0;
    %alloc S_0x555576693380;
    %fork TD_wdg_tb.wishbone_readwdg, S_0x555576693380;
    %join;
    %free S_0x555576693380;
    %delay 10, 0;
    %alloc S_0x555576693380;
    %fork TD_wdg_tb.wishbone_readwdg, S_0x555576693380;
    %join;
    %free S_0x555576693380;
    %delay 300, 0;
    %alloc S_0x555576693640;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x555576693820_0, 0, 1;
    %pushi/vec4 16, 0, 10;
    %store/vec4 v0x555576693900_0, 0, 10;
    %fork TD_wdg_tb.wishbone_set_wdcsr, S_0x555576693640;
    %join;
    %free S_0x555576693640;
    %delay 200, 0;
    %delay 500, 0;
    %alloc S_0x555576693640;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x555576693820_0, 0, 1;
    %pushi/vec4 16, 0, 10;
    %store/vec4 v0x555576693900_0, 0, 10;
    %fork TD_wdg_tb.wishbone_set_wdcsr, S_0x555576693640;
    %join;
    %free S_0x555576693640;
    %delay 2000, 0;
    %vpi_call 2 200 "$finish" {0 0 0};
    %end;
    .thread T_73;
# The file index is used to find the file name in the following table.
:file_names 17;
    "N/A";
    "<interactive>";
    "sim/wdg_tb.v";
    "rtl/reset_ctrl.v";
    "rtl/wdg_top.v";
    "rtl/clkdiv.v";
    "rtl/cntr.v";
    "rtl/fsm.v";
    "rtl/reg/wdgrv_regs.v";
    "./submodules/rggen-verilog-rtl/rggen_bit_field.v";
    "./submodules/rggen-verilog-rtl/rggen_default_register.v";
    "./submodules/rggen-verilog-rtl/rggen_register_common.v";
    "./submodules/rggen-verilog-rtl/rggen_address_decoder.v";
    "./submodules/rggen-verilog-rtl/rggen_mux.v";
    "./submodules/rggen-verilog-rtl/rggen_wishbone_adapter.v";
    "./submodules/rggen-verilog-rtl/rggen_adapter_common.v";
    "./submodules/rggen-verilog-rtl/rggen_or_reducer.v";
