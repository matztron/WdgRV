#! /home/mat/EDA/oss-cad-suite/bin/vvp
:ivl_version "13.0 (devel)" "(s20250103-44-gf82c6c7b3)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision + 0;
:vpi_module "/home/mat/EDA/oss-cad-suite/lib/ivl/system.vpi";
:vpi_module "/home/mat/EDA/oss-cad-suite/lib/ivl/vhdl_sys.vpi";
:vpi_module "/home/mat/EDA/oss-cad-suite/lib/ivl/vhdl_textio.vpi";
:vpi_module "/home/mat/EDA/oss-cad-suite/lib/ivl/v2005_math.vpi";
:vpi_module "/home/mat/EDA/oss-cad-suite/lib/ivl/va_math.vpi";
S_0x55557868e6c0 .scope module, "wdg_tb" "wdg_tb" 2 3;
 .timescale 0 0;
P_0x555578824b70 .param/l "WB_ADDR_WIDTH" 0 2 6, +C4<00000000000000000000000000000100>;
P_0x555578824bb0 .param/l "WB_DATA_WIDTH" 0 2 5, +C4<00000000000000000000000000100000>;
P_0x555578824bf0 .param/l "WB_MTIME_BASE" 0 2 10, +C4<00000000000000000000000000000100>;
P_0x555578824c30 .param/l "WB_WDG_BASE" 0 2 9, +C4<00000000000000000000000000000000>;
P_0x555578824c70 .param/l "WDG_TICK_BIT" 0 2 14, +C4<00000000000000000000000000000010>;
v0x555578915890_0 .var "clk_tb", 0 0;
v0x555578915950_0 .var "rd_data", 31 0;
v0x555578915a30_0 .var "res_n_tb", 0 0;
v0x555578915ad0_0 .var/i "timeout", 31 0;
v0x555578915b90_0 .net "wb_ack_tb", 0 0, L_0x555578930520;  1 drivers
v0x555578915c80_0 .var "wb_adr_tb", 3 0;
v0x555578915d40_0 .var "wb_cyc_tb", 0 0;
v0x555578915de0_0 .net "wb_dat_r_tb", 31 0, L_0x555578930720;  1 drivers
v0x555578915ea0_0 .var "wb_dat_w_tb", 31 0;
v0x555578915f60_0 .var "wb_sel_tb", 3 0;
v0x555578916020_0 .net "wb_stall_tb", 0 0, L_0x5555789303c0;  1 drivers
v0x5555789160c0_0 .var "wb_stb_tb", 0 0;
v0x555578916160_0 .var "wb_we_tb", 0 0;
S_0x555578825aa0 .scope module, "wdg_rv_inst" "wdg_top" 2 45, 3 8 0, S_0x55557868e6c0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /INPUT 1 "res_n";
    .port_info 2 /INPUT 1 "i_wb_cyc";
    .port_info 3 /INPUT 1 "i_wb_stb";
    .port_info 4 /OUTPUT 1 "o_wb_stall";
    .port_info 5 /INPUT 4 "i_wb_adr";
    .port_info 6 /INPUT 1 "i_wb_we";
    .port_info 7 /INPUT 32 "i_wb_dat";
    .port_info 8 /INPUT 4 "i_wb_sel";
    .port_info 9 /OUTPUT 1 "o_wb_ack";
    .port_info 10 /OUTPUT 1 "o_wb_err";
    .port_info 11 /OUTPUT 1 "o_wb_rty";
    .port_info 12 /OUTPUT 32 "o_wb_dat";
    .port_info 13 /OUTPUT 1 "irq1";
    .port_info 14 /OUTPUT 1 "irq2";
P_0x55557881f0c0 .param/l "REG_ADDRESS_WIDTH" 0 3 10, +C4<00000000000000000000000000000100>;
P_0x55557881f100 .param/l "REG_BASE_ADDRESS" 0 3 12, +C4<00000000000000000000000000000000>;
P_0x55557881f140 .param/l "REG_DEFAULT_READ" 0 3 14, +C4<00000000000000000000000000000000>;
P_0x55557881f180 .param/l "REG_ERROR_STATUS" 0 3 13, +C4<00000000000000000000000000000000>;
P_0x55557881f1c0 .param/l "REG_INSERT_SLICER" 0 3 15, +C4<00000000000000000000000000000000>;
P_0x55557881f200 .param/l "REG_PRE_DECODE" 0 3 11, +C4<00000000000000000000000000000000>;
P_0x55557881f240 .param/l "REG_USE_STALLS" 0 3 16, +C4<00000000000000000000000000000001>;
P_0x55557881f280 .param/l "WB_DATA_WIDTH" 0 3 18, +C4<00000000000000000000000000100000>;
P_0x55557881f2c0 .param/l "WDG_PRECLKDIV_WIDTH" 0 3 21, +C4<00000000000000000000000000010100>;
P_0x55557881f300 .param/l "WDG_TICK_BIT" 0 3 20, +C4<00000000000000000000000000000010>;
L_0x5555789343e0 .functor AND 1, v0x555578915a30_0, L_0x5555789341f0, C4<1>, C4<1>;
L_0x555578934860 .functor BUFZ 1, L_0x555578934100, C4<0>, C4<0>, C4<0>;
L_0x5555789348d0 .functor BUFZ 1, L_0x555578934060, C4<0>, C4<0>, C4<0>;
L_0x7f258a66ede8 .functor BUFT 1, C4<0000000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x555578912ba0_0 .net *"_ivl_10", 21 0, L_0x7f258a66ede8;  1 drivers
L_0x7f258a66ee30 .functor BUFT 1, C4<00000000000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x555578912ca0_0 .net/2u *"_ivl_11", 31 0, L_0x7f258a66ee30;  1 drivers
v0x555578912d80_0 .net *"_ivl_13", 0 0, L_0x555578934590;  1 drivers
L_0x7f258a66ee78 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v0x555578912e20_0 .net/2u *"_ivl_15", 0 0, L_0x7f258a66ee78;  1 drivers
L_0x7f258a66eec0 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x555578912f00_0 .net/2u *"_ivl_17", 0 0, L_0x7f258a66eec0;  1 drivers
L_0x7f258a66eda0 .functor BUFT 1, C4<0000000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x555578913030_0 .net *"_ivl_3", 21 0, L_0x7f258a66eda0;  1 drivers
v0x555578913110_0 .net *"_ivl_7", 31 0, L_0x5555789344f0;  1 drivers
v0x5555789131f0_0 .net "clk", 0 0, v0x555578915890_0;  1 drivers
v0x5555789134a0_0 .net "cnt", 9 0, v0x555578582450_0;  1 drivers
v0x555578913560_0 .net "cnt0", 0 0, L_0x5555789346d0;  1 drivers
v0x555578913600_0 .net "do_cnt", 0 0, L_0x5555789341f0;  1 drivers
v0x5555789136a0_0 .net "i_wb_adr", 3 0, v0x555578915c80_0;  1 drivers
v0x555578913740_0 .net "i_wb_cyc", 0 0, v0x555578915d40_0;  1 drivers
v0x555578913830_0 .net "i_wb_dat", 31 0, v0x555578915ea0_0;  1 drivers
v0x555578913920_0 .net "i_wb_sel", 3 0, v0x555578915f60_0;  1 drivers
v0x555578913a30_0 .net "i_wb_stb", 0 0, v0x5555789160c0_0;  1 drivers
v0x555578913b20_0 .net "i_wb_we", 0 0, v0x555578916160_0;  1 drivers
v0x555578913c10_0 .net "irq1", 0 0, L_0x555578934860;  1 drivers
v0x555578913cd0_0 .net "irq2", 0 0, L_0x5555789348d0;  1 drivers
v0x555578913d90_0 .net "o_wb_ack", 0 0, L_0x555578930520;  alias, 1 drivers
v0x555578913e80_0 .net "o_wb_dat", 31 0, L_0x555578930720;  alias, 1 drivers
v0x555578913f90_0 .net "o_wb_err", 0 0, L_0x555578930680;  1 drivers
L_0x7f258a66eb18 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x555578914080_0 .net "o_wb_rty", 0 0, L_0x7f258a66eb18;  1 drivers
v0x555578914170_0 .net "o_wb_stall", 0 0, L_0x5555789303c0;  alias, 1 drivers
v0x555578914260_0 .net "res_n", 0 0, v0x555578915a30_0;  1 drivers
v0x555578914510_0 .net "sw_trg_s1wto", 0 0, L_0x555578929a90;  1 drivers
v0x5555789145b0_0 .net "sw_trg_s2wto", 0 0, L_0x55557892aad0;  1 drivers
v0x555578914650_0 .net "wdcsr_s1wto", 0 0, L_0x555578934100;  1 drivers
v0x5555789146f0_0 .net "wdcsr_s2wto", 0 0, L_0x555578934060;  1 drivers
v0x555578914790_0 .net "wdcsr_wden", 0 0, L_0x555578927d50;  1 drivers
v0x555578914830_0 .net "wdcsr_wtocnt", 9 0, L_0x55557892bbd0;  1 drivers
v0x5555789148f0_0 .net "wdg_tick", 0 0, L_0x555578934450;  1 drivers
L_0x555578933df0 .concat [ 10 22 0 0], v0x555578582450_0, L_0x7f258a66eda0;
L_0x5555789344f0 .concat [ 10 22 0 0], v0x555578582450_0, L_0x7f258a66ede8;
L_0x555578934590 .cmp/eq 32, L_0x5555789344f0, L_0x7f258a66ee30;
L_0x5555789346d0 .functor MUXZ 1, L_0x7f258a66eec0, L_0x7f258a66ee78, L_0x555578934590, C4<>;
S_0x555578888b30 .scope module, "clk_div_inst" "clkdiv" 3 129, 4 1 0, S_0x555578825aa0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /INPUT 1 "res_n";
    .port_info 2 /OUTPUT 1 "wdg_tick";
P_0x5555788a0e50 .param/l "WDG_TICK_BIT" 0 4 3, +C4<00000000000000000000000000000010>;
P_0x5555788a0e90 .param/l "WIDTH" 0 4 2, +C4<00000000000000000000000000010100>;
v0x5555788a17a0_0 .net "clk", 0 0, v0x555578915890_0;  alias, 1 drivers
v0x5555787181d0_0 .var "cnt", 19 0;
v0x555578582cc0_0 .net "res_n", 0 0, v0x555578915a30_0;  alias, 1 drivers
v0x555578582750_0 .net "wdg_tick", 0 0, L_0x555578934450;  alias, 1 drivers
E_0x55557876c910 .event posedge, v0x5555788a17a0_0;
L_0x555578934450 .part v0x5555787181d0_0, 2, 1;
S_0x555578841c80 .scope module, "cntr_inst" "cntr" 3 117, 5 2 0, S_0x555578825aa0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "mtick_clk";
    .port_info 1 /INPUT 1 "res_n";
    .port_info 2 /INPUT 10 "init_cnt";
    .port_info 3 /OUTPUT 10 "count_wdg";
P_0x555578739990 .param/l "WIDTH" 0 5 4, +C4<00000000000000000000000000001010>;
v0x555578582450_0 .var "count_wdg", 9 0;
v0x5555786de8f0_0 .net "init_cnt", 9 0, L_0x55557892bbd0;  alias, 1 drivers
v0x55557864fd20_0 .net "mtick_clk", 0 0, L_0x555578934450;  alias, 1 drivers
v0x5555788cd0a0_0 .net "res_n", 0 0, L_0x5555789343e0;  1 drivers
E_0x55557876d050/0 .event negedge, v0x5555788cd0a0_0;
E_0x55557876d050/1 .event posedge, v0x555578582750_0;
E_0x55557876d050 .event/or E_0x55557876d050/0, E_0x55557876d050/1;
S_0x555578832390 .scope module, "fsm_inst" "fsm" 3 101, 6 4 0, S_0x555578825aa0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /INPUT 1 "res_n";
    .port_info 2 /INPUT 1 "en";
    .port_info 3 /INPUT 1 "count0";
    .port_info 4 /OUTPUT 1 "s2wto";
    .port_info 5 /OUTPUT 1 "s1wto";
    .port_info 6 /OUTPUT 1 "do_cnt";
    .port_info 7 /INPUT 1 "sw_trg_s1wto";
    .port_info 8 /INPUT 1 "sw_trg_s2wto";
P_0x5555788d6900 .param/l "S_CNT0" 0 6 19, C4<001>;
P_0x5555788d6940 .param/l "S_CNT1" 0 6 21, C4<011>;
P_0x5555788d6980 .param/l "S_IDLE" 0 6 18, C4<000>;
P_0x5555788d69c0 .param/l "S_RAISE_S1" 0 6 20, C4<010>;
P_0x5555788d6a00 .param/l "S_RAISE_S2" 0 6 22, C4<110>;
v0x5555788767f0_0 .net *"_ivl_7", 2 0, v0x5555787307d0_0;  1 drivers
v0x5555788414d0_0 .net "clk", 0 0, v0x555578915890_0;  alias, 1 drivers
v0x555578887c60_0 .net "count0", 0 0, L_0x5555789346d0;  alias, 1 drivers
v0x55557859f740_0 .net "do_cnt", 0 0, L_0x5555789341f0;  alias, 1 drivers
v0x55557859ec00_0 .net "en", 0 0, L_0x555578927d50;  alias, 1 drivers
v0x5555788c0590_0 .net "inp", 3 0, L_0x555578933f70;  1 drivers
v0x5555788ce1d0_0 .var "next_state", 2 0;
v0x5555787488b0_0 .net "res_n", 0 0, v0x555578915a30_0;  alias, 1 drivers
v0x555578720430_0 .net "s1wto", 0 0, L_0x555578934100;  alias, 1 drivers
v0x555578731340_0 .net "s2wto", 0 0, L_0x555578934060;  alias, 1 drivers
v0x5555787307d0_0 .var "state", 2 0;
v0x555578730d90_0 .net "sw_trg_s1wto", 0 0, L_0x555578929a90;  alias, 1 drivers
v0x555578730ab0_0 .net "sw_trg_s2wto", 0 0, L_0x55557892aad0;  alias, 1 drivers
E_0x5555785950f0/0 .event negedge, v0x555578582cc0_0;
E_0x5555785950f0/1 .event posedge, v0x5555788a17a0_0;
E_0x5555785950f0 .event/or E_0x5555785950f0/0, E_0x5555785950f0/1;
E_0x5555788da6a0 .event anyedge, v0x5555788c0590_0, v0x5555787307d0_0;
L_0x555578933f70 .concat [ 1 1 1 1], L_0x55557892aad0, L_0x555578929a90, L_0x5555789346d0, L_0x555578927d50;
L_0x555578934060 .part v0x5555787307d0_0, 2, 1;
L_0x555578934100 .part v0x5555787307d0_0, 1, 1;
L_0x5555789341f0 .part v0x5555787307d0_0, 0, 1;
S_0x5555788b5eb0 .scope module, "wdgrv_regs_inst" "wdgrv_regs" 3 69, 7 2 0, S_0x555578825aa0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "i_clk";
    .port_info 1 /INPUT 1 "i_rst_n";
    .port_info 2 /INPUT 1 "i_wb_cyc";
    .port_info 3 /INPUT 1 "i_wb_stb";
    .port_info 4 /OUTPUT 1 "o_wb_stall";
    .port_info 5 /INPUT 4 "i_wb_adr";
    .port_info 6 /INPUT 1 "i_wb_we";
    .port_info 7 /INPUT 32 "i_wb_dat";
    .port_info 8 /INPUT 4 "i_wb_sel";
    .port_info 9 /OUTPUT 1 "o_wb_ack";
    .port_info 10 /OUTPUT 1 "o_wb_err";
    .port_info 11 /OUTPUT 1 "o_wb_rty";
    .port_info 12 /OUTPUT 32 "o_wb_dat";
    .port_info 13 /OUTPUT 1 "o_wdcsr_wden";
    .port_info 14 /INPUT 1 "i_wdcsr_rvd1";
    .port_info 15 /OUTPUT 1 "o_wdcsr_s1wto";
    .port_info 16 /INPUT 1 "i_wdcsr_s1wto_hw_set";
    .port_info 17 /OUTPUT 1 "o_wdcsr_s1wto_write_trigger";
    .port_info 18 /OUTPUT 1 "o_wdcsr_s2wto";
    .port_info 19 /INPUT 1 "i_wdcsr_s2wto_hw_set";
    .port_info 20 /OUTPUT 1 "o_wdcsr_s2wto_write_trigger";
    .port_info 21 /OUTPUT 10 "o_wdcsr_wtocnt";
    .port_info 22 /INPUT 18 "i_wdcsr_rvd2";
    .port_info 23 /INPUT 32 "i_wdcnt_cnt";
P_0x5555788ba330 .param/l "ADDRESS_WIDTH" 0 7 3, +C4<00000000000000000000000000000100>;
P_0x5555788ba370 .param/l "BASE_ADDRESS" 0 7 5, C4<0000>;
P_0x5555788ba3b0 .param/l "DEFAULT_READ_DATA" 0 7 7, C4<00000000000000000000000000000000>;
P_0x5555788ba3f0 .param/l "ERROR_STATUS" 0 7 6, +C4<00000000000000000000000000000000>;
P_0x5555788ba430 .param/l "INSERT_SLICER" 0 7 8, +C4<00000000000000000000000000000000>;
P_0x5555788ba470 .param/l "PRE_DECODE" 0 7 4, +C4<00000000000000000000000000000000>;
P_0x5555788ba4b0 .param/l "USE_STALL" 0 7 9, +C4<00000000000000000000000000000001>;
v0x555578910a70_0 .net "i_clk", 0 0, v0x555578915890_0;  alias, 1 drivers
v0x555578910b30_0 .net "i_rst_n", 0 0, v0x555578915a30_0;  alias, 1 drivers
v0x555578910bf0_0 .net "i_wb_adr", 3 0, v0x555578915c80_0;  alias, 1 drivers
v0x555578910cf0_0 .net "i_wb_cyc", 0 0, v0x555578915d40_0;  alias, 1 drivers
v0x555578910dc0_0 .net "i_wb_dat", 31 0, v0x555578915ea0_0;  alias, 1 drivers
v0x555578910e60_0 .net "i_wb_sel", 3 0, v0x555578915f60_0;  alias, 1 drivers
v0x555578910f30_0 .net "i_wb_stb", 0 0, v0x5555789160c0_0;  alias, 1 drivers
v0x555578911000_0 .net "i_wb_we", 0 0, v0x555578916160_0;  alias, 1 drivers
v0x5555789110d0_0 .net "i_wdcnt_cnt", 31 0, L_0x555578933df0;  1 drivers
o0x7f258a6b8f58 .functor BUFZ 1, c4<z>; HiZ drive
v0x5555789111a0_0 .net "i_wdcsr_rvd1", 0 0, o0x7f258a6b8f58;  0 drivers
o0x7f258a6b9d38 .functor BUFZ 18, c4<zzzzzzzzzzzzzzzzzz>; HiZ drive
v0x555578911270_0 .net "i_wdcsr_rvd2", 17 0, o0x7f258a6b9d38;  0 drivers
v0x555578911340_0 .net "i_wdcsr_s1wto_hw_set", 0 0, L_0x555578934100;  alias, 1 drivers
v0x5555789113e0_0 .net "i_wdcsr_s2wto_hw_set", 0 0, L_0x555578934060;  alias, 1 drivers
v0x555578911480_0 .net "o_wb_ack", 0 0, L_0x555578930520;  alias, 1 drivers
v0x555578911520_0 .net "o_wb_dat", 31 0, L_0x555578930720;  alias, 1 drivers
v0x5555789115c0_0 .net "o_wb_err", 0 0, L_0x555578930680;  alias, 1 drivers
v0x555578911690_0 .net "o_wb_rty", 0 0, L_0x7f258a66eb18;  alias, 1 drivers
v0x555578911760_0 .net "o_wb_stall", 0 0, L_0x5555789303c0;  alias, 1 drivers
v0x555578911830_0 .net "o_wdcsr_s1wto", 0 0, L_0x555578929c90;  1 drivers
v0x555578911900_0 .net "o_wdcsr_s1wto_write_trigger", 0 0, L_0x555578929a90;  alias, 1 drivers
v0x5555789119f0_0 .net "o_wdcsr_s2wto", 0 0, L_0x55557892acd0;  1 drivers
v0x555578911a90_0 .net "o_wdcsr_s2wto_write_trigger", 0 0, L_0x55557892aad0;  alias, 1 drivers
v0x555578911b80_0 .net "o_wdcsr_wden", 0 0, L_0x555578927d50;  alias, 1 drivers
v0x555578911c70_0 .net "o_wdcsr_wtocnt", 9 0, L_0x55557892bbd0;  alias, 1 drivers
v0x555578911d60_0 .net "w_register_access", 1 0, L_0x555578931e20;  1 drivers
v0x555578911f10_0 .net "w_register_active", 1 0, L_0x55557892f1e0;  1 drivers
v0x555578911fb0_0 .net "w_register_address", 2 0, L_0x555578931e90;  1 drivers
v0x555578912160_0 .net "w_register_read_data", 63 0, L_0x55557892f3c0;  1 drivers
v0x555578912250_0 .net "w_register_ready", 1 0, L_0x55557892f280;  1 drivers
v0x555578912340_0 .net "w_register_status", 3 0, L_0x55557892f320;  1 drivers
v0x555578912430_0 .net "w_register_strobe", 31 0, L_0x555578931fa0;  1 drivers
v0x5555789124d0_0 .net "w_register_valid", 0 0, L_0x555578931db0;  1 drivers
v0x555578912570_0 .net "w_register_value", 63 0, L_0x55557892f460;  1 drivers
v0x555578912820_0 .net "w_register_write_data", 31 0, L_0x555578931f30;  1 drivers
L_0x55557892f1e0 .concat8 [ 1 1 0 0], L_0x5555789170b0, L_0x55557892ed80;
L_0x55557892f280 .concat8 [ 1 1 0 0], L_0x555578917120, L_0x55557892edf0;
L_0x7f258a66d0f0 .functor BUFT 1, C4<00>, C4<0>, C4<0>, C4<0>;
L_0x7f258a66e5c0 .functor BUFT 1, C4<00>, C4<0>, C4<0>, C4<0>;
L_0x55557892f320 .concat8 [ 2 2 0 0], L_0x7f258a66d0f0, L_0x7f258a66e5c0;
L_0x55557892f3c0 .concat8 [ 32 32 0 0], L_0x555578917260, L_0x55557892ef30;
L_0x55557892f460 .concat8 [ 32 32 0 0], L_0x5555789173e0, L_0x55557892f0b0;
S_0x5555788528e0 .scope generate, "g_wdcnt" "g_wdcnt" 7 296, 7 296 0, S_0x5555788b5eb0;
 .timescale 0 0;
v0x555578730c20_0 .net "w_bit_field_mask", 31 0, L_0x555578934ad0;  1 drivers
v0x5555788509c0_0 .net "w_bit_field_read_data", 31 0, L_0x55557892fa40;  1 drivers
v0x555578850a80_0 .net "w_bit_field_read_valid", 0 0, L_0x55557892e5e0;  1 drivers
v0x5555788504b0_0 .net "w_bit_field_value", 31 0, L_0x55557892fb00;  1 drivers
v0x555578850550_0 .net "w_bit_field_write_data", 31 0, L_0x55557892f040;  1 drivers
v0x55557884ff80_0 .net "w_bit_field_write_valid", 0 0, L_0x55557892df10;  1 drivers
S_0x555578865000 .scope generate, "__g_tie_off" "__g_tie_off" 7 304, 7 304 0, S_0x5555788528e0;
 .timescale 0 0;
S_0x5555788776c0 .scope generate, "g[0]" "g[0]" 7 306, 7 306 0, S_0x555578865000;
 .timescale 0 0;
P_0x55557861a550 .param/l "__i" 1 7 306, +C4<00>;
S_0x5555788423a0 .scope generate, "g[1]" "g[1]" 7 306, 7 306 0, S_0x555578865000;
 .timescale 0 0;
P_0x555578711b10 .param/l "__i" 1 7 306, +C4<01>;
S_0x555578888410 .scope generate, "g[2]" "g[2]" 7 306, 7 306 0, S_0x555578865000;
 .timescale 0 0;
P_0x555578711d80 .param/l "__i" 1 7 306, +C4<010>;
S_0x55557889b1b0 .scope generate, "g[3]" "g[3]" 7 306, 7 306 0, S_0x555578865000;
 .timescale 0 0;
P_0x55557871a790 .param/l "__i" 1 7 306, +C4<011>;
S_0x5555788a2390 .scope generate, "g[4]" "g[4]" 7 306, 7 306 0, S_0x555578865000;
 .timescale 0 0;
P_0x555578638110 .param/l "__i" 1 7 306, +C4<0100>;
S_0x555578826fc0 .scope generate, "g[5]" "g[5]" 7 306, 7 306 0, S_0x555578865000;
 .timescale 0 0;
P_0x555578601b60 .param/l "__i" 1 7 306, +C4<0101>;
S_0x55557882da00 .scope generate, "g[6]" "g[6]" 7 306, 7 306 0, S_0x555578865000;
 .timescale 0 0;
P_0x5555785c4760 .param/l "__i" 1 7 306, +C4<0110>;
S_0x5555788521c0 .scope generate, "g[7]" "g[7]" 7 306, 7 306 0, S_0x555578865000;
 .timescale 0 0;
P_0x5555785c45f0 .param/l "__i" 1 7 306, +C4<0111>;
S_0x5555788648e0 .scope generate, "g[8]" "g[8]" 7 306, 7 306 0, S_0x555578865000;
 .timescale 0 0;
P_0x5555786380c0 .param/l "__i" 1 7 306, +C4<01000>;
S_0x555578876fa0 .scope generate, "g[9]" "g[9]" 7 306, 7 306 0, S_0x555578865000;
 .timescale 0 0;
P_0x5555786c6a10 .param/l "__i" 1 7 306, +C4<01001>;
S_0x55557889bca0 .scope generate, "g[10]" "g[10]" 7 306, 7 306 0, S_0x555578865000;
 .timescale 0 0;
P_0x5555786a08a0 .param/l "__i" 1 7 306, +C4<01010>;
S_0x5555788d6dd0 .scope generate, "g[11]" "g[11]" 7 306, 7 306 0, S_0x555578865000;
 .timescale 0 0;
P_0x5555786a1820 .param/l "__i" 1 7 306, +C4<01011>;
S_0x5555788a74b0 .scope generate, "g[12]" "g[12]" 7 306, 7 306 0, S_0x555578865000;
 .timescale 0 0;
P_0x5555786eb930 .param/l "__i" 1 7 306, +C4<01100>;
S_0x5555788d7160 .scope generate, "g[13]" "g[13]" 7 306, 7 306 0, S_0x555578865000;
 .timescale 0 0;
P_0x5555786d87d0 .param/l "__i" 1 7 306, +C4<01101>;
S_0x5555788bb8a0 .scope generate, "g[14]" "g[14]" 7 306, 7 306 0, S_0x555578865000;
 .timescale 0 0;
P_0x55557867e3b0 .param/l "__i" 1 7 306, +C4<01110>;
S_0x5555788c8f60 .scope generate, "g[15]" "g[15]" 7 306, 7 306 0, S_0x555578865000;
 .timescale 0 0;
P_0x55557866ab10 .param/l "__i" 1 7 306, +C4<01111>;
S_0x5555788c14b0 .scope generate, "g[16]" "g[16]" 7 306, 7 306 0, S_0x555578865000;
 .timescale 0 0;
P_0x555578605820 .param/l "__i" 1 7 306, +C4<010000>;
S_0x5555788c22e0 .scope generate, "g[17]" "g[17]" 7 306, 7 306 0, S_0x555578865000;
 .timescale 0 0;
P_0x5555786496a0 .param/l "__i" 1 7 306, +C4<010001>;
S_0x5555788b84d0 .scope generate, "g[18]" "g[18]" 7 306, 7 306 0, S_0x555578865000;
 .timescale 0 0;
P_0x5555786498b0 .param/l "__i" 1 7 306, +C4<010010>;
S_0x5555788b80e0 .scope generate, "g[19]" "g[19]" 7 306, 7 306 0, S_0x555578865000;
 .timescale 0 0;
P_0x55557873efc0 .param/l "__i" 1 7 306, +C4<010011>;
S_0x5555788b7cf0 .scope generate, "g[20]" "g[20]" 7 306, 7 306 0, S_0x555578865000;
 .timescale 0 0;
P_0x55557873ee50 .param/l "__i" 1 7 306, +C4<010100>;
S_0x55557882f460 .scope generate, "g[21]" "g[21]" 7 306, 7 306 0, S_0x555578865000;
 .timescale 0 0;
P_0x55557873fb00 .param/l "__i" 1 7 306, +C4<010101>;
S_0x55557882f0a0 .scope generate, "g[22]" "g[22]" 7 306, 7 306 0, S_0x555578865000;
 .timescale 0 0;
P_0x555578731060 .param/l "__i" 1 7 306, +C4<010110>;
S_0x55557882f880 .scope generate, "g[23]" "g[23]" 7 306, 7 306 0, S_0x555578865000;
 .timescale 0 0;
P_0x555578707a60 .param/l "__i" 1 7 306, +C4<010111>;
S_0x555578887310 .scope generate, "g[24]" "g[24]" 7 306, 7 306 0, S_0x555578865000;
 .timescale 0 0;
P_0x5555786ee650 .param/l "__i" 1 7 306, +C4<011000>;
S_0x5555788861d0 .scope generate, "g[25]" "g[25]" 7 306, 7 306 0, S_0x555578865000;
 .timescale 0 0;
P_0x555578614570 .param/l "__i" 1 7 306, +C4<011001>;
S_0x555578840b80 .scope generate, "g[26]" "g[26]" 7 306, 7 306 0, S_0x555578865000;
 .timescale 0 0;
P_0x5555786410f0 .param/l "__i" 1 7 306, +C4<011010>;
S_0x555578875ea0 .scope generate, "g[27]" "g[27]" 7 306, 7 306 0, S_0x555578865000;
 .timescale 0 0;
P_0x5555785c4110 .param/l "__i" 1 7 306, +C4<011011>;
S_0x555578874d60 .scope generate, "g[28]" "g[28]" 7 306, 7 306 0, S_0x555578865000;
 .timescale 0 0;
P_0x5555785c3fd0 .param/l "__i" 1 7 306, +C4<011100>;
S_0x5555788637e0 .scope generate, "g[29]" "g[29]" 7 306, 7 306 0, S_0x555578865000;
 .timescale 0 0;
P_0x5555786a1260 .param/l "__i" 1 7 306, +C4<011101>;
S_0x5555788626a0 .scope generate, "g[30]" "g[30]" 7 306, 7 306 0, S_0x555578865000;
 .timescale 0 0;
P_0x5555786e7060 .param/l "__i" 1 7 306, +C4<011110>;
S_0x555578898150 .scope generate, "g[31]" "g[31]" 7 306, 7 306 0, S_0x555578865000;
 .timescale 0 0;
P_0x5555786d8d80 .param/l "__i" 1 7 306, +C4<011111>;
S_0x55557888d610 .scope generate, "g_cnt" "g_cnt" 7 331, 7 331 0, S_0x5555788528e0;
 .timescale 0 0;
S_0x555578851060 .scope module, "u_bit_field" "rggen_bit_field" 7 337, 8 2 0, S_0x55557888d610;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "i_clk";
    .port_info 1 /INPUT 1 "i_rst_n";
    .port_info 2 /INPUT 1 "i_sw_write_valid";
    .port_info 3 /INPUT 1 "i_sw_write_enable";
    .port_info 4 /INPUT 1 "i_sw_read_valid";
    .port_info 5 /INPUT 32 "i_sw_mask";
    .port_info 6 /INPUT 32 "i_sw_write_data";
    .port_info 7 /OUTPUT 32 "o_sw_read_data";
    .port_info 8 /OUTPUT 32 "o_sw_value";
    .port_info 9 /OUTPUT 1 "o_write_trigger";
    .port_info 10 /OUTPUT 1 "o_read_trigger";
    .port_info 11 /INPUT 1 "i_hw_write_enable";
    .port_info 12 /INPUT 32 "i_hw_write_data";
    .port_info 13 /INPUT 32 "i_hw_set";
    .port_info 14 /INPUT 32 "i_hw_clear";
    .port_info 15 /INPUT 32 "i_value";
    .port_info 16 /INPUT 32 "i_mask";
    .port_info 17 /OUTPUT 32 "o_value";
    .port_info 18 /OUTPUT 32 "o_value_unmasked";
P_0x555578730100 .param/l "EXTERNAL_MASK" 0 8 17, C4<0>;
P_0x555578730140 .param/l "EXTERNAL_READ_DATA" 0 8 16, +C4<00000000000000000000000000000001>;
P_0x555578730180 .param/l "HW_ACCESS" 0 8 12, C4<000>;
P_0x5555787301c0 .param/l "HW_CLEAR_WIDTH" 0 8 14, +C4<00000000000000000000000000100000>;
P_0x555578730200 .param/l "HW_SET_WIDTH" 0 8 13, +C4<00000000000000000000000000100000>;
P_0x555578730240 .param/l "HW_WRITE_ENABLE_POLARITY" 0 8 11, C4<1>;
P_0x555578730280 .param/l "INITIAL_VALUE" 0 8 4, C4<00000000000000000000000000000000>;
P_0x5555787302c0 .param/l "PRECEDENCE_ACCESS" 0 8 5, +C4<00000000000000000000000000000001>;
P_0x555578730300 .param/l "STORAGE" 0 8 15, +C4<00000000000000000000000000000000>;
P_0x555578730340 .param/l "SW_READABLE" 1 8 41, C4<1>;
P_0x555578730380 .param/l "SW_READ_ACTION" 0 8 6, +C4<00000000000000000000000000000001>;
P_0x5555787303c0 .param/l "SW_READ_UPDATE" 1 8 42, C4<0>;
P_0x555578730400 .param/l "SW_WRITABLE" 1 8 40, C4<1>;
P_0x555578730440 .param/l "SW_WRITE_ACTION" 0 8 7, +C4<00000000000000000000000000000001>;
P_0x555578730480 .param/l "SW_WRITE_CONTROL" 0 8 8, C4<0>;
P_0x5555787304c0 .param/l "SW_WRITE_ENABLE_POLARITY" 0 8 10, C4<1>;
P_0x555578730500 .param/l "SW_WRITE_ONCE" 0 8 9, C4<0>;
P_0x555578730540 .param/l "TRIGGER" 0 8 18, +C4<00000000000000000000000000000000>;
P_0x555578730580 .param/l "WIDTH" 0 8 3, +C4<00000000000000000000000000100000>;
L_0x55557892fa40 .functor BUFZ 32, L_0x55557892f9d0, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0x55557892fb00 .functor BUFZ 32, L_0x55557892f910, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0x55557892fd50 .functor BUFZ 32, L_0x55557892f910, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0x55557892fdc0 .functor BUFZ 32, L_0x55557892f910, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
v0x555578843340_0 .net "i_clk", 0 0, v0x555578915890_0;  alias, 1 drivers
L_0x7f258a66ea88 .functor BUFT 1, C4<00000000000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x5555788436d0_0 .net "i_hw_clear", 31 0, L_0x7f258a66ea88;  1 drivers
L_0x7f258a66ea40 .functor BUFT 1, C4<00000000000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x555578842770_0 .net "i_hw_set", 31 0, L_0x7f258a66ea40;  1 drivers
L_0x7f258a66e9f8 .functor BUFT 1, C4<00000000000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x555578842b00_0 .net "i_hw_write_data", 31 0, L_0x7f258a66e9f8;  1 drivers
L_0x7f258a66e9b0 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x55557887b000_0 .net "i_hw_write_enable", 0 0, L_0x7f258a66e9b0;  1 drivers
L_0x7f258a66ead0 .functor BUFT 1, C4<11111111111111111111111111111111>, C4<0>, C4<0>, C4<0>;
v0x555578878960_0 .net "i_mask", 31 0, L_0x7f258a66ead0;  1 drivers
v0x555578885ef0_0 .net "i_rst_n", 0 0, v0x555578915a30_0;  alias, 1 drivers
v0x5555788896e0_0 .net "i_sw_mask", 31 0, L_0x555578934ad0;  alias, 1 drivers
v0x555578889b10_0 .net "i_sw_read_valid", 0 0, L_0x55557892e5e0;  alias, 1 drivers
v0x555578889eb0_0 .net "i_sw_write_data", 31 0, L_0x55557892f040;  alias, 1 drivers
L_0x7f258a66e968 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x555578888f10_0 .net "i_sw_write_enable", 0 0, L_0x7f258a66e968;  1 drivers
v0x5555788892b0_0 .net "i_sw_write_valid", 0 0, L_0x55557892df10;  alias, 1 drivers
v0x5555788284d0_0 .net "i_value", 31 0, L_0x555578933df0;  alias, 1 drivers
v0x555578801a70_0 .net "o_read_trigger", 0 0, L_0x55557892fcb0;  1 drivers
v0x55557882bce0_0 .net "o_sw_read_data", 31 0, L_0x55557892fa40;  alias, 1 drivers
v0x55557882c8a0_0 .net "o_sw_value", 31 0, L_0x55557892fb00;  alias, 1 drivers
v0x55557882fbf0_0 .net "o_value", 31 0, L_0x55557892fd50;  1 drivers
v0x555578830bf0_0 .net "o_value_unmasked", 31 0, L_0x55557892fdc0;  1 drivers
v0x555578831200_0 .net "o_write_trigger", 0 0, L_0x55557892fbc0;  1 drivers
L_0x7f258a66e848 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x5555788c8190_0 .net "w_hw_update", 0 0, L_0x7f258a66e848;  1 drivers
v0x5555788c9900_0 .net "w_read_data", 31 0, L_0x55557892f9d0;  1 drivers
v0x5555788326f0_0 .net "w_sw_update", 1 0, L_0x55557892f500;  1 drivers
L_0x7f258a66e890 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x5555787cba90_0 .net "w_sw_write_done", 0 0, L_0x7f258a66e890;  1 drivers
v0x555578857e10_0 .net "w_trigger", 1 0, L_0x55557892f7d0;  1 drivers
v0x55557886a4d0_0 .net "w_value", 31 0, L_0x55557892f910;  1 drivers
L_0x7f258a66e7b8 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x55557892f500 .concat8 [ 1 1 0 0], L_0x7f258a66e7b8, L_0x55557892f640;
L_0x7f258a66e8d8 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x7f258a66e920 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x55557892f7d0 .concat8 [ 1 1 0 0], L_0x7f258a66e8d8, L_0x7f258a66e920;
L_0x55557892fbc0 .part L_0x55557892f7d0, 0, 1;
L_0x55557892fcb0 .part L_0x55557892f7d0, 1, 1;
S_0x55557873d4b0 .scope generate, "g_read_data" "g_read_data" 8 382, 8 382 0, S_0x555578851060;
 .timescale 0 0;
L_0x55557892f9d0 .functor BUFZ 32, L_0x555578933df0, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
S_0x555578846700 .scope generate, "g_read_trigger" "g_read_trigger" 8 304, 8 304 0, S_0x555578851060;
 .timescale 0 0;
v0x555578730940_0 .net/2u *"_ivl_0", 0 0, L_0x7f258a66e920;  1 drivers
S_0x5555788a3df0 .scope generate, "g_sw_read_update" "g_sw_read_update" 8 245, 8 245 0, S_0x555578851060;
 .timescale 0 0;
v0x5555788b65d0_0 .net/2u *"_ivl_0", 0 0, L_0x7f258a66e7b8;  1 drivers
S_0x5555788a3a30 .scope generate, "g_sw_write_done" "g_sw_write_done" 8 268, 8 268 0, S_0x555578851060;
 .timescale 0 0;
S_0x5555788a4210 .scope generate, "g_sw_write_update" "g_sw_write_update" 8 252, 8 252 0, S_0x555578851060;
 .timescale 0 0;
v0x5555788b6ab0_0 .net *"_ivl_0", 31 0, L_0x55557892f5a0;  1 drivers
L_0x7f258a66e800 .functor BUFT 1, C4<0000000000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x55557889ce40_0 .net *"_ivl_3", 30 0, L_0x7f258a66e800;  1 drivers
v0x55557880fd50_0 .net *"_ivl_5", 0 0, L_0x55557892f640;  1 drivers
L_0x55557892f5a0 .concat [ 1 31 0 0], L_0x55557892df10, L_0x7f258a66e800;
L_0x55557892f640 .ufunc/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcnt.g_cnt.u_bit_field.get_sw_write_update, 1, L_0x55557892f5a0, L_0x7f258a66e968, L_0x7f258a66e890 (v0x555578842f20_0, v0x555578832b10_0, v0x5555788349d0_0) S_0x5555788a6e40;
S_0x5555788b5360 .scope generate, "g_value" "g_value" 8 323, 8 323 0, S_0x555578851060;
 .timescale 0 0;
L_0x55557892f910 .functor BUFZ 32, L_0x555578933df0, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
S_0x555578828f10 .scope generate, "g_write_trigger" "g_write_trigger" 8 287, 8 287 0, S_0x555578851060;
 .timescale 0 0;
v0x5555788a06c0_0 .net/2u *"_ivl_0", 0 0, L_0x7f258a66e8d8;  1 drivers
S_0x55557882a4c0 .scope generate, "genblk3" "genblk3" 8 259, 8 259 0, S_0x555578851060;
 .timescale 0 0;
S_0x55557889d810 .scope autofunction.vec4.s32, "get_hw_next_value" "get_hw_next_value" 8 177, 8 177 0, S_0x555578851060;
 .timescale 0 0;
v0x5555788a4580_0 .var "clear", 31 0;
v0x5555788a5580_0 .var "current_value", 31 0;
; Variable get_hw_next_value is vec4 return value of scope S_0x55557889d810
v0x555578845a50_0 .var/i "i", 31 0;
v0x555578843ac0_0 .var "set", 31 0;
v0x555578853460 .array "set_clear", 1 0, 31 0;
v0x5555788537f0_0 .var "value", 31 0;
v0x555578852cb0_0 .var "write_data", 31 0;
v0x555578853040_0 .var "write_enable", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcnt.g_cnt.u_bit_field.get_hw_next_value ;
    %pushi/vec4 0, 0, 32;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x555578853460, 4, 0;
    %pushi/vec4 0, 0, 32;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x555578853460, 4, 0;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x555578845a50_0, 0, 32;
T_0.0 ; Top of for-loop
    %load/vec4 v0x555578845a50_0;
    %cmpi/s 32, 0, 32;
	  %jmp/0xz T_0.1, 5;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x555578853460, 4;
    %load/vec4 v0x555578845a50_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_0.3, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x555578845a50_0;
    %store/vec4 v0x5555788537f0_0, 4, 1;
    %jmp T_0.4;
T_0.3 ;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x555578853460, 4;
    %load/vec4 v0x555578845a50_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_0.5, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x555578845a50_0;
    %store/vec4 v0x5555788537f0_0, 4, 1;
    %jmp T_0.6;
T_0.5 ;
    %load/vec4 v0x5555788a5580_0;
    %load/vec4 v0x555578845a50_0;
    %part/s 1;
    %ix/getv/s 4, v0x555578845a50_0;
    %store/vec4 v0x5555788537f0_0, 4, 1;
T_0.6 ;
T_0.4 ;
T_0.2 ; for-loop step statement
    %load/vec4 v0x555578845a50_0;
    %addi 1, 0, 32;
    %store/vec4 v0x555578845a50_0, 0, 32;
    %jmp T_0.0;
T_0.1 ; for-loop exit label
    %load/vec4 v0x5555788537f0_0;
    %ret/vec4 0, 0, 32;  Assign to get_hw_next_value (store_vec4_to_lval)
    %end;
S_0x55557889ee50 .scope autofunction.vec4.s1, "get_hw_update" "get_hw_update" 8 72, 8 72 0, S_0x555578851060;
 .timescale 0 0;
v0x55557888c9b0_0 .var "clear", 31 0;
; Variable get_hw_update is vec4 return value of scope S_0x55557889ee50
v0x55557889a2a0_0 .var "set", 31 0;
v0x55557889a570_0 .var "update", 2 0;
v0x555578899f40_0 .var "write_enable", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcnt.g_cnt.u_bit_field.get_hw_update ;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x55557889a570_0, 4, 1;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x55557889a570_0, 4, 1;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 2, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x55557889a570_0, 4, 1;
    %load/vec4 v0x55557889a570_0;
    %parti/s 1, 0, 2;
    %flag_set/vec4 8;
    %jmp/1 T_1.8, 8;
    %load/vec4 v0x55557889a570_0;
    %parti/s 1, 1, 2;
    %flag_set/vec4 9;
    %flag_or 8, 9;
T_1.8;
    %flag_get/vec4 8;
    %jmp/1 T_1.7, 8;
    %load/vec4 v0x55557889a570_0;
    %parti/s 1, 2, 3;
    %or;
T_1.7;
    %ret/vec4 0, 0, 1;  Assign to get_hw_update (store_vec4_to_lval)
    %end;
S_0x5555788d41c0 .scope autofunction.vec4.s32, "get_sw_read_next_value" "get_sw_read_next_value" 8 86, 8 86 0, S_0x555578851060;
 .timescale 0 0;
v0x555578853be0_0 .var "current_value", 31 0;
; Variable get_sw_read_next_value is vec4 return value of scope S_0x5555788d41c0
v0x555578865b20_0 .var "mask", 31 0;
v0x555578865eb0_0 .var "value", 31 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcnt.g_cnt.u_bit_field.get_sw_read_next_value ;
    %pushi/vec4 1, 0, 32;
    %dup/vec4;
    %pushi/vec4 2, 0, 32;
    %cmp/u;
    %jmp/1 T_2.9, 6;
    %dup/vec4;
    %pushi/vec4 3, 0, 32;
    %cmp/u;
    %jmp/1 T_2.10, 6;
    %load/vec4 v0x555578853be0_0;
    %store/vec4 v0x555578865eb0_0, 0, 32;
    %jmp T_2.12;
T_2.9 ;
    %load/vec4 v0x555578865b20_0;
    %cmpi/ne 0, 0, 32;
    %flag_mov 8, 4;
    %jmp/0 T_2.13, 8;
    %pushi/vec4 0, 0, 32;
    %jmp/1 T_2.14, 8;
T_2.13 ; End of true expr.
    %load/vec4 v0x555578853be0_0;
    %jmp/0 T_2.14, 8;
 ; End of false expr.
    %blend;
T_2.14;
    %store/vec4 v0x555578865eb0_0, 0, 32;
    %jmp T_2.12;
T_2.10 ;
    %load/vec4 v0x555578865b20_0;
    %cmpi/ne 0, 0, 32;
    %flag_mov 8, 4;
    %jmp/0 T_2.15, 8;
    %pushi/vec4 4294967295, 0, 32;
    %jmp/1 T_2.16, 8;
T_2.15 ; End of true expr.
    %load/vec4 v0x555578853be0_0;
    %jmp/0 T_2.16, 8;
 ; End of false expr.
    %blend;
T_2.16;
    %store/vec4 v0x555578865eb0_0, 0, 32;
    %jmp T_2.12;
T_2.12 ;
    %pop/vec4 1;
    %load/vec4 v0x555578865eb0_0;
    %ret/vec4 0, 0, 32;  Assign to get_sw_read_next_value (store_vec4_to_lval)
    %end;
S_0x555578832010 .scope autofunction.vec4.s32, "get_sw_write_next_value" "get_sw_write_next_value" 8 101, 8 101 0, S_0x555578851060;
 .timescale 0 0;
v0x5555788653a0_0 .var "current_value", 31 0;
; Variable get_sw_write_next_value is vec4 return value of scope S_0x555578832010
v0x5555788662a0_0 .var/i "i", 31 0;
v0x5555788696c0_0 .var "mask", 31 0;
v0x5555788781e0_0 .var "value", 31 0;
v0x555578878570_0 .var "write_data", 31 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcnt.g_cnt.u_bit_field.get_sw_write_next_value ;
    %load/vec4 v0x5555788653a0_0;
    %store/vec4 v0x5555788781e0_0, 0, 32;
    %pushi/vec4 1, 0, 32;
    %dup/vec4;
    %pushi/vec4 1, 0, 32;
    %cmp/u;
    %jmp/1 T_3.17, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 32;
    %cmp/u;
    %jmp/1 T_3.18, 6;
    %dup/vec4;
    %pushi/vec4 3, 0, 32;
    %cmp/u;
    %jmp/1 T_3.19, 6;
    %dup/vec4;
    %pushi/vec4 4, 0, 32;
    %cmp/u;
    %jmp/1 T_3.20, 6;
    %dup/vec4;
    %pushi/vec4 5, 0, 32;
    %cmp/u;
    %jmp/1 T_3.21, 6;
    %dup/vec4;
    %pushi/vec4 6, 0, 32;
    %cmp/u;
    %jmp/1 T_3.22, 6;
    %dup/vec4;
    %pushi/vec4 7, 0, 32;
    %cmp/u;
    %jmp/1 T_3.23, 6;
    %dup/vec4;
    %pushi/vec4 8, 0, 32;
    %cmp/u;
    %jmp/1 T_3.24, 6;
    %dup/vec4;
    %pushi/vec4 9, 0, 32;
    %cmp/u;
    %jmp/1 T_3.25, 6;
    %jmp T_3.27;
T_3.17 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555788662a0_0, 0, 32;
T_3.28 ; Top of for-loop
    %load/vec4 v0x5555788662a0_0;
    %cmpi/s 32, 0, 32;
	  %jmp/0xz T_3.29, 5;
    %load/vec4 v0x5555788696c0_0;
    %load/vec4 v0x5555788662a0_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_3.31, 8;
    %load/vec4 v0x555578878570_0;
    %load/vec4 v0x5555788662a0_0;
    %part/s 1;
    %ix/getv/s 4, v0x5555788662a0_0;
    %store/vec4 v0x5555788781e0_0, 4, 1;
T_3.31 ;
T_3.30 ; for-loop step statement
    %load/vec4 v0x5555788662a0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555788662a0_0, 0, 32;
    %jmp T_3.28;
T_3.29 ; for-loop exit label
    %jmp T_3.27;
T_3.18 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555788662a0_0, 0, 32;
T_3.33 ; Top of for-loop
    %load/vec4 v0x5555788662a0_0;
    %cmpi/s 32, 0, 32;
	  %jmp/0xz T_3.34, 5;
    %load/vec4 v0x5555788696c0_0;
    %load/vec4 v0x5555788662a0_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_3.38, 9;
    %load/vec4 v0x555578878570_0;
    %load/vec4 v0x5555788662a0_0;
    %part/s 1;
    %nor/r;
    %and;
T_3.38;
    %flag_set/vec4 8;
    %jmp/0xz  T_3.36, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x5555788662a0_0;
    %store/vec4 v0x5555788781e0_0, 4, 1;
T_3.36 ;
T_3.35 ; for-loop step statement
    %load/vec4 v0x5555788662a0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555788662a0_0, 0, 32;
    %jmp T_3.33;
T_3.34 ; for-loop exit label
    %jmp T_3.27;
T_3.19 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555788662a0_0, 0, 32;
T_3.39 ; Top of for-loop
    %load/vec4 v0x5555788662a0_0;
    %cmpi/s 32, 0, 32;
	  %jmp/0xz T_3.40, 5;
    %load/vec4 v0x5555788696c0_0;
    %load/vec4 v0x5555788662a0_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_3.44, 9;
    %load/vec4 v0x555578878570_0;
    %load/vec4 v0x5555788662a0_0;
    %part/s 1;
    %and;
T_3.44;
    %flag_set/vec4 8;
    %jmp/0xz  T_3.42, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x5555788662a0_0;
    %store/vec4 v0x5555788781e0_0, 4, 1;
T_3.42 ;
T_3.41 ; for-loop step statement
    %load/vec4 v0x5555788662a0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555788662a0_0, 0, 32;
    %jmp T_3.39;
T_3.40 ; for-loop exit label
    %jmp T_3.27;
T_3.20 ;
    %load/vec4 v0x5555788696c0_0;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_3.45, 4;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555788781e0_0, 0, 32;
T_3.45 ;
    %jmp T_3.27;
T_3.21 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555788662a0_0, 0, 32;
T_3.47 ; Top of for-loop
    %load/vec4 v0x5555788662a0_0;
    %cmpi/s 32, 0, 32;
	  %jmp/0xz T_3.48, 5;
    %load/vec4 v0x5555788696c0_0;
    %load/vec4 v0x5555788662a0_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_3.52, 9;
    %load/vec4 v0x555578878570_0;
    %load/vec4 v0x5555788662a0_0;
    %part/s 1;
    %nor/r;
    %and;
T_3.52;
    %flag_set/vec4 8;
    %jmp/0xz  T_3.50, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x5555788662a0_0;
    %store/vec4 v0x5555788781e0_0, 4, 1;
T_3.50 ;
T_3.49 ; for-loop step statement
    %load/vec4 v0x5555788662a0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555788662a0_0, 0, 32;
    %jmp T_3.47;
T_3.48 ; for-loop exit label
    %jmp T_3.27;
T_3.22 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555788662a0_0, 0, 32;
T_3.53 ; Top of for-loop
    %load/vec4 v0x5555788662a0_0;
    %cmpi/s 32, 0, 32;
	  %jmp/0xz T_3.54, 5;
    %load/vec4 v0x5555788696c0_0;
    %load/vec4 v0x5555788662a0_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_3.58, 9;
    %load/vec4 v0x555578878570_0;
    %load/vec4 v0x5555788662a0_0;
    %part/s 1;
    %and;
T_3.58;
    %flag_set/vec4 8;
    %jmp/0xz  T_3.56, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x5555788662a0_0;
    %store/vec4 v0x5555788781e0_0, 4, 1;
T_3.56 ;
T_3.55 ; for-loop step statement
    %load/vec4 v0x5555788662a0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555788662a0_0, 0, 32;
    %jmp T_3.53;
T_3.54 ; for-loop exit label
    %jmp T_3.27;
T_3.23 ;
    %load/vec4 v0x5555788696c0_0;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_3.59, 4;
    %pushi/vec4 4294967295, 0, 32;
    %store/vec4 v0x5555788781e0_0, 0, 32;
T_3.59 ;
    %jmp T_3.27;
T_3.24 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555788662a0_0, 0, 32;
T_3.61 ; Top of for-loop
    %load/vec4 v0x5555788662a0_0;
    %cmpi/s 32, 0, 32;
	  %jmp/0xz T_3.62, 5;
    %load/vec4 v0x5555788696c0_0;
    %load/vec4 v0x5555788662a0_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_3.66, 9;
    %load/vec4 v0x555578878570_0;
    %load/vec4 v0x5555788662a0_0;
    %part/s 1;
    %nor/r;
    %and;
T_3.66;
    %flag_set/vec4 8;
    %jmp/0xz  T_3.64, 8;
    %load/vec4 v0x5555788653a0_0;
    %load/vec4 v0x5555788662a0_0;
    %part/s 1;
    %inv;
    %ix/getv/s 4, v0x5555788662a0_0;
    %store/vec4 v0x5555788781e0_0, 4, 1;
T_3.64 ;
T_3.63 ; for-loop step statement
    %load/vec4 v0x5555788662a0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555788662a0_0, 0, 32;
    %jmp T_3.61;
T_3.62 ; for-loop exit label
    %jmp T_3.27;
T_3.25 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555788662a0_0, 0, 32;
T_3.67 ; Top of for-loop
    %load/vec4 v0x5555788662a0_0;
    %cmpi/s 32, 0, 32;
	  %jmp/0xz T_3.68, 5;
    %load/vec4 v0x5555788696c0_0;
    %load/vec4 v0x5555788662a0_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_3.72, 9;
    %load/vec4 v0x555578878570_0;
    %load/vec4 v0x5555788662a0_0;
    %part/s 1;
    %and;
T_3.72;
    %flag_set/vec4 8;
    %jmp/0xz  T_3.70, 8;
    %load/vec4 v0x5555788653a0_0;
    %load/vec4 v0x5555788662a0_0;
    %part/s 1;
    %inv;
    %ix/getv/s 4, v0x5555788662a0_0;
    %store/vec4 v0x5555788781e0_0, 4, 1;
T_3.70 ;
T_3.69 ; for-loop step statement
    %load/vec4 v0x5555788662a0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555788662a0_0, 0, 32;
    %jmp T_3.67;
T_3.68 ; for-loop exit label
    %jmp T_3.27;
T_3.27 ;
    %pop/vec4 1;
    %load/vec4 v0x5555788781e0_0;
    %ret/vec4 0, 0, 32;  Assign to get_sw_write_next_value (store_vec4_to_lval)
    %end;
S_0x5555788a6e40 .scope autofunction.vec4.s1, "get_sw_write_update" "get_sw_write_update" 8 47, 8 47 0, S_0x555578851060;
 .timescale 0 0;
; Variable get_sw_write_update is vec4 return value of scope S_0x5555788a6e40
v0x555578877dc0_0 .var "update", 2 0;
v0x5555788349d0_0 .var "write_done", 0 0;
v0x555578832b10_0 .var "write_enable", 0 0;
v0x555578842f20_0 .var "write_valid", 31 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcnt.g_cnt.u_bit_field.get_sw_write_update ;
    %load/vec4 v0x555578842f20_0;
    %pad/u 1;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x555578877dc0_0, 4, 1;
    %pushi/vec4 1, 0, 1;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x555578877dc0_0, 4, 1;
    %pushi/vec4 1, 0, 1;
    %ix/load 4, 2, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x555578877dc0_0, 4, 1;
    %load/vec4 v0x555578877dc0_0;
    %parti/s 1, 0, 2;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_4.74, 9;
    %load/vec4 v0x555578877dc0_0;
    %parti/s 1, 1, 2;
    %and;
T_4.74;
    %flag_set/vec4 8;
    %flag_get/vec4 8;
    %jmp/0 T_4.73, 8;
    %load/vec4 v0x555578877dc0_0;
    %parti/s 1, 2, 3;
    %and;
T_4.73;
    %ret/vec4 0, 0, 1;  Assign to get_sw_write_update (store_vec4_to_lval)
    %end;
S_0x5555788a6b70 .scope module, "u_register" "rggen_default_register" 7 311, 9 1 0, S_0x5555788528e0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "i_clk";
    .port_info 1 /INPUT 1 "i_rst_n";
    .port_info 2 /INPUT 1 "i_register_valid";
    .port_info 3 /INPUT 2 "i_register_access";
    .port_info 4 /INPUT 3 "i_register_address";
    .port_info 5 /INPUT 32 "i_register_write_data";
    .port_info 6 /INPUT 32 "i_register_strobe";
    .port_info 7 /OUTPUT 1 "o_register_active";
    .port_info 8 /OUTPUT 1 "o_register_ready";
    .port_info 9 /OUTPUT 2 "o_register_status";
    .port_info 10 /OUTPUT 32 "o_register_read_data";
    .port_info 11 /OUTPUT 32 "o_register_value";
    .port_info 12 /OUTPUT 1 "o_bit_field_write_valid";
    .port_info 13 /OUTPUT 1 "o_bit_field_read_valid";
    .port_info 14 /OUTPUT 32 "o_bit_field_mask";
    .port_info 15 /OUTPUT 32 "o_bit_field_write_data";
    .port_info 16 /INPUT 32 "i_bit_field_read_data";
    .port_info 17 /INPUT 32 "i_bit_field_value";
P_0x5555788bb180 .param/l "ADDRESS_WIDTH" 0 9 4, +C4<00000000000000000000000000000011>;
P_0x5555788bb1c0 .param/l "BUS_WIDTH" 0 9 6, +C4<00000000000000000000000000100000>;
P_0x5555788bb200 .param/l "DATA_WIDTH" 0 9 7, +C4<00000000000000000000000000100000>;
P_0x5555788bb240 .param/l "OFFSET_ADDRESS" 0 9 5, C4<100>;
P_0x5555788bb280 .param/l "READABLE" 0 9 2, +C4<00000000000000000000000000000001>;
P_0x5555788bb2c0 .param/l "WRITABLE" 0 9 3, +C4<00000000000000000000000000000000>;
v0x5555788cbbe0_0 .net "i_bit_field_read_data", 31 0, L_0x55557892fa40;  alias, 1 drivers
v0x555578862cf0_0 .net "i_bit_field_value", 31 0, L_0x55557892fb00;  alias, 1 drivers
v0x555578856b50_0 .net "i_clk", 0 0, v0x555578915890_0;  alias, 1 drivers
v0x555578861250_0 .net "i_register_access", 1 0, L_0x555578931e20;  alias, 1 drivers
v0x5555788612f0_0 .net "i_register_address", 2 0, L_0x555578931e90;  alias, 1 drivers
v0x555578899110_0 .net "i_register_strobe", 31 0, L_0x555578931fa0;  alias, 1 drivers
v0x555578898d00_0 .net "i_register_valid", 0 0, L_0x555578931db0;  alias, 1 drivers
v0x555578898da0_0 .net "i_register_write_data", 31 0, L_0x555578931f30;  alias, 1 drivers
v0x5555788986c0_0 .net "i_rst_n", 0 0, v0x555578915a30_0;  alias, 1 drivers
v0x555578897ab0_0 .net "o_bit_field_mask", 31 0, L_0x555578934ad0;  alias, 1 drivers
v0x555578897b50_0 .net "o_bit_field_read_valid", 0 0, L_0x55557892e5e0;  alias, 1 drivers
v0x5555788975a0_0 .net "o_bit_field_write_data", 31 0, L_0x55557892f040;  alias, 1 drivers
v0x555578897070_0 .net "o_bit_field_write_valid", 0 0, L_0x55557892df10;  alias, 1 drivers
v0x55557888c490_0 .net "o_register_active", 0 0, L_0x55557892ed80;  1 drivers
v0x55557888c530_0 .net "o_register_read_data", 31 0, L_0x55557892ef30;  1 drivers
v0x555578851f60_0 .net "o_register_ready", 0 0, L_0x55557892edf0;  1 drivers
v0x555578852000_0 .net "o_register_status", 1 0, L_0x7f258a66e5c0;  1 drivers
v0x555578851c10_0 .net "o_register_value", 31 0, L_0x55557892f0b0;  1 drivers
S_0x5555788bfeb0 .scope module, "u_register_common" "rggen_register_common" 9 35, 10 2 0, S_0x5555788a6b70;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "i_clk";
    .port_info 1 /INPUT 1 "i_rst_n";
    .port_info 2 /INPUT 1 "i_register_valid";
    .port_info 3 /INPUT 2 "i_register_access";
    .port_info 4 /INPUT 3 "i_register_address";
    .port_info 5 /INPUT 32 "i_register_write_data";
    .port_info 6 /INPUT 32 "i_register_strobe";
    .port_info 7 /OUTPUT 1 "o_register_active";
    .port_info 8 /OUTPUT 1 "o_register_ready";
    .port_info 9 /OUTPUT 2 "o_register_status";
    .port_info 10 /OUTPUT 32 "o_register_read_data";
    .port_info 11 /OUTPUT 32 "o_register_value";
    .port_info 12 /INPUT 1 "i_additional_match";
    .port_info 13 /OUTPUT 1 "o_bit_field_write_valid";
    .port_info 14 /OUTPUT 1 "o_bit_field_read_valid";
    .port_info 15 /OUTPUT 32 "o_bit_field_mask";
    .port_info 16 /OUTPUT 32 "o_bit_field_write_data";
    .port_info 17 /INPUT 32 "i_bit_field_read_data";
    .port_info 18 /INPUT 32 "i_bit_field_value";
P_0x555578648e70 .param/l "ADDRESS_WIDTH" 0 10 5, +C4<00000000000000000000000000000011>;
P_0x555578648eb0 .param/l "BUS_BYTE_WIDTH" 1 10 32, +C4<00000000000000000000000000000100>;
P_0x555578648ef0 .param/l "BUS_WIDTH" 0 10 7, +C4<00000000000000000000000000100000>;
P_0x555578648f30 .param/l "DATA_BYTE_WIDTH" 1 10 33, +C4<00000000000000000000000000000100>;
P_0x555578648f70 .param/l "DATA_WIDTH" 0 10 8, +C4<00000000000000000000000000100000>;
P_0x555578648fb0 .param/l "OFFSET_ADDRESS" 0 10 6, C4<100>;
P_0x555578648ff0 .param/l "READABLE" 0 10 3, +C4<00000000000000000000000000000001>;
P_0x555578649030 .param/l "USE_ADDITIONAL_MATCH" 0 10 9, C4<0>;
P_0x555578649070 .param/l "WORDS" 1 10 31, +C4<00000000000000000000000000000001>;
P_0x5555786490b0 .param/l "WRITABLE" 0 10 4, +C4<00000000000000000000000000000000>;
L_0x7f258a66e650 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x55557892dd90 .functor OR 1, L_0x55557892e780, L_0x7f258a66e650, C4<0>, C4<0>;
L_0x55557892de00 .functor AND 1, L_0x55557892dd90, L_0x55557892e950, C4<1>, C4<1>;
L_0x7f258a66e608 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x7f258a66e698 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x55557892de70 .functor AND 1, L_0x7f258a66e608, L_0x7f258a66e698, C4<1>, C4<1>;
L_0x55557892df10 .functor OR 1, L_0x55557892de00, L_0x55557892de70, C4<0>, C4<0>;
L_0x55557892e090 .functor OR 1, L_0x55557892e780, L_0x7f258a66e650, C4<0>, C4<0>;
L_0x55557892e290 .functor AND 1, L_0x55557892e090, L_0x55557892e1a0, C4<1>, C4<1>;
L_0x55557892e4d0 .functor AND 1, L_0x7f258a66e608, L_0x55557892e3e0, C4<1>, C4<1>;
L_0x55557892e5e0 .functor OR 1, L_0x55557892e290, L_0x55557892e4d0, C4<0>, C4<0>;
L_0x55557892e780 .functor AND 1, L_0x555578931db0, L_0x55557892dd20, C4<1>, C4<1>;
L_0x55557892eba0 .functor BUFZ 32, L_0x555578931f30, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0x55557892ed80 .functor BUFZ 1, L_0x55557892dd20, C4<0>, C4<0>, C4<0>;
L_0x55557892ef30 .functor BUFZ 32, L_0x55557892f170, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0x55557892f0b0 .functor BUFZ 32, L_0x55557892fb00, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0x555578934ad0 .functor BUFT 32, L_0x55557892e9f0, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0x55557892f040 .functor BUFT 32, L_0x55557892eba0, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
v0x555578887f10_0 .net *"_ivl_1", 0 0, L_0x55557892dd90;  1 drivers
v0x555578887850_0 .net *"_ivl_11", 0 0, L_0x55557892e090;  1 drivers
v0x555578887910_0 .net *"_ivl_14", 0 0, L_0x55557892e1a0;  1 drivers
v0x555578886ca0_0 .net *"_ivl_16", 0 0, L_0x55557892e290;  1 drivers
v0x555578886760_0 .net *"_ivl_19", 0 0, L_0x55557892e3e0;  1 drivers
v0x55557887aae0_0 .net *"_ivl_21", 0 0, L_0x55557892e4d0;  1 drivers
v0x55557887aba0_0 .net *"_ivl_4", 0 0, L_0x55557892de00;  1 drivers
v0x555578841a20_0 .net *"_ivl_7", 0 0, L_0x55557892de70;  1 drivers
L_0x7f258a66e770 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v0x555578841ae0_0 .net "i_additional_match", 0 0, L_0x7f258a66e770;  1 drivers
v0x5555788416d0_0 .net "i_bit_field_read_data", 31 0, L_0x55557892fa40;  alias, 1 drivers
v0x555578841770_0 .net "i_bit_field_value", 31 0, L_0x55557892fb00;  alias, 1 drivers
v0x5555788410c0_0 .net "i_clk", 0 0, v0x555578915890_0;  alias, 1 drivers
v0x555578841160_0 .net "i_register_access", 1 0, L_0x555578931e20;  alias, 1 drivers
v0x5555788404e0_0 .net "i_register_address", 2 0, L_0x555578931e90;  alias, 1 drivers
v0x5555788405b0_0 .net "i_register_strobe", 31 0, L_0x555578931fa0;  alias, 1 drivers
v0x55557883ffd0_0 .net "i_register_valid", 0 0, L_0x555578931db0;  alias, 1 drivers
v0x555578840090_0 .net "i_register_write_data", 31 0, L_0x555578931f30;  alias, 1 drivers
v0x55557883faa0_0 .net "i_rst_n", 0 0, v0x555578915a30_0;  alias, 1 drivers
v0x55557883fb40_0 .net "o_bit_field_mask", 31 0, L_0x555578934ad0;  alias, 1 drivers
v0x5555788344b0_0 .net "o_bit_field_read_valid", 0 0, L_0x55557892e5e0;  alias, 1 drivers
v0x555578834580_0 .net "o_bit_field_write_data", 31 0, L_0x55557892f040;  alias, 1 drivers
v0x555578876d70_0 .net "o_bit_field_write_valid", 0 0, L_0x55557892df10;  alias, 1 drivers
v0x5555788769f0_0 .net "o_register_active", 0 0, L_0x55557892ed80;  alias, 1 drivers
v0x555578876a90_0 .net "o_register_read_data", 31 0, L_0x55557892ef30;  alias, 1 drivers
v0x5555788763e0_0 .net "o_register_ready", 0 0, L_0x55557892edf0;  alias, 1 drivers
v0x5555788764a0_0 .net "o_register_status", 1 0, L_0x7f258a66e5c0;  alias, 1 drivers
v0x555578875800_0 .net "o_register_value", 31 0, L_0x55557892f0b0;  alias, 1 drivers
v0x5555788752f0_0 .net "w_active", 0 0, L_0x55557892dd20;  1 drivers
v0x5555788753b0_0 .net "w_backdoor_valid", 0 0, L_0x7f258a66e608;  1 drivers
v0x5555788691a0_0 .net "w_frontdoor_valid", 0 0, L_0x55557892e780;  1 drivers
v0x555578869260 .array "w_mask", 1 0;
v0x555578869260_0 .net v0x555578869260 0, 31 0, L_0x55557892e9f0; 1 drivers
L_0x7f258a66e6e0 .functor BUFT 1, C4<00000000000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x555578869260_1 .net v0x555578869260 1, 31 0, L_0x7f258a66e6e0; 1 drivers
v0x555578873910_0 .net "w_match", 0 0, L_0x55557892dc10;  1 drivers
v0x555578864680_0 .net "w_pending_valid", 0 0, L_0x7f258a66e650;  1 drivers
v0x555578864740_0 .net "w_read_data", 31 0, L_0x55557892f170;  1 drivers
v0x555578864330 .array "w_write", 1 0;
v0x555578864330_0 .net v0x555578864330 0, 0 0, L_0x55557892e950; 1 drivers
v0x555578864330_1 .net v0x555578864330 1, 0 0, L_0x7f258a66e698; 1 drivers
v0x555578863d20 .array "w_write_data", 1 0;
v0x555578863d20_0 .net v0x555578863d20 0, 31 0, L_0x55557892eba0; 1 drivers
L_0x7f258a66e728 .functor BUFT 1, C4<00000000000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x555578863d20_1 .net v0x555578863d20 1, 31 0, L_0x7f258a66e728; 1 drivers
L_0x55557892e1a0 .reduce/nor L_0x55557892e950;
L_0x55557892e3e0 .reduce/nor L_0x7f258a66e698;
L_0x55557892e950 .part L_0x555578931e20, 0, 1;
L_0x55557892e9f0 .ufunc/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcnt.u_register.u_register_common.get_mask, 32, L_0x55557892dc10, L_0x555578931fa0 (v0x55557882df30_0, v0x5555788276c0_0) S_0x555578852610;
L_0x55557892edf0 .reduce/nor L_0x7f258a66e608;
S_0x555578605050 .scope autofunction.vec4.s3, "calc_start_address" "calc_start_address" 10 67, 10 67 0, S_0x5555788bfeb0;
 .timescale 0 0;
; Variable calc_start_address is vec4 return value of scope S_0x555578605050
v0x5555788cbc80_0 .var/i "delta", 31 0;
v0x55557882d650_0 .var/i "index", 31 0;
v0x55557882d6f0_0 .var "offset_address", 2 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcnt.u_register.u_register_common.calc_start_address ;
    %pushi/vec4 4, 0, 3;
    %store/vec4 v0x55557882d6f0_0, 0, 3;
    %load/vec4 v0x55557882d650_0;
    %muli 4, 0, 32;
    %store/vec4 v0x5555788cbc80_0, 0, 32;
    %load/vec4 v0x55557882d6f0_0;
    %load/vec4 v0x5555788cbc80_0;
    %parti/s 3, 0, 2;
    %add;
    %ret/vec4 0, 0, 3;  Assign to calc_start_address (store_vec4_to_lval)
    %end;
S_0x5555788bf510 .scope generate, "g_decoder[0]" "g_decoder[0]" 10 42, 10 42 0, S_0x5555788bfeb0;
 .timescale 0 0;
P_0x5555788657e0 .param/l "g_i" 1 10 42, +C4<00>;
S_0x5555788beb70 .scope module, "u_decoder" "rggen_address_decoder" 10 51, 11 1 0, S_0x5555788bf510;
 .timescale 0 0;
    .port_info 0 /INPUT 3 "i_address";
    .port_info 1 /INPUT 2 "i_access";
    .port_info 2 /INPUT 1 "i_additional_match";
    .port_info 3 /OUTPUT 1 "o_match";
P_0x55557866a150 .param/l "ACCESS_BIT" 1 11 16, +C4<00000000000000000000000000000000>;
P_0x55557866a190 .param/l "BEGIN_ADDRESS" 1 11 17, C4<1>;
P_0x55557866a1d0 .param/l "BEGIN_ADDRESS_ALL_0" 1 11 19, C4<0>;
P_0x55557866a210 .param/l "BUS_WIDTH" 0 11 5, +C4<00000000000000000000000000100000>;
P_0x55557866a250 .param/l "BYTE_SIZE" 0 11 7, +C4<00000000000000000000000000000100>;
P_0x55557866a290 .param/l "END_ADDRESS" 1 11 18, C4<1>;
P_0x55557866a2d0 .param/l "END_ADDRESS_ALL_1" 1 11 20, C4<1>;
P_0x55557866a310 .param/l "LSB" 1 11 15, +C4<000000000000000000000000000000010>;
P_0x55557866a350 .param/l "READABLE" 0 11 2, +C4<00000000000000000000000000000001>;
P_0x55557866a390 .param/l "START_ADDRESS" 0 11 6, C4<100>;
P_0x55557866a3d0 .param/l "USE_ADDITIONAL_MATCH" 0 11 8, C4<0>;
P_0x55557866a410 .param/l "WIDTH" 0 11 4, +C4<00000000000000000000000000000011>;
P_0x55557866a450 .param/l "WRITABLE" 0 11 3, +C4<00000000000000000000000000000000>;
L_0x55557892db00 .functor AND 1, L_0x55557892d270, L_0x55557892d9f0, C4<1>, C4<1>;
L_0x7f258a66e578 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
L_0x55557892dc10 .functor AND 1, L_0x55557892db00, L_0x7f258a66e578, C4<1>, C4<1>;
v0x5555788c4960_0 .net *"_ivl_3", 0 0, L_0x55557892db00;  1 drivers
v0x5555788c4450_0 .net "i_access", 1 0, L_0x555578931e20;  alias, 1 drivers
v0x5555788c3fe0_0 .net "i_additional_match", 0 0, L_0x7f258a66e770;  alias, 1 drivers
v0x5555788c4080_0 .net "i_address", 2 0, L_0x555578931e90;  alias, 1 drivers
v0x5555788c3960_0 .net "o_match", 0 0, L_0x55557892dc10;  alias, 1 drivers
v0x5555788c36f0_0 .net "w_access_match", 0 0, L_0x55557892d9f0;  1 drivers
v0x5555788c37b0_0 .net "w_additional_match", 0 0, L_0x7f258a66e578;  1 drivers
v0x55557882fed0_0 .net "w_address_match", 0 0, L_0x55557892d270;  1 drivers
L_0x55557892d810 .part L_0x555578931e90, 2, 1;
L_0x55557892d950 .part L_0x555578931e20, 0, 1;
S_0x5555788be170 .scope autofunction.vec4.s1, "calc_end_address" "calc_end_address" 11 38, 11 38 0, S_0x5555788beb70;
 .timescale 0 0;
v0x555578874a50_0 .var "address", 2 0;
v0x555578874af0_0 .var/i "byte_size", 31 0;
; Variable calc_end_address is vec4 return value of scope S_0x5555788be170
v0x5555788a1fe0_0 .var/i "delta", 31 0;
v0x5555788a71b0_0 .var "start_address", 2 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcnt.u_register.u_register_common.g_decoder\x5B0\x5D.u_decoder.calc_end_address ;
    %load/vec4 v0x555578874af0_0;
    %subi 1, 0, 32;
    %store/vec4 v0x5555788a1fe0_0, 0, 32;
    %load/vec4 v0x5555788a71b0_0;
    %load/vec4 v0x5555788a1fe0_0;
    %parti/s 3, 0, 2;
    %add;
    %store/vec4 v0x555578874a50_0, 0, 3;
    %load/vec4 v0x555578874a50_0;
    %parti/s 1, 2, 3;
    %ret/vec4 0, 0, 1;  Assign to calc_end_address (store_vec4_to_lval)
    %end;
S_0x55557882cc60 .scope autofunction.vec4.u32, "clog2" "clog2" 11 22, 11 22 0, S_0x5555788beb70;
 .timescale 0 0;
; Variable clog2 is vec4 return value of scope S_0x55557882cc60
v0x5555788bb3c0_0 .var/i "n", 31 0;
v0x5555788baca0_0 .var/i "result", 31 0;
v0x5555788bad60_0 .var/i "value", 31 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcnt.u_register.u_register_common.g_decoder\x5B0\x5D.u_decoder.clog2 ;
    %load/vec4 v0x5555788bb3c0_0;
    %subi 1, 0, 32;
    %store/vec4 v0x5555788bad60_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555788baca0_0, 0, 32;
T_7.75 ;
    %load/vec4 v0x5555788bad60_0;
    %cmpi/s 0, 0, 32;
    %flag_or 5, 4; GT is !LE
    %flag_inv 5;
    %jmp/0xz T_7.76, 5;
    %load/vec4 v0x5555788baca0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555788baca0_0, 0, 32;
    %load/vec4 v0x5555788bad60_0;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %shiftr 4;
    %store/vec4 v0x5555788bad60_0, 0, 32;
    %jmp T_7.75;
T_7.76 ;
    %load/vec4 v0x5555788baca0_0;
    %ret/vec4 0, 0, 32;  Assign to clog2 (store_vec4_to_lval)
    %end;
S_0x55557882c0a0 .scope generate, "g_access_match" "g_access_match" 11 79, 11 79 0, S_0x5555788beb70;
 .timescale 0 0;
L_0x7f258a66e530 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x55557892d9f0 .functor XNOR 1, L_0x55557892d950, L_0x7f258a66e530, C4<0>, C4<0>;
v0x5555788ba820_0 .net *"_ivl_0", 0 0, L_0x55557892d950;  1 drivers
v0x5555788ba8c0_0 .net/2u *"_ivl_1", 0 0, L_0x7f258a66e530;  1 drivers
S_0x555578888860 .scope generate, "g_additional_match" "g_additional_match" 11 86, 11 86 0, S_0x5555788beb70;
 .timescale 0 0;
S_0x5555788420d0 .scope generate, "g_address_match" "g_address_match" 11 58, 11 58 0, S_0x5555788beb70;
 .timescale 0 0;
L_0x7f258a66e4e8 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
L_0x55557892d270 .functor XNOR 1, L_0x55557892d810, L_0x7f258a66e4e8, C4<0>, C4<0>;
v0x5555788c92b0_0 .net *"_ivl_0", 0 0, L_0x55557892d810;  1 drivers
v0x5555788c9370_0 .net/2u *"_ivl_1", 0 0, L_0x7f258a66e4e8;  1 drivers
S_0x555578864d30 .scope generate, "g_match" "g_match" 10 59, 10 59 0, S_0x5555788bfeb0;
 .timescale 0 0;
L_0x55557892dd20 .functor BUFZ 1, L_0x55557892dc10, C4<0>, C4<0>, C4<0>;
S_0x555578852610 .scope autofunction.vec4.s32, "get_mask" "get_mask" 10 97, 10 97 0, S_0x5555788bfeb0;
 .timescale 0 0;
; Variable get_mask is vec4 return value of scope S_0x555578852610
v0x55557882ec90_0 .var "mask", 31 0;
v0x55557882df30_0 .var "match", 0 0;
v0x5555788276c0_0 .var "strobe", 31 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcnt.u_register.u_register_common.get_mask ;
    %load/vec4 v0x5555788276c0_0;
    %store/vec4 v0x55557882ec90_0, 0, 32;
    %load/vec4 v0x55557882ec90_0;
    %ret/vec4 0, 0, 32;  Assign to get_mask (store_vec4_to_lval)
    %end;
S_0x5555788a15f0 .scope module, "u_read_data_mux" "rggen_mux" 10 134, 12 1 0, S_0x5555788bfeb0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "i_select";
    .port_info 1 /INPUT 32 "i_data";
    .port_info 2 /OUTPUT 32 "o_data";
P_0x5555788d8ac0 .param/l "ENTRIES" 0 12 3, +C4<00000000000000000000000000000001>;
P_0x5555788d8b00 .param/l "WIDTH" 0 12 2, +C4<00000000000000000000000000100000>;
v0x5555788273e0_0 .net "i_data", 31 0, L_0x55557892fa40;  alias, 1 drivers
v0x5555788881b0_0 .net "i_select", 0 0, L_0x55557892dc10;  alias, 1 drivers
v0x555578888280_0 .net "o_data", 31 0, L_0x55557892f170;  alias, 1 drivers
S_0x5555788a0a30 .scope generate, "g" "g" 12 10, 12 10 0, S_0x5555788a15f0;
 .timescale 0 0;
L_0x55557892f170 .functor BUFZ 32, L_0x55557892fa40, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
S_0x5555788bcab0 .scope generate, "g_wdcsr" "g_wdcsr" 7 82, 7 82 0, S_0x5555788b5eb0;
 .timescale 0 0;
v0x555578881eb0_0 .net "w_bit_field_mask", 31 0, L_0x555578934940;  1 drivers
v0x555578903a00_0 .net "w_bit_field_read_data", 31 0, L_0x55557892d2e0;  1 drivers
v0x555578903ac0_0 .net "w_bit_field_read_valid", 0 0, L_0x555578916c80;  1 drivers
v0x555578903c70_0 .net "w_bit_field_value", 31 0, L_0x55557892d560;  1 drivers
v0x555578903d60_0 .net "w_bit_field_write_data", 31 0, L_0x555578917370;  1 drivers
v0x555578903ec0_0 .net "w_bit_field_write_valid", 0 0, L_0x5555789165f0;  1 drivers
L_0x555578927f50 .part L_0x555578934940, 0, 1;
L_0x555578927ff0 .part L_0x555578917370, 0, 1;
L_0x555578928b70 .part L_0x555578934940, 1, 1;
L_0x555578928ca0 .part L_0x555578917370, 1, 1;
L_0x555578929e80 .part L_0x555578934940, 2, 1;
L_0x555578929f20 .part L_0x555578917370, 2, 1;
L_0x55557892aec0 .part L_0x555578934940, 3, 1;
L_0x55557892af60 .part L_0x555578917370, 3, 1;
L_0x55557892be30 .part L_0x555578934940, 4, 10;
L_0x55557892bed0 .part L_0x555578917370, 4, 10;
L_0x55557892d100 .part L_0x555578934940, 14, 18;
L_0x55557892d1a0 .part L_0x555578917370, 14, 18;
LS_0x55557892d2e0_0_0 .concat8 [ 1 1 1 1], L_0x555578927a90, L_0x5555789286c0, L_0x555578929960, L_0x55557892a9a0;
LS_0x55557892d2e0_0_4 .concat8 [ 10 18 0 0], L_0x55557892b8b0, L_0x55557892cb90;
L_0x55557892d2e0 .concat8 [ 4 28 0 0], LS_0x55557892d2e0_0_0, LS_0x55557892d2e0_0_4;
LS_0x55557892d560_0_0 .concat8 [ 1 1 1 1], L_0x555578927b50, L_0x555578928780, L_0x555578929a20, L_0x55557892aa60;
LS_0x55557892d560_0_4 .concat8 [ 10 18 0 0], L_0x55557892b970, L_0x55557892cc80;
L_0x55557892d560 .concat8 [ 4 28 0 0], LS_0x55557892d560_0_0, LS_0x55557892d560_0_4;
S_0x5555788c1120 .scope generate, "__g_tie_off" "__g_tie_off" 7 90, 7 90 0, S_0x5555788bcab0;
 .timescale 0 0;
S_0x5555788992b0 .scope generate, "g[0]" "g[0]" 7 92, 7 92 0, S_0x5555788c1120;
 .timescale 0 0;
P_0x555578845530 .param/l "__i" 1 7 92, +C4<00>;
S_0x555578829b10 .scope generate, "g[1]" "g[1]" 7 92, 7 92 0, S_0x5555788c1120;
 .timescale 0 0;
P_0x5555788a4860 .param/l "__i" 1 7 92, +C4<01>;
S_0x55557882e910 .scope generate, "g[2]" "g[2]" 7 92, 7 92 0, S_0x5555788c1120;
 .timescale 0 0;
P_0x5555788a3580 .param/l "__i" 1 7 92, +C4<010>;
S_0x55557882d110 .scope generate, "g[3]" "g[3]" 7 92, 7 92 0, S_0x5555788c1120;
 .timescale 0 0;
P_0x5555788a28c0 .param/l "__i" 1 7 92, +C4<011>;
S_0x55557882b5a0 .scope generate, "g[4]" "g[4]" 7 92, 7 92 0, S_0x5555788c1120;
 .timescale 0 0;
P_0x55557889c0e0 .param/l "__i" 1 7 92, +C4<0100>;
S_0x555578827f30 .scope generate, "g[5]" "g[5]" 7 92, 7 92 0, S_0x5555788c1120;
 .timescale 0 0;
P_0x5555788b5920 .param/l "__i" 1 7 92, +C4<0101>;
S_0x55557889e410 .scope generate, "g[6]" "g[6]" 7 92, 7 92 0, S_0x5555788c1120;
 .timescale 0 0;
P_0x5555788b4d10 .param/l "__i" 1 7 92, +C4<0110>;
S_0x5555788a32a0 .scope generate, "g[7]" "g[7]" 7 92, 7 92 0, S_0x5555788c1120;
 .timescale 0 0;
P_0x5555788b4800 .param/l "__i" 1 7 92, +C4<0111>;
S_0x5555788a1aa0 .scope generate, "g[8]" "g[8]" 7 92, 7 92 0, S_0x5555788c1120;
 .timescale 0 0;
P_0x55557889c090 .param/l "__i" 1 7 92, +C4<01000>;
S_0x55557889ff30 .scope generate, "g[9]" "g[9]" 7 92, 7 92 0, S_0x5555788c1120;
 .timescale 0 0;
P_0x555578831d80 .param/l "__i" 1 7 92, +C4<01001>;
S_0x55557889c900 .scope generate, "g[10]" "g[10]" 7 92, 7 92 0, S_0x5555788c1120;
 .timescale 0 0;
P_0x555578831a60 .param/l "__i" 1 7 92, +C4<01010>;
S_0x555578829460 .scope generate, "g[11]" "g[11]" 7 92, 7 92 0, S_0x5555788c1120;
 .timescale 0 0;
P_0x5555788a6800 .param/l "__i" 1 7 92, +C4<01011>;
S_0x55557882ca00 .scope generate, "g[12]" "g[12]" 7 92, 7 92 0, S_0x5555788c1120;
 .timescale 0 0;
P_0x5555788a68e0 .param/l "__i" 1 7 92, +C4<01100>;
S_0x55557882be40 .scope generate, "g[13]" "g[13]" 7 92, 7 92 0, S_0x5555788c1120;
 .timescale 0 0;
P_0x55557883f8b0 .param/l "__i" 1 7 92, +C4<01101>;
S_0x55557882ac50 .scope generate, "g[14]" "g[14]" 7 92, 7 92 0, S_0x5555788c1120;
 .timescale 0 0;
P_0x555578896df0 .param/l "__i" 1 7 92, +C4<01110>;
S_0x5555788773f0 .scope generate, "g[15]" "g[15]" 7 92, 7 92 0, S_0x5555788c1120;
 .timescale 0 0;
P_0x555578896ed0 .param/l "__i" 1 7 92, +C4<01111>;
S_0x555578899880 .scope generate, "g[16]" "g[16]" 7 92, 7 92 0, S_0x5555788c1120;
 .timescale 0 0;
P_0x5555788b4110 .param/l "__i" 1 7 92, +C4<010000>;
S_0x55557889dd60 .scope generate, "g[17]" "g[17]" 7 92, 7 92 0, S_0x5555788c1120;
 .timescale 0 0;
P_0x55557889def0 .param/l "__i" 1 7 92, +C4<010001>;
S_0x5555788a1390 .scope generate, "g[18]" "g[18]" 7 92, 7 92 0, S_0x5555788c1120;
 .timescale 0 0;
P_0x555578887070 .param/l "__i" 1 7 92, +C4<010010>;
S_0x5555788a07d0 .scope generate, "g[19]" "g[19]" 7 92, 7 92 0, S_0x5555788c1120;
 .timescale 0 0;
P_0x5555788821e0 .param/l "__i" 1 7 92, +C4<010011>;
S_0x55557889f5e0 .scope generate, "g[20]" "g[20]" 7 92, 7 92 0, S_0x5555788c1120;
 .timescale 0 0;
P_0x5555788822c0 .param/l "__i" 1 7 92, +C4<010100>;
S_0x555578899b80 .scope generate, "g[21]" "g[21]" 7 92, 7 92 0, S_0x5555788c1120;
 .timescale 0 0;
P_0x555578899d80 .param/l "__i" 1 7 92, +C4<010101>;
S_0x5555788304b0 .scope generate, "g[22]" "g[22]" 7 92, 7 92 0, S_0x5555788c1120;
 .timescale 0 0;
P_0x555578830690 .param/l "__i" 1 7 92, +C4<010110>;
S_0x555578678ac0 .scope generate, "g[23]" "g[23]" 7 92, 7 92 0, S_0x5555788c1120;
 .timescale 0 0;
P_0x555578678ca0 .param/l "__i" 1 7 92, +C4<010111>;
S_0x555578678d80 .scope generate, "g[24]" "g[24]" 7 92, 7 92 0, S_0x5555788c1120;
 .timescale 0 0;
P_0x555578840970 .param/l "__i" 1 7 92, +C4<011000>;
S_0x5555786d7dd0 .scope generate, "g[25]" "g[25]" 7 92, 7 92 0, S_0x5555788c1120;
 .timescale 0 0;
P_0x5555786d7fb0 .param/l "__i" 1 7 92, +C4<011001>;
S_0x5555786d8090 .scope generate, "g[26]" "g[26]" 7 92, 7 92 0, S_0x5555788c1120;
 .timescale 0 0;
P_0x55557883bb40 .param/l "__i" 1 7 92, +C4<011010>;
S_0x5555786e6930 .scope generate, "g[27]" "g[27]" 7 92, 7 92 0, S_0x5555788c1120;
 .timescale 0 0;
P_0x5555786e6b10 .param/l "__i" 1 7 92, +C4<011011>;
S_0x5555786e6bf0 .scope generate, "g[28]" "g[28]" 7 92, 7 92 0, S_0x5555788c1120;
 .timescale 0 0;
P_0x555578875b70 .param/l "__i" 1 7 92, +C4<011100>;
S_0x5555786a0190 .scope generate, "g[29]" "g[29]" 7 92, 7 92 0, S_0x5555788c1120;
 .timescale 0 0;
P_0x5555786a0370 .param/l "__i" 1 7 92, +C4<011101>;
S_0x5555786a0450 .scope generate, "g[30]" "g[30]" 7 92, 7 92 0, S_0x5555788c1120;
 .timescale 0 0;
P_0x555578875c50 .param/l "__i" 1 7 92, +C4<011110>;
S_0x5555786c61f0 .scope generate, "g[31]" "g[31]" 7 92, 7 92 0, S_0x5555788c1120;
 .timescale 0 0;
P_0x5555786c63f0 .param/l "__i" 1 7 92, +C4<011111>;
S_0x5555786c64d0 .scope generate, "g_rvd1" "g_rvd1" 7 145, 7 145 0, S_0x5555788bcab0;
 .timescale 0 0;
S_0x5555785c2d20 .scope module, "u_bit_field" "rggen_bit_field" 7 151, 8 2 0, S_0x5555786c64d0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "i_clk";
    .port_info 1 /INPUT 1 "i_rst_n";
    .port_info 2 /INPUT 1 "i_sw_write_valid";
    .port_info 3 /INPUT 1 "i_sw_write_enable";
    .port_info 4 /INPUT 1 "i_sw_read_valid";
    .port_info 5 /INPUT 1 "i_sw_mask";
    .port_info 6 /INPUT 1 "i_sw_write_data";
    .port_info 7 /OUTPUT 1 "o_sw_read_data";
    .port_info 8 /OUTPUT 1 "o_sw_value";
    .port_info 9 /OUTPUT 1 "o_write_trigger";
    .port_info 10 /OUTPUT 1 "o_read_trigger";
    .port_info 11 /INPUT 1 "i_hw_write_enable";
    .port_info 12 /INPUT 1 "i_hw_write_data";
    .port_info 13 /INPUT 1 "i_hw_set";
    .port_info 14 /INPUT 1 "i_hw_clear";
    .port_info 15 /INPUT 1 "i_value";
    .port_info 16 /INPUT 1 "i_mask";
    .port_info 17 /OUTPUT 1 "o_value";
    .port_info 18 /OUTPUT 1 "o_value_unmasked";
P_0x55557871fd60 .param/l "EXTERNAL_MASK" 0 8 17, C4<0>;
P_0x55557871fda0 .param/l "EXTERNAL_READ_DATA" 0 8 16, +C4<00000000000000000000000000000001>;
P_0x55557871fde0 .param/l "HW_ACCESS" 0 8 12, C4<000>;
P_0x55557871fe20 .param/l "HW_CLEAR_WIDTH" 0 8 14, +C4<00000000000000000000000000000001>;
P_0x55557871fe60 .param/l "HW_SET_WIDTH" 0 8 13, +C4<00000000000000000000000000000001>;
P_0x55557871fea0 .param/l "HW_WRITE_ENABLE_POLARITY" 0 8 11, C4<1>;
P_0x55557871fee0 .param/l "INITIAL_VALUE" 0 8 4, C4<0>;
P_0x55557871ff20 .param/l "PRECEDENCE_ACCESS" 0 8 5, +C4<00000000000000000000000000000001>;
P_0x55557871ff60 .param/l "STORAGE" 0 8 15, +C4<00000000000000000000000000000000>;
P_0x55557871ffa0 .param/l "SW_READABLE" 1 8 41, C4<1>;
P_0x55557871ffe0 .param/l "SW_READ_ACTION" 0 8 6, +C4<00000000000000000000000000000001>;
P_0x555578720020 .param/l "SW_READ_UPDATE" 1 8 42, C4<0>;
P_0x555578720060 .param/l "SW_WRITABLE" 1 8 40, C4<1>;
P_0x5555787200a0 .param/l "SW_WRITE_ACTION" 0 8 7, +C4<00000000000000000000000000000001>;
P_0x5555787200e0 .param/l "SW_WRITE_CONTROL" 0 8 8, C4<0>;
P_0x555578720120 .param/l "SW_WRITE_ENABLE_POLARITY" 0 8 10, C4<1>;
P_0x555578720160 .param/l "SW_WRITE_ONCE" 0 8 9, C4<0>;
P_0x5555787201a0 .param/l "TRIGGER" 0 8 18, +C4<00000000000000000000000000000000>;
P_0x5555787201e0 .param/l "WIDTH" 0 8 3, +C4<00000000000000000000000000000001>;
L_0x5555789286c0 .functor BUFZ 1, L_0x555578928650, C4<0>, C4<0>, C4<0>;
L_0x555578928780 .functor BUFZ 1, L_0x555578928590, C4<0>, C4<0>, C4<0>;
L_0x555578928a00 .functor BUFZ 1, L_0x555578928590, C4<0>, C4<0>, C4<0>;
L_0x555578928aa0 .functor BUFZ 1, L_0x555578928590, C4<0>, C4<0>, C4<0>;
v0x5555787478e0_0 .net "i_clk", 0 0, v0x555578915890_0;  alias, 1 drivers
L_0x7f258a66d8d0 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x5555787479a0_0 .net "i_hw_clear", 0 0, L_0x7f258a66d8d0;  1 drivers
L_0x7f258a66d888 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x555578747a80_0 .net "i_hw_set", 0 0, L_0x7f258a66d888;  1 drivers
L_0x7f258a66d840 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x555578747b40_0 .net "i_hw_write_data", 0 0, L_0x7f258a66d840;  1 drivers
L_0x7f258a66d7f8 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x5555785a8fd0_0 .net "i_hw_write_enable", 0 0, L_0x7f258a66d7f8;  1 drivers
L_0x7f258a66d918 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v0x5555785a90e0_0 .net "i_mask", 0 0, L_0x7f258a66d918;  1 drivers
v0x5555785a91c0_0 .net "i_rst_n", 0 0, v0x555578915a30_0;  alias, 1 drivers
v0x5555785a9260_0 .net "i_sw_mask", 0 0, L_0x555578928b70;  1 drivers
v0x5555785a9340_0 .net "i_sw_read_valid", 0 0, L_0x555578916c80;  alias, 1 drivers
v0x5555785a9400_0 .net "i_sw_write_data", 0 0, L_0x555578928ca0;  1 drivers
L_0x7f258a66d7b0 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x5555788daa10_0 .net "i_sw_write_enable", 0 0, L_0x7f258a66d7b0;  1 drivers
v0x5555788daab0_0 .net "i_sw_write_valid", 0 0, L_0x5555789165f0;  alias, 1 drivers
v0x5555788dab50_0 .net "i_value", 0 0, o0x7f258a6b8f58;  alias, 0 drivers
v0x5555788dabf0_0 .net "o_read_trigger", 0 0, L_0x555578928930;  1 drivers
v0x5555788dac90_0 .net "o_sw_read_data", 0 0, L_0x5555789286c0;  1 drivers
v0x5555788dad30_0 .net "o_sw_value", 0 0, L_0x555578928780;  1 drivers
v0x5555788dadd0_0 .net "o_value", 0 0, L_0x555578928a00;  1 drivers
v0x5555788daf80_0 .net "o_value_unmasked", 0 0, L_0x555578928aa0;  1 drivers
v0x5555788db020_0 .net "o_write_trigger", 0 0, L_0x555578928840;  1 drivers
L_0x7f258a66d690 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x5555788db0c0_0 .net "w_hw_update", 0 0, L_0x7f258a66d690;  1 drivers
v0x5555788db160_0 .net "w_read_data", 0 0, L_0x555578928650;  1 drivers
v0x5555788db200_0 .net "w_sw_update", 1 0, L_0x555578928180;  1 drivers
L_0x7f258a66d6d8 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x5555788db2a0_0 .net "w_sw_write_done", 0 0, L_0x7f258a66d6d8;  1 drivers
v0x5555788db340_0 .net "w_trigger", 1 0, L_0x555578928420;  1 drivers
v0x5555788db3e0_0 .net "w_value", 0 0, L_0x555578928590;  1 drivers
L_0x7f258a66d648 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x555578928180 .concat8 [ 1 1 0 0], L_0x7f258a66d648, L_0x555578928250;
L_0x7f258a66d720 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x7f258a66d768 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x555578928420 .concat8 [ 1 1 0 0], L_0x7f258a66d720, L_0x7f258a66d768;
L_0x555578928840 .part L_0x555578928420, 0, 1;
L_0x555578928930 .part L_0x555578928420, 1, 1;
S_0x5555785fe180 .scope generate, "g_read_data" "g_read_data" 8 382, 8 382 0, S_0x5555785c2d20;
 .timescale 0 0;
L_0x555578928650 .functor BUFZ 1, o0x7f258a6b8f58, C4<0>, C4<0>, C4<0>;
S_0x5555785fe360 .scope generate, "g_read_trigger" "g_read_trigger" 8 304, 8 304 0, S_0x5555785c2d20;
 .timescale 0 0;
v0x5555785fe560_0 .net/2u *"_ivl_0", 0 0, L_0x7f258a66d768;  1 drivers
S_0x555578628b60 .scope generate, "g_sw_read_update" "g_sw_read_update" 8 245, 8 245 0, S_0x5555785c2d20;
 .timescale 0 0;
v0x555578628d40_0 .net/2u *"_ivl_0", 0 0, L_0x7f258a66d648;  1 drivers
S_0x555578628e20 .scope generate, "g_sw_write_done" "g_sw_write_done" 8 268, 8 268 0, S_0x5555785c2d20;
 .timescale 0 0;
S_0x5555786301b0 .scope generate, "g_sw_write_update" "g_sw_write_update" 8 252, 8 252 0, S_0x5555785c2d20;
 .timescale 0 0;
v0x5555786303e0_0 .net *"_ivl_1", 0 0, L_0x555578928250;  1 drivers
L_0x555578928250 .ufunc/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_rvd1.u_bit_field.get_sw_write_update, 1, L_0x5555789165f0, L_0x7f258a66d7b0, L_0x7f258a66d6d8 (v0x5555787477b0_0, v0x555578707700_0, v0x55557876c720_0) S_0x55557876c380;
S_0x5555786304e0 .scope generate, "g_value" "g_value" 8 323, 8 323 0, S_0x5555785c2d20;
 .timescale 0 0;
L_0x555578928590 .functor BUFZ 1, o0x7f258a6b8f58, C4<0>, C4<0>, C4<0>;
S_0x555578640ab0 .scope generate, "g_write_trigger" "g_write_trigger" 8 287, 8 287 0, S_0x5555785c2d20;
 .timescale 0 0;
v0x555578640c90_0 .net/2u *"_ivl_0", 0 0, L_0x7f258a66d720;  1 drivers
S_0x555578640d90 .scope generate, "genblk3" "genblk3" 8 259, 8 259 0, S_0x5555785c2d20;
 .timescale 0 0;
S_0x5555785beb40 .scope autofunction.vec4.s1, "get_hw_next_value" "get_hw_next_value" 8 177, 8 177 0, S_0x5555785c2d20;
 .timescale 0 0;
v0x5555785bed20_0 .var "clear", 0 0;
v0x5555785bee20_0 .var "current_value", 0 0;
; Variable get_hw_next_value is vec4 return value of scope S_0x5555785beb40
v0x555578881f50_0 .var/i "i", 31 0;
v0x55557883b780_0 .var "set", 0 0;
v0x55557883b860 .array "set_clear", 1 0, 0 0;
v0x555578873640_0 .var "value", 0 0;
v0x555578873720_0 .var "write_data", 0 0;
v0x555578860f80_0 .var "write_enable", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_rvd1.u_bit_field.get_hw_next_value ;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x55557883b860, 4, 0;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x55557883b860, 4, 0;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x555578881f50_0, 0, 32;
T_9.77 ; Top of for-loop
    %load/vec4 v0x555578881f50_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_9.78, 5;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x55557883b860, 4;
    %load/vec4 v0x555578881f50_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_9.80, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x555578881f50_0;
    %store/vec4 v0x555578873640_0, 4, 1;
    %jmp T_9.81;
T_9.80 ;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x55557883b860, 4;
    %load/vec4 v0x555578881f50_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_9.82, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x555578881f50_0;
    %store/vec4 v0x555578873640_0, 4, 1;
    %jmp T_9.83;
T_9.82 ;
    %load/vec4 v0x5555785bee20_0;
    %load/vec4 v0x555578881f50_0;
    %part/s 1;
    %ix/getv/s 4, v0x555578881f50_0;
    %store/vec4 v0x555578873640_0, 4, 1;
T_9.83 ;
T_9.81 ;
T_9.79 ; for-loop step statement
    %load/vec4 v0x555578881f50_0;
    %addi 1, 0, 32;
    %store/vec4 v0x555578881f50_0, 0, 32;
    %jmp T_9.77;
T_9.78 ; for-loop exit label
    %load/vec4 v0x555578873640_0;
    %ret/vec4 0, 0, 1;  Assign to get_hw_next_value (store_vec4_to_lval)
    %end;
S_0x5555787112e0 .scope autofunction.vec4.s1, "get_hw_update" "get_hw_update" 8 72, 8 72 0, S_0x5555785c2d20;
 .timescale 0 0;
v0x555578711470_0 .var "clear", 0 0;
; Variable get_hw_update is vec4 return value of scope S_0x5555787112e0
v0x555578711630_0 .var "set", 0 0;
v0x5555787116f0_0 .var "update", 2 0;
v0x555578613f50_0 .var "write_enable", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_rvd1.u_bit_field.get_hw_update ;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x5555787116f0_0, 4, 1;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x5555787116f0_0, 4, 1;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 2, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x5555787116f0_0, 4, 1;
    %load/vec4 v0x5555787116f0_0;
    %parti/s 1, 0, 2;
    %flag_set/vec4 8;
    %jmp/1 T_10.85, 8;
    %load/vec4 v0x5555787116f0_0;
    %parti/s 1, 1, 2;
    %flag_set/vec4 9;
    %flag_or 8, 9;
T_10.85;
    %flag_get/vec4 8;
    %jmp/1 T_10.84, 8;
    %load/vec4 v0x5555787116f0_0;
    %parti/s 1, 2, 3;
    %or;
T_10.84;
    %ret/vec4 0, 0, 1;  Assign to get_hw_update (store_vec4_to_lval)
    %end;
S_0x555578614010 .scope autofunction.vec4.s1, "get_sw_read_next_value" "get_sw_read_next_value" 8 86, 8 86 0, S_0x5555785c2d20;
 .timescale 0 0;
v0x5555786141f0_0 .var "current_value", 0 0;
; Variable get_sw_read_next_value is vec4 return value of scope S_0x555578614010
v0x5555786ed680_0 .var "mask", 0 0;
v0x5555786ed740_0 .var "value", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_rvd1.u_bit_field.get_sw_read_next_value ;
    %pushi/vec4 1, 0, 32;
    %dup/vec4;
    %pushi/vec4 2, 0, 32;
    %cmp/u;
    %jmp/1 T_11.86, 6;
    %dup/vec4;
    %pushi/vec4 3, 0, 32;
    %cmp/u;
    %jmp/1 T_11.87, 6;
    %load/vec4 v0x5555786141f0_0;
    %store/vec4 v0x5555786ed740_0, 0, 1;
    %jmp T_11.89;
T_11.86 ;
    %load/vec4 v0x5555786ed680_0;
    %cmpi/ne 0, 0, 1;
    %flag_mov 8, 4;
    %jmp/0 T_11.90, 8;
    %pushi/vec4 0, 0, 1;
    %jmp/1 T_11.91, 8;
T_11.90 ; End of true expr.
    %load/vec4 v0x5555786141f0_0;
    %jmp/0 T_11.91, 8;
 ; End of false expr.
    %blend;
T_11.91;
    %store/vec4 v0x5555786ed740_0, 0, 1;
    %jmp T_11.89;
T_11.87 ;
    %load/vec4 v0x5555786ed680_0;
    %cmpi/ne 0, 0, 1;
    %flag_mov 8, 4;
    %jmp/0 T_11.92, 8;
    %pushi/vec4 1, 0, 1;
    %jmp/1 T_11.93, 8;
T_11.92 ; End of true expr.
    %load/vec4 v0x5555786141f0_0;
    %jmp/0 T_11.93, 8;
 ; End of false expr.
    %blend;
T_11.93;
    %store/vec4 v0x5555786ed740_0, 0, 1;
    %jmp T_11.89;
T_11.89 ;
    %pop/vec4 1;
    %load/vec4 v0x5555786ed740_0;
    %ret/vec4 0, 0, 1;  Assign to get_sw_read_next_value (store_vec4_to_lval)
    %end;
S_0x5555786ed820 .scope autofunction.vec4.s1, "get_sw_write_next_value" "get_sw_write_next_value" 8 101, 8 101 0, S_0x5555785c2d20;
 .timescale 0 0;
v0x5555786ed9b0_0 .var "current_value", 0 0;
; Variable get_sw_write_next_value is vec4 return value of scope S_0x5555786ed820
v0x555578707350_0 .var/i "i", 31 0;
v0x555578707410_0 .var "mask", 0 0;
v0x5555787074f0_0 .var "value", 0 0;
v0x555578707620_0 .var "write_data", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_rvd1.u_bit_field.get_sw_write_next_value ;
    %load/vec4 v0x5555786ed9b0_0;
    %store/vec4 v0x5555787074f0_0, 0, 1;
    %pushi/vec4 1, 0, 32;
    %dup/vec4;
    %pushi/vec4 1, 0, 32;
    %cmp/u;
    %jmp/1 T_12.94, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 32;
    %cmp/u;
    %jmp/1 T_12.95, 6;
    %dup/vec4;
    %pushi/vec4 3, 0, 32;
    %cmp/u;
    %jmp/1 T_12.96, 6;
    %dup/vec4;
    %pushi/vec4 4, 0, 32;
    %cmp/u;
    %jmp/1 T_12.97, 6;
    %dup/vec4;
    %pushi/vec4 5, 0, 32;
    %cmp/u;
    %jmp/1 T_12.98, 6;
    %dup/vec4;
    %pushi/vec4 6, 0, 32;
    %cmp/u;
    %jmp/1 T_12.99, 6;
    %dup/vec4;
    %pushi/vec4 7, 0, 32;
    %cmp/u;
    %jmp/1 T_12.100, 6;
    %dup/vec4;
    %pushi/vec4 8, 0, 32;
    %cmp/u;
    %jmp/1 T_12.101, 6;
    %dup/vec4;
    %pushi/vec4 9, 0, 32;
    %cmp/u;
    %jmp/1 T_12.102, 6;
    %jmp T_12.104;
T_12.94 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x555578707350_0, 0, 32;
T_12.105 ; Top of for-loop
    %load/vec4 v0x555578707350_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_12.106, 5;
    %load/vec4 v0x555578707410_0;
    %load/vec4 v0x555578707350_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_12.108, 8;
    %load/vec4 v0x555578707620_0;
    %load/vec4 v0x555578707350_0;
    %part/s 1;
    %ix/getv/s 4, v0x555578707350_0;
    %store/vec4 v0x5555787074f0_0, 4, 1;
T_12.108 ;
T_12.107 ; for-loop step statement
    %load/vec4 v0x555578707350_0;
    %addi 1, 0, 32;
    %store/vec4 v0x555578707350_0, 0, 32;
    %jmp T_12.105;
T_12.106 ; for-loop exit label
    %jmp T_12.104;
T_12.95 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x555578707350_0, 0, 32;
T_12.110 ; Top of for-loop
    %load/vec4 v0x555578707350_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_12.111, 5;
    %load/vec4 v0x555578707410_0;
    %load/vec4 v0x555578707350_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_12.115, 9;
    %load/vec4 v0x555578707620_0;
    %load/vec4 v0x555578707350_0;
    %part/s 1;
    %nor/r;
    %and;
T_12.115;
    %flag_set/vec4 8;
    %jmp/0xz  T_12.113, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x555578707350_0;
    %store/vec4 v0x5555787074f0_0, 4, 1;
T_12.113 ;
T_12.112 ; for-loop step statement
    %load/vec4 v0x555578707350_0;
    %addi 1, 0, 32;
    %store/vec4 v0x555578707350_0, 0, 32;
    %jmp T_12.110;
T_12.111 ; for-loop exit label
    %jmp T_12.104;
T_12.96 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x555578707350_0, 0, 32;
T_12.116 ; Top of for-loop
    %load/vec4 v0x555578707350_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_12.117, 5;
    %load/vec4 v0x555578707410_0;
    %load/vec4 v0x555578707350_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_12.121, 9;
    %load/vec4 v0x555578707620_0;
    %load/vec4 v0x555578707350_0;
    %part/s 1;
    %and;
T_12.121;
    %flag_set/vec4 8;
    %jmp/0xz  T_12.119, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x555578707350_0;
    %store/vec4 v0x5555787074f0_0, 4, 1;
T_12.119 ;
T_12.118 ; for-loop step statement
    %load/vec4 v0x555578707350_0;
    %addi 1, 0, 32;
    %store/vec4 v0x555578707350_0, 0, 32;
    %jmp T_12.116;
T_12.117 ; for-loop exit label
    %jmp T_12.104;
T_12.97 ;
    %load/vec4 v0x555578707410_0;
    %cmpi/ne 0, 0, 1;
    %jmp/0xz  T_12.122, 4;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x5555787074f0_0, 0, 1;
T_12.122 ;
    %jmp T_12.104;
T_12.98 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x555578707350_0, 0, 32;
T_12.124 ; Top of for-loop
    %load/vec4 v0x555578707350_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_12.125, 5;
    %load/vec4 v0x555578707410_0;
    %load/vec4 v0x555578707350_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_12.129, 9;
    %load/vec4 v0x555578707620_0;
    %load/vec4 v0x555578707350_0;
    %part/s 1;
    %nor/r;
    %and;
T_12.129;
    %flag_set/vec4 8;
    %jmp/0xz  T_12.127, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x555578707350_0;
    %store/vec4 v0x5555787074f0_0, 4, 1;
T_12.127 ;
T_12.126 ; for-loop step statement
    %load/vec4 v0x555578707350_0;
    %addi 1, 0, 32;
    %store/vec4 v0x555578707350_0, 0, 32;
    %jmp T_12.124;
T_12.125 ; for-loop exit label
    %jmp T_12.104;
T_12.99 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x555578707350_0, 0, 32;
T_12.130 ; Top of for-loop
    %load/vec4 v0x555578707350_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_12.131, 5;
    %load/vec4 v0x555578707410_0;
    %load/vec4 v0x555578707350_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_12.135, 9;
    %load/vec4 v0x555578707620_0;
    %load/vec4 v0x555578707350_0;
    %part/s 1;
    %and;
T_12.135;
    %flag_set/vec4 8;
    %jmp/0xz  T_12.133, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x555578707350_0;
    %store/vec4 v0x5555787074f0_0, 4, 1;
T_12.133 ;
T_12.132 ; for-loop step statement
    %load/vec4 v0x555578707350_0;
    %addi 1, 0, 32;
    %store/vec4 v0x555578707350_0, 0, 32;
    %jmp T_12.130;
T_12.131 ; for-loop exit label
    %jmp T_12.104;
T_12.100 ;
    %load/vec4 v0x555578707410_0;
    %cmpi/ne 0, 0, 1;
    %jmp/0xz  T_12.136, 4;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x5555787074f0_0, 0, 1;
T_12.136 ;
    %jmp T_12.104;
T_12.101 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x555578707350_0, 0, 32;
T_12.138 ; Top of for-loop
    %load/vec4 v0x555578707350_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_12.139, 5;
    %load/vec4 v0x555578707410_0;
    %load/vec4 v0x555578707350_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_12.143, 9;
    %load/vec4 v0x555578707620_0;
    %load/vec4 v0x555578707350_0;
    %part/s 1;
    %nor/r;
    %and;
T_12.143;
    %flag_set/vec4 8;
    %jmp/0xz  T_12.141, 8;
    %load/vec4 v0x5555786ed9b0_0;
    %load/vec4 v0x555578707350_0;
    %part/s 1;
    %inv;
    %ix/getv/s 4, v0x555578707350_0;
    %store/vec4 v0x5555787074f0_0, 4, 1;
T_12.141 ;
T_12.140 ; for-loop step statement
    %load/vec4 v0x555578707350_0;
    %addi 1, 0, 32;
    %store/vec4 v0x555578707350_0, 0, 32;
    %jmp T_12.138;
T_12.139 ; for-loop exit label
    %jmp T_12.104;
T_12.102 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x555578707350_0, 0, 32;
T_12.144 ; Top of for-loop
    %load/vec4 v0x555578707350_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_12.145, 5;
    %load/vec4 v0x555578707410_0;
    %load/vec4 v0x555578707350_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_12.149, 9;
    %load/vec4 v0x555578707620_0;
    %load/vec4 v0x555578707350_0;
    %part/s 1;
    %and;
T_12.149;
    %flag_set/vec4 8;
    %jmp/0xz  T_12.147, 8;
    %load/vec4 v0x5555786ed9b0_0;
    %load/vec4 v0x555578707350_0;
    %part/s 1;
    %inv;
    %ix/getv/s 4, v0x555578707350_0;
    %store/vec4 v0x5555787074f0_0, 4, 1;
T_12.147 ;
T_12.146 ; for-loop step statement
    %load/vec4 v0x555578707350_0;
    %addi 1, 0, 32;
    %store/vec4 v0x555578707350_0, 0, 32;
    %jmp T_12.144;
T_12.145 ; for-loop exit label
    %jmp T_12.104;
T_12.104 ;
    %pop/vec4 1;
    %load/vec4 v0x5555787074f0_0;
    %ret/vec4 0, 0, 1;  Assign to get_sw_write_next_value (store_vec4_to_lval)
    %end;
S_0x55557876c380 .scope autofunction.vec4.s1, "get_sw_write_update" "get_sw_write_update" 8 47, 8 47 0, S_0x5555785c2d20;
 .timescale 0 0;
; Variable get_sw_write_update is vec4 return value of scope S_0x55557876c380
v0x55557876c640_0 .var "update", 2 0;
v0x55557876c720_0 .var "write_done", 0 0;
v0x555578707700_0 .var "write_enable", 0 0;
v0x5555787477b0_0 .var "write_valid", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_rvd1.u_bit_field.get_sw_write_update ;
    %load/vec4 v0x5555787477b0_0;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x55557876c640_0, 4, 1;
    %pushi/vec4 1, 0, 1;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x55557876c640_0, 4, 1;
    %pushi/vec4 1, 0, 1;
    %ix/load 4, 2, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x55557876c640_0, 4, 1;
    %load/vec4 v0x55557876c640_0;
    %parti/s 1, 0, 2;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_13.151, 9;
    %load/vec4 v0x55557876c640_0;
    %parti/s 1, 1, 2;
    %and;
T_13.151;
    %flag_set/vec4 8;
    %flag_get/vec4 8;
    %jmp/0 T_13.150, 8;
    %load/vec4 v0x55557876c640_0;
    %parti/s 1, 2, 3;
    %and;
T_13.150;
    %ret/vec4 0, 0, 1;  Assign to get_sw_write_update (store_vec4_to_lval)
    %end;
S_0x5555788db620 .scope generate, "g_rvd2" "g_rvd2" 7 267, 7 267 0, S_0x5555788bcab0;
 .timescale 0 0;
S_0x5555788db7b0 .scope module, "u_bit_field" "rggen_bit_field" 7 273, 8 2 0, S_0x5555788db620;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "i_clk";
    .port_info 1 /INPUT 1 "i_rst_n";
    .port_info 2 /INPUT 1 "i_sw_write_valid";
    .port_info 3 /INPUT 1 "i_sw_write_enable";
    .port_info 4 /INPUT 1 "i_sw_read_valid";
    .port_info 5 /INPUT 18 "i_sw_mask";
    .port_info 6 /INPUT 18 "i_sw_write_data";
    .port_info 7 /OUTPUT 18 "o_sw_read_data";
    .port_info 8 /OUTPUT 18 "o_sw_value";
    .port_info 9 /OUTPUT 1 "o_write_trigger";
    .port_info 10 /OUTPUT 1 "o_read_trigger";
    .port_info 11 /INPUT 1 "i_hw_write_enable";
    .port_info 12 /INPUT 18 "i_hw_write_data";
    .port_info 13 /INPUT 18 "i_hw_set";
    .port_info 14 /INPUT 18 "i_hw_clear";
    .port_info 15 /INPUT 18 "i_value";
    .port_info 16 /INPUT 18 "i_mask";
    .port_info 17 /OUTPUT 18 "o_value";
    .port_info 18 /OUTPUT 18 "o_value_unmasked";
P_0x5555788db990 .param/l "EXTERNAL_MASK" 0 8 17, C4<0>;
P_0x5555788db9d0 .param/l "EXTERNAL_READ_DATA" 0 8 16, +C4<00000000000000000000000000000001>;
P_0x5555788dba10 .param/l "HW_ACCESS" 0 8 12, C4<000>;
P_0x5555788dba50 .param/l "HW_CLEAR_WIDTH" 0 8 14, +C4<00000000000000000000000000010010>;
P_0x5555788dba90 .param/l "HW_SET_WIDTH" 0 8 13, +C4<00000000000000000000000000010010>;
P_0x5555788dbad0 .param/l "HW_WRITE_ENABLE_POLARITY" 0 8 11, C4<1>;
P_0x5555788dbb10 .param/l "INITIAL_VALUE" 0 8 4, C4<000000000000000000>;
P_0x5555788dbb50 .param/l "PRECEDENCE_ACCESS" 0 8 5, +C4<00000000000000000000000000000001>;
P_0x5555788dbb90 .param/l "STORAGE" 0 8 15, +C4<00000000000000000000000000000000>;
P_0x5555788dbbd0 .param/l "SW_READABLE" 1 8 41, C4<1>;
P_0x5555788dbc10 .param/l "SW_READ_ACTION" 0 8 6, +C4<00000000000000000000000000000001>;
P_0x5555788dbc50 .param/l "SW_READ_UPDATE" 1 8 42, C4<0>;
P_0x5555788dbc90 .param/l "SW_WRITABLE" 1 8 40, C4<1>;
P_0x5555788dbcd0 .param/l "SW_WRITE_ACTION" 0 8 7, +C4<00000000000000000000000000000001>;
P_0x5555788dbd10 .param/l "SW_WRITE_CONTROL" 0 8 8, C4<0>;
P_0x5555788dbd50 .param/l "SW_WRITE_ENABLE_POLARITY" 0 8 10, C4<1>;
P_0x5555788dbd90 .param/l "SW_WRITE_ONCE" 0 8 9, C4<0>;
P_0x5555788dbdd0 .param/l "TRIGGER" 0 8 18, +C4<00000000000000000000000000000000>;
P_0x5555788dbe10 .param/l "WIDTH" 0 8 3, +C4<00000000000000000000000000010010>;
L_0x55557892cb90 .functor BUFZ 18, L_0x55557892cb20, C4<000000000000000000>, C4<000000000000000000>, C4<000000000000000000>;
L_0x55557892cc80 .functor BUFZ 18, L_0x55557892ca60, C4<000000000000000000>, C4<000000000000000000>, C4<000000000000000000>;
L_0x55557892cf00 .functor BUFZ 18, L_0x55557892ca60, C4<000000000000000000>, C4<000000000000000000>, C4<000000000000000000>;
L_0x55557892cfa0 .functor BUFZ 18, L_0x55557892ca60, C4<000000000000000000>, C4<000000000000000000>, C4<000000000000000000>;
v0x5555788e0180_0 .net "i_clk", 0 0, v0x555578915890_0;  alias, 1 drivers
L_0x7f258a66e458 .functor BUFT 1, C4<000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x5555788e0240_0 .net "i_hw_clear", 17 0, L_0x7f258a66e458;  1 drivers
L_0x7f258a66e410 .functor BUFT 1, C4<000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x5555788e0320_0 .net "i_hw_set", 17 0, L_0x7f258a66e410;  1 drivers
L_0x7f258a66e3c8 .functor BUFT 1, C4<000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x5555788e03e0_0 .net "i_hw_write_data", 17 0, L_0x7f258a66e3c8;  1 drivers
L_0x7f258a66e380 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x5555788e04c0_0 .net "i_hw_write_enable", 0 0, L_0x7f258a66e380;  1 drivers
L_0x7f258a66e4a0 .functor BUFT 1, C4<111111111111111111>, C4<0>, C4<0>, C4<0>;
v0x5555788e05d0_0 .net "i_mask", 17 0, L_0x7f258a66e4a0;  1 drivers
v0x5555788e06b0_0 .net "i_rst_n", 0 0, v0x555578915a30_0;  alias, 1 drivers
v0x5555788e0750_0 .net "i_sw_mask", 17 0, L_0x55557892d100;  1 drivers
v0x5555788e0830_0 .net "i_sw_read_valid", 0 0, L_0x555578916c80;  alias, 1 drivers
v0x5555788e0960_0 .net "i_sw_write_data", 17 0, L_0x55557892d1a0;  1 drivers
L_0x7f258a66e338 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x5555788e0a20_0 .net "i_sw_write_enable", 0 0, L_0x7f258a66e338;  1 drivers
v0x5555788e0ae0_0 .net "i_sw_write_valid", 0 0, L_0x5555789165f0;  alias, 1 drivers
v0x5555788e0bb0_0 .net "i_value", 17 0, o0x7f258a6b9d38;  alias, 0 drivers
v0x5555788e0c70_0 .net "o_read_trigger", 0 0, L_0x55557892ce30;  1 drivers
v0x5555788e0d30_0 .net "o_sw_read_data", 17 0, L_0x55557892cb90;  1 drivers
v0x5555788e0e10_0 .net "o_sw_value", 17 0, L_0x55557892cc80;  1 drivers
v0x5555788e0ef0_0 .net "o_value", 17 0, L_0x55557892cf00;  1 drivers
v0x5555788e10e0_0 .net "o_value_unmasked", 17 0, L_0x55557892cfa0;  1 drivers
v0x5555788e11c0_0 .net "o_write_trigger", 0 0, L_0x55557892cd40;  1 drivers
L_0x7f258a66e218 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x5555788e1280_0 .net "w_hw_update", 0 0, L_0x7f258a66e218;  1 drivers
v0x5555788e1340_0 .net "w_read_data", 17 0, L_0x55557892cb20;  1 drivers
v0x5555788e1420_0 .net "w_sw_update", 1 0, L_0x55557892c150;  1 drivers
L_0x7f258a66e260 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x5555788e1500_0 .net "w_sw_write_done", 0 0, L_0x7f258a66e260;  1 drivers
v0x5555788e15c0_0 .net "w_trigger", 1 0, L_0x55557892c8f0;  1 drivers
v0x5555788e16a0_0 .net "w_value", 17 0, L_0x55557892ca60;  1 drivers
L_0x7f258a66e188 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x55557892c150 .concat8 [ 1 1 0 0], L_0x7f258a66e188, L_0x55557892c320;
L_0x7f258a66e2a8 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x7f258a66e2f0 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x55557892c8f0 .concat8 [ 1 1 0 0], L_0x7f258a66e2a8, L_0x7f258a66e2f0;
L_0x55557892cd40 .part L_0x55557892c8f0, 0, 1;
L_0x55557892ce30 .part L_0x55557892c8f0, 1, 1;
S_0x5555788dc960 .scope generate, "g_read_data" "g_read_data" 8 382, 8 382 0, S_0x5555788db7b0;
 .timescale 0 0;
L_0x55557892cb20 .functor BUFZ 18, o0x7f258a6b9d38, C4<000000000000000000>, C4<000000000000000000>, C4<000000000000000000>;
S_0x5555788dcaf0 .scope generate, "g_read_trigger" "g_read_trigger" 8 304, 8 304 0, S_0x5555788db7b0;
 .timescale 0 0;
v0x5555788dccf0_0 .net/2u *"_ivl_0", 0 0, L_0x7f258a66e2f0;  1 drivers
S_0x5555788dcdd0 .scope generate, "g_sw_read_update" "g_sw_read_update" 8 245, 8 245 0, S_0x5555788db7b0;
 .timescale 0 0;
v0x5555788dcfe0_0 .net/2u *"_ivl_0", 0 0, L_0x7f258a66e188;  1 drivers
S_0x5555788dd0c0 .scope generate, "g_sw_write_done" "g_sw_write_done" 8 268, 8 268 0, S_0x5555788db7b0;
 .timescale 0 0;
S_0x5555788dd2a0 .scope generate, "g_sw_write_update" "g_sw_write_update" 8 252, 8 252 0, S_0x5555788db7b0;
 .timescale 0 0;
v0x5555788dd4d0_0 .net *"_ivl_0", 17 0, L_0x55557892c220;  1 drivers
L_0x7f258a66e1d0 .functor BUFT 1, C4<00000000000000000>, C4<0>, C4<0>, C4<0>;
v0x5555788dd5d0_0 .net *"_ivl_3", 16 0, L_0x7f258a66e1d0;  1 drivers
v0x5555788dd6b0_0 .net *"_ivl_5", 0 0, L_0x55557892c320;  1 drivers
L_0x55557892c220 .concat [ 1 17 0 0], L_0x5555789165f0, L_0x7f258a66e1d0;
L_0x55557892c320 .ufunc/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_rvd2.u_bit_field.get_sw_write_update, 1, L_0x55557892c220, L_0x7f258a66e338, L_0x7f258a66e260 (v0x5555788e0050_0, v0x5555788dff90_0, v0x5555788dfef0_0) S_0x5555788dfb50;
S_0x5555788dd770 .scope generate, "g_value" "g_value" 8 323, 8 323 0, S_0x5555788db7b0;
 .timescale 0 0;
L_0x55557892ca60 .functor BUFZ 18, o0x7f258a6b9d38, C4<000000000000000000>, C4<000000000000000000>, C4<000000000000000000>;
S_0x5555788dd950 .scope generate, "g_write_trigger" "g_write_trigger" 8 287, 8 287 0, S_0x5555788db7b0;
 .timescale 0 0;
v0x5555788ddb30_0 .net/2u *"_ivl_0", 0 0, L_0x7f258a66e2a8;  1 drivers
S_0x5555788ddc30 .scope generate, "genblk3" "genblk3" 8 259, 8 259 0, S_0x5555788db7b0;
 .timescale 0 0;
S_0x5555788dde10 .scope autofunction.vec4.s18, "get_hw_next_value" "get_hw_next_value" 8 177, 8 177 0, S_0x5555788db7b0;
 .timescale 0 0;
v0x5555788ddff0_0 .var "clear", 17 0;
v0x5555788de0f0_0 .var "current_value", 17 0;
; Variable get_hw_next_value is vec4 return value of scope S_0x5555788dde10
v0x5555788de2c0_0 .var/i "i", 31 0;
v0x5555788de3a0_0 .var "set", 17 0;
v0x5555788de480 .array "set_clear", 1 0, 17 0;
v0x5555788de540_0 .var "value", 17 0;
v0x5555788de620_0 .var "write_data", 17 0;
v0x5555788de700_0 .var "write_enable", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_rvd2.u_bit_field.get_hw_next_value ;
    %pushi/vec4 0, 0, 18;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x5555788de480, 4, 0;
    %pushi/vec4 0, 0, 18;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x5555788de480, 4, 0;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555788de2c0_0, 0, 32;
T_14.152 ; Top of for-loop
    %load/vec4 v0x5555788de2c0_0;
    %cmpi/s 18, 0, 32;
	  %jmp/0xz T_14.153, 5;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x5555788de480, 4;
    %load/vec4 v0x5555788de2c0_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_14.155, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x5555788de2c0_0;
    %store/vec4 v0x5555788de540_0, 4, 1;
    %jmp T_14.156;
T_14.155 ;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x5555788de480, 4;
    %load/vec4 v0x5555788de2c0_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_14.157, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x5555788de2c0_0;
    %store/vec4 v0x5555788de540_0, 4, 1;
    %jmp T_14.158;
T_14.157 ;
    %load/vec4 v0x5555788de0f0_0;
    %load/vec4 v0x5555788de2c0_0;
    %part/s 1;
    %ix/getv/s 4, v0x5555788de2c0_0;
    %store/vec4 v0x5555788de540_0, 4, 1;
T_14.158 ;
T_14.156 ;
T_14.154 ; for-loop step statement
    %load/vec4 v0x5555788de2c0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555788de2c0_0, 0, 32;
    %jmp T_14.152;
T_14.153 ; for-loop exit label
    %load/vec4 v0x5555788de540_0;
    %ret/vec4 0, 0, 18;  Assign to get_hw_next_value (store_vec4_to_lval)
    %end;
S_0x5555788de850 .scope autofunction.vec4.s1, "get_hw_update" "get_hw_update" 8 72, 8 72 0, S_0x5555788db7b0;
 .timescale 0 0;
v0x5555788de9e0_0 .var "clear", 17 0;
; Variable get_hw_update is vec4 return value of scope S_0x5555788de850
v0x5555788deba0_0 .var "set", 17 0;
v0x5555788dec60_0 .var "update", 2 0;
v0x5555788ded40_0 .var "write_enable", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_rvd2.u_bit_field.get_hw_update ;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x5555788dec60_0, 4, 1;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x5555788dec60_0, 4, 1;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 2, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x5555788dec60_0, 4, 1;
    %load/vec4 v0x5555788dec60_0;
    %parti/s 1, 0, 2;
    %flag_set/vec4 8;
    %jmp/1 T_15.160, 8;
    %load/vec4 v0x5555788dec60_0;
    %parti/s 1, 1, 2;
    %flag_set/vec4 9;
    %flag_or 8, 9;
T_15.160;
    %flag_get/vec4 8;
    %jmp/1 T_15.159, 8;
    %load/vec4 v0x5555788dec60_0;
    %parti/s 1, 2, 3;
    %or;
T_15.159;
    %ret/vec4 0, 0, 1;  Assign to get_hw_update (store_vec4_to_lval)
    %end;
S_0x5555788dee50 .scope autofunction.vec4.s18, "get_sw_read_next_value" "get_sw_read_next_value" 8 86, 8 86 0, S_0x5555788db7b0;
 .timescale 0 0;
v0x5555788df030_0 .var "current_value", 17 0;
; Variable get_sw_read_next_value is vec4 return value of scope S_0x5555788dee50
v0x5555788df210_0 .var "mask", 17 0;
v0x5555788df2d0_0 .var "value", 17 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_rvd2.u_bit_field.get_sw_read_next_value ;
    %pushi/vec4 1, 0, 32;
    %dup/vec4;
    %pushi/vec4 2, 0, 32;
    %cmp/u;
    %jmp/1 T_16.161, 6;
    %dup/vec4;
    %pushi/vec4 3, 0, 32;
    %cmp/u;
    %jmp/1 T_16.162, 6;
    %load/vec4 v0x5555788df030_0;
    %store/vec4 v0x5555788df2d0_0, 0, 18;
    %jmp T_16.164;
T_16.161 ;
    %load/vec4 v0x5555788df210_0;
    %cmpi/ne 0, 0, 18;
    %flag_mov 8, 4;
    %jmp/0 T_16.165, 8;
    %pushi/vec4 0, 0, 18;
    %jmp/1 T_16.166, 8;
T_16.165 ; End of true expr.
    %load/vec4 v0x5555788df030_0;
    %jmp/0 T_16.166, 8;
 ; End of false expr.
    %blend;
T_16.166;
    %store/vec4 v0x5555788df2d0_0, 0, 18;
    %jmp T_16.164;
T_16.162 ;
    %load/vec4 v0x5555788df210_0;
    %cmpi/ne 0, 0, 18;
    %flag_mov 8, 4;
    %jmp/0 T_16.167, 8;
    %pushi/vec4 262143, 0, 18;
    %jmp/1 T_16.168, 8;
T_16.167 ; End of true expr.
    %load/vec4 v0x5555788df030_0;
    %jmp/0 T_16.168, 8;
 ; End of false expr.
    %blend;
T_16.168;
    %store/vec4 v0x5555788df2d0_0, 0, 18;
    %jmp T_16.164;
T_16.164 ;
    %pop/vec4 1;
    %load/vec4 v0x5555788df2d0_0;
    %ret/vec4 0, 0, 18;  Assign to get_sw_read_next_value (store_vec4_to_lval)
    %end;
S_0x5555788df3b0 .scope autofunction.vec4.s18, "get_sw_write_next_value" "get_sw_write_next_value" 8 101, 8 101 0, S_0x5555788db7b0;
 .timescale 0 0;
v0x5555788df590_0 .var "current_value", 17 0;
; Variable get_sw_write_next_value is vec4 return value of scope S_0x5555788df3b0
v0x5555788df770_0 .var/i "i", 31 0;
v0x5555788df860_0 .var "mask", 17 0;
v0x5555788df940_0 .var "value", 17 0;
v0x5555788dfa70_0 .var "write_data", 17 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_rvd2.u_bit_field.get_sw_write_next_value ;
    %load/vec4 v0x5555788df590_0;
    %store/vec4 v0x5555788df940_0, 0, 18;
    %pushi/vec4 1, 0, 32;
    %dup/vec4;
    %pushi/vec4 1, 0, 32;
    %cmp/u;
    %jmp/1 T_17.169, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 32;
    %cmp/u;
    %jmp/1 T_17.170, 6;
    %dup/vec4;
    %pushi/vec4 3, 0, 32;
    %cmp/u;
    %jmp/1 T_17.171, 6;
    %dup/vec4;
    %pushi/vec4 4, 0, 32;
    %cmp/u;
    %jmp/1 T_17.172, 6;
    %dup/vec4;
    %pushi/vec4 5, 0, 32;
    %cmp/u;
    %jmp/1 T_17.173, 6;
    %dup/vec4;
    %pushi/vec4 6, 0, 32;
    %cmp/u;
    %jmp/1 T_17.174, 6;
    %dup/vec4;
    %pushi/vec4 7, 0, 32;
    %cmp/u;
    %jmp/1 T_17.175, 6;
    %dup/vec4;
    %pushi/vec4 8, 0, 32;
    %cmp/u;
    %jmp/1 T_17.176, 6;
    %dup/vec4;
    %pushi/vec4 9, 0, 32;
    %cmp/u;
    %jmp/1 T_17.177, 6;
    %jmp T_17.179;
T_17.169 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555788df770_0, 0, 32;
T_17.180 ; Top of for-loop
    %load/vec4 v0x5555788df770_0;
    %cmpi/s 18, 0, 32;
	  %jmp/0xz T_17.181, 5;
    %load/vec4 v0x5555788df860_0;
    %load/vec4 v0x5555788df770_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_17.183, 8;
    %load/vec4 v0x5555788dfa70_0;
    %load/vec4 v0x5555788df770_0;
    %part/s 1;
    %ix/getv/s 4, v0x5555788df770_0;
    %store/vec4 v0x5555788df940_0, 4, 1;
T_17.183 ;
T_17.182 ; for-loop step statement
    %load/vec4 v0x5555788df770_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555788df770_0, 0, 32;
    %jmp T_17.180;
T_17.181 ; for-loop exit label
    %jmp T_17.179;
T_17.170 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555788df770_0, 0, 32;
T_17.185 ; Top of for-loop
    %load/vec4 v0x5555788df770_0;
    %cmpi/s 18, 0, 32;
	  %jmp/0xz T_17.186, 5;
    %load/vec4 v0x5555788df860_0;
    %load/vec4 v0x5555788df770_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_17.190, 9;
    %load/vec4 v0x5555788dfa70_0;
    %load/vec4 v0x5555788df770_0;
    %part/s 1;
    %nor/r;
    %and;
T_17.190;
    %flag_set/vec4 8;
    %jmp/0xz  T_17.188, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x5555788df770_0;
    %store/vec4 v0x5555788df940_0, 4, 1;
T_17.188 ;
T_17.187 ; for-loop step statement
    %load/vec4 v0x5555788df770_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555788df770_0, 0, 32;
    %jmp T_17.185;
T_17.186 ; for-loop exit label
    %jmp T_17.179;
T_17.171 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555788df770_0, 0, 32;
T_17.191 ; Top of for-loop
    %load/vec4 v0x5555788df770_0;
    %cmpi/s 18, 0, 32;
	  %jmp/0xz T_17.192, 5;
    %load/vec4 v0x5555788df860_0;
    %load/vec4 v0x5555788df770_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_17.196, 9;
    %load/vec4 v0x5555788dfa70_0;
    %load/vec4 v0x5555788df770_0;
    %part/s 1;
    %and;
T_17.196;
    %flag_set/vec4 8;
    %jmp/0xz  T_17.194, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x5555788df770_0;
    %store/vec4 v0x5555788df940_0, 4, 1;
T_17.194 ;
T_17.193 ; for-loop step statement
    %load/vec4 v0x5555788df770_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555788df770_0, 0, 32;
    %jmp T_17.191;
T_17.192 ; for-loop exit label
    %jmp T_17.179;
T_17.172 ;
    %load/vec4 v0x5555788df860_0;
    %cmpi/ne 0, 0, 18;
    %jmp/0xz  T_17.197, 4;
    %pushi/vec4 0, 0, 18;
    %store/vec4 v0x5555788df940_0, 0, 18;
T_17.197 ;
    %jmp T_17.179;
T_17.173 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555788df770_0, 0, 32;
T_17.199 ; Top of for-loop
    %load/vec4 v0x5555788df770_0;
    %cmpi/s 18, 0, 32;
	  %jmp/0xz T_17.200, 5;
    %load/vec4 v0x5555788df860_0;
    %load/vec4 v0x5555788df770_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_17.204, 9;
    %load/vec4 v0x5555788dfa70_0;
    %load/vec4 v0x5555788df770_0;
    %part/s 1;
    %nor/r;
    %and;
T_17.204;
    %flag_set/vec4 8;
    %jmp/0xz  T_17.202, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x5555788df770_0;
    %store/vec4 v0x5555788df940_0, 4, 1;
T_17.202 ;
T_17.201 ; for-loop step statement
    %load/vec4 v0x5555788df770_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555788df770_0, 0, 32;
    %jmp T_17.199;
T_17.200 ; for-loop exit label
    %jmp T_17.179;
T_17.174 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555788df770_0, 0, 32;
T_17.205 ; Top of for-loop
    %load/vec4 v0x5555788df770_0;
    %cmpi/s 18, 0, 32;
	  %jmp/0xz T_17.206, 5;
    %load/vec4 v0x5555788df860_0;
    %load/vec4 v0x5555788df770_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_17.210, 9;
    %load/vec4 v0x5555788dfa70_0;
    %load/vec4 v0x5555788df770_0;
    %part/s 1;
    %and;
T_17.210;
    %flag_set/vec4 8;
    %jmp/0xz  T_17.208, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x5555788df770_0;
    %store/vec4 v0x5555788df940_0, 4, 1;
T_17.208 ;
T_17.207 ; for-loop step statement
    %load/vec4 v0x5555788df770_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555788df770_0, 0, 32;
    %jmp T_17.205;
T_17.206 ; for-loop exit label
    %jmp T_17.179;
T_17.175 ;
    %load/vec4 v0x5555788df860_0;
    %cmpi/ne 0, 0, 18;
    %jmp/0xz  T_17.211, 4;
    %pushi/vec4 262143, 0, 18;
    %store/vec4 v0x5555788df940_0, 0, 18;
T_17.211 ;
    %jmp T_17.179;
T_17.176 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555788df770_0, 0, 32;
T_17.213 ; Top of for-loop
    %load/vec4 v0x5555788df770_0;
    %cmpi/s 18, 0, 32;
	  %jmp/0xz T_17.214, 5;
    %load/vec4 v0x5555788df860_0;
    %load/vec4 v0x5555788df770_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_17.218, 9;
    %load/vec4 v0x5555788dfa70_0;
    %load/vec4 v0x5555788df770_0;
    %part/s 1;
    %nor/r;
    %and;
T_17.218;
    %flag_set/vec4 8;
    %jmp/0xz  T_17.216, 8;
    %load/vec4 v0x5555788df590_0;
    %load/vec4 v0x5555788df770_0;
    %part/s 1;
    %inv;
    %ix/getv/s 4, v0x5555788df770_0;
    %store/vec4 v0x5555788df940_0, 4, 1;
T_17.216 ;
T_17.215 ; for-loop step statement
    %load/vec4 v0x5555788df770_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555788df770_0, 0, 32;
    %jmp T_17.213;
T_17.214 ; for-loop exit label
    %jmp T_17.179;
T_17.177 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555788df770_0, 0, 32;
T_17.219 ; Top of for-loop
    %load/vec4 v0x5555788df770_0;
    %cmpi/s 18, 0, 32;
	  %jmp/0xz T_17.220, 5;
    %load/vec4 v0x5555788df860_0;
    %load/vec4 v0x5555788df770_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_17.224, 9;
    %load/vec4 v0x5555788dfa70_0;
    %load/vec4 v0x5555788df770_0;
    %part/s 1;
    %and;
T_17.224;
    %flag_set/vec4 8;
    %jmp/0xz  T_17.222, 8;
    %load/vec4 v0x5555788df590_0;
    %load/vec4 v0x5555788df770_0;
    %part/s 1;
    %inv;
    %ix/getv/s 4, v0x5555788df770_0;
    %store/vec4 v0x5555788df940_0, 4, 1;
T_17.222 ;
T_17.221 ; for-loop step statement
    %load/vec4 v0x5555788df770_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555788df770_0, 0, 32;
    %jmp T_17.219;
T_17.220 ; for-loop exit label
    %jmp T_17.179;
T_17.179 ;
    %pop/vec4 1;
    %load/vec4 v0x5555788df940_0;
    %ret/vec4 0, 0, 18;  Assign to get_sw_write_next_value (store_vec4_to_lval)
    %end;
S_0x5555788dfb50 .scope autofunction.vec4.s1, "get_sw_write_update" "get_sw_write_update" 8 47, 8 47 0, S_0x5555788db7b0;
 .timescale 0 0;
; Variable get_sw_write_update is vec4 return value of scope S_0x5555788dfb50
v0x5555788dfe10_0 .var "update", 2 0;
v0x5555788dfef0_0 .var "write_done", 0 0;
v0x5555788dff90_0 .var "write_enable", 0 0;
v0x5555788e0050_0 .var "write_valid", 17 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_rvd2.u_bit_field.get_sw_write_update ;
    %load/vec4 v0x5555788e0050_0;
    %pad/u 1;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x5555788dfe10_0, 4, 1;
    %pushi/vec4 1, 0, 1;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x5555788dfe10_0, 4, 1;
    %pushi/vec4 1, 0, 1;
    %ix/load 4, 2, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x5555788dfe10_0, 4, 1;
    %load/vec4 v0x5555788dfe10_0;
    %parti/s 1, 0, 2;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_18.226, 9;
    %load/vec4 v0x5555788dfe10_0;
    %parti/s 1, 1, 2;
    %and;
T_18.226;
    %flag_set/vec4 8;
    %flag_get/vec4 8;
    %jmp/0 T_18.225, 8;
    %load/vec4 v0x5555788dfe10_0;
    %parti/s 1, 2, 3;
    %and;
T_18.225;
    %ret/vec4 0, 0, 1;  Assign to get_sw_write_update (store_vec4_to_lval)
    %end;
S_0x5555788e1a80 .scope generate, "g_s1wto" "g_s1wto" 7 173, 7 173 0, S_0x5555788bcab0;
 .timescale 0 0;
S_0x5555788e1c10 .scope module, "u_bit_field" "rggen_bit_field" 7 184, 8 2 0, S_0x5555788e1a80;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "i_clk";
    .port_info 1 /INPUT 1 "i_rst_n";
    .port_info 2 /INPUT 1 "i_sw_write_valid";
    .port_info 3 /INPUT 1 "i_sw_write_enable";
    .port_info 4 /INPUT 1 "i_sw_read_valid";
    .port_info 5 /INPUT 1 "i_sw_mask";
    .port_info 6 /INPUT 1 "i_sw_write_data";
    .port_info 7 /OUTPUT 1 "o_sw_read_data";
    .port_info 8 /OUTPUT 1 "o_sw_value";
    .port_info 9 /OUTPUT 1 "o_write_trigger";
    .port_info 10 /OUTPUT 1 "o_read_trigger";
    .port_info 11 /INPUT 1 "i_hw_write_enable";
    .port_info 12 /INPUT 1 "i_hw_write_data";
    .port_info 13 /INPUT 1 "i_hw_set";
    .port_info 14 /INPUT 1 "i_hw_clear";
    .port_info 15 /INPUT 1 "i_value";
    .port_info 16 /INPUT 1 "i_mask";
    .port_info 17 /OUTPUT 1 "o_value";
    .port_info 18 /OUTPUT 1 "o_value_unmasked";
P_0x5555788e1e10 .param/l "EXTERNAL_MASK" 0 8 17, C4<0>;
P_0x5555788e1e50 .param/l "EXTERNAL_READ_DATA" 0 8 16, +C4<00000000000000000000000000000000>;
P_0x5555788e1e90 .param/l "HW_ACCESS" 0 8 12, C4<010>;
P_0x5555788e1ed0 .param/l "HW_CLEAR_WIDTH" 0 8 14, +C4<00000000000000000000000000000001>;
P_0x5555788e1f10 .param/l "HW_SET_WIDTH" 0 8 13, +C4<00000000000000000000000000000001>;
P_0x5555788e1f50 .param/l "HW_WRITE_ENABLE_POLARITY" 0 8 11, C4<1>;
P_0x5555788e1f90 .param/l "INITIAL_VALUE" 0 8 4, C4<0>;
P_0x5555788e1fd0 .param/l "PRECEDENCE_ACCESS" 0 8 5, +C4<00000000000000000000000000000001>;
P_0x5555788e2010 .param/l "STORAGE" 0 8 15, +C4<00000000000000000000000000000001>;
P_0x5555788e2050 .param/l "SW_READABLE" 1 8 41, C4<1>;
P_0x5555788e2090 .param/l "SW_READ_ACTION" 0 8 6, +C4<00000000000000000000000000000001>;
P_0x5555788e20d0 .param/l "SW_READ_UPDATE" 1 8 42, C4<0>;
P_0x5555788e2110 .param/l "SW_WRITABLE" 1 8 40, C4<1>;
P_0x5555788e2150 .param/l "SW_WRITE_ACTION" 0 8 7, +C4<00000000000000000000000000000010>;
P_0x5555788e2190 .param/l "SW_WRITE_CONTROL" 0 8 8, C4<0>;
P_0x5555788e21d0 .param/l "SW_WRITE_ENABLE_POLARITY" 0 8 10, C4<1>;
P_0x5555788e2210 .param/l "SW_WRITE_ONCE" 0 8 9, +C4<00000000000000000000000000000000>;
P_0x5555788e2250 .param/l "TRIGGER" 0 8 18, +C4<00000000000000000000000000000001>;
P_0x5555788e2290 .param/l "WIDTH" 0 8 3, +C4<00000000000000000000000000000001>;
L_0x555578929960 .functor BUFZ 1, L_0x555578929870, C4<0>, C4<0>, C4<0>;
L_0x555578929a20 .functor BUFZ 1, v0x5555788e3fa0_0, C4<0>, C4<0>, C4<0>;
L_0x555578929c90 .functor BUFZ 1, v0x5555788e3fa0_0, C4<0>, C4<0>, C4<0>;
L_0x555578929de0 .functor BUFZ 1, v0x5555788e3fa0_0, C4<0>, C4<0>, C4<0>;
v0x5555788e6780_0 .net "i_clk", 0 0, v0x555578915890_0;  alias, 1 drivers
L_0x7f258a66dac8 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x5555788e6840_0 .net "i_hw_clear", 0 0, L_0x7f258a66dac8;  1 drivers
v0x5555788e6920_0 .net "i_hw_set", 0 0, L_0x555578934100;  alias, 1 drivers
L_0x7f258a66da80 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x5555788e69f0_0 .net "i_hw_write_data", 0 0, L_0x7f258a66da80;  1 drivers
L_0x7f258a66da38 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x5555788e6ab0_0 .net "i_hw_write_enable", 0 0, L_0x7f258a66da38;  1 drivers
L_0x7f258a66db58 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v0x5555788e6bc0_0 .net "i_mask", 0 0, L_0x7f258a66db58;  1 drivers
v0x5555788e6ca0_0 .net "i_rst_n", 0 0, v0x555578915a30_0;  alias, 1 drivers
v0x5555788e6d40_0 .net "i_sw_mask", 0 0, L_0x555578929e80;  1 drivers
v0x5555788e6e20_0 .net "i_sw_read_valid", 0 0, L_0x555578916c80;  alias, 1 drivers
v0x5555788e6f50_0 .net "i_sw_write_data", 0 0, L_0x555578929f20;  1 drivers
L_0x7f258a66d9f0 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v0x5555788e7030_0 .net "i_sw_write_enable", 0 0, L_0x7f258a66d9f0;  1 drivers
v0x5555788e70f0_0 .net "i_sw_write_valid", 0 0, L_0x5555789165f0;  alias, 1 drivers
L_0x7f258a66db10 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x5555788e71e0_0 .net "i_value", 0 0, L_0x7f258a66db10;  1 drivers
v0x5555788e72c0_0 .net "o_read_trigger", 0 0, L_0x555578929bc0;  1 drivers
v0x5555788e7380_0 .net "o_sw_read_data", 0 0, L_0x555578929960;  1 drivers
v0x5555788e7460_0 .net "o_sw_value", 0 0, L_0x555578929a20;  1 drivers
v0x5555788e7540_0 .net "o_value", 0 0, L_0x555578929c90;  alias, 1 drivers
v0x5555788e7730_0 .net "o_value_unmasked", 0 0, L_0x555578929de0;  1 drivers
v0x5555788e7810_0 .net "o_write_trigger", 0 0, L_0x555578929a90;  alias, 1 drivers
v0x5555788e78b0_0 .net "w_hw_update", 0 0, L_0x555578929330;  1 drivers
v0x5555788e7950_0 .net "w_read_data", 0 0, L_0x555578929870;  1 drivers
v0x5555788e7a30_0 .net "w_sw_update", 1 0, L_0x555578929160;  1 drivers
L_0x7f258a66d9a8 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x5555788e7b10_0 .net "w_sw_write_done", 0 0, L_0x7f258a66d9a8;  1 drivers
v0x5555788e7bd0_0 .net "w_trigger", 1 0, L_0x5555789295c0;  1 drivers
v0x5555788e7cb0_0 .net "w_value", 0 0, v0x5555788e3fa0_0;  1 drivers
L_0x7f258a66d960 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x555578929160 .concat8 [ 1 1 0 0], L_0x7f258a66d960, L_0x555578929230;
L_0x5555789295c0 .concat8 [ 1 1 0 0], v0x5555788e4380_0, v0x5555788e3510_0;
L_0x555578929a90 .part L_0x5555789295c0, 0, 1;
L_0x555578929bc0 .part L_0x5555789295c0, 1, 1;
S_0x5555788e2e60 .scope generate, "g_hw_update" "g_hw_update" 8 259, 8 259 0, S_0x5555788e1c10;
 .timescale 0 0;
L_0x555578929330 .ufunc/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_s1wto.u_bit_field.get_hw_update, 1, L_0x7f258a66da38, L_0x555578934100, L_0x7f258a66dac8 (v0x5555788e5340_0, v0x5555788e51a0_0, v0x5555788e4fe0_0) S_0x5555788e4e50;
S_0x5555788e3040 .scope generate, "g_read_data" "g_read_data" 8 382, 8 382 0, S_0x5555788e1c10;
 .timescale 0 0;
L_0x555578929870 .functor BUFZ 1, v0x5555788e3fa0_0, C4<0>, C4<0>, C4<0>;
S_0x5555788e3240 .scope generate, "g_read_trigger" "g_read_trigger" 8 304, 8 304 0, S_0x5555788e1c10;
 .timescale 0 0;
v0x5555788e3450_0 .net *"_ivl_1", 0 0, v0x5555788e3510_0;  1 drivers
v0x5555788e3510_0 .var "r_trigger", 0 0;
S_0x5555788e35d0 .scope generate, "g_sw_read_update" "g_sw_read_update" 8 245, 8 245 0, S_0x5555788e1c10;
 .timescale 0 0;
v0x5555788e37b0_0 .net/2u *"_ivl_0", 0 0, L_0x7f258a66d960;  1 drivers
S_0x5555788e38b0 .scope generate, "g_sw_write_done" "g_sw_write_done" 8 268, 8 268 0, S_0x5555788e1c10;
 .timescale 0 0;
S_0x5555788e3ae0 .scope generate, "g_sw_write_update" "g_sw_write_update" 8 252, 8 252 0, S_0x5555788e1c10;
 .timescale 0 0;
v0x5555788e3cc0_0 .net *"_ivl_1", 0 0, L_0x555578929230;  1 drivers
L_0x555578929230 .ufunc/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_s1wto.u_bit_field.get_sw_write_update, 1, L_0x5555789165f0, L_0x7f258a66d9f0, L_0x7f258a66d9a8 (v0x5555788e6650_0, v0x5555788e6590_0, v0x5555788e64f0_0) S_0x5555788e6150;
S_0x5555788e3dc0 .scope generate, "g_value" "g_value" 8 326, 8 326 0, S_0x5555788e1c10;
 .timescale 0 0;
v0x5555788e3fa0_0 .var "r_value", 0 0;
S_0x5555788e40a0 .scope generate, "g_write_trigger" "g_write_trigger" 8 287, 8 287 0, S_0x5555788e1c10;
 .timescale 0 0;
v0x5555788e4280_0 .net *"_ivl_1", 0 0, v0x5555788e4380_0;  1 drivers
v0x5555788e4380_0 .var "r_trigger", 0 0;
S_0x5555788e4440 .scope autofunction.vec4.s1, "get_hw_next_value" "get_hw_next_value" 8 177, 8 177 0, S_0x5555788e1c10;
 .timescale 0 0;
v0x5555788e4620_0 .var "clear", 0 0;
v0x5555788e4720_0 .var "current_value", 0 0;
; Variable get_hw_next_value is vec4 return value of scope S_0x5555788e4440
v0x5555788e48c0_0 .var/i "i", 31 0;
v0x5555788e49a0_0 .var "set", 0 0;
v0x5555788e4a80 .array "set_clear", 1 0, 0 0;
v0x5555788e4b40_0 .var "value", 0 0;
v0x5555788e4c20_0 .var "write_data", 0 0;
v0x5555788e4d00_0 .var "write_enable", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_s1wto.u_bit_field.get_hw_next_value ;
    %load/vec4 v0x5555788e49a0_0;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x5555788e4a80, 4, 0;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x5555788e4a80, 4, 0;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555788e48c0_0, 0, 32;
T_19.227 ; Top of for-loop
    %load/vec4 v0x5555788e48c0_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_19.228, 5;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x5555788e4a80, 4;
    %load/vec4 v0x5555788e48c0_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_19.230, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x5555788e48c0_0;
    %store/vec4 v0x5555788e4b40_0, 4, 1;
    %jmp T_19.231;
T_19.230 ;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x5555788e4a80, 4;
    %load/vec4 v0x5555788e48c0_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_19.232, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x5555788e48c0_0;
    %store/vec4 v0x5555788e4b40_0, 4, 1;
    %jmp T_19.233;
T_19.232 ;
    %load/vec4 v0x5555788e4720_0;
    %load/vec4 v0x5555788e48c0_0;
    %part/s 1;
    %ix/getv/s 4, v0x5555788e48c0_0;
    %store/vec4 v0x5555788e4b40_0, 4, 1;
T_19.233 ;
T_19.231 ;
T_19.229 ; for-loop step statement
    %load/vec4 v0x5555788e48c0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555788e48c0_0, 0, 32;
    %jmp T_19.227;
T_19.228 ; for-loop exit label
    %load/vec4 v0x5555788e4b40_0;
    %ret/vec4 0, 0, 1;  Assign to get_hw_next_value (store_vec4_to_lval)
    %end;
S_0x5555788e4e50 .scope autofunction.vec4.s1, "get_hw_update" "get_hw_update" 8 72, 8 72 0, S_0x5555788e1c10;
 .timescale 0 0;
v0x5555788e4fe0_0 .var "clear", 0 0;
; Variable get_hw_update is vec4 return value of scope S_0x5555788e4e50
v0x5555788e51a0_0 .var "set", 0 0;
v0x5555788e5260_0 .var "update", 2 0;
v0x5555788e5340_0 .var "write_enable", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_s1wto.u_bit_field.get_hw_update ;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x5555788e5260_0, 4, 1;
    %pushi/vec4 1, 0, 1;
    %flag_set/vec4 8;
    %flag_get/vec4 8;
    %jmp/0 T_20.234, 8;
    %load/vec4 v0x5555788e51a0_0;
    %pushi/vec4 0, 0, 1;
    %cmp/ne;
    %flag_get/vec4 4;
    %and;
T_20.234;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x5555788e5260_0, 4, 1;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 2, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x5555788e5260_0, 4, 1;
    %load/vec4 v0x5555788e5260_0;
    %parti/s 1, 0, 2;
    %flag_set/vec4 8;
    %jmp/1 T_20.236, 8;
    %load/vec4 v0x5555788e5260_0;
    %parti/s 1, 1, 2;
    %flag_set/vec4 9;
    %flag_or 8, 9;
T_20.236;
    %flag_get/vec4 8;
    %jmp/1 T_20.235, 8;
    %load/vec4 v0x5555788e5260_0;
    %parti/s 1, 2, 3;
    %or;
T_20.235;
    %ret/vec4 0, 0, 1;  Assign to get_hw_update (store_vec4_to_lval)
    %end;
S_0x5555788e5450 .scope autofunction.vec4.s1, "get_sw_read_next_value" "get_sw_read_next_value" 8 86, 8 86 0, S_0x5555788e1c10;
 .timescale 0 0;
v0x5555788e5630_0 .var "current_value", 0 0;
; Variable get_sw_read_next_value is vec4 return value of scope S_0x5555788e5450
v0x5555788e5810_0 .var "mask", 0 0;
v0x5555788e58d0_0 .var "value", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_s1wto.u_bit_field.get_sw_read_next_value ;
    %pushi/vec4 1, 0, 32;
    %dup/vec4;
    %pushi/vec4 2, 0, 32;
    %cmp/u;
    %jmp/1 T_21.237, 6;
    %dup/vec4;
    %pushi/vec4 3, 0, 32;
    %cmp/u;
    %jmp/1 T_21.238, 6;
    %load/vec4 v0x5555788e5630_0;
    %store/vec4 v0x5555788e58d0_0, 0, 1;
    %jmp T_21.240;
T_21.237 ;
    %load/vec4 v0x5555788e5810_0;
    %cmpi/ne 0, 0, 1;
    %flag_mov 8, 4;
    %jmp/0 T_21.241, 8;
    %pushi/vec4 0, 0, 1;
    %jmp/1 T_21.242, 8;
T_21.241 ; End of true expr.
    %load/vec4 v0x5555788e5630_0;
    %jmp/0 T_21.242, 8;
 ; End of false expr.
    %blend;
T_21.242;
    %store/vec4 v0x5555788e58d0_0, 0, 1;
    %jmp T_21.240;
T_21.238 ;
    %load/vec4 v0x5555788e5810_0;
    %cmpi/ne 0, 0, 1;
    %flag_mov 8, 4;
    %jmp/0 T_21.243, 8;
    %pushi/vec4 1, 0, 1;
    %jmp/1 T_21.244, 8;
T_21.243 ; End of true expr.
    %load/vec4 v0x5555788e5630_0;
    %jmp/0 T_21.244, 8;
 ; End of false expr.
    %blend;
T_21.244;
    %store/vec4 v0x5555788e58d0_0, 0, 1;
    %jmp T_21.240;
T_21.240 ;
    %pop/vec4 1;
    %load/vec4 v0x5555788e58d0_0;
    %ret/vec4 0, 0, 1;  Assign to get_sw_read_next_value (store_vec4_to_lval)
    %end;
S_0x5555788e59b0 .scope autofunction.vec4.s1, "get_sw_write_next_value" "get_sw_write_next_value" 8 101, 8 101 0, S_0x5555788e1c10;
 .timescale 0 0;
v0x5555788e5b90_0 .var "current_value", 0 0;
; Variable get_sw_write_next_value is vec4 return value of scope S_0x5555788e59b0
v0x5555788e5d70_0 .var/i "i", 31 0;
v0x5555788e5e60_0 .var "mask", 0 0;
v0x5555788e5f40_0 .var "value", 0 0;
v0x5555788e6070_0 .var "write_data", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_s1wto.u_bit_field.get_sw_write_next_value ;
    %load/vec4 v0x5555788e5b90_0;
    %store/vec4 v0x5555788e5f40_0, 0, 1;
    %pushi/vec4 2, 0, 32;
    %dup/vec4;
    %pushi/vec4 1, 0, 32;
    %cmp/u;
    %jmp/1 T_22.245, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 32;
    %cmp/u;
    %jmp/1 T_22.246, 6;
    %dup/vec4;
    %pushi/vec4 3, 0, 32;
    %cmp/u;
    %jmp/1 T_22.247, 6;
    %dup/vec4;
    %pushi/vec4 4, 0, 32;
    %cmp/u;
    %jmp/1 T_22.248, 6;
    %dup/vec4;
    %pushi/vec4 5, 0, 32;
    %cmp/u;
    %jmp/1 T_22.249, 6;
    %dup/vec4;
    %pushi/vec4 6, 0, 32;
    %cmp/u;
    %jmp/1 T_22.250, 6;
    %dup/vec4;
    %pushi/vec4 7, 0, 32;
    %cmp/u;
    %jmp/1 T_22.251, 6;
    %dup/vec4;
    %pushi/vec4 8, 0, 32;
    %cmp/u;
    %jmp/1 T_22.252, 6;
    %dup/vec4;
    %pushi/vec4 9, 0, 32;
    %cmp/u;
    %jmp/1 T_22.253, 6;
    %jmp T_22.255;
T_22.245 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555788e5d70_0, 0, 32;
T_22.256 ; Top of for-loop
    %load/vec4 v0x5555788e5d70_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_22.257, 5;
    %load/vec4 v0x5555788e5e60_0;
    %load/vec4 v0x5555788e5d70_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_22.259, 8;
    %load/vec4 v0x5555788e6070_0;
    %load/vec4 v0x5555788e5d70_0;
    %part/s 1;
    %ix/getv/s 4, v0x5555788e5d70_0;
    %store/vec4 v0x5555788e5f40_0, 4, 1;
T_22.259 ;
T_22.258 ; for-loop step statement
    %load/vec4 v0x5555788e5d70_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555788e5d70_0, 0, 32;
    %jmp T_22.256;
T_22.257 ; for-loop exit label
    %jmp T_22.255;
T_22.246 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555788e5d70_0, 0, 32;
T_22.261 ; Top of for-loop
    %load/vec4 v0x5555788e5d70_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_22.262, 5;
    %load/vec4 v0x5555788e5e60_0;
    %load/vec4 v0x5555788e5d70_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_22.266, 9;
    %load/vec4 v0x5555788e6070_0;
    %load/vec4 v0x5555788e5d70_0;
    %part/s 1;
    %nor/r;
    %and;
T_22.266;
    %flag_set/vec4 8;
    %jmp/0xz  T_22.264, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x5555788e5d70_0;
    %store/vec4 v0x5555788e5f40_0, 4, 1;
T_22.264 ;
T_22.263 ; for-loop step statement
    %load/vec4 v0x5555788e5d70_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555788e5d70_0, 0, 32;
    %jmp T_22.261;
T_22.262 ; for-loop exit label
    %jmp T_22.255;
T_22.247 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555788e5d70_0, 0, 32;
T_22.267 ; Top of for-loop
    %load/vec4 v0x5555788e5d70_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_22.268, 5;
    %load/vec4 v0x5555788e5e60_0;
    %load/vec4 v0x5555788e5d70_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_22.272, 9;
    %load/vec4 v0x5555788e6070_0;
    %load/vec4 v0x5555788e5d70_0;
    %part/s 1;
    %and;
T_22.272;
    %flag_set/vec4 8;
    %jmp/0xz  T_22.270, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x5555788e5d70_0;
    %store/vec4 v0x5555788e5f40_0, 4, 1;
T_22.270 ;
T_22.269 ; for-loop step statement
    %load/vec4 v0x5555788e5d70_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555788e5d70_0, 0, 32;
    %jmp T_22.267;
T_22.268 ; for-loop exit label
    %jmp T_22.255;
T_22.248 ;
    %load/vec4 v0x5555788e5e60_0;
    %cmpi/ne 0, 0, 1;
    %jmp/0xz  T_22.273, 4;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x5555788e5f40_0, 0, 1;
T_22.273 ;
    %jmp T_22.255;
T_22.249 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555788e5d70_0, 0, 32;
T_22.275 ; Top of for-loop
    %load/vec4 v0x5555788e5d70_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_22.276, 5;
    %load/vec4 v0x5555788e5e60_0;
    %load/vec4 v0x5555788e5d70_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_22.280, 9;
    %load/vec4 v0x5555788e6070_0;
    %load/vec4 v0x5555788e5d70_0;
    %part/s 1;
    %nor/r;
    %and;
T_22.280;
    %flag_set/vec4 8;
    %jmp/0xz  T_22.278, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x5555788e5d70_0;
    %store/vec4 v0x5555788e5f40_0, 4, 1;
T_22.278 ;
T_22.277 ; for-loop step statement
    %load/vec4 v0x5555788e5d70_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555788e5d70_0, 0, 32;
    %jmp T_22.275;
T_22.276 ; for-loop exit label
    %jmp T_22.255;
T_22.250 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555788e5d70_0, 0, 32;
T_22.281 ; Top of for-loop
    %load/vec4 v0x5555788e5d70_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_22.282, 5;
    %load/vec4 v0x5555788e5e60_0;
    %load/vec4 v0x5555788e5d70_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_22.286, 9;
    %load/vec4 v0x5555788e6070_0;
    %load/vec4 v0x5555788e5d70_0;
    %part/s 1;
    %and;
T_22.286;
    %flag_set/vec4 8;
    %jmp/0xz  T_22.284, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x5555788e5d70_0;
    %store/vec4 v0x5555788e5f40_0, 4, 1;
T_22.284 ;
T_22.283 ; for-loop step statement
    %load/vec4 v0x5555788e5d70_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555788e5d70_0, 0, 32;
    %jmp T_22.281;
T_22.282 ; for-loop exit label
    %jmp T_22.255;
T_22.251 ;
    %load/vec4 v0x5555788e5e60_0;
    %cmpi/ne 0, 0, 1;
    %jmp/0xz  T_22.287, 4;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x5555788e5f40_0, 0, 1;
T_22.287 ;
    %jmp T_22.255;
T_22.252 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555788e5d70_0, 0, 32;
T_22.289 ; Top of for-loop
    %load/vec4 v0x5555788e5d70_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_22.290, 5;
    %load/vec4 v0x5555788e5e60_0;
    %load/vec4 v0x5555788e5d70_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_22.294, 9;
    %load/vec4 v0x5555788e6070_0;
    %load/vec4 v0x5555788e5d70_0;
    %part/s 1;
    %nor/r;
    %and;
T_22.294;
    %flag_set/vec4 8;
    %jmp/0xz  T_22.292, 8;
    %load/vec4 v0x5555788e5b90_0;
    %load/vec4 v0x5555788e5d70_0;
    %part/s 1;
    %inv;
    %ix/getv/s 4, v0x5555788e5d70_0;
    %store/vec4 v0x5555788e5f40_0, 4, 1;
T_22.292 ;
T_22.291 ; for-loop step statement
    %load/vec4 v0x5555788e5d70_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555788e5d70_0, 0, 32;
    %jmp T_22.289;
T_22.290 ; for-loop exit label
    %jmp T_22.255;
T_22.253 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555788e5d70_0, 0, 32;
T_22.295 ; Top of for-loop
    %load/vec4 v0x5555788e5d70_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_22.296, 5;
    %load/vec4 v0x5555788e5e60_0;
    %load/vec4 v0x5555788e5d70_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_22.300, 9;
    %load/vec4 v0x5555788e6070_0;
    %load/vec4 v0x5555788e5d70_0;
    %part/s 1;
    %and;
T_22.300;
    %flag_set/vec4 8;
    %jmp/0xz  T_22.298, 8;
    %load/vec4 v0x5555788e5b90_0;
    %load/vec4 v0x5555788e5d70_0;
    %part/s 1;
    %inv;
    %ix/getv/s 4, v0x5555788e5d70_0;
    %store/vec4 v0x5555788e5f40_0, 4, 1;
T_22.298 ;
T_22.297 ; for-loop step statement
    %load/vec4 v0x5555788e5d70_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555788e5d70_0, 0, 32;
    %jmp T_22.295;
T_22.296 ; for-loop exit label
    %jmp T_22.255;
T_22.255 ;
    %pop/vec4 1;
    %load/vec4 v0x5555788e5f40_0;
    %ret/vec4 0, 0, 1;  Assign to get_sw_write_next_value (store_vec4_to_lval)
    %end;
S_0x5555788e6150 .scope autofunction.vec4.s1, "get_sw_write_update" "get_sw_write_update" 8 47, 8 47 0, S_0x5555788e1c10;
 .timescale 0 0;
; Variable get_sw_write_update is vec4 return value of scope S_0x5555788e6150
v0x5555788e6410_0 .var "update", 2 0;
v0x5555788e64f0_0 .var "write_done", 0 0;
v0x5555788e6590_0 .var "write_enable", 0 0;
v0x5555788e6650_0 .var "write_valid", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_s1wto.u_bit_field.get_sw_write_update ;
    %load/vec4 v0x5555788e6650_0;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x5555788e6410_0, 4, 1;
    %pushi/vec4 1, 0, 1;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x5555788e6410_0, 4, 1;
    %pushi/vec4 1, 0, 1;
    %ix/load 4, 2, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x5555788e6410_0, 4, 1;
    %load/vec4 v0x5555788e6410_0;
    %parti/s 1, 0, 2;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_23.302, 9;
    %load/vec4 v0x5555788e6410_0;
    %parti/s 1, 1, 2;
    %and;
T_23.302;
    %flag_set/vec4 8;
    %flag_get/vec4 8;
    %jmp/0 T_23.301, 8;
    %load/vec4 v0x5555788e6410_0;
    %parti/s 1, 2, 3;
    %and;
T_23.301;
    %ret/vec4 0, 0, 1;  Assign to get_sw_write_update (store_vec4_to_lval)
    %end;
S_0x5555788e8090 .scope generate, "g_s2wto" "g_s2wto" 7 206, 7 206 0, S_0x5555788bcab0;
 .timescale 0 0;
S_0x5555788e82c0 .scope module, "u_bit_field" "rggen_bit_field" 7 217, 8 2 0, S_0x5555788e8090;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "i_clk";
    .port_info 1 /INPUT 1 "i_rst_n";
    .port_info 2 /INPUT 1 "i_sw_write_valid";
    .port_info 3 /INPUT 1 "i_sw_write_enable";
    .port_info 4 /INPUT 1 "i_sw_read_valid";
    .port_info 5 /INPUT 1 "i_sw_mask";
    .port_info 6 /INPUT 1 "i_sw_write_data";
    .port_info 7 /OUTPUT 1 "o_sw_read_data";
    .port_info 8 /OUTPUT 1 "o_sw_value";
    .port_info 9 /OUTPUT 1 "o_write_trigger";
    .port_info 10 /OUTPUT 1 "o_read_trigger";
    .port_info 11 /INPUT 1 "i_hw_write_enable";
    .port_info 12 /INPUT 1 "i_hw_write_data";
    .port_info 13 /INPUT 1 "i_hw_set";
    .port_info 14 /INPUT 1 "i_hw_clear";
    .port_info 15 /INPUT 1 "i_value";
    .port_info 16 /INPUT 1 "i_mask";
    .port_info 17 /OUTPUT 1 "o_value";
    .port_info 18 /OUTPUT 1 "o_value_unmasked";
P_0x5555788e84c0 .param/l "EXTERNAL_MASK" 0 8 17, C4<0>;
P_0x5555788e8500 .param/l "EXTERNAL_READ_DATA" 0 8 16, +C4<00000000000000000000000000000000>;
P_0x5555788e8540 .param/l "HW_ACCESS" 0 8 12, C4<010>;
P_0x5555788e8580 .param/l "HW_CLEAR_WIDTH" 0 8 14, +C4<00000000000000000000000000000001>;
P_0x5555788e85c0 .param/l "HW_SET_WIDTH" 0 8 13, +C4<00000000000000000000000000000001>;
P_0x5555788e8600 .param/l "HW_WRITE_ENABLE_POLARITY" 0 8 11, C4<1>;
P_0x5555788e8640 .param/l "INITIAL_VALUE" 0 8 4, C4<0>;
P_0x5555788e8680 .param/l "PRECEDENCE_ACCESS" 0 8 5, +C4<00000000000000000000000000000001>;
P_0x5555788e86c0 .param/l "STORAGE" 0 8 15, +C4<00000000000000000000000000000001>;
P_0x5555788e8700 .param/l "SW_READABLE" 1 8 41, C4<1>;
P_0x5555788e8740 .param/l "SW_READ_ACTION" 0 8 6, +C4<00000000000000000000000000000001>;
P_0x5555788e8780 .param/l "SW_READ_UPDATE" 1 8 42, C4<0>;
P_0x5555788e87c0 .param/l "SW_WRITABLE" 1 8 40, C4<1>;
P_0x5555788e8800 .param/l "SW_WRITE_ACTION" 0 8 7, +C4<00000000000000000000000000000010>;
P_0x5555788e8840 .param/l "SW_WRITE_CONTROL" 0 8 8, C4<0>;
P_0x5555788e8880 .param/l "SW_WRITE_ENABLE_POLARITY" 0 8 10, C4<1>;
P_0x5555788e88c0 .param/l "SW_WRITE_ONCE" 0 8 9, +C4<00000000000000000000000000000000>;
P_0x5555788e8900 .param/l "TRIGGER" 0 8 18, +C4<00000000000000000000000000000001>;
P_0x5555788e8940 .param/l "WIDTH" 0 8 3, +C4<00000000000000000000000000000001>;
L_0x55557892a9a0 .functor BUFZ 1, L_0x55557892a8b0, C4<0>, C4<0>, C4<0>;
L_0x55557892aa60 .functor BUFZ 1, v0x5555788ea5c0_0, C4<0>, C4<0>, C4<0>;
L_0x55557892acd0 .functor BUFZ 1, v0x5555788ea5c0_0, C4<0>, C4<0>, C4<0>;
L_0x55557892ae20 .functor BUFZ 1, v0x5555788ea5c0_0, C4<0>, C4<0>, C4<0>;
v0x5555788ecda0_0 .net "i_clk", 0 0, v0x555578915890_0;  alias, 1 drivers
L_0x7f258a66dd08 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x5555788ecf70_0 .net "i_hw_clear", 0 0, L_0x7f258a66dd08;  1 drivers
v0x5555788ed050_0 .net "i_hw_set", 0 0, L_0x555578934060;  alias, 1 drivers
L_0x7f258a66dcc0 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x5555788ed120_0 .net "i_hw_write_data", 0 0, L_0x7f258a66dcc0;  1 drivers
L_0x7f258a66dc78 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x5555788ed1e0_0 .net "i_hw_write_enable", 0 0, L_0x7f258a66dc78;  1 drivers
L_0x7f258a66dd98 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v0x5555788ed2f0_0 .net "i_mask", 0 0, L_0x7f258a66dd98;  1 drivers
v0x5555788ed3d0_0 .net "i_rst_n", 0 0, v0x555578915a30_0;  alias, 1 drivers
v0x5555788ed580_0 .net "i_sw_mask", 0 0, L_0x55557892aec0;  1 drivers
v0x5555788ed660_0 .net "i_sw_read_valid", 0 0, L_0x555578916c80;  alias, 1 drivers
v0x5555788ed700_0 .net "i_sw_write_data", 0 0, L_0x55557892af60;  1 drivers
L_0x7f258a66dc30 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v0x5555788ed7e0_0 .net "i_sw_write_enable", 0 0, L_0x7f258a66dc30;  1 drivers
v0x5555788ed8a0_0 .net "i_sw_write_valid", 0 0, L_0x5555789165f0;  alias, 1 drivers
L_0x7f258a66dd50 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x5555788ed940_0 .net "i_value", 0 0, L_0x7f258a66dd50;  1 drivers
v0x5555788eda20_0 .net "o_read_trigger", 0 0, L_0x55557892ac00;  1 drivers
v0x5555788edae0_0 .net "o_sw_read_data", 0 0, L_0x55557892a9a0;  1 drivers
v0x5555788edbc0_0 .net "o_sw_value", 0 0, L_0x55557892aa60;  1 drivers
v0x5555788edca0_0 .net "o_value", 0 0, L_0x55557892acd0;  alias, 1 drivers
v0x5555788ede90_0 .net "o_value_unmasked", 0 0, L_0x55557892ae20;  1 drivers
v0x5555788edf70_0 .net "o_write_trigger", 0 0, L_0x55557892aad0;  alias, 1 drivers
v0x5555788ee010_0 .net "w_hw_update", 0 0, L_0x55557892a370;  1 drivers
v0x5555788ee0b0_0 .net "w_read_data", 0 0, L_0x55557892a8b0;  1 drivers
v0x5555788ee190_0 .net "w_sw_update", 1 0, L_0x55557892a100;  1 drivers
L_0x7f258a66dbe8 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x5555788ee270_0 .net "w_sw_write_done", 0 0, L_0x7f258a66dbe8;  1 drivers
v0x5555788ee330_0 .net "w_trigger", 1 0, L_0x55557892a600;  1 drivers
v0x5555788ee410_0 .net "w_value", 0 0, v0x5555788ea5c0_0;  1 drivers
L_0x7f258a66dba0 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x55557892a100 .concat8 [ 1 1 0 0], L_0x7f258a66dba0, L_0x55557892a220;
L_0x55557892a600 .concat8 [ 1 1 0 0], v0x5555788ea9a0_0, v0x5555788e9b30_0;
L_0x55557892aad0 .part L_0x55557892a600, 0, 1;
L_0x55557892ac00 .part L_0x55557892a600, 1, 1;
S_0x5555788e9480 .scope generate, "g_hw_update" "g_hw_update" 8 259, 8 259 0, S_0x5555788e82c0;
 .timescale 0 0;
L_0x55557892a370 .ufunc/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_s2wto.u_bit_field.get_hw_update, 1, L_0x7f258a66dc78, L_0x555578934060, L_0x7f258a66dd08 (v0x5555788eb960_0, v0x5555788eb7c0_0, v0x5555788eb600_0) S_0x5555788eb470;
S_0x5555788e9660 .scope generate, "g_read_data" "g_read_data" 8 382, 8 382 0, S_0x5555788e82c0;
 .timescale 0 0;
L_0x55557892a8b0 .functor BUFZ 1, v0x5555788ea5c0_0, C4<0>, C4<0>, C4<0>;
S_0x5555788e9860 .scope generate, "g_read_trigger" "g_read_trigger" 8 304, 8 304 0, S_0x5555788e82c0;
 .timescale 0 0;
v0x5555788e9a70_0 .net *"_ivl_1", 0 0, v0x5555788e9b30_0;  1 drivers
v0x5555788e9b30_0 .var "r_trigger", 0 0;
S_0x5555788e9bf0 .scope generate, "g_sw_read_update" "g_sw_read_update" 8 245, 8 245 0, S_0x5555788e82c0;
 .timescale 0 0;
v0x5555788e9dd0_0 .net/2u *"_ivl_0", 0 0, L_0x7f258a66dba0;  1 drivers
S_0x5555788e9ed0 .scope generate, "g_sw_write_done" "g_sw_write_done" 8 268, 8 268 0, S_0x5555788e82c0;
 .timescale 0 0;
S_0x5555788ea100 .scope generate, "g_sw_write_update" "g_sw_write_update" 8 252, 8 252 0, S_0x5555788e82c0;
 .timescale 0 0;
v0x5555788ea2e0_0 .net *"_ivl_1", 0 0, L_0x55557892a220;  1 drivers
L_0x55557892a220 .ufunc/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_s2wto.u_bit_field.get_sw_write_update, 1, L_0x5555789165f0, L_0x7f258a66dc30, L_0x7f258a66dbe8 (v0x5555788ecc70_0, v0x5555788ecbb0_0, v0x5555788ecb10_0) S_0x5555788ec770;
S_0x5555788ea3e0 .scope generate, "g_value" "g_value" 8 326, 8 326 0, S_0x5555788e82c0;
 .timescale 0 0;
v0x5555788ea5c0_0 .var "r_value", 0 0;
S_0x5555788ea6c0 .scope generate, "g_write_trigger" "g_write_trigger" 8 287, 8 287 0, S_0x5555788e82c0;
 .timescale 0 0;
v0x5555788ea8a0_0 .net *"_ivl_1", 0 0, v0x5555788ea9a0_0;  1 drivers
v0x5555788ea9a0_0 .var "r_trigger", 0 0;
S_0x5555788eaa60 .scope autofunction.vec4.s1, "get_hw_next_value" "get_hw_next_value" 8 177, 8 177 0, S_0x5555788e82c0;
 .timescale 0 0;
v0x5555788eac40_0 .var "clear", 0 0;
v0x5555788ead40_0 .var "current_value", 0 0;
; Variable get_hw_next_value is vec4 return value of scope S_0x5555788eaa60
v0x5555788eaee0_0 .var/i "i", 31 0;
v0x5555788eafc0_0 .var "set", 0 0;
v0x5555788eb0a0 .array "set_clear", 1 0, 0 0;
v0x5555788eb160_0 .var "value", 0 0;
v0x5555788eb240_0 .var "write_data", 0 0;
v0x5555788eb320_0 .var "write_enable", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_s2wto.u_bit_field.get_hw_next_value ;
    %load/vec4 v0x5555788eafc0_0;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x5555788eb0a0, 4, 0;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x5555788eb0a0, 4, 0;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555788eaee0_0, 0, 32;
T_24.303 ; Top of for-loop
    %load/vec4 v0x5555788eaee0_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_24.304, 5;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x5555788eb0a0, 4;
    %load/vec4 v0x5555788eaee0_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_24.306, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x5555788eaee0_0;
    %store/vec4 v0x5555788eb160_0, 4, 1;
    %jmp T_24.307;
T_24.306 ;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x5555788eb0a0, 4;
    %load/vec4 v0x5555788eaee0_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_24.308, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x5555788eaee0_0;
    %store/vec4 v0x5555788eb160_0, 4, 1;
    %jmp T_24.309;
T_24.308 ;
    %load/vec4 v0x5555788ead40_0;
    %load/vec4 v0x5555788eaee0_0;
    %part/s 1;
    %ix/getv/s 4, v0x5555788eaee0_0;
    %store/vec4 v0x5555788eb160_0, 4, 1;
T_24.309 ;
T_24.307 ;
T_24.305 ; for-loop step statement
    %load/vec4 v0x5555788eaee0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555788eaee0_0, 0, 32;
    %jmp T_24.303;
T_24.304 ; for-loop exit label
    %load/vec4 v0x5555788eb160_0;
    %ret/vec4 0, 0, 1;  Assign to get_hw_next_value (store_vec4_to_lval)
    %end;
S_0x5555788eb470 .scope autofunction.vec4.s1, "get_hw_update" "get_hw_update" 8 72, 8 72 0, S_0x5555788e82c0;
 .timescale 0 0;
v0x5555788eb600_0 .var "clear", 0 0;
; Variable get_hw_update is vec4 return value of scope S_0x5555788eb470
v0x5555788eb7c0_0 .var "set", 0 0;
v0x5555788eb880_0 .var "update", 2 0;
v0x5555788eb960_0 .var "write_enable", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_s2wto.u_bit_field.get_hw_update ;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x5555788eb880_0, 4, 1;
    %pushi/vec4 1, 0, 1;
    %flag_set/vec4 8;
    %flag_get/vec4 8;
    %jmp/0 T_25.310, 8;
    %load/vec4 v0x5555788eb7c0_0;
    %pushi/vec4 0, 0, 1;
    %cmp/ne;
    %flag_get/vec4 4;
    %and;
T_25.310;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x5555788eb880_0, 4, 1;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 2, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x5555788eb880_0, 4, 1;
    %load/vec4 v0x5555788eb880_0;
    %parti/s 1, 0, 2;
    %flag_set/vec4 8;
    %jmp/1 T_25.312, 8;
    %load/vec4 v0x5555788eb880_0;
    %parti/s 1, 1, 2;
    %flag_set/vec4 9;
    %flag_or 8, 9;
T_25.312;
    %flag_get/vec4 8;
    %jmp/1 T_25.311, 8;
    %load/vec4 v0x5555788eb880_0;
    %parti/s 1, 2, 3;
    %or;
T_25.311;
    %ret/vec4 0, 0, 1;  Assign to get_hw_update (store_vec4_to_lval)
    %end;
S_0x5555788eba70 .scope autofunction.vec4.s1, "get_sw_read_next_value" "get_sw_read_next_value" 8 86, 8 86 0, S_0x5555788e82c0;
 .timescale 0 0;
v0x5555788ebc50_0 .var "current_value", 0 0;
; Variable get_sw_read_next_value is vec4 return value of scope S_0x5555788eba70
v0x5555788ebe30_0 .var "mask", 0 0;
v0x5555788ebef0_0 .var "value", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_s2wto.u_bit_field.get_sw_read_next_value ;
    %pushi/vec4 1, 0, 32;
    %dup/vec4;
    %pushi/vec4 2, 0, 32;
    %cmp/u;
    %jmp/1 T_26.313, 6;
    %dup/vec4;
    %pushi/vec4 3, 0, 32;
    %cmp/u;
    %jmp/1 T_26.314, 6;
    %load/vec4 v0x5555788ebc50_0;
    %store/vec4 v0x5555788ebef0_0, 0, 1;
    %jmp T_26.316;
T_26.313 ;
    %load/vec4 v0x5555788ebe30_0;
    %cmpi/ne 0, 0, 1;
    %flag_mov 8, 4;
    %jmp/0 T_26.317, 8;
    %pushi/vec4 0, 0, 1;
    %jmp/1 T_26.318, 8;
T_26.317 ; End of true expr.
    %load/vec4 v0x5555788ebc50_0;
    %jmp/0 T_26.318, 8;
 ; End of false expr.
    %blend;
T_26.318;
    %store/vec4 v0x5555788ebef0_0, 0, 1;
    %jmp T_26.316;
T_26.314 ;
    %load/vec4 v0x5555788ebe30_0;
    %cmpi/ne 0, 0, 1;
    %flag_mov 8, 4;
    %jmp/0 T_26.319, 8;
    %pushi/vec4 1, 0, 1;
    %jmp/1 T_26.320, 8;
T_26.319 ; End of true expr.
    %load/vec4 v0x5555788ebc50_0;
    %jmp/0 T_26.320, 8;
 ; End of false expr.
    %blend;
T_26.320;
    %store/vec4 v0x5555788ebef0_0, 0, 1;
    %jmp T_26.316;
T_26.316 ;
    %pop/vec4 1;
    %load/vec4 v0x5555788ebef0_0;
    %ret/vec4 0, 0, 1;  Assign to get_sw_read_next_value (store_vec4_to_lval)
    %end;
S_0x5555788ebfd0 .scope autofunction.vec4.s1, "get_sw_write_next_value" "get_sw_write_next_value" 8 101, 8 101 0, S_0x5555788e82c0;
 .timescale 0 0;
v0x5555788ec1b0_0 .var "current_value", 0 0;
; Variable get_sw_write_next_value is vec4 return value of scope S_0x5555788ebfd0
v0x5555788ec390_0 .var/i "i", 31 0;
v0x5555788ec480_0 .var "mask", 0 0;
v0x5555788ec560_0 .var "value", 0 0;
v0x5555788ec690_0 .var "write_data", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_s2wto.u_bit_field.get_sw_write_next_value ;
    %load/vec4 v0x5555788ec1b0_0;
    %store/vec4 v0x5555788ec560_0, 0, 1;
    %pushi/vec4 2, 0, 32;
    %dup/vec4;
    %pushi/vec4 1, 0, 32;
    %cmp/u;
    %jmp/1 T_27.321, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 32;
    %cmp/u;
    %jmp/1 T_27.322, 6;
    %dup/vec4;
    %pushi/vec4 3, 0, 32;
    %cmp/u;
    %jmp/1 T_27.323, 6;
    %dup/vec4;
    %pushi/vec4 4, 0, 32;
    %cmp/u;
    %jmp/1 T_27.324, 6;
    %dup/vec4;
    %pushi/vec4 5, 0, 32;
    %cmp/u;
    %jmp/1 T_27.325, 6;
    %dup/vec4;
    %pushi/vec4 6, 0, 32;
    %cmp/u;
    %jmp/1 T_27.326, 6;
    %dup/vec4;
    %pushi/vec4 7, 0, 32;
    %cmp/u;
    %jmp/1 T_27.327, 6;
    %dup/vec4;
    %pushi/vec4 8, 0, 32;
    %cmp/u;
    %jmp/1 T_27.328, 6;
    %dup/vec4;
    %pushi/vec4 9, 0, 32;
    %cmp/u;
    %jmp/1 T_27.329, 6;
    %jmp T_27.331;
T_27.321 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555788ec390_0, 0, 32;
T_27.332 ; Top of for-loop
    %load/vec4 v0x5555788ec390_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_27.333, 5;
    %load/vec4 v0x5555788ec480_0;
    %load/vec4 v0x5555788ec390_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_27.335, 8;
    %load/vec4 v0x5555788ec690_0;
    %load/vec4 v0x5555788ec390_0;
    %part/s 1;
    %ix/getv/s 4, v0x5555788ec390_0;
    %store/vec4 v0x5555788ec560_0, 4, 1;
T_27.335 ;
T_27.334 ; for-loop step statement
    %load/vec4 v0x5555788ec390_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555788ec390_0, 0, 32;
    %jmp T_27.332;
T_27.333 ; for-loop exit label
    %jmp T_27.331;
T_27.322 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555788ec390_0, 0, 32;
T_27.337 ; Top of for-loop
    %load/vec4 v0x5555788ec390_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_27.338, 5;
    %load/vec4 v0x5555788ec480_0;
    %load/vec4 v0x5555788ec390_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_27.342, 9;
    %load/vec4 v0x5555788ec690_0;
    %load/vec4 v0x5555788ec390_0;
    %part/s 1;
    %nor/r;
    %and;
T_27.342;
    %flag_set/vec4 8;
    %jmp/0xz  T_27.340, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x5555788ec390_0;
    %store/vec4 v0x5555788ec560_0, 4, 1;
T_27.340 ;
T_27.339 ; for-loop step statement
    %load/vec4 v0x5555788ec390_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555788ec390_0, 0, 32;
    %jmp T_27.337;
T_27.338 ; for-loop exit label
    %jmp T_27.331;
T_27.323 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555788ec390_0, 0, 32;
T_27.343 ; Top of for-loop
    %load/vec4 v0x5555788ec390_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_27.344, 5;
    %load/vec4 v0x5555788ec480_0;
    %load/vec4 v0x5555788ec390_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_27.348, 9;
    %load/vec4 v0x5555788ec690_0;
    %load/vec4 v0x5555788ec390_0;
    %part/s 1;
    %and;
T_27.348;
    %flag_set/vec4 8;
    %jmp/0xz  T_27.346, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x5555788ec390_0;
    %store/vec4 v0x5555788ec560_0, 4, 1;
T_27.346 ;
T_27.345 ; for-loop step statement
    %load/vec4 v0x5555788ec390_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555788ec390_0, 0, 32;
    %jmp T_27.343;
T_27.344 ; for-loop exit label
    %jmp T_27.331;
T_27.324 ;
    %load/vec4 v0x5555788ec480_0;
    %cmpi/ne 0, 0, 1;
    %jmp/0xz  T_27.349, 4;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x5555788ec560_0, 0, 1;
T_27.349 ;
    %jmp T_27.331;
T_27.325 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555788ec390_0, 0, 32;
T_27.351 ; Top of for-loop
    %load/vec4 v0x5555788ec390_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_27.352, 5;
    %load/vec4 v0x5555788ec480_0;
    %load/vec4 v0x5555788ec390_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_27.356, 9;
    %load/vec4 v0x5555788ec690_0;
    %load/vec4 v0x5555788ec390_0;
    %part/s 1;
    %nor/r;
    %and;
T_27.356;
    %flag_set/vec4 8;
    %jmp/0xz  T_27.354, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x5555788ec390_0;
    %store/vec4 v0x5555788ec560_0, 4, 1;
T_27.354 ;
T_27.353 ; for-loop step statement
    %load/vec4 v0x5555788ec390_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555788ec390_0, 0, 32;
    %jmp T_27.351;
T_27.352 ; for-loop exit label
    %jmp T_27.331;
T_27.326 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555788ec390_0, 0, 32;
T_27.357 ; Top of for-loop
    %load/vec4 v0x5555788ec390_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_27.358, 5;
    %load/vec4 v0x5555788ec480_0;
    %load/vec4 v0x5555788ec390_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_27.362, 9;
    %load/vec4 v0x5555788ec690_0;
    %load/vec4 v0x5555788ec390_0;
    %part/s 1;
    %and;
T_27.362;
    %flag_set/vec4 8;
    %jmp/0xz  T_27.360, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x5555788ec390_0;
    %store/vec4 v0x5555788ec560_0, 4, 1;
T_27.360 ;
T_27.359 ; for-loop step statement
    %load/vec4 v0x5555788ec390_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555788ec390_0, 0, 32;
    %jmp T_27.357;
T_27.358 ; for-loop exit label
    %jmp T_27.331;
T_27.327 ;
    %load/vec4 v0x5555788ec480_0;
    %cmpi/ne 0, 0, 1;
    %jmp/0xz  T_27.363, 4;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x5555788ec560_0, 0, 1;
T_27.363 ;
    %jmp T_27.331;
T_27.328 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555788ec390_0, 0, 32;
T_27.365 ; Top of for-loop
    %load/vec4 v0x5555788ec390_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_27.366, 5;
    %load/vec4 v0x5555788ec480_0;
    %load/vec4 v0x5555788ec390_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_27.370, 9;
    %load/vec4 v0x5555788ec690_0;
    %load/vec4 v0x5555788ec390_0;
    %part/s 1;
    %nor/r;
    %and;
T_27.370;
    %flag_set/vec4 8;
    %jmp/0xz  T_27.368, 8;
    %load/vec4 v0x5555788ec1b0_0;
    %load/vec4 v0x5555788ec390_0;
    %part/s 1;
    %inv;
    %ix/getv/s 4, v0x5555788ec390_0;
    %store/vec4 v0x5555788ec560_0, 4, 1;
T_27.368 ;
T_27.367 ; for-loop step statement
    %load/vec4 v0x5555788ec390_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555788ec390_0, 0, 32;
    %jmp T_27.365;
T_27.366 ; for-loop exit label
    %jmp T_27.331;
T_27.329 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555788ec390_0, 0, 32;
T_27.371 ; Top of for-loop
    %load/vec4 v0x5555788ec390_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_27.372, 5;
    %load/vec4 v0x5555788ec480_0;
    %load/vec4 v0x5555788ec390_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_27.376, 9;
    %load/vec4 v0x5555788ec690_0;
    %load/vec4 v0x5555788ec390_0;
    %part/s 1;
    %and;
T_27.376;
    %flag_set/vec4 8;
    %jmp/0xz  T_27.374, 8;
    %load/vec4 v0x5555788ec1b0_0;
    %load/vec4 v0x5555788ec390_0;
    %part/s 1;
    %inv;
    %ix/getv/s 4, v0x5555788ec390_0;
    %store/vec4 v0x5555788ec560_0, 4, 1;
T_27.374 ;
T_27.373 ; for-loop step statement
    %load/vec4 v0x5555788ec390_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555788ec390_0, 0, 32;
    %jmp T_27.371;
T_27.372 ; for-loop exit label
    %jmp T_27.331;
T_27.331 ;
    %pop/vec4 1;
    %load/vec4 v0x5555788ec560_0;
    %ret/vec4 0, 0, 1;  Assign to get_sw_write_next_value (store_vec4_to_lval)
    %end;
S_0x5555788ec770 .scope autofunction.vec4.s1, "get_sw_write_update" "get_sw_write_update" 8 47, 8 47 0, S_0x5555788e82c0;
 .timescale 0 0;
; Variable get_sw_write_update is vec4 return value of scope S_0x5555788ec770
v0x5555788eca30_0 .var "update", 2 0;
v0x5555788ecb10_0 .var "write_done", 0 0;
v0x5555788ecbb0_0 .var "write_enable", 0 0;
v0x5555788ecc70_0 .var "write_valid", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_s2wto.u_bit_field.get_sw_write_update ;
    %load/vec4 v0x5555788ecc70_0;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x5555788eca30_0, 4, 1;
    %pushi/vec4 1, 0, 1;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x5555788eca30_0, 4, 1;
    %pushi/vec4 1, 0, 1;
    %ix/load 4, 2, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x5555788eca30_0, 4, 1;
    %load/vec4 v0x5555788eca30_0;
    %parti/s 1, 0, 2;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_28.378, 9;
    %load/vec4 v0x5555788eca30_0;
    %parti/s 1, 1, 2;
    %and;
T_28.378;
    %flag_set/vec4 8;
    %flag_get/vec4 8;
    %jmp/0 T_28.377, 8;
    %load/vec4 v0x5555788eca30_0;
    %parti/s 1, 2, 3;
    %and;
T_28.377;
    %ret/vec4 0, 0, 1;  Assign to get_sw_write_update (store_vec4_to_lval)
    %end;
S_0x5555788ee7f0 .scope generate, "g_wden" "g_wden" 7 117, 7 117 0, S_0x5555788bcab0;
 .timescale 0 0;
S_0x5555788ee980 .scope module, "u_bit_field" "rggen_bit_field" 7 123, 8 2 0, S_0x5555788ee7f0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "i_clk";
    .port_info 1 /INPUT 1 "i_rst_n";
    .port_info 2 /INPUT 1 "i_sw_write_valid";
    .port_info 3 /INPUT 1 "i_sw_write_enable";
    .port_info 4 /INPUT 1 "i_sw_read_valid";
    .port_info 5 /INPUT 1 "i_sw_mask";
    .port_info 6 /INPUT 1 "i_sw_write_data";
    .port_info 7 /OUTPUT 1 "o_sw_read_data";
    .port_info 8 /OUTPUT 1 "o_sw_value";
    .port_info 9 /OUTPUT 1 "o_write_trigger";
    .port_info 10 /OUTPUT 1 "o_read_trigger";
    .port_info 11 /INPUT 1 "i_hw_write_enable";
    .port_info 12 /INPUT 1 "i_hw_write_data";
    .port_info 13 /INPUT 1 "i_hw_set";
    .port_info 14 /INPUT 1 "i_hw_clear";
    .port_info 15 /INPUT 1 "i_value";
    .port_info 16 /INPUT 1 "i_mask";
    .port_info 17 /OUTPUT 1 "o_value";
    .port_info 18 /OUTPUT 1 "o_value_unmasked";
P_0x5555788eeb80 .param/l "EXTERNAL_MASK" 0 8 17, C4<0>;
P_0x5555788eebc0 .param/l "EXTERNAL_READ_DATA" 0 8 16, C4<0>;
P_0x5555788eec00 .param/l "HW_ACCESS" 0 8 12, C4<000>;
P_0x5555788eec40 .param/l "HW_CLEAR_WIDTH" 0 8 14, +C4<00000000000000000000000000000001>;
P_0x5555788eec80 .param/l "HW_SET_WIDTH" 0 8 13, +C4<00000000000000000000000000000001>;
P_0x5555788eecc0 .param/l "HW_WRITE_ENABLE_POLARITY" 0 8 11, C4<1>;
P_0x5555788eed00 .param/l "INITIAL_VALUE" 0 8 4, C4<0>;
P_0x5555788eed40 .param/l "PRECEDENCE_ACCESS" 0 8 5, +C4<00000000000000000000000000000001>;
P_0x5555788eed80 .param/l "STORAGE" 0 8 15, C4<1>;
P_0x5555788eedc0 .param/l "SW_READABLE" 1 8 41, C4<1>;
P_0x5555788eee00 .param/l "SW_READ_ACTION" 0 8 6, +C4<00000000000000000000000000000001>;
P_0x5555788eee40 .param/l "SW_READ_UPDATE" 1 8 42, C4<0>;
P_0x5555788eee80 .param/l "SW_WRITABLE" 1 8 40, C4<1>;
P_0x5555788eeec0 .param/l "SW_WRITE_ACTION" 0 8 7, +C4<00000000000000000000000000000001>;
P_0x5555788eef00 .param/l "SW_WRITE_CONTROL" 0 8 8, C4<0>;
P_0x5555788eef40 .param/l "SW_WRITE_ENABLE_POLARITY" 0 8 10, C4<1>;
P_0x5555788eef80 .param/l "SW_WRITE_ONCE" 0 8 9, +C4<00000000000000000000000000000000>;
P_0x5555788eefc0 .param/l "TRIGGER" 0 8 18, +C4<00000000000000000000000000000000>;
P_0x5555788ef000 .param/l "WIDTH" 0 8 3, +C4<00000000000000000000000000000001>;
L_0x555578927a90 .functor BUFZ 1, L_0x5555789279d0, C4<0>, C4<0>, C4<0>;
L_0x555578927b50 .functor BUFZ 1, v0x5555788f0a50_0, C4<0>, C4<0>, C4<0>;
L_0x555578927d50 .functor BUFZ 1, v0x5555788f0a50_0, C4<0>, C4<0>, C4<0>;
L_0x555578927ee0 .functor BUFZ 1, v0x5555788f0a50_0, C4<0>, C4<0>, C4<0>;
v0x5555788f32c0_0 .net "i_clk", 0 0, v0x555578915890_0;  alias, 1 drivers
L_0x7f258a66d570 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x5555788f3380_0 .net "i_hw_clear", 0 0, L_0x7f258a66d570;  1 drivers
L_0x7f258a66d528 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x5555788f3460_0 .net "i_hw_set", 0 0, L_0x7f258a66d528;  1 drivers
L_0x7f258a66d4e0 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x5555788f3520_0 .net "i_hw_write_data", 0 0, L_0x7f258a66d4e0;  1 drivers
L_0x7f258a66d498 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x5555788f3600_0 .net "i_hw_write_enable", 0 0, L_0x7f258a66d498;  1 drivers
L_0x7f258a66d600 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v0x5555788f3710_0 .net "i_mask", 0 0, L_0x7f258a66d600;  1 drivers
v0x5555788f37f0_0 .net "i_rst_n", 0 0, v0x555578915a30_0;  alias, 1 drivers
v0x5555788f3890_0 .net "i_sw_mask", 0 0, L_0x555578927f50;  1 drivers
v0x5555788f3970_0 .net "i_sw_read_valid", 0 0, L_0x555578916c80;  alias, 1 drivers
v0x5555788f3b30_0 .net "i_sw_write_data", 0 0, L_0x555578927ff0;  1 drivers
L_0x7f258a66d450 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v0x5555788f3c10_0 .net "i_sw_write_enable", 0 0, L_0x7f258a66d450;  1 drivers
v0x5555788f3cd0_0 .net "i_sw_write_valid", 0 0, L_0x5555789165f0;  alias, 1 drivers
L_0x7f258a66d5b8 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x5555788f3e00_0 .net "i_value", 0 0, L_0x7f258a66d5b8;  1 drivers
v0x5555788f3ee0_0 .net "o_read_trigger", 0 0, L_0x555578927cb0;  1 drivers
v0x5555788f3fa0_0 .net "o_sw_read_data", 0 0, L_0x555578927a90;  1 drivers
v0x5555788f4080_0 .net "o_sw_value", 0 0, L_0x555578927b50;  1 drivers
v0x5555788f4160_0 .net "o_value", 0 0, L_0x555578927d50;  alias, 1 drivers
v0x5555788f4330_0 .net "o_value_unmasked", 0 0, L_0x555578927ee0;  1 drivers
v0x5555788f43f0_0 .net "o_write_trigger", 0 0, L_0x555578927bc0;  1 drivers
L_0x7f258a66d330 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x5555788f44b0_0 .net "w_hw_update", 0 0, L_0x7f258a66d330;  1 drivers
v0x5555788f4570_0 .net "w_read_data", 0 0, L_0x5555789279d0;  1 drivers
v0x5555788f4650_0 .net "w_sw_update", 1 0, L_0x555578927640;  1 drivers
L_0x7f258a66d378 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x5555788f4730_0 .net "w_sw_write_done", 0 0, L_0x7f258a66d378;  1 drivers
v0x5555788f47f0_0 .net "w_trigger", 1 0, L_0x555578927820;  1 drivers
v0x5555788f48d0_0 .net "w_value", 0 0, v0x5555788f0a50_0;  1 drivers
L_0x7f258a66d2e8 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x555578927640 .concat8 [ 1 1 0 0], L_0x7f258a66d2e8, L_0x5555789276e0;
L_0x7f258a66d3c0 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x7f258a66d408 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x555578927820 .concat8 [ 1 1 0 0], L_0x7f258a66d3c0, L_0x7f258a66d408;
L_0x555578927bc0 .part L_0x555578927820, 0, 1;
L_0x555578927cb0 .part L_0x555578927820, 1, 1;
S_0x5555788efbb0 .scope generate, "g_read_data" "g_read_data" 8 382, 8 382 0, S_0x5555788ee980;
 .timescale 0 0;
L_0x5555789279d0 .functor BUFZ 1, v0x5555788f0a50_0, C4<0>, C4<0>, C4<0>;
S_0x5555788efd90 .scope generate, "g_read_trigger" "g_read_trigger" 8 304, 8 304 0, S_0x5555788ee980;
 .timescale 0 0;
v0x5555788eff90_0 .net/2u *"_ivl_0", 0 0, L_0x7f258a66d408;  1 drivers
S_0x5555788f0070 .scope generate, "g_sw_read_update" "g_sw_read_update" 8 245, 8 245 0, S_0x5555788ee980;
 .timescale 0 0;
v0x5555788f0280_0 .net/2u *"_ivl_0", 0 0, L_0x7f258a66d2e8;  1 drivers
S_0x5555788f0360 .scope generate, "g_sw_write_done" "g_sw_write_done" 8 268, 8 268 0, S_0x5555788ee980;
 .timescale 0 0;
S_0x5555788f0540 .scope generate, "g_sw_write_update" "g_sw_write_update" 8 252, 8 252 0, S_0x5555788ee980;
 .timescale 0 0;
v0x5555788f0770_0 .net *"_ivl_1", 0 0, L_0x5555789276e0;  1 drivers
L_0x5555789276e0 .ufunc/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_wden.u_bit_field.get_sw_write_update, 1, L_0x5555789165f0, L_0x7f258a66d450, L_0x7f258a66d378 (v0x5555788f3190_0, v0x5555788f30d0_0, v0x5555788f3030_0) S_0x5555788f2c90;
S_0x5555788f0870 .scope generate, "g_value" "g_value" 8 326, 8 326 0, S_0x5555788ee980;
 .timescale 0 0;
v0x5555788f0a50_0 .var "r_value", 0 0;
S_0x5555788f0b50 .scope generate, "g_write_trigger" "g_write_trigger" 8 287, 8 287 0, S_0x5555788ee980;
 .timescale 0 0;
v0x5555788f0d30_0 .net/2u *"_ivl_0", 0 0, L_0x7f258a66d3c0;  1 drivers
S_0x5555788f0e30 .scope generate, "genblk3" "genblk3" 8 259, 8 259 0, S_0x5555788ee980;
 .timescale 0 0;
S_0x5555788f1010 .scope autofunction.vec4.s1, "get_hw_next_value" "get_hw_next_value" 8 177, 8 177 0, S_0x5555788ee980;
 .timescale 0 0;
v0x5555788f11f0_0 .var "clear", 0 0;
v0x5555788f12f0_0 .var "current_value", 0 0;
; Variable get_hw_next_value is vec4 return value of scope S_0x5555788f1010
v0x5555788f1490_0 .var/i "i", 31 0;
v0x5555788f1570_0 .var "set", 0 0;
v0x5555788f1650 .array "set_clear", 1 0, 0 0;
v0x5555788f1710_0 .var "value", 0 0;
v0x5555788f17f0_0 .var "write_data", 0 0;
v0x5555788f18d0_0 .var "write_enable", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_wden.u_bit_field.get_hw_next_value ;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x5555788f1650, 4, 0;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x5555788f1650, 4, 0;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555788f1490_0, 0, 32;
T_29.379 ; Top of for-loop
    %load/vec4 v0x5555788f1490_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_29.380, 5;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x5555788f1650, 4;
    %load/vec4 v0x5555788f1490_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_29.382, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x5555788f1490_0;
    %store/vec4 v0x5555788f1710_0, 4, 1;
    %jmp T_29.383;
T_29.382 ;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x5555788f1650, 4;
    %load/vec4 v0x5555788f1490_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_29.384, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x5555788f1490_0;
    %store/vec4 v0x5555788f1710_0, 4, 1;
    %jmp T_29.385;
T_29.384 ;
    %load/vec4 v0x5555788f12f0_0;
    %load/vec4 v0x5555788f1490_0;
    %part/s 1;
    %ix/getv/s 4, v0x5555788f1490_0;
    %store/vec4 v0x5555788f1710_0, 4, 1;
T_29.385 ;
T_29.383 ;
T_29.381 ; for-loop step statement
    %load/vec4 v0x5555788f1490_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555788f1490_0, 0, 32;
    %jmp T_29.379;
T_29.380 ; for-loop exit label
    %load/vec4 v0x5555788f1710_0;
    %ret/vec4 0, 0, 1;  Assign to get_hw_next_value (store_vec4_to_lval)
    %end;
S_0x5555788f1990 .scope autofunction.vec4.s1, "get_hw_update" "get_hw_update" 8 72, 8 72 0, S_0x5555788ee980;
 .timescale 0 0;
v0x5555788f1b20_0 .var "clear", 0 0;
; Variable get_hw_update is vec4 return value of scope S_0x5555788f1990
v0x5555788f1ce0_0 .var "set", 0 0;
v0x5555788f1da0_0 .var "update", 2 0;
v0x5555788f1e80_0 .var "write_enable", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_wden.u_bit_field.get_hw_update ;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x5555788f1da0_0, 4, 1;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x5555788f1da0_0, 4, 1;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 2, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x5555788f1da0_0, 4, 1;
    %load/vec4 v0x5555788f1da0_0;
    %parti/s 1, 0, 2;
    %flag_set/vec4 8;
    %jmp/1 T_30.387, 8;
    %load/vec4 v0x5555788f1da0_0;
    %parti/s 1, 1, 2;
    %flag_set/vec4 9;
    %flag_or 8, 9;
T_30.387;
    %flag_get/vec4 8;
    %jmp/1 T_30.386, 8;
    %load/vec4 v0x5555788f1da0_0;
    %parti/s 1, 2, 3;
    %or;
T_30.386;
    %ret/vec4 0, 0, 1;  Assign to get_hw_update (store_vec4_to_lval)
    %end;
S_0x5555788f1f90 .scope autofunction.vec4.s1, "get_sw_read_next_value" "get_sw_read_next_value" 8 86, 8 86 0, S_0x5555788ee980;
 .timescale 0 0;
v0x5555788f2170_0 .var "current_value", 0 0;
; Variable get_sw_read_next_value is vec4 return value of scope S_0x5555788f1f90
v0x5555788f2350_0 .var "mask", 0 0;
v0x5555788f2410_0 .var "value", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_wden.u_bit_field.get_sw_read_next_value ;
    %pushi/vec4 1, 0, 32;
    %dup/vec4;
    %pushi/vec4 2, 0, 32;
    %cmp/u;
    %jmp/1 T_31.388, 6;
    %dup/vec4;
    %pushi/vec4 3, 0, 32;
    %cmp/u;
    %jmp/1 T_31.389, 6;
    %load/vec4 v0x5555788f2170_0;
    %store/vec4 v0x5555788f2410_0, 0, 1;
    %jmp T_31.391;
T_31.388 ;
    %load/vec4 v0x5555788f2350_0;
    %cmpi/ne 0, 0, 1;
    %flag_mov 8, 4;
    %jmp/0 T_31.392, 8;
    %pushi/vec4 0, 0, 1;
    %jmp/1 T_31.393, 8;
T_31.392 ; End of true expr.
    %load/vec4 v0x5555788f2170_0;
    %jmp/0 T_31.393, 8;
 ; End of false expr.
    %blend;
T_31.393;
    %store/vec4 v0x5555788f2410_0, 0, 1;
    %jmp T_31.391;
T_31.389 ;
    %load/vec4 v0x5555788f2350_0;
    %cmpi/ne 0, 0, 1;
    %flag_mov 8, 4;
    %jmp/0 T_31.394, 8;
    %pushi/vec4 1, 0, 1;
    %jmp/1 T_31.395, 8;
T_31.394 ; End of true expr.
    %load/vec4 v0x5555788f2170_0;
    %jmp/0 T_31.395, 8;
 ; End of false expr.
    %blend;
T_31.395;
    %store/vec4 v0x5555788f2410_0, 0, 1;
    %jmp T_31.391;
T_31.391 ;
    %pop/vec4 1;
    %load/vec4 v0x5555788f2410_0;
    %ret/vec4 0, 0, 1;  Assign to get_sw_read_next_value (store_vec4_to_lval)
    %end;
S_0x5555788f24f0 .scope autofunction.vec4.s1, "get_sw_write_next_value" "get_sw_write_next_value" 8 101, 8 101 0, S_0x5555788ee980;
 .timescale 0 0;
v0x5555788f26d0_0 .var "current_value", 0 0;
; Variable get_sw_write_next_value is vec4 return value of scope S_0x5555788f24f0
v0x5555788f28b0_0 .var/i "i", 31 0;
v0x5555788f29a0_0 .var "mask", 0 0;
v0x5555788f2a80_0 .var "value", 0 0;
v0x5555788f2bb0_0 .var "write_data", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_wden.u_bit_field.get_sw_write_next_value ;
    %load/vec4 v0x5555788f26d0_0;
    %store/vec4 v0x5555788f2a80_0, 0, 1;
    %pushi/vec4 1, 0, 32;
    %dup/vec4;
    %pushi/vec4 1, 0, 32;
    %cmp/u;
    %jmp/1 T_32.396, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 32;
    %cmp/u;
    %jmp/1 T_32.397, 6;
    %dup/vec4;
    %pushi/vec4 3, 0, 32;
    %cmp/u;
    %jmp/1 T_32.398, 6;
    %dup/vec4;
    %pushi/vec4 4, 0, 32;
    %cmp/u;
    %jmp/1 T_32.399, 6;
    %dup/vec4;
    %pushi/vec4 5, 0, 32;
    %cmp/u;
    %jmp/1 T_32.400, 6;
    %dup/vec4;
    %pushi/vec4 6, 0, 32;
    %cmp/u;
    %jmp/1 T_32.401, 6;
    %dup/vec4;
    %pushi/vec4 7, 0, 32;
    %cmp/u;
    %jmp/1 T_32.402, 6;
    %dup/vec4;
    %pushi/vec4 8, 0, 32;
    %cmp/u;
    %jmp/1 T_32.403, 6;
    %dup/vec4;
    %pushi/vec4 9, 0, 32;
    %cmp/u;
    %jmp/1 T_32.404, 6;
    %jmp T_32.406;
T_32.396 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555788f28b0_0, 0, 32;
T_32.407 ; Top of for-loop
    %load/vec4 v0x5555788f28b0_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_32.408, 5;
    %load/vec4 v0x5555788f29a0_0;
    %load/vec4 v0x5555788f28b0_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_32.410, 8;
    %load/vec4 v0x5555788f2bb0_0;
    %load/vec4 v0x5555788f28b0_0;
    %part/s 1;
    %ix/getv/s 4, v0x5555788f28b0_0;
    %store/vec4 v0x5555788f2a80_0, 4, 1;
T_32.410 ;
T_32.409 ; for-loop step statement
    %load/vec4 v0x5555788f28b0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555788f28b0_0, 0, 32;
    %jmp T_32.407;
T_32.408 ; for-loop exit label
    %jmp T_32.406;
T_32.397 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555788f28b0_0, 0, 32;
T_32.412 ; Top of for-loop
    %load/vec4 v0x5555788f28b0_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_32.413, 5;
    %load/vec4 v0x5555788f29a0_0;
    %load/vec4 v0x5555788f28b0_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_32.417, 9;
    %load/vec4 v0x5555788f2bb0_0;
    %load/vec4 v0x5555788f28b0_0;
    %part/s 1;
    %nor/r;
    %and;
T_32.417;
    %flag_set/vec4 8;
    %jmp/0xz  T_32.415, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x5555788f28b0_0;
    %store/vec4 v0x5555788f2a80_0, 4, 1;
T_32.415 ;
T_32.414 ; for-loop step statement
    %load/vec4 v0x5555788f28b0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555788f28b0_0, 0, 32;
    %jmp T_32.412;
T_32.413 ; for-loop exit label
    %jmp T_32.406;
T_32.398 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555788f28b0_0, 0, 32;
T_32.418 ; Top of for-loop
    %load/vec4 v0x5555788f28b0_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_32.419, 5;
    %load/vec4 v0x5555788f29a0_0;
    %load/vec4 v0x5555788f28b0_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_32.423, 9;
    %load/vec4 v0x5555788f2bb0_0;
    %load/vec4 v0x5555788f28b0_0;
    %part/s 1;
    %and;
T_32.423;
    %flag_set/vec4 8;
    %jmp/0xz  T_32.421, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x5555788f28b0_0;
    %store/vec4 v0x5555788f2a80_0, 4, 1;
T_32.421 ;
T_32.420 ; for-loop step statement
    %load/vec4 v0x5555788f28b0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555788f28b0_0, 0, 32;
    %jmp T_32.418;
T_32.419 ; for-loop exit label
    %jmp T_32.406;
T_32.399 ;
    %load/vec4 v0x5555788f29a0_0;
    %cmpi/ne 0, 0, 1;
    %jmp/0xz  T_32.424, 4;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x5555788f2a80_0, 0, 1;
T_32.424 ;
    %jmp T_32.406;
T_32.400 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555788f28b0_0, 0, 32;
T_32.426 ; Top of for-loop
    %load/vec4 v0x5555788f28b0_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_32.427, 5;
    %load/vec4 v0x5555788f29a0_0;
    %load/vec4 v0x5555788f28b0_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_32.431, 9;
    %load/vec4 v0x5555788f2bb0_0;
    %load/vec4 v0x5555788f28b0_0;
    %part/s 1;
    %nor/r;
    %and;
T_32.431;
    %flag_set/vec4 8;
    %jmp/0xz  T_32.429, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x5555788f28b0_0;
    %store/vec4 v0x5555788f2a80_0, 4, 1;
T_32.429 ;
T_32.428 ; for-loop step statement
    %load/vec4 v0x5555788f28b0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555788f28b0_0, 0, 32;
    %jmp T_32.426;
T_32.427 ; for-loop exit label
    %jmp T_32.406;
T_32.401 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555788f28b0_0, 0, 32;
T_32.432 ; Top of for-loop
    %load/vec4 v0x5555788f28b0_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_32.433, 5;
    %load/vec4 v0x5555788f29a0_0;
    %load/vec4 v0x5555788f28b0_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_32.437, 9;
    %load/vec4 v0x5555788f2bb0_0;
    %load/vec4 v0x5555788f28b0_0;
    %part/s 1;
    %and;
T_32.437;
    %flag_set/vec4 8;
    %jmp/0xz  T_32.435, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x5555788f28b0_0;
    %store/vec4 v0x5555788f2a80_0, 4, 1;
T_32.435 ;
T_32.434 ; for-loop step statement
    %load/vec4 v0x5555788f28b0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555788f28b0_0, 0, 32;
    %jmp T_32.432;
T_32.433 ; for-loop exit label
    %jmp T_32.406;
T_32.402 ;
    %load/vec4 v0x5555788f29a0_0;
    %cmpi/ne 0, 0, 1;
    %jmp/0xz  T_32.438, 4;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x5555788f2a80_0, 0, 1;
T_32.438 ;
    %jmp T_32.406;
T_32.403 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555788f28b0_0, 0, 32;
T_32.440 ; Top of for-loop
    %load/vec4 v0x5555788f28b0_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_32.441, 5;
    %load/vec4 v0x5555788f29a0_0;
    %load/vec4 v0x5555788f28b0_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_32.445, 9;
    %load/vec4 v0x5555788f2bb0_0;
    %load/vec4 v0x5555788f28b0_0;
    %part/s 1;
    %nor/r;
    %and;
T_32.445;
    %flag_set/vec4 8;
    %jmp/0xz  T_32.443, 8;
    %load/vec4 v0x5555788f26d0_0;
    %load/vec4 v0x5555788f28b0_0;
    %part/s 1;
    %inv;
    %ix/getv/s 4, v0x5555788f28b0_0;
    %store/vec4 v0x5555788f2a80_0, 4, 1;
T_32.443 ;
T_32.442 ; for-loop step statement
    %load/vec4 v0x5555788f28b0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555788f28b0_0, 0, 32;
    %jmp T_32.440;
T_32.441 ; for-loop exit label
    %jmp T_32.406;
T_32.404 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555788f28b0_0, 0, 32;
T_32.446 ; Top of for-loop
    %load/vec4 v0x5555788f28b0_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_32.447, 5;
    %load/vec4 v0x5555788f29a0_0;
    %load/vec4 v0x5555788f28b0_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_32.451, 9;
    %load/vec4 v0x5555788f2bb0_0;
    %load/vec4 v0x5555788f28b0_0;
    %part/s 1;
    %and;
T_32.451;
    %flag_set/vec4 8;
    %jmp/0xz  T_32.449, 8;
    %load/vec4 v0x5555788f26d0_0;
    %load/vec4 v0x5555788f28b0_0;
    %part/s 1;
    %inv;
    %ix/getv/s 4, v0x5555788f28b0_0;
    %store/vec4 v0x5555788f2a80_0, 4, 1;
T_32.449 ;
T_32.448 ; for-loop step statement
    %load/vec4 v0x5555788f28b0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555788f28b0_0, 0, 32;
    %jmp T_32.446;
T_32.447 ; for-loop exit label
    %jmp T_32.406;
T_32.406 ;
    %pop/vec4 1;
    %load/vec4 v0x5555788f2a80_0;
    %ret/vec4 0, 0, 1;  Assign to get_sw_write_next_value (store_vec4_to_lval)
    %end;
S_0x5555788f2c90 .scope autofunction.vec4.s1, "get_sw_write_update" "get_sw_write_update" 8 47, 8 47 0, S_0x5555788ee980;
 .timescale 0 0;
; Variable get_sw_write_update is vec4 return value of scope S_0x5555788f2c90
v0x5555788f2f50_0 .var "update", 2 0;
v0x5555788f3030_0 .var "write_done", 0 0;
v0x5555788f30d0_0 .var "write_enable", 0 0;
v0x5555788f3190_0 .var "write_valid", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_wden.u_bit_field.get_sw_write_update ;
    %load/vec4 v0x5555788f3190_0;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x5555788f2f50_0, 4, 1;
    %pushi/vec4 1, 0, 1;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x5555788f2f50_0, 4, 1;
    %pushi/vec4 1, 0, 1;
    %ix/load 4, 2, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x5555788f2f50_0, 4, 1;
    %load/vec4 v0x5555788f2f50_0;
    %parti/s 1, 0, 2;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_33.453, 9;
    %load/vec4 v0x5555788f2f50_0;
    %parti/s 1, 1, 2;
    %and;
T_33.453;
    %flag_set/vec4 8;
    %flag_get/vec4 8;
    %jmp/0 T_33.452, 8;
    %load/vec4 v0x5555788f2f50_0;
    %parti/s 1, 2, 3;
    %and;
T_33.452;
    %ret/vec4 0, 0, 1;  Assign to get_sw_write_update (store_vec4_to_lval)
    %end;
S_0x5555788f4cb0 .scope generate, "g_wtocnt" "g_wtocnt" 7 239, 7 239 0, S_0x5555788bcab0;
 .timescale 0 0;
S_0x5555788f4e40 .scope module, "u_bit_field" "rggen_bit_field" 7 245, 8 2 0, S_0x5555788f4cb0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "i_clk";
    .port_info 1 /INPUT 1 "i_rst_n";
    .port_info 2 /INPUT 1 "i_sw_write_valid";
    .port_info 3 /INPUT 1 "i_sw_write_enable";
    .port_info 4 /INPUT 1 "i_sw_read_valid";
    .port_info 5 /INPUT 10 "i_sw_mask";
    .port_info 6 /INPUT 10 "i_sw_write_data";
    .port_info 7 /OUTPUT 10 "o_sw_read_data";
    .port_info 8 /OUTPUT 10 "o_sw_value";
    .port_info 9 /OUTPUT 1 "o_write_trigger";
    .port_info 10 /OUTPUT 1 "o_read_trigger";
    .port_info 11 /INPUT 1 "i_hw_write_enable";
    .port_info 12 /INPUT 10 "i_hw_write_data";
    .port_info 13 /INPUT 10 "i_hw_set";
    .port_info 14 /INPUT 10 "i_hw_clear";
    .port_info 15 /INPUT 10 "i_value";
    .port_info 16 /INPUT 10 "i_mask";
    .port_info 17 /OUTPUT 10 "o_value";
    .port_info 18 /OUTPUT 10 "o_value_unmasked";
P_0x5555788f4ff0 .param/l "EXTERNAL_MASK" 0 8 17, C4<0>;
P_0x5555788f5030 .param/l "EXTERNAL_READ_DATA" 0 8 16, C4<0>;
P_0x5555788f5070 .param/l "HW_ACCESS" 0 8 12, C4<000>;
P_0x5555788f50b0 .param/l "HW_CLEAR_WIDTH" 0 8 14, +C4<00000000000000000000000000001010>;
P_0x5555788f50f0 .param/l "HW_SET_WIDTH" 0 8 13, +C4<00000000000000000000000000001010>;
P_0x5555788f5130 .param/l "HW_WRITE_ENABLE_POLARITY" 0 8 11, C4<1>;
P_0x5555788f5170 .param/l "INITIAL_VALUE" 0 8 4, C4<1111111111>;
P_0x5555788f51b0 .param/l "PRECEDENCE_ACCESS" 0 8 5, +C4<00000000000000000000000000000001>;
P_0x5555788f51f0 .param/l "STORAGE" 0 8 15, C4<1>;
P_0x5555788f5230 .param/l "SW_READABLE" 1 8 41, C4<1>;
P_0x5555788f5270 .param/l "SW_READ_ACTION" 0 8 6, +C4<00000000000000000000000000000001>;
P_0x5555788f52b0 .param/l "SW_READ_UPDATE" 1 8 42, C4<0>;
P_0x5555788f52f0 .param/l "SW_WRITABLE" 1 8 40, C4<1>;
P_0x5555788f5330 .param/l "SW_WRITE_ACTION" 0 8 7, +C4<00000000000000000000000000000001>;
P_0x5555788f5370 .param/l "SW_WRITE_CONTROL" 0 8 8, C4<0>;
P_0x5555788f53b0 .param/l "SW_WRITE_ENABLE_POLARITY" 0 8 10, C4<1>;
P_0x5555788f53f0 .param/l "SW_WRITE_ONCE" 0 8 9, +C4<00000000000000000000000000000000>;
P_0x5555788f5430 .param/l "TRIGGER" 0 8 18, +C4<00000000000000000000000000000000>;
P_0x5555788f5470 .param/l "WIDTH" 0 8 3, +C4<00000000000000000000000000001010>;
L_0x55557892b8b0 .functor BUFZ 10, L_0x55557892b7c0, C4<0000000000>, C4<0000000000>, C4<0000000000>;
L_0x55557892b970 .functor BUFZ 10, v0x5555788f7010_0, C4<0000000000>, C4<0000000000>, C4<0000000000>;
L_0x55557892bbd0 .functor BUFZ 10, v0x5555788f7010_0, C4<0000000000>, C4<0000000000>, C4<0000000000>;
L_0x55557892bd60 .functor BUFZ 10, v0x5555788f7010_0, C4<0000000000>, C4<0000000000>, C4<0000000000>;
v0x5555788f9940_0 .net "i_clk", 0 0, v0x555578915890_0;  alias, 1 drivers
L_0x7f258a66e0b0 .functor BUFT 1, C4<0000000000>, C4<0>, C4<0>, C4<0>;
v0x5555788f9a00_0 .net "i_hw_clear", 9 0, L_0x7f258a66e0b0;  1 drivers
L_0x7f258a66e068 .functor BUFT 1, C4<0000000000>, C4<0>, C4<0>, C4<0>;
v0x5555788f9ae0_0 .net "i_hw_set", 9 0, L_0x7f258a66e068;  1 drivers
L_0x7f258a66e020 .functor BUFT 1, C4<0000000000>, C4<0>, C4<0>, C4<0>;
v0x5555788f9ba0_0 .net "i_hw_write_data", 9 0, L_0x7f258a66e020;  1 drivers
L_0x7f258a66dfd8 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x5555788f9c80_0 .net "i_hw_write_enable", 0 0, L_0x7f258a66dfd8;  1 drivers
L_0x7f258a66e140 .functor BUFT 1, C4<1111111111>, C4<0>, C4<0>, C4<0>;
v0x5555788f9d90_0 .net "i_mask", 9 0, L_0x7f258a66e140;  1 drivers
v0x5555788f9e70_0 .net "i_rst_n", 0 0, v0x555578915a30_0;  alias, 1 drivers
v0x5555788f9f10_0 .net "i_sw_mask", 9 0, L_0x55557892be30;  1 drivers
v0x5555788f9ff0_0 .net "i_sw_read_valid", 0 0, L_0x555578916c80;  alias, 1 drivers
v0x5555788fa120_0 .net "i_sw_write_data", 9 0, L_0x55557892bed0;  1 drivers
L_0x7f258a66df90 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v0x5555788fa200_0 .net "i_sw_write_enable", 0 0, L_0x7f258a66df90;  1 drivers
v0x5555788fa2c0_0 .net "i_sw_write_valid", 0 0, L_0x5555789165f0;  alias, 1 drivers
L_0x7f258a66e0f8 .functor BUFT 1, C4<0000000000>, C4<0>, C4<0>, C4<0>;
v0x5555788fa360_0 .net "i_value", 9 0, L_0x7f258a66e0f8;  1 drivers
v0x5555788fa440_0 .net "o_read_trigger", 0 0, L_0x55557892bb00;  1 drivers
v0x5555788fa500_0 .net "o_sw_read_data", 9 0, L_0x55557892b8b0;  1 drivers
v0x5555788fa5e0_0 .net "o_sw_value", 9 0, L_0x55557892b970;  1 drivers
v0x5555788fa6c0_0 .net "o_value", 9 0, L_0x55557892bbd0;  alias, 1 drivers
v0x5555788fa890_0 .net "o_value_unmasked", 9 0, L_0x55557892bd60;  1 drivers
v0x5555788fa950_0 .net "o_write_trigger", 0 0, L_0x55557892b9e0;  1 drivers
L_0x7f258a66de70 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x5555788faa10_0 .net "w_hw_update", 0 0, L_0x7f258a66de70;  1 drivers
v0x5555788faad0_0 .net "w_read_data", 9 0, L_0x55557892b7c0;  1 drivers
v0x5555788fabb0_0 .net "w_sw_update", 1 0, L_0x55557892b180;  1 drivers
L_0x7f258a66deb8 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x5555788fac90_0 .net "w_sw_write_done", 0 0, L_0x7f258a66deb8;  1 drivers
v0x5555788fad50_0 .net "w_trigger", 1 0, L_0x55557892b5b0;  1 drivers
v0x5555788fae30_0 .net "w_value", 9 0, v0x5555788f7010_0;  1 drivers
L_0x7f258a66dde0 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x55557892b180 .concat8 [ 1 1 0 0], L_0x7f258a66dde0, L_0x55557892b3f0;
L_0x7f258a66df00 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x7f258a66df48 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x55557892b5b0 .concat8 [ 1 1 0 0], L_0x7f258a66df00, L_0x7f258a66df48;
L_0x55557892b9e0 .part L_0x55557892b5b0, 0, 1;
L_0x55557892bb00 .part L_0x55557892b5b0, 1, 1;
S_0x5555788f6020 .scope generate, "g_read_data" "g_read_data" 8 382, 8 382 0, S_0x5555788f4e40;
 .timescale 0 0;
L_0x55557892b7c0 .functor BUFZ 10, v0x5555788f7010_0, C4<0000000000>, C4<0000000000>, C4<0000000000>;
S_0x5555788f61b0 .scope generate, "g_read_trigger" "g_read_trigger" 8 304, 8 304 0, S_0x5555788f4e40;
 .timescale 0 0;
v0x5555788f63b0_0 .net/2u *"_ivl_0", 0 0, L_0x7f258a66df48;  1 drivers
S_0x5555788f6490 .scope generate, "g_sw_read_update" "g_sw_read_update" 8 245, 8 245 0, S_0x5555788f4e40;
 .timescale 0 0;
v0x5555788f66a0_0 .net/2u *"_ivl_0", 0 0, L_0x7f258a66dde0;  1 drivers
S_0x5555788f6780 .scope generate, "g_sw_write_done" "g_sw_write_done" 8 268, 8 268 0, S_0x5555788f4e40;
 .timescale 0 0;
S_0x5555788f6960 .scope generate, "g_sw_write_update" "g_sw_write_update" 8 252, 8 252 0, S_0x5555788f4e40;
 .timescale 0 0;
v0x5555788f6b90_0 .net *"_ivl_0", 9 0, L_0x55557892b2a0;  1 drivers
L_0x7f258a66de28 .functor BUFT 1, C4<000000000>, C4<0>, C4<0>, C4<0>;
v0x5555788f6c90_0 .net *"_ivl_3", 8 0, L_0x7f258a66de28;  1 drivers
v0x5555788f6d70_0 .net *"_ivl_5", 0 0, L_0x55557892b3f0;  1 drivers
L_0x55557892b2a0 .concat [ 1 9 0 0], L_0x5555789165f0, L_0x7f258a66de28;
L_0x55557892b3f0 .ufunc/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_wtocnt.u_bit_field.get_sw_write_update, 1, L_0x55557892b2a0, L_0x7f258a66df90, L_0x7f258a66deb8 (v0x5555788f9810_0, v0x5555788f9750_0, v0x5555788f96b0_0) S_0x5555788f9310;
S_0x5555788f6e30 .scope generate, "g_value" "g_value" 8 326, 8 326 0, S_0x5555788f4e40;
 .timescale 0 0;
v0x5555788f7010_0 .var "r_value", 9 0;
S_0x5555788f7110 .scope generate, "g_write_trigger" "g_write_trigger" 8 287, 8 287 0, S_0x5555788f4e40;
 .timescale 0 0;
v0x5555788f72f0_0 .net/2u *"_ivl_0", 0 0, L_0x7f258a66df00;  1 drivers
S_0x5555788f73f0 .scope generate, "genblk3" "genblk3" 8 259, 8 259 0, S_0x5555788f4e40;
 .timescale 0 0;
S_0x5555788f75d0 .scope autofunction.vec4.s10, "get_hw_next_value" "get_hw_next_value" 8 177, 8 177 0, S_0x5555788f4e40;
 .timescale 0 0;
v0x5555788f77b0_0 .var "clear", 9 0;
v0x5555788f78b0_0 .var "current_value", 9 0;
; Variable get_hw_next_value is vec4 return value of scope S_0x5555788f75d0
v0x5555788f7a80_0 .var/i "i", 31 0;
v0x5555788f7b60_0 .var "set", 9 0;
v0x5555788f7c40 .array "set_clear", 1 0, 9 0;
v0x5555788f7d00_0 .var "value", 9 0;
v0x5555788f7de0_0 .var "write_data", 9 0;
v0x5555788f7ec0_0 .var "write_enable", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_wtocnt.u_bit_field.get_hw_next_value ;
    %pushi/vec4 0, 0, 10;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x5555788f7c40, 4, 0;
    %pushi/vec4 0, 0, 10;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x5555788f7c40, 4, 0;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555788f7a80_0, 0, 32;
T_34.454 ; Top of for-loop
    %load/vec4 v0x5555788f7a80_0;
    %cmpi/s 10, 0, 32;
	  %jmp/0xz T_34.455, 5;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x5555788f7c40, 4;
    %load/vec4 v0x5555788f7a80_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_34.457, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x5555788f7a80_0;
    %store/vec4 v0x5555788f7d00_0, 4, 1;
    %jmp T_34.458;
T_34.457 ;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x5555788f7c40, 4;
    %load/vec4 v0x5555788f7a80_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_34.459, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x5555788f7a80_0;
    %store/vec4 v0x5555788f7d00_0, 4, 1;
    %jmp T_34.460;
T_34.459 ;
    %load/vec4 v0x5555788f78b0_0;
    %load/vec4 v0x5555788f7a80_0;
    %part/s 1;
    %ix/getv/s 4, v0x5555788f7a80_0;
    %store/vec4 v0x5555788f7d00_0, 4, 1;
T_34.460 ;
T_34.458 ;
T_34.456 ; for-loop step statement
    %load/vec4 v0x5555788f7a80_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555788f7a80_0, 0, 32;
    %jmp T_34.454;
T_34.455 ; for-loop exit label
    %load/vec4 v0x5555788f7d00_0;
    %ret/vec4 0, 0, 10;  Assign to get_hw_next_value (store_vec4_to_lval)
    %end;
S_0x5555788f8010 .scope autofunction.vec4.s1, "get_hw_update" "get_hw_update" 8 72, 8 72 0, S_0x5555788f4e40;
 .timescale 0 0;
v0x5555788f81a0_0 .var "clear", 9 0;
; Variable get_hw_update is vec4 return value of scope S_0x5555788f8010
v0x5555788f8360_0 .var "set", 9 0;
v0x5555788f8420_0 .var "update", 2 0;
v0x5555788f8500_0 .var "write_enable", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_wtocnt.u_bit_field.get_hw_update ;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x5555788f8420_0, 4, 1;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x5555788f8420_0, 4, 1;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 2, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x5555788f8420_0, 4, 1;
    %load/vec4 v0x5555788f8420_0;
    %parti/s 1, 0, 2;
    %flag_set/vec4 8;
    %jmp/1 T_35.462, 8;
    %load/vec4 v0x5555788f8420_0;
    %parti/s 1, 1, 2;
    %flag_set/vec4 9;
    %flag_or 8, 9;
T_35.462;
    %flag_get/vec4 8;
    %jmp/1 T_35.461, 8;
    %load/vec4 v0x5555788f8420_0;
    %parti/s 1, 2, 3;
    %or;
T_35.461;
    %ret/vec4 0, 0, 1;  Assign to get_hw_update (store_vec4_to_lval)
    %end;
S_0x5555788f8610 .scope autofunction.vec4.s10, "get_sw_read_next_value" "get_sw_read_next_value" 8 86, 8 86 0, S_0x5555788f4e40;
 .timescale 0 0;
v0x5555788f87f0_0 .var "current_value", 9 0;
; Variable get_sw_read_next_value is vec4 return value of scope S_0x5555788f8610
v0x5555788f89d0_0 .var "mask", 9 0;
v0x5555788f8a90_0 .var "value", 9 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_wtocnt.u_bit_field.get_sw_read_next_value ;
    %pushi/vec4 1, 0, 32;
    %dup/vec4;
    %pushi/vec4 2, 0, 32;
    %cmp/u;
    %jmp/1 T_36.463, 6;
    %dup/vec4;
    %pushi/vec4 3, 0, 32;
    %cmp/u;
    %jmp/1 T_36.464, 6;
    %load/vec4 v0x5555788f87f0_0;
    %store/vec4 v0x5555788f8a90_0, 0, 10;
    %jmp T_36.466;
T_36.463 ;
    %load/vec4 v0x5555788f89d0_0;
    %cmpi/ne 0, 0, 10;
    %flag_mov 8, 4;
    %jmp/0 T_36.467, 8;
    %pushi/vec4 0, 0, 10;
    %jmp/1 T_36.468, 8;
T_36.467 ; End of true expr.
    %load/vec4 v0x5555788f87f0_0;
    %jmp/0 T_36.468, 8;
 ; End of false expr.
    %blend;
T_36.468;
    %store/vec4 v0x5555788f8a90_0, 0, 10;
    %jmp T_36.466;
T_36.464 ;
    %load/vec4 v0x5555788f89d0_0;
    %cmpi/ne 0, 0, 10;
    %flag_mov 8, 4;
    %jmp/0 T_36.469, 8;
    %pushi/vec4 1023, 0, 10;
    %jmp/1 T_36.470, 8;
T_36.469 ; End of true expr.
    %load/vec4 v0x5555788f87f0_0;
    %jmp/0 T_36.470, 8;
 ; End of false expr.
    %blend;
T_36.470;
    %store/vec4 v0x5555788f8a90_0, 0, 10;
    %jmp T_36.466;
T_36.466 ;
    %pop/vec4 1;
    %load/vec4 v0x5555788f8a90_0;
    %ret/vec4 0, 0, 10;  Assign to get_sw_read_next_value (store_vec4_to_lval)
    %end;
S_0x5555788f8b70 .scope autofunction.vec4.s10, "get_sw_write_next_value" "get_sw_write_next_value" 8 101, 8 101 0, S_0x5555788f4e40;
 .timescale 0 0;
v0x5555788f8d50_0 .var "current_value", 9 0;
; Variable get_sw_write_next_value is vec4 return value of scope S_0x5555788f8b70
v0x5555788f8f30_0 .var/i "i", 31 0;
v0x5555788f9020_0 .var "mask", 9 0;
v0x5555788f9100_0 .var "value", 9 0;
v0x5555788f9230_0 .var "write_data", 9 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_wtocnt.u_bit_field.get_sw_write_next_value ;
    %load/vec4 v0x5555788f8d50_0;
    %store/vec4 v0x5555788f9100_0, 0, 10;
    %pushi/vec4 1, 0, 32;
    %dup/vec4;
    %pushi/vec4 1, 0, 32;
    %cmp/u;
    %jmp/1 T_37.471, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 32;
    %cmp/u;
    %jmp/1 T_37.472, 6;
    %dup/vec4;
    %pushi/vec4 3, 0, 32;
    %cmp/u;
    %jmp/1 T_37.473, 6;
    %dup/vec4;
    %pushi/vec4 4, 0, 32;
    %cmp/u;
    %jmp/1 T_37.474, 6;
    %dup/vec4;
    %pushi/vec4 5, 0, 32;
    %cmp/u;
    %jmp/1 T_37.475, 6;
    %dup/vec4;
    %pushi/vec4 6, 0, 32;
    %cmp/u;
    %jmp/1 T_37.476, 6;
    %dup/vec4;
    %pushi/vec4 7, 0, 32;
    %cmp/u;
    %jmp/1 T_37.477, 6;
    %dup/vec4;
    %pushi/vec4 8, 0, 32;
    %cmp/u;
    %jmp/1 T_37.478, 6;
    %dup/vec4;
    %pushi/vec4 9, 0, 32;
    %cmp/u;
    %jmp/1 T_37.479, 6;
    %jmp T_37.481;
T_37.471 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555788f8f30_0, 0, 32;
T_37.482 ; Top of for-loop
    %load/vec4 v0x5555788f8f30_0;
    %cmpi/s 10, 0, 32;
	  %jmp/0xz T_37.483, 5;
    %load/vec4 v0x5555788f9020_0;
    %load/vec4 v0x5555788f8f30_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_37.485, 8;
    %load/vec4 v0x5555788f9230_0;
    %load/vec4 v0x5555788f8f30_0;
    %part/s 1;
    %ix/getv/s 4, v0x5555788f8f30_0;
    %store/vec4 v0x5555788f9100_0, 4, 1;
T_37.485 ;
T_37.484 ; for-loop step statement
    %load/vec4 v0x5555788f8f30_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555788f8f30_0, 0, 32;
    %jmp T_37.482;
T_37.483 ; for-loop exit label
    %jmp T_37.481;
T_37.472 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555788f8f30_0, 0, 32;
T_37.487 ; Top of for-loop
    %load/vec4 v0x5555788f8f30_0;
    %cmpi/s 10, 0, 32;
	  %jmp/0xz T_37.488, 5;
    %load/vec4 v0x5555788f9020_0;
    %load/vec4 v0x5555788f8f30_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_37.492, 9;
    %load/vec4 v0x5555788f9230_0;
    %load/vec4 v0x5555788f8f30_0;
    %part/s 1;
    %nor/r;
    %and;
T_37.492;
    %flag_set/vec4 8;
    %jmp/0xz  T_37.490, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x5555788f8f30_0;
    %store/vec4 v0x5555788f9100_0, 4, 1;
T_37.490 ;
T_37.489 ; for-loop step statement
    %load/vec4 v0x5555788f8f30_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555788f8f30_0, 0, 32;
    %jmp T_37.487;
T_37.488 ; for-loop exit label
    %jmp T_37.481;
T_37.473 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555788f8f30_0, 0, 32;
T_37.493 ; Top of for-loop
    %load/vec4 v0x5555788f8f30_0;
    %cmpi/s 10, 0, 32;
	  %jmp/0xz T_37.494, 5;
    %load/vec4 v0x5555788f9020_0;
    %load/vec4 v0x5555788f8f30_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_37.498, 9;
    %load/vec4 v0x5555788f9230_0;
    %load/vec4 v0x5555788f8f30_0;
    %part/s 1;
    %and;
T_37.498;
    %flag_set/vec4 8;
    %jmp/0xz  T_37.496, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x5555788f8f30_0;
    %store/vec4 v0x5555788f9100_0, 4, 1;
T_37.496 ;
T_37.495 ; for-loop step statement
    %load/vec4 v0x5555788f8f30_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555788f8f30_0, 0, 32;
    %jmp T_37.493;
T_37.494 ; for-loop exit label
    %jmp T_37.481;
T_37.474 ;
    %load/vec4 v0x5555788f9020_0;
    %cmpi/ne 0, 0, 10;
    %jmp/0xz  T_37.499, 4;
    %pushi/vec4 0, 0, 10;
    %store/vec4 v0x5555788f9100_0, 0, 10;
T_37.499 ;
    %jmp T_37.481;
T_37.475 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555788f8f30_0, 0, 32;
T_37.501 ; Top of for-loop
    %load/vec4 v0x5555788f8f30_0;
    %cmpi/s 10, 0, 32;
	  %jmp/0xz T_37.502, 5;
    %load/vec4 v0x5555788f9020_0;
    %load/vec4 v0x5555788f8f30_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_37.506, 9;
    %load/vec4 v0x5555788f9230_0;
    %load/vec4 v0x5555788f8f30_0;
    %part/s 1;
    %nor/r;
    %and;
T_37.506;
    %flag_set/vec4 8;
    %jmp/0xz  T_37.504, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x5555788f8f30_0;
    %store/vec4 v0x5555788f9100_0, 4, 1;
T_37.504 ;
T_37.503 ; for-loop step statement
    %load/vec4 v0x5555788f8f30_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555788f8f30_0, 0, 32;
    %jmp T_37.501;
T_37.502 ; for-loop exit label
    %jmp T_37.481;
T_37.476 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555788f8f30_0, 0, 32;
T_37.507 ; Top of for-loop
    %load/vec4 v0x5555788f8f30_0;
    %cmpi/s 10, 0, 32;
	  %jmp/0xz T_37.508, 5;
    %load/vec4 v0x5555788f9020_0;
    %load/vec4 v0x5555788f8f30_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_37.512, 9;
    %load/vec4 v0x5555788f9230_0;
    %load/vec4 v0x5555788f8f30_0;
    %part/s 1;
    %and;
T_37.512;
    %flag_set/vec4 8;
    %jmp/0xz  T_37.510, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x5555788f8f30_0;
    %store/vec4 v0x5555788f9100_0, 4, 1;
T_37.510 ;
T_37.509 ; for-loop step statement
    %load/vec4 v0x5555788f8f30_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555788f8f30_0, 0, 32;
    %jmp T_37.507;
T_37.508 ; for-loop exit label
    %jmp T_37.481;
T_37.477 ;
    %load/vec4 v0x5555788f9020_0;
    %cmpi/ne 0, 0, 10;
    %jmp/0xz  T_37.513, 4;
    %pushi/vec4 1023, 0, 10;
    %store/vec4 v0x5555788f9100_0, 0, 10;
T_37.513 ;
    %jmp T_37.481;
T_37.478 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555788f8f30_0, 0, 32;
T_37.515 ; Top of for-loop
    %load/vec4 v0x5555788f8f30_0;
    %cmpi/s 10, 0, 32;
	  %jmp/0xz T_37.516, 5;
    %load/vec4 v0x5555788f9020_0;
    %load/vec4 v0x5555788f8f30_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_37.520, 9;
    %load/vec4 v0x5555788f9230_0;
    %load/vec4 v0x5555788f8f30_0;
    %part/s 1;
    %nor/r;
    %and;
T_37.520;
    %flag_set/vec4 8;
    %jmp/0xz  T_37.518, 8;
    %load/vec4 v0x5555788f8d50_0;
    %load/vec4 v0x5555788f8f30_0;
    %part/s 1;
    %inv;
    %ix/getv/s 4, v0x5555788f8f30_0;
    %store/vec4 v0x5555788f9100_0, 4, 1;
T_37.518 ;
T_37.517 ; for-loop step statement
    %load/vec4 v0x5555788f8f30_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555788f8f30_0, 0, 32;
    %jmp T_37.515;
T_37.516 ; for-loop exit label
    %jmp T_37.481;
T_37.479 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555788f8f30_0, 0, 32;
T_37.521 ; Top of for-loop
    %load/vec4 v0x5555788f8f30_0;
    %cmpi/s 10, 0, 32;
	  %jmp/0xz T_37.522, 5;
    %load/vec4 v0x5555788f9020_0;
    %load/vec4 v0x5555788f8f30_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_37.526, 9;
    %load/vec4 v0x5555788f9230_0;
    %load/vec4 v0x5555788f8f30_0;
    %part/s 1;
    %and;
T_37.526;
    %flag_set/vec4 8;
    %jmp/0xz  T_37.524, 8;
    %load/vec4 v0x5555788f8d50_0;
    %load/vec4 v0x5555788f8f30_0;
    %part/s 1;
    %inv;
    %ix/getv/s 4, v0x5555788f8f30_0;
    %store/vec4 v0x5555788f9100_0, 4, 1;
T_37.524 ;
T_37.523 ; for-loop step statement
    %load/vec4 v0x5555788f8f30_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555788f8f30_0, 0, 32;
    %jmp T_37.521;
T_37.522 ; for-loop exit label
    %jmp T_37.481;
T_37.481 ;
    %pop/vec4 1;
    %load/vec4 v0x5555788f9100_0;
    %ret/vec4 0, 0, 10;  Assign to get_sw_write_next_value (store_vec4_to_lval)
    %end;
S_0x5555788f9310 .scope autofunction.vec4.s1, "get_sw_write_update" "get_sw_write_update" 8 47, 8 47 0, S_0x5555788f4e40;
 .timescale 0 0;
; Variable get_sw_write_update is vec4 return value of scope S_0x5555788f9310
v0x5555788f95d0_0 .var "update", 2 0;
v0x5555788f96b0_0 .var "write_done", 0 0;
v0x5555788f9750_0 .var "write_enable", 0 0;
v0x5555788f9810_0 .var "write_valid", 9 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_wtocnt.u_bit_field.get_sw_write_update ;
    %load/vec4 v0x5555788f9810_0;
    %pad/u 1;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x5555788f95d0_0, 4, 1;
    %pushi/vec4 1, 0, 1;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x5555788f95d0_0, 4, 1;
    %pushi/vec4 1, 0, 1;
    %ix/load 4, 2, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x5555788f95d0_0, 4, 1;
    %load/vec4 v0x5555788f95d0_0;
    %parti/s 1, 0, 2;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_38.528, 9;
    %load/vec4 v0x5555788f95d0_0;
    %parti/s 1, 1, 2;
    %and;
T_38.528;
    %flag_set/vec4 8;
    %flag_get/vec4 8;
    %jmp/0 T_38.527, 8;
    %load/vec4 v0x5555788f95d0_0;
    %parti/s 1, 2, 3;
    %and;
T_38.527;
    %ret/vec4 0, 0, 1;  Assign to get_sw_write_update (store_vec4_to_lval)
    %end;
S_0x5555788fb210 .scope module, "u_register" "rggen_default_register" 7 97, 9 1 0, S_0x5555788bcab0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "i_clk";
    .port_info 1 /INPUT 1 "i_rst_n";
    .port_info 2 /INPUT 1 "i_register_valid";
    .port_info 3 /INPUT 2 "i_register_access";
    .port_info 4 /INPUT 3 "i_register_address";
    .port_info 5 /INPUT 32 "i_register_write_data";
    .port_info 6 /INPUT 32 "i_register_strobe";
    .port_info 7 /OUTPUT 1 "o_register_active";
    .port_info 8 /OUTPUT 1 "o_register_ready";
    .port_info 9 /OUTPUT 2 "o_register_status";
    .port_info 10 /OUTPUT 32 "o_register_read_data";
    .port_info 11 /OUTPUT 32 "o_register_value";
    .port_info 12 /OUTPUT 1 "o_bit_field_write_valid";
    .port_info 13 /OUTPUT 1 "o_bit_field_read_valid";
    .port_info 14 /OUTPUT 32 "o_bit_field_mask";
    .port_info 15 /OUTPUT 32 "o_bit_field_write_data";
    .port_info 16 /INPUT 32 "i_bit_field_read_data";
    .port_info 17 /INPUT 32 "i_bit_field_value";
P_0x5555788fb3a0 .param/l "ADDRESS_WIDTH" 0 9 4, +C4<00000000000000000000000000000011>;
P_0x5555788fb3e0 .param/l "BUS_WIDTH" 0 9 6, +C4<00000000000000000000000000100000>;
P_0x5555788fb420 .param/l "DATA_WIDTH" 0 9 7, +C4<00000000000000000000000000100000>;
P_0x5555788fb460 .param/l "OFFSET_ADDRESS" 0 9 5, C4<000>;
P_0x5555788fb4a0 .param/l "READABLE" 0 9 2, +C4<00000000000000000000000000000001>;
P_0x5555788fb4e0 .param/l "WRITABLE" 0 9 3, +C4<00000000000000000000000000000001>;
v0x5555788fc400_0 .net "i_bit_field_read_data", 31 0, L_0x55557892d2e0;  alias, 1 drivers
v0x555578902b10_0 .net "i_bit_field_value", 31 0, L_0x55557892d560;  alias, 1 drivers
v0x555578902bd0_0 .net "i_clk", 0 0, v0x555578915890_0;  alias, 1 drivers
v0x555578902c70_0 .net "i_register_access", 1 0, L_0x555578931e20;  alias, 1 drivers
v0x555578902d10_0 .net "i_register_address", 2 0, L_0x555578931e90;  alias, 1 drivers
v0x555578902e00_0 .net "i_register_strobe", 31 0, L_0x555578931fa0;  alias, 1 drivers
v0x555578902ec0_0 .net "i_register_valid", 0 0, L_0x555578931db0;  alias, 1 drivers
v0x555578902f60_0 .net "i_register_write_data", 31 0, L_0x555578931f30;  alias, 1 drivers
v0x555578903020_0 .net "i_rst_n", 0 0, v0x555578915a30_0;  alias, 1 drivers
v0x5555789030c0_0 .net "o_bit_field_mask", 31 0, L_0x555578934940;  alias, 1 drivers
v0x555578903180_0 .net "o_bit_field_read_valid", 0 0, L_0x555578916c80;  alias, 1 drivers
v0x555578903220_0 .net "o_bit_field_write_data", 31 0, L_0x555578917370;  alias, 1 drivers
v0x5555789032c0_0 .net "o_bit_field_write_valid", 0 0, L_0x5555789165f0;  alias, 1 drivers
v0x555578903360_0 .net "o_register_active", 0 0, L_0x5555789170b0;  1 drivers
v0x555578903400_0 .net "o_register_read_data", 31 0, L_0x555578917260;  1 drivers
v0x5555789034d0_0 .net "o_register_ready", 0 0, L_0x555578917120;  1 drivers
v0x5555789035a0_0 .net "o_register_status", 1 0, L_0x7f258a66d0f0;  1 drivers
v0x555578903670_0 .net "o_register_value", 31 0, L_0x5555789173e0;  1 drivers
S_0x5555788fba90 .scope module, "u_register_common" "rggen_register_common" 9 35, 10 2 0, S_0x5555788fb210;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "i_clk";
    .port_info 1 /INPUT 1 "i_rst_n";
    .port_info 2 /INPUT 1 "i_register_valid";
    .port_info 3 /INPUT 2 "i_register_access";
    .port_info 4 /INPUT 3 "i_register_address";
    .port_info 5 /INPUT 32 "i_register_write_data";
    .port_info 6 /INPUT 32 "i_register_strobe";
    .port_info 7 /OUTPUT 1 "o_register_active";
    .port_info 8 /OUTPUT 1 "o_register_ready";
    .port_info 9 /OUTPUT 2 "o_register_status";
    .port_info 10 /OUTPUT 32 "o_register_read_data";
    .port_info 11 /OUTPUT 32 "o_register_value";
    .port_info 12 /INPUT 1 "i_additional_match";
    .port_info 13 /OUTPUT 1 "o_bit_field_write_valid";
    .port_info 14 /OUTPUT 1 "o_bit_field_read_valid";
    .port_info 15 /OUTPUT 32 "o_bit_field_mask";
    .port_info 16 /OUTPUT 32 "o_bit_field_write_data";
    .port_info 17 /INPUT 32 "i_bit_field_read_data";
    .port_info 18 /INPUT 32 "i_bit_field_value";
P_0x5555788fbc70 .param/l "ADDRESS_WIDTH" 0 10 5, +C4<00000000000000000000000000000011>;
P_0x5555788fbcb0 .param/l "BUS_BYTE_WIDTH" 1 10 32, +C4<00000000000000000000000000000100>;
P_0x5555788fbcf0 .param/l "BUS_WIDTH" 0 10 7, +C4<00000000000000000000000000100000>;
P_0x5555788fbd30 .param/l "DATA_BYTE_WIDTH" 1 10 33, +C4<00000000000000000000000000000100>;
P_0x5555788fbd70 .param/l "DATA_WIDTH" 0 10 8, +C4<00000000000000000000000000100000>;
P_0x5555788fbdb0 .param/l "OFFSET_ADDRESS" 0 10 6, C4<000>;
P_0x5555788fbdf0 .param/l "READABLE" 0 10 3, +C4<00000000000000000000000000000001>;
P_0x5555788fbe30 .param/l "USE_ADDITIONAL_MATCH" 0 10 9, C4<0>;
P_0x5555788fbe70 .param/l "WORDS" 1 10 31, +C4<00000000000000000000000000000001>;
P_0x5555788fbeb0 .param/l "WRITABLE" 0 10 4, +C4<00000000000000000000000000000001>;
L_0x7f258a66d180 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x5555789164a0 .functor OR 1, L_0x555578916de0, L_0x7f258a66d180, C4<0>, C4<0>;
L_0x555578916510 .functor AND 1, L_0x5555789164a0, L_0x555578916ea0, C4<1>, C4<1>;
L_0x7f258a66d138 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x7f258a66d1c8 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x555578916580 .functor AND 1, L_0x7f258a66d138, L_0x7f258a66d1c8, C4<1>, C4<1>;
L_0x5555789165f0 .functor OR 1, L_0x555578916510, L_0x555578916580, C4<0>, C4<0>;
L_0x555578916730 .functor OR 1, L_0x555578916de0, L_0x7f258a66d180, C4<0>, C4<0>;
L_0x555578916930 .functor AND 1, L_0x555578916730, L_0x555578916840, C4<1>, C4<1>;
L_0x555578916b70 .functor AND 1, L_0x7f258a66d138, L_0x555578916a80, C4<1>, C4<1>;
L_0x555578916c80 .functor OR 1, L_0x555578916930, L_0x555578916b70, C4<0>, C4<0>;
L_0x555578916de0 .functor AND 1, L_0x555578931db0, L_0x555578916430, C4<1>, C4<1>;
L_0x555578916fe0 .functor BUFZ 32, L_0x555578931f30, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0x5555789170b0 .functor BUFZ 1, L_0x555578916430, C4<0>, C4<0>, C4<0>;
L_0x555578917260 .functor BUFZ 32, L_0x5555789174a0, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0x5555789173e0 .functor BUFZ 32, L_0x55557892d560, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0x555578934940 .functor BUFT 32, L_0x555578916f40, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0x555578917370 .functor BUFT 32, L_0x555578916fe0, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
v0x5555789006c0_0 .net *"_ivl_1", 0 0, L_0x5555789164a0;  1 drivers
v0x555578900780_0 .net *"_ivl_11", 0 0, L_0x555578916730;  1 drivers
v0x555578900840_0 .net *"_ivl_14", 0 0, L_0x555578916840;  1 drivers
v0x555578900910_0 .net *"_ivl_16", 0 0, L_0x555578916930;  1 drivers
v0x5555789009d0_0 .net *"_ivl_19", 0 0, L_0x555578916a80;  1 drivers
v0x555578900ae0_0 .net *"_ivl_21", 0 0, L_0x555578916b70;  1 drivers
v0x555578900ba0_0 .net *"_ivl_4", 0 0, L_0x555578916510;  1 drivers
v0x555578900c60_0 .net *"_ivl_7", 0 0, L_0x555578916580;  1 drivers
L_0x7f258a66d2a0 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v0x555578900d20_0 .net "i_additional_match", 0 0, L_0x7f258a66d2a0;  1 drivers
v0x555578900dc0_0 .net "i_bit_field_read_data", 31 0, L_0x55557892d2e0;  alias, 1 drivers
v0x555578900e90_0 .net "i_bit_field_value", 31 0, L_0x55557892d560;  alias, 1 drivers
v0x555578900f50_0 .net "i_clk", 0 0, v0x555578915890_0;  alias, 1 drivers
v0x555578900ff0_0 .net "i_register_access", 1 0, L_0x555578931e20;  alias, 1 drivers
v0x555578901140_0 .net "i_register_address", 2 0, L_0x555578931e90;  alias, 1 drivers
v0x555578901290_0 .net "i_register_strobe", 31 0, L_0x555578931fa0;  alias, 1 drivers
v0x555578901350_0 .net "i_register_valid", 0 0, L_0x555578931db0;  alias, 1 drivers
v0x5555789013f0_0 .net "i_register_write_data", 31 0, L_0x555578931f30;  alias, 1 drivers
v0x5555789015c0_0 .net "i_rst_n", 0 0, v0x555578915a30_0;  alias, 1 drivers
v0x555578901660_0 .net "o_bit_field_mask", 31 0, L_0x555578934940;  alias, 1 drivers
v0x555578901740_0 .net "o_bit_field_read_valid", 0 0, L_0x555578916c80;  alias, 1 drivers
v0x5555789017e0_0 .net "o_bit_field_write_data", 31 0, L_0x555578917370;  alias, 1 drivers
v0x5555789018c0_0 .net "o_bit_field_write_valid", 0 0, L_0x5555789165f0;  alias, 1 drivers
v0x555578901960_0 .net "o_register_active", 0 0, L_0x5555789170b0;  alias, 1 drivers
v0x555578901a20_0 .net "o_register_read_data", 31 0, L_0x555578917260;  alias, 1 drivers
v0x555578901b00_0 .net "o_register_ready", 0 0, L_0x555578917120;  alias, 1 drivers
v0x555578901bc0_0 .net "o_register_status", 1 0, L_0x7f258a66d0f0;  alias, 1 drivers
v0x555578901ca0_0 .net "o_register_value", 31 0, L_0x5555789173e0;  alias, 1 drivers
v0x555578901d80_0 .net "w_active", 0 0, L_0x555578916430;  1 drivers
v0x555578901e40_0 .net "w_backdoor_valid", 0 0, L_0x7f258a66d138;  1 drivers
v0x555578901f00_0 .net "w_frontdoor_valid", 0 0, L_0x555578916de0;  1 drivers
v0x555578901fc0 .array "w_mask", 1 0;
v0x555578901fc0_0 .net v0x555578901fc0 0, 31 0, L_0x555578916f40; 1 drivers
L_0x7f258a66d210 .functor BUFT 1, C4<00000000000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x555578901fc0_1 .net v0x555578901fc0 1, 31 0, L_0x7f258a66d210; 1 drivers
v0x5555789020e0_0 .net "w_match", 0 0, L_0x555578858ab0;  1 drivers
v0x5555789021f0_0 .net "w_pending_valid", 0 0, L_0x7f258a66d180;  1 drivers
v0x5555789024c0_0 .net "w_read_data", 31 0, L_0x5555789174a0;  1 drivers
v0x555578902580 .array "w_write", 1 0;
v0x555578902580_0 .net v0x555578902580 0, 0 0, L_0x555578916ea0; 1 drivers
v0x555578902580_1 .net v0x555578902580 1, 0 0, L_0x7f258a66d1c8; 1 drivers
v0x555578902660 .array "w_write_data", 1 0;
v0x555578902660_0 .net v0x555578902660 0, 31 0, L_0x555578916fe0; 1 drivers
L_0x7f258a66d258 .functor BUFT 1, C4<00000000000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x555578902660_1 .net v0x555578902660 1, 31 0, L_0x7f258a66d258; 1 drivers
L_0x555578916840 .reduce/nor L_0x555578916ea0;
L_0x555578916a80 .reduce/nor L_0x7f258a66d1c8;
L_0x555578916ea0 .part L_0x555578931e20, 0, 1;
L_0x555578916f40 .ufunc/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.u_register.u_register_common.get_mask, 32, L_0x555578858ab0, L_0x555578931fa0 (v0x5555788ffb70_0, v0x5555788ffc60_0) S_0x5555788ff7d0;
L_0x555578917120 .reduce/nor L_0x7f258a66d138;
S_0x5555788fc710 .scope autofunction.vec4.s3, "calc_start_address" "calc_start_address" 10 67, 10 67 0, S_0x5555788fba90;
 .timescale 0 0;
; Variable calc_start_address is vec4 return value of scope S_0x5555788fc710
v0x5555788fc9f0_0 .var/i "delta", 31 0;
v0x5555788fcad0_0 .var/i "index", 31 0;
v0x5555788fcbc0_0 .var "offset_address", 2 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.u_register.u_register_common.calc_start_address ;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0x5555788fcbc0_0, 0, 3;
    %load/vec4 v0x5555788fcad0_0;
    %muli 4, 0, 32;
    %store/vec4 v0x5555788fc9f0_0, 0, 32;
    %load/vec4 v0x5555788fcbc0_0;
    %load/vec4 v0x5555788fc9f0_0;
    %parti/s 3, 0, 2;
    %add;
    %ret/vec4 0, 0, 3;  Assign to calc_start_address (store_vec4_to_lval)
    %end;
S_0x5555788fcca0 .scope generate, "g_decoder[0]" "g_decoder[0]" 10 42, 10 42 0, S_0x5555788fba90;
 .timescale 0 0;
P_0x5555788fcec0 .param/l "g_i" 1 10 42, +C4<00>;
S_0x5555788fcf80 .scope module, "u_decoder" "rggen_address_decoder" 10 51, 11 1 0, S_0x5555788fcca0;
 .timescale 0 0;
    .port_info 0 /INPUT 3 "i_address";
    .port_info 1 /INPUT 2 "i_access";
    .port_info 2 /INPUT 1 "i_additional_match";
    .port_info 3 /OUTPUT 1 "o_match";
P_0x5555788fd160 .param/l "ACCESS_BIT" 1 11 16, +C4<00000000000000000000000000000000>;
P_0x5555788fd1a0 .param/l "BEGIN_ADDRESS" 1 11 17, C4<0>;
P_0x5555788fd1e0 .param/l "BEGIN_ADDRESS_ALL_0" 1 11 19, C4<1>;
P_0x5555788fd220 .param/l "BUS_WIDTH" 0 11 5, +C4<00000000000000000000000000100000>;
P_0x5555788fd260 .param/l "BYTE_SIZE" 0 11 7, +C4<00000000000000000000000000000100>;
P_0x5555788fd2a0 .param/l "END_ADDRESS" 1 11 18, C4<0>;
P_0x5555788fd2e0 .param/l "END_ADDRESS_ALL_1" 1 11 20, C4<0>;
P_0x5555788fd320 .param/l "LSB" 1 11 15, +C4<000000000000000000000000000000010>;
P_0x5555788fd360 .param/l "READABLE" 0 11 2, +C4<00000000000000000000000000000001>;
P_0x5555788fd3a0 .param/l "START_ADDRESS" 0 11 6, C4<000>;
P_0x5555788fd3e0 .param/l "USE_ADDITIONAL_MATCH" 0 11 8, C4<0>;
P_0x5555788fd420 .param/l "WIDTH" 0 11 4, +C4<00000000000000000000000000000011>;
P_0x5555788fd460 .param/l "WRITABLE" 0 11 3, +C4<00000000000000000000000000000001>;
L_0x7f258a66d060 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
L_0x555578860eb0 .functor AND 1, L_0x555578857cc0, L_0x7f258a66d060, C4<1>, C4<1>;
L_0x7f258a66d0a8 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
L_0x555578858ab0 .functor AND 1, L_0x555578860eb0, L_0x7f258a66d0a8, C4<1>, C4<1>;
v0x5555788fef20_0 .net *"_ivl_2", 0 0, L_0x555578860eb0;  1 drivers
v0x5555788ff000_0 .net "i_access", 1 0, L_0x555578931e20;  alias, 1 drivers
v0x5555788ff0c0_0 .net "i_additional_match", 0 0, L_0x7f258a66d2a0;  alias, 1 drivers
v0x5555788ff160_0 .net "i_address", 2 0, L_0x555578931e90;  alias, 1 drivers
v0x5555788ff220_0 .net "o_match", 0 0, L_0x555578858ab0;  alias, 1 drivers
v0x5555788ff330_0 .net "w_access_match", 0 0, L_0x7f258a66d060;  1 drivers
v0x5555788ff3f0_0 .net "w_additional_match", 0 0, L_0x7f258a66d0a8;  1 drivers
v0x5555788ff4b0_0 .net "w_address_match", 0 0, L_0x555578857cc0;  1 drivers
L_0x555578916200 .part L_0x555578931e90, 2, 1;
S_0x5555788fdb20 .scope autofunction.vec4.s1, "calc_end_address" "calc_end_address" 11 38, 11 38 0, S_0x5555788fcf80;
 .timescale 0 0;
v0x5555788fdd00_0 .var "address", 2 0;
v0x5555788fde00_0 .var/i "byte_size", 31 0;
; Variable calc_end_address is vec4 return value of scope S_0x5555788fdb20
v0x5555788fdfd0_0 .var/i "delta", 31 0;
v0x5555788fe0b0_0 .var "start_address", 2 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.u_register.u_register_common.g_decoder\x5B0\x5D.u_decoder.calc_end_address ;
    %load/vec4 v0x5555788fde00_0;
    %subi 1, 0, 32;
    %store/vec4 v0x5555788fdfd0_0, 0, 32;
    %load/vec4 v0x5555788fe0b0_0;
    %load/vec4 v0x5555788fdfd0_0;
    %parti/s 3, 0, 2;
    %add;
    %store/vec4 v0x5555788fdd00_0, 0, 3;
    %load/vec4 v0x5555788fdd00_0;
    %parti/s 1, 2, 3;
    %ret/vec4 0, 0, 1;  Assign to calc_end_address (store_vec4_to_lval)
    %end;
S_0x5555788fe1e0 .scope autofunction.vec4.u32, "clog2" "clog2" 11 22, 11 22 0, S_0x5555788fcf80;
 .timescale 0 0;
; Variable clog2 is vec4 return value of scope S_0x5555788fe1e0
v0x5555788fe4c0_0 .var/i "n", 31 0;
v0x5555788fe5a0_0 .var/i "result", 31 0;
v0x5555788fe660_0 .var/i "value", 31 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.u_register.u_register_common.g_decoder\x5B0\x5D.u_decoder.clog2 ;
    %load/vec4 v0x5555788fe4c0_0;
    %subi 1, 0, 32;
    %store/vec4 v0x5555788fe660_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5555788fe5a0_0, 0, 32;
T_41.529 ;
    %load/vec4 v0x5555788fe660_0;
    %cmpi/s 0, 0, 32;
    %flag_or 5, 4; GT is !LE
    %flag_inv 5;
    %jmp/0xz T_41.530, 5;
    %load/vec4 v0x5555788fe5a0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x5555788fe5a0_0, 0, 32;
    %load/vec4 v0x5555788fe660_0;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %shiftr 4;
    %store/vec4 v0x5555788fe660_0, 0, 32;
    %jmp T_41.529;
T_41.530 ;
    %load/vec4 v0x5555788fe5a0_0;
    %ret/vec4 0, 0, 32;  Assign to clog2 (store_vec4_to_lval)
    %end;
S_0x5555788fe740 .scope generate, "g_access_match" "g_access_match" 11 76, 11 76 0, S_0x5555788fcf80;
 .timescale 0 0;
S_0x5555788fe950 .scope generate, "g_additional_match" "g_additional_match" 11 86, 11 86 0, S_0x5555788fcf80;
 .timescale 0 0;
S_0x5555788feb30 .scope generate, "g_address_match" "g_address_match" 11 58, 11 58 0, S_0x5555788fcf80;
 .timescale 0 0;
L_0x7f258a66d018 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x555578857cc0 .functor XNOR 1, L_0x555578916200, L_0x7f258a66d018, C4<0>, C4<0>;
v0x5555788fed60_0 .net *"_ivl_0", 0 0, L_0x555578916200;  1 drivers
v0x5555788fee40_0 .net/2u *"_ivl_1", 0 0, L_0x7f258a66d018;  1 drivers
S_0x5555788ff5f0 .scope generate, "g_match" "g_match" 10 59, 10 59 0, S_0x5555788fba90;
 .timescale 0 0;
L_0x555578916430 .functor BUFZ 1, L_0x555578858ab0, C4<0>, C4<0>, C4<0>;
S_0x5555788ff7d0 .scope autofunction.vec4.s32, "get_mask" "get_mask" 10 97, 10 97 0, S_0x5555788fba90;
 .timescale 0 0;
; Variable get_mask is vec4 return value of scope S_0x5555788ff7d0
v0x5555788ffa90_0 .var "mask", 31 0;
v0x5555788ffb70_0 .var "match", 0 0;
v0x5555788ffc60_0 .var "strobe", 31 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.u_register.u_register_common.get_mask ;
    %load/vec4 v0x5555788ffc60_0;
    %store/vec4 v0x5555788ffa90_0, 0, 32;
    %load/vec4 v0x5555788ffa90_0;
    %ret/vec4 0, 0, 32;  Assign to get_mask (store_vec4_to_lval)
    %end;
S_0x5555788ffd40 .scope module, "u_read_data_mux" "rggen_mux" 10 134, 12 1 0, S_0x5555788fba90;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "i_select";
    .port_info 1 /INPUT 32 "i_data";
    .port_info 2 /OUTPUT 32 "o_data";
P_0x5555788fff70 .param/l "ENTRIES" 0 12 3, +C4<00000000000000000000000000000001>;
P_0x5555788fffb0 .param/l "WIDTH" 0 12 2, +C4<00000000000000000000000000100000>;
v0x555578900380_0 .net "i_data", 31 0, L_0x55557892d2e0;  alias, 1 drivers
v0x555578900480_0 .net "i_select", 0 0, L_0x555578858ab0;  alias, 1 drivers
v0x555578900570_0 .net "o_data", 31 0, L_0x5555789174a0;  alias, 1 drivers
S_0x555578900180 .scope generate, "g" "g" 12 10, 12 10 0, S_0x5555788ffd40;
 .timescale 0 0;
L_0x5555789174a0 .functor BUFZ 32, L_0x55557892d2e0, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
S_0x555578904070 .scope module, "u_adapter" "rggen_wishbone_adapter" 7 58, 13 1 0, S_0x5555788b5eb0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "i_clk";
    .port_info 1 /INPUT 1 "i_rst_n";
    .port_info 2 /INPUT 1 "i_wb_cyc";
    .port_info 3 /INPUT 1 "i_wb_stb";
    .port_info 4 /OUTPUT 1 "o_wb_stall";
    .port_info 5 /INPUT 4 "i_wb_adr";
    .port_info 6 /INPUT 1 "i_wb_we";
    .port_info 7 /INPUT 32 "i_wb_dat";
    .port_info 8 /INPUT 4 "i_wb_sel";
    .port_info 9 /OUTPUT 1 "o_wb_ack";
    .port_info 10 /OUTPUT 1 "o_wb_err";
    .port_info 11 /OUTPUT 1 "o_wb_rty";
    .port_info 12 /OUTPUT 32 "o_wb_dat";
    .port_info 13 /OUTPUT 1 "o_register_valid";
    .port_info 14 /OUTPUT 2 "o_register_access";
    .port_info 15 /OUTPUT 3 "o_register_address";
    .port_info 16 /OUTPUT 32 "o_register_write_data";
    .port_info 17 /OUTPUT 32 "o_register_strobe";
    .port_info 18 /INPUT 2 "i_register_active";
    .port_info 19 /INPUT 2 "i_register_ready";
    .port_info 20 /INPUT 4 "i_register_status";
    .port_info 21 /INPUT 64 "i_register_read_data";
P_0x5555788d7cb0 .param/l "ADDRESS_WIDTH" 0 13 2, +C4<00000000000000000000000000000100>;
P_0x5555788d7cf0 .param/l "BASE_ADDRESS" 0 13 7, C4<0000>;
P_0x5555788d7d30 .param/l "BUS_WIDTH" 0 13 4, +C4<00000000000000000000000000100000>;
P_0x5555788d7d70 .param/l "BYTE_SIZE" 0 13 8, +C4<00000000000000000000000000001000>;
P_0x5555788d7db0 .param/l "DEFAULT_READ_DATA" 0 13 10, C4<00000000000000000000000000000000>;
P_0x5555788d7df0 .param/l "ERROR_STATUS" 0 13 9, +C4<00000000000000000000000000000000>;
P_0x5555788d7e30 .param/l "INSERT_SLICER" 0 13 11, +C4<00000000000000000000000000000000>;
P_0x5555788d7e70 .param/l "LOCAL_ADDRESS_WIDTH" 0 13 3, +C4<00000000000000000000000000000011>;
P_0x5555788d7eb0 .param/l "PRE_DECODE" 0 13 6, +C4<00000000000000000000000000000000>;
P_0x5555788d7ef0 .param/l "REGISTERS" 0 13 5, +C4<00000000000000000000000000000010>;
P_0x5555788d7f30 .param/l "USE_STALL" 0 13 12, +C4<00000000000000000000000000000001>;
L_0x555578930720 .functor BUFZ 32, v0x55557890fb70_0, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0x555578930a40 .functor AND 1, L_0x555578930850, L_0x555578930950, C4<1>, C4<1>;
L_0x555578931480 .functor AND 1, v0x555578915d40_0, v0x5555789160c0_0, C4<1>, C4<1>;
L_0x7f258a66eb60 .functor BUFT 1, C4<00>, C4<0>, C4<0>, C4<0>;
v0x555578905be0_0 .net/2u *"_ivl_12", 1 0, L_0x7f258a66eb60;  1 drivers
v0x55557890dd20_0 .net *"_ivl_14", 0 0, L_0x555578930850;  1 drivers
L_0x7f258a66eba8 .functor BUFT 1, C4<00>, C4<0>, C4<0>, C4<0>;
v0x55557890dde0_0 .net/2u *"_ivl_16", 1 0, L_0x7f258a66eba8;  1 drivers
v0x55557890ded0_0 .net *"_ivl_18", 0 0, L_0x555578930950;  1 drivers
v0x55557890df90_0 .net *"_ivl_23", 0 0, L_0x555578930ba0;  1 drivers
L_0x7f258a66ebf0 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v0x55557890e070_0 .net/2u *"_ivl_24", 0 0, L_0x7f258a66ebf0;  1 drivers
v0x55557890e150_0 .net *"_ivl_26", 1 0, L_0x555578930c80;  1 drivers
L_0x7f258a66ec38 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v0x55557890e230_0 .net/2u *"_ivl_28", 0 0, L_0x7f258a66ec38;  1 drivers
v0x55557890e310_0 .net *"_ivl_30", 1 0, L_0x555578930dc0;  1 drivers
v0x55557890e480_0 .net *"_ivl_35", 0 0, L_0x555578931120;  1 drivers
v0x55557890e560_0 .net *"_ivl_39", 0 0, L_0x5555789313e0;  1 drivers
v0x55557890e640_0 .net *"_ivl_43", 0 0, L_0x5555789316c0;  1 drivers
v0x55557890e720_0 .net *"_ivl_50", 0 0, L_0x555578931480;  1 drivers
v0x55557890e7e0_0 .net "i_clk", 0 0, v0x555578915890_0;  alias, 1 drivers
v0x55557890e880_0 .net "i_register_active", 1 0, L_0x55557892f1e0;  alias, 1 drivers
v0x55557890e940_0 .net "i_register_read_data", 63 0, L_0x55557892f3c0;  alias, 1 drivers
v0x55557890ea00_0 .net "i_register_ready", 1 0, L_0x55557892f280;  alias, 1 drivers
v0x55557890ebb0_0 .net "i_register_status", 3 0, L_0x55557892f320;  alias, 1 drivers
v0x55557890ec80_0 .net "i_rst_n", 0 0, v0x555578915a30_0;  alias, 1 drivers
v0x55557890ed20_0 .net "i_wb_adr", 3 0, v0x555578915c80_0;  alias, 1 drivers
v0x55557890ede0_0 .net "i_wb_cyc", 0 0, v0x555578915d40_0;  alias, 1 drivers
v0x55557890eea0_0 .net "i_wb_dat", 31 0, v0x555578915ea0_0;  alias, 1 drivers
v0x55557890ef80_0 .net "i_wb_sel", 3 0, v0x555578915f60_0;  alias, 1 drivers
v0x55557890f060_0 .net "i_wb_stb", 0 0, v0x5555789160c0_0;  alias, 1 drivers
v0x55557890f120_0 .net "i_wb_we", 0 0, v0x555578916160_0;  alias, 1 drivers
v0x55557890f1e0_0 .net "o_register_access", 1 0, L_0x555578931e20;  alias, 1 drivers
v0x55557890f2a0_0 .net "o_register_address", 2 0, L_0x555578931e90;  alias, 1 drivers
v0x55557890f360_0 .net "o_register_strobe", 31 0, L_0x555578931fa0;  alias, 1 drivers
v0x55557890f420_0 .net "o_register_valid", 0 0, L_0x555578931db0;  alias, 1 drivers
v0x55557890f4c0_0 .net "o_register_write_data", 31 0, L_0x555578931f30;  alias, 1 drivers
v0x55557890f580_0 .net "o_wb_ack", 0 0, L_0x555578930520;  alias, 1 drivers
v0x55557890f640_0 .net "o_wb_dat", 31 0, L_0x555578930720;  alias, 1 drivers
v0x55557890f720_0 .net "o_wb_err", 0 0, L_0x555578930680;  alias, 1 drivers
v0x55557890f9f0_0 .net "o_wb_rty", 0 0, L_0x7f258a66eb18;  alias, 1 drivers
v0x55557890fab0_0 .net "o_wb_stall", 0 0, L_0x5555789303c0;  alias, 1 drivers
v0x55557890fb70_0 .var "r_response_data", 31 0;
v0x55557890fc50_0 .var "r_response_valid", 1 0;
v0x55557890fd30_0 .net "w_bus_access", 1 0, L_0x555578930f40;  1 drivers
v0x55557890fe20_0 .net "w_bus_address", 3 0, L_0x5555789312b0;  1 drivers
v0x55557890fef0_0 .net "w_bus_read_data", 31 0, L_0x5555789339e0;  1 drivers
v0x55557890ffc0_0 .net "w_bus_ready", 0 0, L_0x5555789337c0;  1 drivers
v0x555578910090_0 .net "w_bus_status", 1 0, L_0x5555789338d0;  1 drivers
v0x555578910160_0 .net "w_bus_strobe", 3 0, L_0x5555789317e0;  1 drivers
v0x555578910230_0 .net "w_bus_valid", 0 0, L_0x555578930a40;  1 drivers
v0x555578910300_0 .net "w_bus_write_data", 31 0, L_0x5555789314f0;  1 drivers
v0x5555789103d0_0 .net "w_request_valid", 1 0, L_0x5555789319b0;  1 drivers
v0x555578910470_0 .net "w_wb_adr", 3 0, v0x555578904dc0_0;  1 drivers
v0x555578910530_0 .net "w_wb_dat", 31 0, v0x555578904eb0_0;  1 drivers
v0x555578910610_0 .net "w_wb_sel", 3 0, v0x555578904f90_0;  1 drivers
v0x5555789106f0_0 .net "w_wb_we", 0 0, v0x5555789050c0_0;  1 drivers
L_0x5555789303c0 .part L_0x5555789319b0, 1, 1;
L_0x555578930520 .part v0x55557890fc50_0, 0, 1;
L_0x555578930680 .part v0x55557890fc50_0, 1, 1;
L_0x555578930850 .cmp/ne 2, L_0x5555789319b0, L_0x7f258a66eb60;
L_0x555578930950 .cmp/eq 2, v0x55557890fc50_0, L_0x7f258a66eba8;
L_0x555578930ba0 .part L_0x5555789319b0, 1, 1;
L_0x555578930c80 .concat [ 1 1 0 0], v0x5555789050c0_0, L_0x7f258a66ebf0;
L_0x555578930dc0 .concat [ 1 1 0 0], v0x555578916160_0, L_0x7f258a66ec38;
L_0x555578930f40 .functor MUXZ 2, L_0x555578930dc0, L_0x555578930c80, L_0x555578930ba0, C4<>;
L_0x555578931120 .part L_0x5555789319b0, 1, 1;
L_0x5555789312b0 .functor MUXZ 4, v0x555578915c80_0, v0x555578904dc0_0, L_0x555578931120, C4<>;
L_0x5555789313e0 .part L_0x5555789319b0, 1, 1;
L_0x5555789314f0 .functor MUXZ 32, v0x555578915ea0_0, v0x555578904eb0_0, L_0x5555789313e0, C4<>;
L_0x5555789316c0 .part L_0x5555789319b0, 1, 1;
L_0x5555789317e0 .functor MUXZ 4, v0x555578915f60_0, v0x555578904f90_0, L_0x5555789316c0, C4<>;
L_0x5555789319b0 .concat8 [ 1 1 0 0], L_0x555578931480, v0x555578904d00_0;
S_0x555578904a20 .scope generate, "g_stall" "g_stall" 13 67, 13 67 0, S_0x555578904070;
 .timescale 0 0;
v0x555578904c00_0 .net *"_ivl_1", 0 0, v0x555578904d00_0;  1 drivers
v0x555578904d00_0 .var "r_request_valid", 0 0;
v0x555578904dc0_0 .var "r_wb_adr", 3 0;
v0x555578904eb0_0 .var "r_wb_dat", 31 0;
v0x555578904f90_0 .var "r_wb_sel", 3 0;
v0x5555789050c0_0 .var "r_wb_we", 0 0;
S_0x555578905180 .scope module, "u_adapter_common" "rggen_adapter_common" 13 153, 14 2 0, S_0x555578904070;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "i_clk";
    .port_info 1 /INPUT 1 "i_rst_n";
    .port_info 2 /INPUT 1 "i_bus_valid";
    .port_info 3 /INPUT 2 "i_bus_access";
    .port_info 4 /INPUT 4 "i_bus_address";
    .port_info 5 /INPUT 32 "i_bus_write_data";
    .port_info 6 /INPUT 4 "i_bus_strobe";
    .port_info 7 /OUTPUT 1 "o_bus_ready";
    .port_info 8 /OUTPUT 2 "o_bus_status";
    .port_info 9 /OUTPUT 32 "o_bus_read_data";
    .port_info 10 /OUTPUT 1 "o_register_valid";
    .port_info 11 /OUTPUT 2 "o_register_access";
    .port_info 12 /OUTPUT 3 "o_register_address";
    .port_info 13 /OUTPUT 32 "o_register_write_data";
    .port_info 14 /OUTPUT 32 "o_register_strobe";
    .port_info 15 /INPUT 2 "i_register_active";
    .port_info 16 /INPUT 2 "i_register_ready";
    .port_info 17 /INPUT 4 "i_register_status";
    .port_info 18 /INPUT 64 "i_register_read_data";
P_0x555578905380 .param/l "ADDRESS_WIDTH" 0 14 3, +C4<00000000000000000000000000000100>;
P_0x5555789053c0 .param/l "BASE_ADDRESS" 0 14 9, C4<0000>;
P_0x555578905400 .param/l "BUS_WIDTH" 0 14 5, +C4<00000000000000000000000000100000>;
P_0x555578905440 .param/l "BYTE_SIZE" 0 14 10, +C4<00000000000000000000000000001000>;
P_0x555578905480 .param/l "DEFAULT_READ_DATA" 0 14 13, C4<00000000000000000000000000000000>;
P_0x5555789054c0 .param/l "ERROR_STATUS" 0 14 12, +C4<00000000000000000000000000000000>;
P_0x555578905500 .param/l "INSERT_SLICER" 0 14 14, +C4<00000000000000000000000000000000>;
P_0x555578905540 .param/l "LOCAL_ADDRESS_WIDTH" 0 14 4, +C4<00000000000000000000000000000011>;
P_0x555578905580 .param/l "PRE_DECODE" 0 14 8, +C4<00000000000000000000000000000000>;
P_0x5555789055c0 .param/l "REGISTERS" 0 14 7, +C4<00000000000000000000000000000010>;
P_0x555578905600 .param/l "RESPONSE_WIDTH" 1 14 36, +C4<00000000000000000000000000000100010>;
P_0x555578905640 .param/l "STROBE_WIDTH" 0 14 6, +C4<00000000000000000000000000000100>;
P_0x555578905680 .param/l "USE_READ_STROBE" 0 14 11, +C4<00000000000000000000000000000000>;
L_0x5555789337c0 .functor BUFZ 1, L_0x555578932ae0, C4<0>, C4<0>, C4<0>;
L_0x7f258a66ec80 .functor BUFT 1, C4<00>, C4<0>, C4<0>, C4<0>;
L_0x5555789338d0 .functor BUFZ 2, L_0x7f258a66ec80, C4<00>, C4<00>, C4<00>;
L_0x5555789339e0 .functor BUFZ 32, L_0x5555789320d0, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0x555578933ce0 .functor OR 1, L_0x555578933af0, L_0x555578933be0, C4<0>, C4<0>;
v0x55557890bfc0_0 .net *"_ivl_21", 0 0, L_0x555578933af0;  1 drivers
v0x55557890c080_0 .net *"_ivl_23", 0 0, L_0x555578933be0;  1 drivers
v0x55557890c140_0 .net "i_bus_access", 1 0, L_0x555578930f40;  alias, 1 drivers
v0x55557890c230_0 .net "i_bus_address", 3 0, L_0x5555789312b0;  alias, 1 drivers
v0x55557890c310_0 .net "i_bus_strobe", 3 0, L_0x5555789317e0;  alias, 1 drivers
v0x55557890c440_0 .net "i_bus_valid", 0 0, L_0x555578930a40;  alias, 1 drivers
v0x55557890c500_0 .net "i_bus_write_data", 31 0, L_0x5555789314f0;  alias, 1 drivers
v0x55557890c5e0_0 .net "i_clk", 0 0, v0x555578915890_0;  alias, 1 drivers
v0x55557890c680_0 .net "i_register_active", 1 0, L_0x55557892f1e0;  alias, 1 drivers
v0x55557890c740_0 .net "i_register_read_data", 63 0, L_0x55557892f3c0;  alias, 1 drivers
v0x55557890c800_0 .net "i_register_ready", 1 0, L_0x55557892f280;  alias, 1 drivers
v0x55557890c8e0_0 .net "i_register_status", 3 0, L_0x55557892f320;  alias, 1 drivers
v0x55557890c9c0_0 .net "i_rst_n", 0 0, v0x555578915a30_0;  alias, 1 drivers
v0x55557890ca60_0 .net "o_bus_read_data", 31 0, L_0x5555789339e0;  alias, 1 drivers
v0x55557890cb40_0 .net "o_bus_ready", 0 0, L_0x5555789337c0;  alias, 1 drivers
v0x55557890cc00_0 .net "o_bus_status", 1 0, L_0x5555789338d0;  alias, 1 drivers
v0x55557890cce0_0 .net "o_register_access", 1 0, L_0x555578931e20;  alias, 1 drivers
v0x55557890ceb0_0 .net "o_register_address", 2 0, L_0x555578931e90;  alias, 1 drivers
v0x55557890cf70_0 .net "o_register_strobe", 31 0, L_0x555578931fa0;  alias, 1 drivers
v0x55557890d030_0 .net "o_register_valid", 0 0, L_0x555578931db0;  alias, 1 drivers
v0x55557890d0d0_0 .net "o_register_write_data", 31 0, L_0x555578931f30;  alias, 1 drivers
v0x55557890d220_0 .var "r_busy", 0 0;
v0x55557890d2e0_0 .net "w_bus_ready", 0 0, L_0x555578932ae0;  1 drivers
L_0x7f258a66ed58 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v0x55557890d3a0_0 .net "w_inside_range", 0 0, L_0x7f258a66ed58;  1 drivers
v0x55557890d460_0 .net "w_register_active", 0 0, L_0x5555789322a0;  1 drivers
v0x55557890d520_0 .net "w_register_inactive", 0 0, L_0x555578933ce0;  1 drivers
v0x55557890d5e0_0 .net "w_register_read_data", 31 0, L_0x5555789320d0;  1 drivers
v0x55557890d6c0_0 .net "w_register_ready", 0 0, L_0x555578932170;  1 drivers
v0x55557890d780_0 .net "w_register_response", 33 0, L_0x555578932e90;  1 drivers
v0x55557890d840_0 .net "w_register_status", 1 0, L_0x7f258a66ec80;  1 drivers
v0x55557890d920_0 .net "w_response", 67 0, L_0x555578932640;  1 drivers
L_0x5555789320d0 .part L_0x555578932e90, 2, 32;
L_0x555578932170 .part L_0x555578932e90, 1, 1;
L_0x5555789322a0 .part L_0x555578932e90, 0, 1;
L_0x555578932340 .part L_0x55557892f3c0, 0, 32;
L_0x555578932470 .part L_0x55557892f280, 0, 1;
L_0x555578932640 .concat8 [ 34 34 0 0], L_0x5555789325a0, L_0x555578932900;
L_0x555578932770 .part L_0x55557892f3c0, 32, 32;
L_0x555578932810 .part L_0x55557892f280, 1, 1;
L_0x555578933af0 .reduce/nor L_0x5555789322a0;
L_0x555578933be0 .reduce/nor L_0x7f258a66ed58;
S_0x555578906020 .scope generate, "g_no_request_slicer" "g_no_request_slicer" 14 82, 14 82 0, S_0x555578905180;
 .timescale 0 0;
L_0x555578931ca0 .functor AND 1, L_0x555578930a40, L_0x7f258a66ed58, C4<1>, C4<1>;
L_0x555578931db0 .functor AND 1, L_0x555578931ca0, L_0x555578931d10, C4<1>, C4<1>;
L_0x555578931e20 .functor BUFZ 2, L_0x555578930f40, C4<00>, C4<00>, C4<00>;
L_0x555578931f30 .functor BUFZ 32, L_0x5555789314f0, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
v0x555578906200_0 .net *"_ivl_1", 0 0, L_0x555578931ca0;  1 drivers
v0x5555789062e0_0 .net *"_ivl_3", 0 0, L_0x555578931d10;  1 drivers
L_0x555578931d10 .reduce/nor v0x55557890d220_0;
L_0x555578931e90 .ufunc/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.u_adapter.u_adapter_common.get_local_address, 3, L_0x5555789312b0 (v0x555578907670_0) S_0x555578907490;
L_0x555578931fa0 .ufunc/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.u_adapter.u_adapter_common.get_register_strobe, 32, L_0x555578930f40, L_0x5555789317e0 (v0x555578907b50_0, v0x555578907ed0_0) S_0x555578907920;
S_0x5555789063a0 .scope generate, "g_reponse" "g_reponse" 14 172, 14 172 0, S_0x555578905180;
 .timescale 0 0;
S_0x5555789065a0 .scope generate, "g[0]" "g[0]" 14 188, 14 188 0, S_0x5555789063a0;
 .timescale 0 0;
P_0x5555789067a0 .param/l "i" 1 14 188, +C4<00>;
v0x555578906880_0 .net *"_ivl_0", 31 0, L_0x555578932340;  1 drivers
v0x555578906960_0 .net *"_ivl_1", 0 0, L_0x555578932470;  1 drivers
L_0x7f258a66ecc8 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v0x555578906a40_0 .net/2u *"_ivl_2", 0 0, L_0x7f258a66ecc8;  1 drivers
v0x555578906b30_0 .net *"_ivl_4", 33 0, L_0x5555789325a0;  1 drivers
L_0x5555789325a0 .concat [ 1 1 32 0], L_0x7f258a66ecc8, L_0x555578932470, L_0x555578932340;
S_0x555578906c10 .scope generate, "g[1]" "g[1]" 14 188, 14 188 0, S_0x5555789063a0;
 .timescale 0 0;
P_0x555578906e30 .param/l "i" 1 14 188, +C4<01>;
v0x555578906ef0_0 .net *"_ivl_0", 31 0, L_0x555578932770;  1 drivers
v0x555578906fd0_0 .net *"_ivl_1", 0 0, L_0x555578932810;  1 drivers
L_0x7f258a66ed10 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v0x5555789070b0_0 .net/2u *"_ivl_2", 0 0, L_0x7f258a66ed10;  1 drivers
v0x5555789071a0_0 .net *"_ivl_4", 33 0, L_0x555578932900;  1 drivers
L_0x555578932900 .concat [ 1 1 32 0], L_0x7f258a66ed10, L_0x555578932810, L_0x555578932770;
S_0x555578907280 .scope generate, "g_response_ready" "g_response_ready" 14 218, 14 218 0, S_0x555578905180;
 .timescale 0 0;
L_0x555578932ae0 .functor OR 1, L_0x555578932170, L_0x555578933ce0, C4<0>, C4<0>;
S_0x555578907490 .scope autofunction.vec4.s3, "get_local_address" "get_local_address" 14 131, 14 131 0, S_0x555578905180;
 .timescale 0 0;
v0x555578907670_0 .var "address", 3 0;
; Variable get_local_address is vec4 return value of scope S_0x555578907490
v0x555578907830_0 .var "local_address", 3 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.u_adapter.u_adapter_common.get_local_address ;
    %load/vec4 v0x555578907670_0;
    %store/vec4 v0x555578907830_0, 0, 4;
    %load/vec4 v0x555578907830_0;
    %parti/s 3, 0, 2;
    %ret/vec4 0, 0, 3;  Assign to get_local_address (store_vec4_to_lval)
    %end;
S_0x555578907920 .scope autofunction.vec4.s32, "get_register_strobe" "get_register_strobe" 14 147, 14 147 0, S_0x555578905180;
 .timescale 0 0;
v0x555578907b50_0 .var "access", 1 0;
; Variable get_register_strobe is vec4 return value of scope S_0x555578907920
v0x555578907d30_0 .var/i "i", 31 0;
v0x555578907df0_0 .var "register_strobe", 31 0;
v0x555578907ed0_0 .var "strobe", 3 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.u_adapter.u_adapter_common.get_register_strobe ;
    %pushi/vec4 1, 0, 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_44.533, 9;
    %load/vec4 v0x555578907b50_0;
    %pushi/vec4 2, 0, 2;
    %cmp/e;
    %flag_get/vec4 4;
    %and;
T_44.533;
    %flag_set/vec4 8;
    %jmp/0xz  T_44.531, 8;
    %pushi/vec4 4294967295, 0, 32;
    %store/vec4 v0x555578907df0_0, 0, 32;
    %jmp T_44.532;
T_44.531 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x555578907d30_0, 0, 32;
T_44.534 ; Top of for-loop
    %load/vec4 v0x555578907d30_0;
    %cmpi/s 4, 0, 32;
	  %jmp/0xz T_44.535, 5;
    %load/vec4 v0x555578907ed0_0;
    %load/vec4 v0x555578907d30_0;
    %part/s 1;
    %replicate 8;
    %load/vec4 v0x555578907d30_0;
    %muli 8, 0, 32;
    %ix/vec4/s 4;
    %store/vec4 v0x555578907df0_0, 4, 8;
T_44.536 ; for-loop step statement
    %load/vec4 v0x555578907d30_0;
    %addi 1, 0, 32;
    %store/vec4 v0x555578907d30_0, 0, 32;
    %jmp T_44.534;
T_44.535 ; for-loop exit label
T_44.532 ;
    %load/vec4 v0x555578907df0_0;
    %ret/vec4 0, 0, 32;  Assign to get_register_strobe (store_vec4_to_lval)
    %end;
S_0x555578908000 .scope autofunction.vec4.s1, "pre_decode" "pre_decode" 14 66, 14 66 0, S_0x555578905180;
 .timescale 0 0;
v0x5555789081e0_0 .var "address", 3 0;
v0x5555789082e0_0 .var "begin_address", 3 0;
v0x5555789083c0_0 .var/i "delta", 31 0;
v0x555578908480_0 .var "end_address", 3 0;
; Variable pre_decode is vec4 return value of scope S_0x555578908000
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.u_adapter.u_adapter_common.pre_decode ;
    %pushi/vec4 7, 0, 32;
    %store/vec4 v0x5555789083c0_0, 0, 32;
    %pushi/vec4 0, 0, 4;
    %store/vec4 v0x5555789082e0_0, 0, 4;
    %load/vec4 v0x5555789082e0_0;
    %load/vec4 v0x5555789083c0_0;
    %parti/s 4, 0, 2;
    %add;
    %store/vec4 v0x555578908480_0, 0, 4;
    %load/vec4 v0x5555789082e0_0;
    %load/vec4 v0x5555789081e0_0;
    %cmp/u;
    %flag_or 5, 4;
    %flag_get/vec4 5;
    %jmp/0 T_45.537, 5;
    %load/vec4 v0x5555789081e0_0;
    %load/vec4 v0x555578908480_0;
    %cmp/u;
    %flag_get/vec4 4;
    %flag_get/vec4 5;
    %or;
    %and;
T_45.537;
    %ret/vec4 0, 0, 1;  Assign to pre_decode (store_vec4_to_lval)
    %end;
S_0x555578908670 .scope module, "u_response_mux" "rggen_mux" 14 206, 12 1 0, S_0x555578905180;
 .timescale 0 0;
    .port_info 0 /INPUT 2 "i_select";
    .port_info 1 /INPUT 68 "i_data";
    .port_info 2 /OUTPUT 34 "o_data";
P_0x5555788f3d70 .param/l "ENTRIES" 0 12 3, +C4<00000000000000000000000000000010>;
P_0x5555788f3db0 .param/l "WIDTH" 0 12 2, +C4<00000000000000000000000000000100010>;
v0x55557890bca0_0 .net "i_data", 67 0, L_0x555578932640;  alias, 1 drivers
v0x55557890bd80_0 .net "i_select", 1 0, L_0x55557892f1e0;  alias, 1 drivers
v0x55557890be60_0 .net "o_data", 33 0, L_0x555578932e90;  alias, 1 drivers
L_0x555578932f50 .part L_0x555578932640, 0, 34;
L_0x555578932ff0 .part L_0x55557892f1e0, 0, 1;
L_0x5555789333c0 .part L_0x555578932640, 34, 34;
L_0x5555789334f0 .part L_0x55557892f1e0, 1, 1;
S_0x5555789089e0 .scope generate, "g" "g" 12 10, 12 10 0, S_0x555578908670;
 .timescale 0 0;
v0x55557890bbb0_0 .net "masked_data", 67 0, L_0x555578933290;  1 drivers
L_0x555578933290 .concat8 [ 34 34 0 0], L_0x555578933180, L_0x555578933660;
S_0x555578908be0 .scope generate, "g[0]" "g[0]" 12 14, 12 14 0, S_0x5555789089e0;
 .timescale 0 0;
P_0x555578908e00 .param/l "i" 1 12 14, +C4<00>;
L_0x555578933180 .functor AND 34, L_0x555578932f50, L_0x555578933090, C4<1111111111111111111111111111111111>, C4<1111111111111111111111111111111111>;
v0x5555789088f0_0 .net *"_ivl_0", 33 0, L_0x555578932f50;  1 drivers
v0x555578908f20_0 .net *"_ivl_1", 0 0, L_0x555578932ff0;  1 drivers
v0x555578909000_0 .net *"_ivl_3", 33 0, L_0x555578933090;  1 drivers
v0x5555789090f0_0 .net *"_ivl_4", 33 0, L_0x555578933180;  1 drivers
L_0x555578933090 .repeat 34, 34, L_0x555578932ff0;
S_0x5555789091d0 .scope generate, "g[1]" "g[1]" 12 14, 12 14 0, S_0x5555789089e0;
 .timescale 0 0;
P_0x5555789093f0 .param/l "i" 1 12 14, +C4<01>;
L_0x555578933660 .functor AND 34, L_0x5555789333c0, L_0x5555789335c0, C4<1111111111111111111111111111111111>, C4<1111111111111111111111111111111111>;
v0x5555789094b0_0 .net *"_ivl_0", 33 0, L_0x5555789333c0;  1 drivers
v0x555578909590_0 .net *"_ivl_1", 0 0, L_0x5555789334f0;  1 drivers
v0x555578909670_0 .net *"_ivl_3", 33 0, L_0x5555789335c0;  1 drivers
v0x555578909760_0 .net *"_ivl_4", 33 0, L_0x555578933660;  1 drivers
L_0x5555789335c0 .repeat 34, 34, L_0x5555789334f0;
S_0x555578909840 .scope module, "u_reducer" "rggen_or_reducer" 12 21, 15 1 0, S_0x5555789089e0;
 .timescale 0 0;
    .port_info 0 /INPUT 68 "i_data";
    .port_info 1 /OUTPUT 34 "o_result";
P_0x5555788b6120 .param/l "N" 0 15 3, +C4<00000000000000000000000000000010>;
P_0x5555788b6160 .param/l "NEXT_N" 1 15 79, +C4<00000000000000000000000000000001>;
P_0x5555788b61a0 .param/l "OFFSET_LIST" 1 15 78, C4<00000000000000100000000000000000>;
P_0x5555788b61e0 .param/l "SUB_N_LIST" 1 15 77, C4<00000000000000000000000000000010>;
P_0x5555788b6220 .param/l "WIDTH" 0 15 2, +C4<00000000000000000000000000000100010>;
v0x55557890b8b0_0 .net "i_data", 67 0, L_0x555578933290;  alias, 1 drivers
v0x55557890b9b0_0 .net "next_data", 33 0, L_0x555578932d80;  1 drivers
v0x55557890ba90_0 .net "o_result", 33 0, L_0x555578932e90;  alias, 1 drivers
L_0x555578932bf0 .part L_0x555578933290, 0, 34;
L_0x555578932ce0 .part L_0x555578933290, 34, 34;
S_0x555578909dc0 .scope generate, "g_or_loop[0]" "g_or_loop[0]" 15 85, 15 85 0, S_0x555578909840;
 .timescale 0 0;
P_0x555578909fe0 .param/l "i" 1 15 85, +C4<00>;
S_0x55557890a0c0 .scope generate, "g" "g" 15 94, 15 94 0, S_0x555578909dc0;
 .timescale 0 0;
L_0x555578932d80 .functor OR 34, L_0x555578932bf0, L_0x555578932ce0, C4<0000000000000000000000000000000000>, C4<0000000000000000000000000000000000>;
v0x555578909ca0_0 .net *"_ivl_0", 33 0, L_0x555578932bf0;  1 drivers
v0x55557890a300_0 .net *"_ivl_1", 33 0, L_0x555578932ce0;  1 drivers
S_0x55557890a3e0 .scope generate, "g_reduce" "g_reduce" 15 102, 15 102 0, S_0x555578909840;
 .timescale 0 0;
L_0x555578932e90 .functor BUFZ 34, L_0x555578932d80, C4<0000000000000000000000000000000000>, C4<0000000000000000000000000000000000>, C4<0000000000000000000000000000000000>;
S_0x55557890a5e0 .scope autofunction.vec4.u32, "get_next_n" "get_next_n" 15 62, 15 62 0, S_0x555578909840;
 .timescale 0 0;
; Variable get_next_n is vec4 return value of scope S_0x55557890a5e0
v0x55557890a8b0_0 .var/i "i", 31 0;
v0x55557890a990_0 .var/i "next_n", 31 0;
v0x55557890aa80_0 .var "sub_n_list", 31 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.u_adapter.u_adapter_common.u_response_mux.g.u_reducer.get_next_n ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55557890a990_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55557890a8b0_0, 0, 32;
T_46.538 ; Top of for-loop
    %load/vec4 v0x55557890a8b0_0;
    %cmpi/s 2, 0, 32;
	  %jmp/0xz T_46.539, 5;
    %load/vec4 v0x55557890a990_0;
    %load/vec4 v0x55557890aa80_0;
    %load/vec4 v0x55557890a8b0_0;
    %muli 16, 0, 32;
    %part/s 16;
    %pad/u 32;
    %cmpi/ne 0, 0, 32;
    %flag_mov 8, 4;
    %jmp/0 T_46.541, 8;
    %pushi/vec4 1, 0, 32;
    %jmp/1 T_46.542, 8;
T_46.541 ; End of true expr.
    %pushi/vec4 0, 0, 32;
    %jmp/0 T_46.542, 8;
 ; End of false expr.
    %blend;
T_46.542;
    %add;
    %store/vec4 v0x55557890a990_0, 0, 32;
T_46.540 ; for-loop step statement
    %load/vec4 v0x55557890a8b0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55557890a8b0_0, 0, 32;
    %jmp T_46.538;
T_46.539 ; for-loop exit label
    %load/vec4 v0x55557890a990_0;
    %ret/vec4 0, 0, 32;  Assign to get_next_n (store_vec4_to_lval)
    %end;
S_0x55557890ab60 .scope autofunction.vec4.s32, "get_offset_list" "get_offset_list" 15 43, 15 43 0, S_0x555578909840;
 .timescale 0 0;
; Variable get_offset_list is vec4 return value of scope S_0x55557890ab60
v0x55557890ae40_0 .var/i "i", 31 0;
v0x55557890af20_0 .var "list", 31 0;
v0x55557890b010_0 .var "sub_n_list", 31 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.u_adapter.u_adapter_common.u_response_mux.g.u_reducer.get_offset_list ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55557890ae40_0, 0, 32;
T_47.543 ; Top of for-loop
    %load/vec4 v0x55557890ae40_0;
    %cmpi/s 2, 0, 32;
	  %jmp/0xz T_47.544, 5;
    %load/vec4 v0x55557890ae40_0;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_47.546, 4;
    %pushi/vec4 0, 0, 16;
    %load/vec4 v0x55557890ae40_0;
    %muli 16, 0, 32;
    %ix/vec4/s 4;
    %store/vec4 v0x55557890af20_0, 4, 16;
    %jmp T_47.547;
T_47.546 ;
    %load/vec4 v0x55557890b010_0;
    %load/vec4 v0x55557890ae40_0;
    %subi 1, 0, 32;
    %muli 16, 0, 32;
    %part/s 16;
    %load/vec4 v0x55557890af20_0;
    %load/vec4 v0x55557890ae40_0;
    %subi 1, 0, 32;
    %muli 16, 0, 32;
    %part/s 16;
    %add;
    %load/vec4 v0x55557890ae40_0;
    %muli 16, 0, 32;
    %ix/vec4/s 4;
    %store/vec4 v0x55557890af20_0, 4, 16;
T_47.547 ;
T_47.545 ; for-loop step statement
    %load/vec4 v0x55557890ae40_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55557890ae40_0, 0, 32;
    %jmp T_47.543;
T_47.544 ; for-loop exit label
    %load/vec4 v0x55557890af20_0;
    %ret/vec4 0, 0, 32;  Assign to get_offset_list (store_vec4_to_lval)
    %end;
S_0x55557890b0f0 .scope autofunction.vec4.s32, "get_sub_n_list" "get_sub_n_list" 15 8, 15 8 0, S_0x555578909840;
 .timescale 0 0;
v0x55557890b320_0 .var "current_n", 15 0;
; Variable get_sub_n_list is vec4 return value of scope S_0x55557890b0f0
v0x55557890b500_0 .var "half_n", 15 0;
v0x55557890b5c0_0 .var "list", 31 0;
v0x55557890b6a0_0 .var/i "list_index", 31 0;
v0x55557890b7d0_0 .var/i "n", 31 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.u_adapter.u_adapter_common.u_response_mux.g.u_reducer.get_sub_n_list ;
    %load/vec4 v0x55557890b7d0_0;
    %parti/s 16, 0, 2;
    %store/vec4 v0x55557890b320_0, 0, 16;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55557890b6a0_0, 0, 32;
T_48.548 ;
    %load/vec4 v0x55557890b320_0;
    %pad/u 32;
    %cmpi/u 0, 0, 32;
    %flag_or 5, 4; GT is !LE
    %flag_inv 5;
    %jmp/0xz T_48.549, 5;
    %load/vec4 v0x55557890b320_0;
    %pad/u 32;
    %pushi/vec4 2, 0, 32;
    %div;
    %pad/u 16;
    %store/vec4 v0x55557890b500_0, 0, 16;
    %load/vec4 v0x55557890b320_0;
    %pad/u 32;
    %cmpi/u 4, 0, 32;
    %flag_or 5, 4; GT is !LE
    %flag_inv 5;
    %flag_get/vec4 5;
    %jmp/0 T_48.552, 5;
    %load/vec4 v0x55557890b500_0;
    %pad/u 32;
    %cmpi/u 4, 0, 32;
    %flag_get/vec4 4;
    %flag_get/vec4 5;
    %or;
    %and;
T_48.552;
    %flag_set/vec4 8;
    %jmp/0xz  T_48.550, 8;
    %load/vec4 v0x55557890b500_0;
    %load/vec4 v0x55557890b6a0_0;
    %muli 16, 0, 32;
    %ix/vec4/s 4;
    %store/vec4 v0x55557890b5c0_0, 4, 16;
    %jmp T_48.551;
T_48.550 ;
    %load/vec4 v0x55557890b320_0;
    %pad/u 32;
    %cmpi/u 4, 0, 32;
    %flag_inv 5; GE is !LT
    %jmp/0xz  T_48.553, 5;
    %pushi/vec4 4, 0, 16;
    %load/vec4 v0x55557890b6a0_0;
    %muli 16, 0, 32;
    %ix/vec4/s 4;
    %store/vec4 v0x55557890b5c0_0, 4, 16;
    %jmp T_48.554;
T_48.553 ;
    %load/vec4 v0x55557890b320_0;
    %load/vec4 v0x55557890b6a0_0;
    %muli 16, 0, 32;
    %ix/vec4/s 4;
    %store/vec4 v0x55557890b5c0_0, 4, 16;
T_48.554 ;
T_48.551 ;
    %load/vec4 v0x55557890b320_0;
    %load/vec4 v0x55557890b5c0_0;
    %load/vec4 v0x55557890b6a0_0;
    %muli 16, 0, 32;
    %part/s 16;
    %sub;
    %store/vec4 v0x55557890b320_0, 0, 16;
    %load/vec4 v0x55557890b6a0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55557890b6a0_0, 0, 32;
    %jmp T_48.548;
T_48.549 ;
T_48.555 ;
    %load/vec4 v0x55557890b6a0_0;
    %cmpi/s 2, 0, 32;
    %jmp/0xz T_48.556, 5;
    %pushi/vec4 0, 0, 16;
    %load/vec4 v0x55557890b6a0_0;
    %muli 16, 0, 32;
    %ix/vec4/s 4;
    %store/vec4 v0x55557890b5c0_0, 4, 16;
    %load/vec4 v0x55557890b6a0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55557890b6a0_0, 0, 32;
    %jmp T_48.555;
T_48.556 ;
    %load/vec4 v0x55557890b5c0_0;
    %ret/vec4 0, 0, 32;  Assign to get_sub_n_list (store_vec4_to_lval)
    %end;
S_0x555578914bc0 .scope autotask, "wishbone_readwdg" "wishbone_readwdg" 2 287, 2 287 0, S_0x55557868e6c0;
 .timescale 0 0;
v0x555578914dc0_0 .var "rdata", 31 0;
TD_wdg_tb.wishbone_readwdg ;
    %alloc S_0x555578915220;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x5555789156a0_0, 0, 1;
    %pushi/vec4 4, 0, 32;
    %store/vec4 v0x555578915400_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x555578915760_0, 0, 32;
    %pushi/vec4 15, 0, 4;
    %store/vec4 v0x5555789155e0_0, 0, 4;
    %fork TD_wdg_tb.wishbone_transaction, S_0x555578915220;
    %join;
    %load/vec4 v0x555578915500_0;
    %store/vec4 v0x555578914dc0_0, 0, 32;
    %free S_0x555578915220;
    %vpi_call 2 298 "$display", "xxxxxxxxxxxxxxxxxxxxx" {0 0 0};
    %vpi_call 2 299 "$display", "!!!read data: %d !!!", v0x555578914dc0_0 {0 0 0};
    %vpi_call 2 300 "$display", "xxxxxxxxxxxxxxxxxxxxx" {0 0 0};
    %end;
S_0x555578914ea0 .scope autotask, "wishbone_set_wdcsr" "wishbone_set_wdcsr" 2 257, 2 257 0, S_0x55557868e6c0;
 .timescale 0 0;
v0x555578915080_0 .var "en", 0 0;
v0x555578915140_0 .var "wtocnt", 9 0;
TD_wdg_tb.wishbone_set_wdcsr ;
    %vpi_call 2 263 "$display", "-  Sending WDCSR Register Access -" {0 0 0};
    %vpi_call 2 264 "$display", "Enable     : 0x%08h", v0x555578915080_0 {0 0 0};
    %vpi_call 2 265 "$display", "WTOCNT     : 0x%08h", v0x555578915140_0 {0 0 0};
    %alloc S_0x555578915220;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x5555789156a0_0, 0, 1;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x555578915400_0, 0, 32;
    %pushi/vec4 0, 0, 18;
    %load/vec4 v0x555578915140_0;
    %concat/vec4; draw_concat_vec4
    %concati/vec4 0, 0, 2;
    %concati/vec4 0, 0, 1;
    %load/vec4 v0x555578915080_0;
    %concat/vec4; draw_concat_vec4
    %store/vec4 v0x555578915760_0, 0, 32;
    %pushi/vec4 15, 0, 4;
    %store/vec4 v0x5555789155e0_0, 0, 4;
    %fork TD_wdg_tb.wishbone_transaction, S_0x555578915220;
    %join;
    %load/vec4 v0x555578915500_0;
    %store/vec4 v0x555578915950_0, 0, 32;
    %free S_0x555578915220;
    %end;
S_0x555578915220 .scope autotask, "wishbone_transaction" "wishbone_transaction" 2 189, 2 189 0, S_0x55557868e6c0;
 .timescale 0 0;
v0x555578915400_0 .var "address", 31 0;
v0x555578915500_0 .var "read_data", 31 0;
v0x5555789155e0_0 .var "sel", 3 0;
v0x5555789156a0_0 .var "write", 0 0;
v0x555578915760_0 .var "write_data", 31 0;
TD_wdg_tb.wishbone_transaction ;
T_51.557 ;
    %load/vec4 v0x555578916020_0;
    %flag_set/vec4 8;
    %jmp/0xz T_51.558, 8;
    %wait E_0x55557876c910;
    %jmp T_51.557;
T_51.558 ;
    %load/vec4 v0x555578915400_0;
    %pad/u 4;
    %store/vec4 v0x555578915c80_0, 0, 4;
    %load/vec4 v0x555578915760_0;
    %store/vec4 v0x555578915ea0_0, 0, 32;
    %load/vec4 v0x5555789155e0_0;
    %store/vec4 v0x555578915f60_0, 0, 4;
    %load/vec4 v0x5555789156a0_0;
    %store/vec4 v0x555578916160_0, 0, 1;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x555578915d40_0, 0, 1;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x5555789160c0_0, 0, 1;
    %vpi_call 2 213 "$display", "----------------------------------" {0 0 0};
    %vpi_call 2 214 "$display", "- Wishbone Transaction Initiated -" {0 0 0};
    %vpi_call 2 215 "$display", "----------------------------------" {0 0 0};
    %load/vec4 v0x5555789156a0_0;
    %flag_set/vec4 8;
    %jmp/0 T_51.559, 8;
    %pushi/vec4 1465010516, 0, 32; draw_string_vec4
    %pushi/vec4 69, 0, 8; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %jmp/1 T_51.560, 8;
T_51.559 ; End of true expr.
    %pushi/vec4 5391681, 0, 32; draw_string_vec4
    %pushi/vec4 68, 0, 8; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %jmp/0 T_51.560, 8;
 ; End of false expr.
    %blend;
T_51.560;
    %vpi_call 2 216 "$display", "Mode       : %s", S<0,vec4,u40> {1 0 0};
    %vpi_call 2 217 "$display", "Address    : 0x%08h", v0x555578915400_0 {0 0 0};
    %vpi_call 2 218 "$display", "Write Data : 0x%08h", v0x555578915760_0 {0 0 0};
    %vpi_call 2 219 "$display", "Byte Sel   : 0b%b", v0x5555789155e0_0 {0 0 0};
    %vpi_call 2 220 "$display", "----------------------------------" {0 0 0};
    %vpi_call 2 226 "$display", "Waiting for ACK..." {0 0 0};
    %pushi/vec4 100000, 0, 32;
    %store/vec4 v0x555578915ad0_0, 0, 32;
T_51.561 ;
    %load/vec4 v0x555578915b90_0;
    %nor/r;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_51.563, 9;
    %pushi/vec4 0, 0, 32;
    %load/vec4 v0x555578915ad0_0;
    %cmp/s;
    %flag_get/vec4 5;
    %and;
T_51.563;
    %flag_set/vec4 8;
    %jmp/0xz T_51.562, 8;
    %wait E_0x55557876c910;
    %load/vec4 v0x555578915ad0_0;
    %subi 1, 0, 32;
    %store/vec4 v0x555578915ad0_0, 0, 32;
    %vpi_call 2 235 "$display", "timeout %d", v0x555578915ad0_0 {0 0 0};
    %jmp T_51.561;
T_51.562 ;
    %load/vec4 v0x555578915ad0_0;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_51.564, 4;
    %vpi_call 2 239 "$display", "ERROR: Timeout waiting for ACK!" {0 0 0};
    %jmp T_51.565;
T_51.564 ;
    %vpi_call 2 242 "$display", "Received ACK" {0 0 0};
    %load/vec4 v0x5555789156a0_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_51.566, 8;
    %load/vec4 v0x555578915de0_0;
    %store/vec4 v0x555578915500_0, 0, 32;
T_51.566 ;
T_51.565 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x555578915d40_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x5555789160c0_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x555578916160_0, 0, 1;
    %end;
    .scope S_0x5555788f0870;
T_52 ;
    %wait E_0x5555785950f0;
    %load/vec4 v0x5555788f37f0_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_52.0, 8;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x5555788f0a50_0, 0;
    %jmp T_52.1;
T_52.0 ;
    %pushi/vec4 1, 0, 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_52.4, 9;
    %load/vec4 v0x5555788f4650_0;
    %parti/s 1, 1, 2;
    %and;
T_52.4;
    %flag_set/vec4 8;
    %jmp/0xz  T_52.2, 8;
    %alloc S_0x5555788f24f0;
    %load/vec4 v0x5555788f0a50_0;
    %load/vec4 v0x5555788f3890_0;
    %load/vec4 v0x5555788f3b30_0;
    %store/vec4 v0x5555788f2bb0_0, 0, 1;
    %store/vec4 v0x5555788f29a0_0, 0, 1;
    %store/vec4 v0x5555788f26d0_0, 0, 1;
    %callf/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_wden.u_bit_field.get_sw_write_next_value, S_0x5555788f24f0;
    %free S_0x5555788f24f0;
    %assign/vec4 v0x5555788f0a50_0, 0;
T_52.2 ;
T_52.1 ;
    %jmp T_52;
    .thread T_52;
    .scope S_0x5555788e40a0;
T_53 ;
    %wait E_0x5555785950f0;
    %load/vec4 v0x5555788e6ca0_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_53.0, 8;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x5555788e4380_0, 0;
    %jmp T_53.1;
T_53.0 ;
    %load/vec4 v0x5555788e7a30_0;
    %parti/s 1, 1, 2;
    %flag_set/vec4 8;
    %flag_get/vec4 8;
    %jmp/0 T_53.2, 8;
    %load/vec4 v0x5555788e6d40_0;
    %pushi/vec4 0, 0, 1;
    %cmp/ne;
    %flag_get/vec4 4;
    %and;
T_53.2;
    %assign/vec4 v0x5555788e4380_0, 0;
T_53.1 ;
    %jmp T_53;
    .thread T_53;
    .scope S_0x5555788e3240;
T_54 ;
    %wait E_0x5555785950f0;
    %load/vec4 v0x5555788e6ca0_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_54.0, 8;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x5555788e3510_0, 0;
    %jmp T_54.1;
T_54.0 ;
    %load/vec4 v0x5555788e6e20_0;
    %flag_set/vec4 8;
    %flag_get/vec4 8;
    %jmp/0 T_54.2, 8;
    %load/vec4 v0x5555788e6bc0_0;
    %pushi/vec4 0, 0, 1;
    %cmp/ne;
    %flag_get/vec4 4;
    %and;
T_54.2;
    %assign/vec4 v0x5555788e3510_0, 0;
T_54.1 ;
    %jmp T_54;
    .thread T_54;
    .scope S_0x5555788e3dc0;
T_55 ;
    %wait E_0x5555785950f0;
    %load/vec4 v0x5555788e6ca0_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_55.0, 8;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x5555788e3fa0_0, 0;
    %jmp T_55.1;
T_55.0 ;
    %pushi/vec4 1, 0, 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_55.4, 9;
    %load/vec4 v0x5555788e78b0_0;
    %and;
T_55.4;
    %flag_set/vec4 8;
    %jmp/0xz  T_55.2, 8;
    %alloc S_0x5555788e4440;
    %load/vec4 v0x5555788e3fa0_0;
    %load/vec4 v0x5555788e6ab0_0;
    %load/vec4 v0x5555788e6f50_0;
    %load/vec4 v0x5555788e6920_0;
    %load/vec4 v0x5555788e6840_0;
    %store/vec4 v0x5555788e4620_0, 0, 1;
    %store/vec4 v0x5555788e49a0_0, 0, 1;
    %store/vec4 v0x5555788e4c20_0, 0, 1;
    %store/vec4 v0x5555788e4d00_0, 0, 1;
    %store/vec4 v0x5555788e4720_0, 0, 1;
    %callf/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_s1wto.u_bit_field.get_hw_next_value, S_0x5555788e4440;
    %free S_0x5555788e4440;
    %assign/vec4 v0x5555788e3fa0_0, 0;
    %jmp T_55.3;
T_55.2 ;
    %pushi/vec4 1, 0, 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_55.7, 9;
    %load/vec4 v0x5555788e7a30_0;
    %parti/s 1, 1, 2;
    %and;
T_55.7;
    %flag_set/vec4 8;
    %jmp/0xz  T_55.5, 8;
    %alloc S_0x5555788e59b0;
    %load/vec4 v0x5555788e3fa0_0;
    %load/vec4 v0x5555788e6d40_0;
    %load/vec4 v0x5555788e6f50_0;
    %store/vec4 v0x5555788e6070_0, 0, 1;
    %store/vec4 v0x5555788e5e60_0, 0, 1;
    %store/vec4 v0x5555788e5b90_0, 0, 1;
    %callf/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_s1wto.u_bit_field.get_sw_write_next_value, S_0x5555788e59b0;
    %free S_0x5555788e59b0;
    %assign/vec4 v0x5555788e3fa0_0, 0;
T_55.5 ;
T_55.3 ;
T_55.1 ;
    %jmp T_55;
    .thread T_55;
    .scope S_0x5555788ea6c0;
T_56 ;
    %wait E_0x5555785950f0;
    %load/vec4 v0x5555788ed3d0_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_56.0, 8;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x5555788ea9a0_0, 0;
    %jmp T_56.1;
T_56.0 ;
    %load/vec4 v0x5555788ee190_0;
    %parti/s 1, 1, 2;
    %flag_set/vec4 8;
    %flag_get/vec4 8;
    %jmp/0 T_56.2, 8;
    %load/vec4 v0x5555788ed580_0;
    %pushi/vec4 0, 0, 1;
    %cmp/ne;
    %flag_get/vec4 4;
    %and;
T_56.2;
    %assign/vec4 v0x5555788ea9a0_0, 0;
T_56.1 ;
    %jmp T_56;
    .thread T_56;
    .scope S_0x5555788e9860;
T_57 ;
    %wait E_0x5555785950f0;
    %load/vec4 v0x5555788ed3d0_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_57.0, 8;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x5555788e9b30_0, 0;
    %jmp T_57.1;
T_57.0 ;
    %load/vec4 v0x5555788ed660_0;
    %flag_set/vec4 8;
    %flag_get/vec4 8;
    %jmp/0 T_57.2, 8;
    %load/vec4 v0x5555788ed2f0_0;
    %pushi/vec4 0, 0, 1;
    %cmp/ne;
    %flag_get/vec4 4;
    %and;
T_57.2;
    %assign/vec4 v0x5555788e9b30_0, 0;
T_57.1 ;
    %jmp T_57;
    .thread T_57;
    .scope S_0x5555788ea3e0;
T_58 ;
    %wait E_0x5555785950f0;
    %load/vec4 v0x5555788ed3d0_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_58.0, 8;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x5555788ea5c0_0, 0;
    %jmp T_58.1;
T_58.0 ;
    %pushi/vec4 1, 0, 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_58.4, 9;
    %load/vec4 v0x5555788ee010_0;
    %and;
T_58.4;
    %flag_set/vec4 8;
    %jmp/0xz  T_58.2, 8;
    %alloc S_0x5555788eaa60;
    %load/vec4 v0x5555788ea5c0_0;
    %load/vec4 v0x5555788ed1e0_0;
    %load/vec4 v0x5555788ed700_0;
    %load/vec4 v0x5555788ed050_0;
    %load/vec4 v0x5555788ecf70_0;
    %store/vec4 v0x5555788eac40_0, 0, 1;
    %store/vec4 v0x5555788eafc0_0, 0, 1;
    %store/vec4 v0x5555788eb240_0, 0, 1;
    %store/vec4 v0x5555788eb320_0, 0, 1;
    %store/vec4 v0x5555788ead40_0, 0, 1;
    %callf/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_s2wto.u_bit_field.get_hw_next_value, S_0x5555788eaa60;
    %free S_0x5555788eaa60;
    %assign/vec4 v0x5555788ea5c0_0, 0;
    %jmp T_58.3;
T_58.2 ;
    %pushi/vec4 1, 0, 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_58.7, 9;
    %load/vec4 v0x5555788ee190_0;
    %parti/s 1, 1, 2;
    %and;
T_58.7;
    %flag_set/vec4 8;
    %jmp/0xz  T_58.5, 8;
    %alloc S_0x5555788ebfd0;
    %load/vec4 v0x5555788ea5c0_0;
    %load/vec4 v0x5555788ed580_0;
    %load/vec4 v0x5555788ed700_0;
    %store/vec4 v0x5555788ec690_0, 0, 1;
    %store/vec4 v0x5555788ec480_0, 0, 1;
    %store/vec4 v0x5555788ec1b0_0, 0, 1;
    %callf/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_s2wto.u_bit_field.get_sw_write_next_value, S_0x5555788ebfd0;
    %free S_0x5555788ebfd0;
    %assign/vec4 v0x5555788ea5c0_0, 0;
T_58.5 ;
T_58.3 ;
T_58.1 ;
    %jmp T_58;
    .thread T_58;
    .scope S_0x5555788f6e30;
T_59 ;
    %wait E_0x5555785950f0;
    %load/vec4 v0x5555788f9e70_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_59.0, 8;
    %pushi/vec4 1023, 0, 10;
    %assign/vec4 v0x5555788f7010_0, 0;
    %jmp T_59.1;
T_59.0 ;
    %pushi/vec4 1, 0, 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_59.4, 9;
    %load/vec4 v0x5555788fabb0_0;
    %parti/s 1, 1, 2;
    %and;
T_59.4;
    %flag_set/vec4 8;
    %jmp/0xz  T_59.2, 8;
    %alloc S_0x5555788f8b70;
    %load/vec4 v0x5555788f7010_0;
    %load/vec4 v0x5555788f9f10_0;
    %load/vec4 v0x5555788fa120_0;
    %store/vec4 v0x5555788f9230_0, 0, 10;
    %store/vec4 v0x5555788f9020_0, 0, 10;
    %store/vec4 v0x5555788f8d50_0, 0, 10;
    %callf/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_wtocnt.u_bit_field.get_sw_write_next_value, S_0x5555788f8b70;
    %free S_0x5555788f8b70;
    %assign/vec4 v0x5555788f7010_0, 0;
T_59.2 ;
T_59.1 ;
    %jmp T_59;
    .thread T_59;
    .scope S_0x555578904a20;
T_60 ;
    %wait E_0x5555785950f0;
    %load/vec4 v0x55557890ec80_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_60.0, 8;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x555578904d00_0, 0;
    %jmp T_60.1;
T_60.0 ;
    %load/vec4 v0x55557890fc50_0;
    %cmpi/ne 0, 0, 2;
    %jmp/0xz  T_60.2, 4;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x555578904d00_0, 0;
    %jmp T_60.3;
T_60.2 ;
    %load/vec4 v0x5555789103d0_0;
    %cmpi/e 1, 0, 2;
    %jmp/0xz  T_60.4, 4;
    %pushi/vec4 1, 0, 1;
    %assign/vec4 v0x555578904d00_0, 0;
T_60.4 ;
T_60.3 ;
T_60.1 ;
    %jmp T_60;
    .thread T_60;
    .scope S_0x555578904a20;
T_61 ;
    %wait E_0x5555785950f0;
    %load/vec4 v0x55557890ec80_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_61.0, 8;
    %pushi/vec4 0, 0, 4;
    %assign/vec4 v0x555578904dc0_0, 0;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x5555789050c0_0, 0;
    %pushi/vec4 0, 0, 32;
    %assign/vec4 v0x555578904eb0_0, 0;
    %pushi/vec4 0, 0, 4;
    %assign/vec4 v0x555578904f90_0, 0;
    %jmp T_61.1;
T_61.0 ;
    %load/vec4 v0x5555789103d0_0;
    %cmpi/e 1, 0, 2;
    %jmp/0xz  T_61.2, 4;
    %load/vec4 v0x55557890ed20_0;
    %assign/vec4 v0x555578904dc0_0, 0;
    %load/vec4 v0x55557890f120_0;
    %assign/vec4 v0x5555789050c0_0, 0;
    %load/vec4 v0x55557890eea0_0;
    %assign/vec4 v0x555578904eb0_0, 0;
    %load/vec4 v0x55557890ef80_0;
    %assign/vec4 v0x555578904f90_0, 0;
T_61.2 ;
T_61.1 ;
    %jmp T_61;
    .thread T_61;
    .scope S_0x555578905180;
T_62 ;
    %wait E_0x5555785950f0;
    %load/vec4 v0x55557890c9c0_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_62.0, 8;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x55557890d220_0, 0;
    %jmp T_62.1;
T_62.0 ;
    %load/vec4 v0x55557890d2e0_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_62.2, 8;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x55557890d220_0, 0;
    %jmp T_62.3;
T_62.2 ;
    %load/vec4 v0x55557890c440_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_62.4, 8;
    %pushi/vec4 1, 0, 1;
    %assign/vec4 v0x55557890d220_0, 0;
T_62.4 ;
T_62.3 ;
T_62.1 ;
    %jmp T_62;
    .thread T_62;
    .scope S_0x555578904070;
T_63 ;
    %wait E_0x5555785950f0;
    %load/vec4 v0x55557890ec80_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_63.0, 8;
    %pushi/vec4 0, 0, 2;
    %assign/vec4 v0x55557890fc50_0, 0;
    %jmp T_63.1;
T_63.0 ;
    %load/vec4 v0x55557890fc50_0;
    %cmpi/ne 0, 0, 2;
    %jmp/0xz  T_63.2, 4;
    %pushi/vec4 0, 0, 2;
    %assign/vec4 v0x55557890fc50_0, 0;
    %jmp T_63.3;
T_63.2 ;
    %load/vec4 v0x555578910230_0;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_63.6, 9;
    %load/vec4 v0x55557890ffc0_0;
    %and;
T_63.6;
    %flag_set/vec4 8;
    %jmp/0xz  T_63.4, 8;
    %load/vec4 v0x555578910090_0;
    %parti/s 1, 1, 2;
    %flag_set/vec4 8;
    %jmp/0xz  T_63.7, 8;
    %pushi/vec4 2, 0, 2;
    %assign/vec4 v0x55557890fc50_0, 0;
    %jmp T_63.8;
T_63.7 ;
    %pushi/vec4 1, 0, 2;
    %assign/vec4 v0x55557890fc50_0, 0;
T_63.8 ;
T_63.4 ;
T_63.3 ;
T_63.1 ;
    %jmp T_63;
    .thread T_63;
    .scope S_0x555578904070;
T_64 ;
    %wait E_0x5555785950f0;
    %load/vec4 v0x55557890ec80_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_64.0, 8;
    %pushi/vec4 0, 0, 32;
    %assign/vec4 v0x55557890fb70_0, 0;
    %jmp T_64.1;
T_64.0 ;
    %load/vec4 v0x555578910230_0;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_64.4, 9;
    %load/vec4 v0x55557890ffc0_0;
    %and;
T_64.4;
    %flag_set/vec4 8;
    %jmp/0xz  T_64.2, 8;
    %load/vec4 v0x55557890fef0_0;
    %assign/vec4 v0x55557890fb70_0, 0;
T_64.2 ;
T_64.1 ;
    %jmp T_64;
    .thread T_64;
    .scope S_0x555578832390;
T_65 ;
    %wait E_0x5555788da6a0;
    %load/vec4 v0x5555788c0590_0;
    %load/vec4 v0x5555787307d0_0;
    %concat/vec4; draw_concat_vec4
    %dup/vec4;
    %pushi/vec4 56, 56, 7;
    %cmp/x;
    %jmp/1 T_65.0, 4;
    %dup/vec4;
    %pushi/vec4 120, 104, 7;
    %cmp/x;
    %jmp/1 T_65.1, 4;
    %dup/vec4;
    %pushi/vec4 120, 112, 7;
    %cmp/x;
    %jmp/1 T_65.2, 4;
    %dup/vec4;
    %pushi/vec4 120, 56, 7;
    %cmp/x;
    %jmp/1 T_65.3, 4;
    %dup/vec4;
    %pushi/vec4 57, 56, 7;
    %cmp/x;
    %jmp/1 T_65.4, 4;
    %dup/vec4;
    %pushi/vec4 121, 104, 7;
    %cmp/x;
    %jmp/1 T_65.5, 4;
    %dup/vec4;
    %pushi/vec4 121, 112, 7;
    %cmp/x;
    %jmp/1 T_65.6, 4;
    %dup/vec4;
    %pushi/vec4 65, 0, 7;
    %cmp/x;
    %jmp/1 T_65.7, 4;
    %dup/vec4;
    %pushi/vec4 121, 24, 7;
    %cmp/x;
    %jmp/1 T_65.8, 4;
    %dup/vec4;
    %pushi/vec4 58, 56, 7;
    %cmp/x;
    %jmp/1 T_65.9, 4;
    %dup/vec4;
    %pushi/vec4 122, 104, 7;
    %cmp/x;
    %jmp/1 T_65.10, 4;
    %dup/vec4;
    %pushi/vec4 122, 112, 7;
    %cmp/x;
    %jmp/1 T_65.11, 4;
    %dup/vec4;
    %pushi/vec4 122, 120, 7;
    %cmp/x;
    %jmp/1 T_65.12, 4;
    %dup/vec4;
    %pushi/vec4 59, 56, 7;
    %cmp/x;
    %jmp/1 T_65.13, 4;
    %dup/vec4;
    %pushi/vec4 123, 104, 7;
    %cmp/x;
    %jmp/1 T_65.14, 4;
    %dup/vec4;
    %pushi/vec4 123, 112, 7;
    %cmp/x;
    %jmp/1 T_65.15, 4;
    %dup/vec4;
    %pushi/vec4 67, 0, 7;
    %cmp/x;
    %jmp/1 T_65.16, 4;
    %dup/vec4;
    %pushi/vec4 123, 24, 7;
    %cmp/x;
    %jmp/1 T_65.17, 4;
    %dup/vec4;
    %pushi/vec4 62, 56, 7;
    %cmp/x;
    %jmp/1 T_65.18, 4;
    %dup/vec4;
    %pushi/vec4 126, 104, 7;
    %cmp/x;
    %jmp/1 T_65.19, 4;
    %dup/vec4;
    %pushi/vec4 126, 112, 7;
    %cmp/x;
    %jmp/1 T_65.20, 4;
    %dup/vec4;
    %pushi/vec4 126, 120, 7;
    %cmp/x;
    %jmp/1 T_65.21, 4;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0x5555788ce1d0_0, 0, 3;
    %jmp T_65.23;
T_65.0 ;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0x5555788ce1d0_0, 0, 3;
    %jmp T_65.23;
T_65.1 ;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0x5555788ce1d0_0, 0, 3;
    %jmp T_65.23;
T_65.2 ;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0x5555788ce1d0_0, 0, 3;
    %jmp T_65.23;
T_65.3 ;
    %pushi/vec4 1, 0, 3;
    %store/vec4 v0x5555788ce1d0_0, 0, 3;
    %jmp T_65.23;
T_65.4 ;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0x5555788ce1d0_0, 0, 3;
    %jmp T_65.23;
T_65.5 ;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0x5555788ce1d0_0, 0, 3;
    %jmp T_65.23;
T_65.6 ;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0x5555788ce1d0_0, 0, 3;
    %jmp T_65.23;
T_65.7 ;
    %pushi/vec4 1, 0, 3;
    %store/vec4 v0x5555788ce1d0_0, 0, 3;
    %jmp T_65.23;
T_65.8 ;
    %pushi/vec4 2, 0, 3;
    %store/vec4 v0x5555788ce1d0_0, 0, 3;
    %jmp T_65.23;
T_65.9 ;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0x5555788ce1d0_0, 0, 3;
    %jmp T_65.23;
T_65.10 ;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0x5555788ce1d0_0, 0, 3;
    %jmp T_65.23;
T_65.11 ;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0x5555788ce1d0_0, 0, 3;
    %jmp T_65.23;
T_65.12 ;
    %pushi/vec4 3, 0, 3;
    %store/vec4 v0x5555788ce1d0_0, 0, 3;
    %jmp T_65.23;
T_65.13 ;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0x5555788ce1d0_0, 0, 3;
    %jmp T_65.23;
T_65.14 ;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0x5555788ce1d0_0, 0, 3;
    %jmp T_65.23;
T_65.15 ;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0x5555788ce1d0_0, 0, 3;
    %jmp T_65.23;
T_65.16 ;
    %pushi/vec4 3, 0, 3;
    %store/vec4 v0x5555788ce1d0_0, 0, 3;
    %jmp T_65.23;
T_65.17 ;
    %pushi/vec4 6, 0, 3;
    %store/vec4 v0x5555788ce1d0_0, 0, 3;
    %jmp T_65.23;
T_65.18 ;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0x5555788ce1d0_0, 0, 3;
    %jmp T_65.23;
T_65.19 ;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0x5555788ce1d0_0, 0, 3;
    %jmp T_65.23;
T_65.20 ;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0x5555788ce1d0_0, 0, 3;
    %jmp T_65.23;
T_65.21 ;
    %pushi/vec4 6, 0, 3;
    %store/vec4 v0x5555788ce1d0_0, 0, 3;
    %jmp T_65.23;
T_65.23 ;
    %pop/vec4 1;
    %jmp T_65;
    .thread T_65, $push;
    .scope S_0x555578832390;
T_66 ;
    %wait E_0x5555785950f0;
    %load/vec4 v0x5555787488b0_0;
    %inv;
    %flag_set/vec4 8;
    %jmp/0xz  T_66.0, 8;
    %pushi/vec4 0, 0, 3;
    %assign/vec4 v0x5555787307d0_0, 0;
    %jmp T_66.1;
T_66.0 ;
    %load/vec4 v0x5555788ce1d0_0;
    %assign/vec4 v0x5555787307d0_0, 0;
T_66.1 ;
    %jmp T_66;
    .thread T_66;
    .scope S_0x555578841c80;
T_67 ;
    %wait E_0x55557876d050;
    %load/vec4 v0x5555788cd0a0_0;
    %inv;
    %flag_set/vec4 8;
    %jmp/0xz  T_67.0, 8;
    %load/vec4 v0x5555786de8f0_0;
    %assign/vec4 v0x555578582450_0, 0;
    %jmp T_67.1;
T_67.0 ;
    %load/vec4 v0x555578582450_0;
    %pad/u 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_67.2, 4;
    %load/vec4 v0x5555786de8f0_0;
    %assign/vec4 v0x555578582450_0, 0;
    %jmp T_67.3;
T_67.2 ;
    %load/vec4 v0x555578582450_0;
    %subi 1, 0, 10;
    %assign/vec4 v0x555578582450_0, 0;
T_67.3 ;
T_67.1 ;
    %jmp T_67;
    .thread T_67;
    .scope S_0x555578888b30;
T_68 ;
    %wait E_0x55557876c910;
    %load/vec4 v0x555578582cc0_0;
    %inv;
    %flag_set/vec4 8;
    %jmp/0xz  T_68.0, 8;
    %pushi/vec4 0, 0, 20;
    %assign/vec4 v0x5555787181d0_0, 0;
    %jmp T_68.1;
T_68.0 ;
    %load/vec4 v0x5555787181d0_0;
    %addi 1, 0, 20;
    %assign/vec4 v0x5555787181d0_0, 0;
T_68.1 ;
    %jmp T_68;
    .thread T_68;
    .scope S_0x55557868e6c0;
T_69 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x555578915890_0, 0, 1;
T_69.0 ;
    %delay 1, 0;
    %load/vec4 v0x555578915890_0;
    %inv;
    %store/vec4 v0x555578915890_0, 0, 1;
    %jmp T_69.0;
T_69.1 ;
    %end;
    .thread T_69;
    .scope S_0x55557868e6c0;
T_70 ;
    %vpi_call 2 120 "$dumpfile", "sim/out/wdg_rv_out.vcd" {0 0 0};
    %vpi_call 2 121 "$dumpvars", 32'sb00000000000000000000000000000000, S_0x55557868e6c0 {0 0 0};
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x555578915d40_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x5555789160c0_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x555578916160_0, 0, 1;
    %pushi/vec4 0, 0, 4;
    %store/vec4 v0x555578915c80_0, 0, 4;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x555578915ea0_0, 0, 32;
    %pushi/vec4 0, 0, 4;
    %store/vec4 v0x555578915f60_0, 0, 4;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x555578915a30_0, 0, 1;
    %delay 20, 0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x555578915a30_0, 0, 1;
    %delay 100, 0;
    %delay 200, 0;
    %alloc S_0x555578914ea0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x555578915080_0, 0, 1;
    %pushi/vec4 16, 0, 10;
    %store/vec4 v0x555578915140_0, 0, 10;
    %fork TD_wdg_tb.wishbone_set_wdcsr, S_0x555578914ea0;
    %join;
    %free S_0x555578914ea0;
    %delay 20, 0;
    %alloc S_0x555578914ea0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x555578915080_0, 0, 1;
    %pushi/vec4 16, 0, 10;
    %store/vec4 v0x555578915140_0, 0, 10;
    %fork TD_wdg_tb.wishbone_set_wdcsr, S_0x555578914ea0;
    %join;
    %free S_0x555578914ea0;
    %delay 200, 0;
    %alloc S_0x555578914ea0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x555578915080_0, 0, 1;
    %pushi/vec4 16, 0, 10;
    %store/vec4 v0x555578915140_0, 0, 10;
    %fork TD_wdg_tb.wishbone_set_wdcsr, S_0x555578914ea0;
    %join;
    %free S_0x555578914ea0;
    %vpi_call 2 158 "$display", "Sequence of reading the watchdog timer value" {0 0 0};
    %alloc S_0x555578914bc0;
    %fork TD_wdg_tb.wishbone_readwdg, S_0x555578914bc0;
    %join;
    %free S_0x555578914bc0;
    %delay 1, 0;
    %alloc S_0x555578914bc0;
    %fork TD_wdg_tb.wishbone_readwdg, S_0x555578914bc0;
    %join;
    %free S_0x555578914bc0;
    %delay 10, 0;
    %alloc S_0x555578914bc0;
    %fork TD_wdg_tb.wishbone_readwdg, S_0x555578914bc0;
    %join;
    %free S_0x555578914bc0;
    %delay 10, 0;
    %alloc S_0x555578914bc0;
    %fork TD_wdg_tb.wishbone_readwdg, S_0x555578914bc0;
    %join;
    %free S_0x555578914bc0;
    %delay 200, 0;
    %delay 1000, 0;
    %alloc S_0x555578914ea0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x555578915080_0, 0, 1;
    %pushi/vec4 16, 0, 10;
    %store/vec4 v0x555578915140_0, 0, 10;
    %fork TD_wdg_tb.wishbone_set_wdcsr, S_0x555578914ea0;
    %join;
    %free S_0x555578914ea0;
    %delay 200, 0;
    %vpi_call 2 178 "$finish" {0 0 0};
    %end;
    .thread T_70;
# The file index is used to find the file name in the following table.
:file_names 16;
    "N/A";
    "<interactive>";
    "sim/wdg_tb.v";
    "rtl/wdg_top.v";
    "rtl/clkdiv.v";
    "rtl/cntr.v";
    "rtl/fsm.v";
    "rtl/reg/wdgrv_regs.v";
    "./submodules/rggen-verilog-rtl/rggen_bit_field.v";
    "./submodules/rggen-verilog-rtl/rggen_default_register.v";
    "./submodules/rggen-verilog-rtl/rggen_register_common.v";
    "./submodules/rggen-verilog-rtl/rggen_address_decoder.v";
    "./submodules/rggen-verilog-rtl/rggen_mux.v";
    "./submodules/rggen-verilog-rtl/rggen_wishbone_adapter.v";
    "./submodules/rggen-verilog-rtl/rggen_adapter_common.v";
    "./submodules/rggen-verilog-rtl/rggen_or_reducer.v";
