#! /home/user/open_tools/oss-cad-suite/bin/vvp
:ivl_version "13.0 (devel)" "(s20250103-60-gdb82380ce)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision - 9;
:vpi_module "/home/user/open_tools/oss-cad-suite/lib/ivl/system.vpi";
:vpi_module "/home/user/open_tools/oss-cad-suite/lib/ivl/vhdl_sys.vpi";
:vpi_module "/home/user/open_tools/oss-cad-suite/lib/ivl/vhdl_textio.vpi";
:vpi_module "/home/user/open_tools/oss-cad-suite/lib/ivl/v2005_math.vpi";
:vpi_module "/home/user/open_tools/oss-cad-suite/lib/ivl/va_math.vpi";
S_0x55558eae28e0 .scope module, "wdg_tb" "wdg_tb" 2 3;
 .timescale -8 -9;
P_0x55558eb1f100 .param/l "WB_ADDR_WIDTH" 0 2 6, +C4<00000000000000000000000000100000>;
P_0x55558eb1f140 .param/l "WB_DATA_WIDTH" 0 2 5, +C4<00000000000000000000000000100000>;
P_0x55558eb1f180 .param/l "WB_WDG_BASE" 0 2 9, +C4<00000000000000000000000000000000>;
P_0x55558eb1f1c0 .param/l "WDG_TICK_BIT" 0 2 14, +C4<00000000000000000000000000000010>;
L_0x55558ed37990 .functor AND 1, v0x55558ed7fd30_0, L_0x55558ed9ed90, C4<1>, C4<1>;
L_0x55558ed40b30 .functor NOT 1, v0x55558ed7fbb0_0, C4<0>, C4<0>, C4<0>;
L_0x55558ed204e0 .functor OR 1, L_0x55558ed9ecf0, L_0x55558ed40b30, C4<0>, C4<0>;
L_0x55558ed80810 .functor AND 1, v0x55558ed7fd30_0, L_0x55558ed204e0, C4<1>, C4<1>;
v0x55558ed7f7a0_0 .net *"_ivl_2", 0 0, L_0x55558ed40b30;  1 drivers
v0x55558ed7f8a0_0 .net *"_ivl_4", 0 0, L_0x55558ed204e0;  1 drivers
v0x55558ed7f980_0 .var "clk_tb", 0 0;
v0x55558ed7fa20_0 .net "core_res_en_n", 0 0, L_0x55558ed9ecf0;  1 drivers
v0x55558ed7fac0_0 .net "core_res_n", 0 0, L_0x55558ed80810;  1 drivers
v0x55558ed7fbb0_0 .var "gpo", 0 0;
v0x55558ed7fc50_0 .var "rd_data", 31 0;
v0x55558ed7fd30_0 .var "res_n_tb", 0 0;
v0x55558ed7fdd0_0 .var/i "timeout", 31 0;
v0x55558ed7fe90_0 .net "wb_ack_tb", 0 0, L_0x55558ed9ab20;  1 drivers
v0x55558ed7ff30_0 .var "wb_adr_tb", 31 0;
v0x55558ed7fff0_0 .var "wb_cyc_tb", 0 0;
v0x55558ed80090_0 .net "wb_dat_r_tb", 31 0, L_0x55558ed9ad20;  1 drivers
v0x55558ed80150_0 .var "wb_dat_w_tb", 31 0;
v0x55558ed80210_0 .var "wb_sel_tb", 3 0;
v0x55558ed802d0_0 .net "wb_stall_tb", 0 0, L_0x55558ed9a9c0;  1 drivers
v0x55558ed80370_0 .var "wb_stb_tb", 0 0;
v0x55558ed80410_0 .var "wb_we_tb", 0 0;
v0x55558ed804b0_0 .net "wdg_res_en_n", 0 0, L_0x55558ed9ed90;  1 drivers
v0x55558ed80550_0 .net "wdg_res_n", 0 0, L_0x55558ed37990;  1 drivers
v0x55558ed805f0_0 .net "wdg_to", 0 0, L_0x55558ed9eb50;  1 drivers
S_0x55558ec88e40 .scope module, "reset_ctrl_inst" "reset_ctrl" 2 82, 3 12 0, S_0x55558eae28e0;
 .timescale -8 -9;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /INPUT 1 "sys_res_n";
    .port_info 2 /INPUT 1 "wdg_to";
    .port_info 3 /OUTPUT 1 "wdg_res_n";
    .port_info 4 /OUTPUT 1 "core_res_n";
P_0x55558eadeb00 .param/l "CORE_RST_CYCLES" 0 3 13, +C4<00000000000000000000000000111100>;
P_0x55558eadeb40 .param/l "MAX_COUNT_CYCLES" 1 3 25, +C4<0000000000000000000000000001000010>;
P_0x55558eadeb80 .param/l "PADDING_CYCLES" 0 3 14, +C4<00000000000000000000000000000001>;
P_0x55558eadebc0 .param/l "S_CORE_RST" 1 3 40, C4<011>;
P_0x55558eadec00 .param/l "S_IDLE" 1 3 39, C4<110>;
P_0x55558eadec40 .param/l "S_PADDING" 1 3 41, C4<111>;
P_0x55558eadec80 .param/l "S_WDG_RST" 1 3 42, C4<101>;
P_0x55558eadecc0 .param/l "WDG_RST_CYCLES" 0 3 15, +C4<00000000000000000000000000000101>;
L_0x7fc758335f98 .functor BUFT 1, C4<0000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x55558ed20190_0 .net *"_ivl_11", 24 0, L_0x7fc758335f98;  1 drivers
L_0x7fc758335fe0 .functor BUFT 1, C4<00000000000000000000000000111011>, C4<0>, C4<0>, C4<0>;
v0x55558eb6c330_0 .net/2u *"_ivl_12", 31 0, L_0x7fc758335fe0;  1 drivers
v0x55558ea9ac50_0 .net *"_ivl_14", 0 0, L_0x55558ed9f0a0;  1 drivers
L_0x7fc758336028 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v0x55558e9d6cf0_0 .net/2u *"_ivl_16", 0 0, L_0x7fc758336028;  1 drivers
L_0x7fc758336070 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x55558e9d5c50_0 .net/2u *"_ivl_18", 0 0, L_0x7fc758336070;  1 drivers
v0x55558eb32b10_0 .net *"_ivl_22", 31 0, L_0x55558ed9f430;  1 drivers
L_0x7fc7583360b8 .functor BUFT 1, C4<0000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x55558eaa3f40_0 .net *"_ivl_25", 24 0, L_0x7fc7583360b8;  1 drivers
L_0x7fc758336100 .functor BUFT 1, C4<00000000000000000000000000111101>, C4<0>, C4<0>, C4<0>;
v0x55558ecbb6b0_0 .net/2u *"_ivl_26", 31 0, L_0x7fc758336100;  1 drivers
v0x55558e9f4860_0 .net *"_ivl_28", 0 0, L_0x55558ed9f5c0;  1 drivers
L_0x7fc758336148 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v0x55558e9f2bc0_0 .net/2u *"_ivl_30", 0 0, L_0x7fc758336148;  1 drivers
L_0x7fc758336190 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x55558ec799c0_0 .net/2u *"_ivl_32", 0 0, L_0x7fc758336190;  1 drivers
v0x55558ed230e0_0 .net *"_ivl_36", 31 0, L_0x55558ed9f8f0;  1 drivers
L_0x7fc7583361d8 .functor BUFT 1, C4<0000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x55558ed30d10_0 .net *"_ivl_39", 24 0, L_0x7fc7583361d8;  1 drivers
L_0x7fc758336220 .functor BUFT 1, C4<00000000000000000000000001000010>, C4<0>, C4<0>, C4<0>;
v0x55558ed2fbb0_0 .net/2u *"_ivl_40", 31 0, L_0x7fc758336220;  1 drivers
v0x55558eccdd70_0 .net *"_ivl_42", 0 0, L_0x55558ed9f9e0;  1 drivers
L_0x7fc758336268 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v0x55558ecec1c0_0 .net/2u *"_ivl_44", 0 0, L_0x7fc758336268;  1 drivers
L_0x7fc7583362b0 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x55558ed1ada0_0 .net/2u *"_ivl_46", 0 0, L_0x7fc7583362b0;  1 drivers
v0x55558ecb5f70_0 .net *"_ivl_7", 2 0, v0x55558eb9eba0_0;  1 drivers
v0x55558ecfe640_0 .net *"_ivl_8", 31 0, L_0x55558ed9f000;  1 drivers
v0x55558ecfd060_0 .net "clk", 0 0, v0x55558ed7f980_0;  1 drivers
v0x55558ecc8690_0 .var "cnt", 6 0;
v0x55558ecdad50_0 .net "core_res_n", 0 0, L_0x55558ed9ecf0;  alias, 1 drivers
v0x55558eca5a30_0 .net "do_cnt", 0 0, L_0x55558ed9ee30;  1 drivers
v0x55558eb9e010_0 .net "done_padding", 0 0, L_0x55558ed9f700;  1 drivers
v0x55558eb876e0_0 .net "done_reset_core", 0 0, L_0x55558ed9f250;  1 drivers
v0x55558eb87400_0 .net "done_reset_wdg", 0 0, L_0x55558ed9fb90;  1 drivers
v0x55558eb87570_0 .net "inp", 3 0, L_0x55558ed9ebc0;  1 drivers
v0x55558eb87290_0 .var "next_state", 2 0;
v0x55558eb9eba0_0 .var "state", 2 0;
v0x55558eb9ea30_0 .net "sys_res_n", 0 0, v0x55558ed7fd30_0;  1 drivers
v0x55558eb9e590_0 .net "wdg_res_n", 0 0, L_0x55558ed9ed90;  alias, 1 drivers
v0x55558eb87120_0 .net "wdg_to", 0 0, L_0x55558ed9eb50;  alias, 1 drivers
E_0x55558ebc2c00 .event posedge, v0x55558ecfd060_0;
E_0x55558ebc3340 .event anyedge, v0x55558eb87570_0, v0x55558eb9eba0_0;
L_0x55558ed9ebc0 .concat [ 1 1 1 1], L_0x55558ed9fb90, L_0x55558ed9f700, L_0x55558ed9f250, L_0x55558ed9eb50;
L_0x55558ed9ecf0 .part v0x55558eb9eba0_0, 2, 1;
L_0x55558ed9ed90 .part v0x55558eb9eba0_0, 1, 1;
L_0x55558ed9ee30 .part v0x55558eb9eba0_0, 0, 1;
L_0x55558ed9f000 .concat [ 7 25 0 0], v0x55558ecc8690_0, L_0x7fc758335f98;
L_0x55558ed9f0a0 .cmp/eq 32, L_0x55558ed9f000, L_0x7fc758335fe0;
L_0x55558ed9f250 .functor MUXZ 1, L_0x7fc758336070, L_0x7fc758336028, L_0x55558ed9f0a0, C4<>;
L_0x55558ed9f430 .concat [ 7 25 0 0], v0x55558ecc8690_0, L_0x7fc7583360b8;
L_0x55558ed9f5c0 .cmp/eq 32, L_0x55558ed9f430, L_0x7fc758336100;
L_0x55558ed9f700 .functor MUXZ 1, L_0x7fc758336190, L_0x7fc758336148, L_0x55558ed9f5c0, C4<>;
L_0x55558ed9f8f0 .concat [ 7 25 0 0], v0x55558ecc8690_0, L_0x7fc7583361d8;
L_0x55558ed9f9e0 .cmp/eq 32, L_0x55558ed9f8f0, L_0x7fc758336220;
L_0x55558ed9fb90 .functor MUXZ 1, L_0x7fc7583362b0, L_0x7fc758336268, L_0x55558ed9f9e0, C4<>;
S_0x55558eced090 .scope module, "wdg_rv_inst" "wdg_top" 2 57, 4 8 0, S_0x55558eae28e0;
 .timescale -8 -9;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /INPUT 1 "res_n";
    .port_info 2 /INPUT 1 "i_wb_cyc";
    .port_info 3 /INPUT 1 "i_wb_stb";
    .port_info 4 /OUTPUT 1 "o_wb_stall";
    .port_info 5 /INPUT 32 "i_wb_adr";
    .port_info 6 /INPUT 1 "i_wb_we";
    .port_info 7 /INPUT 32 "i_wb_dat";
    .port_info 8 /INPUT 4 "i_wb_sel";
    .port_info 9 /OUTPUT 1 "o_wb_ack";
    .port_info 10 /OUTPUT 1 "o_wb_err";
    .port_info 11 /OUTPUT 1 "o_wb_rty";
    .port_info 12 /OUTPUT 32 "o_wb_dat";
    .port_info 13 /OUTPUT 1 "o_irq1";
    .port_info 14 /OUTPUT 1 "o_irq2";
P_0x55558ec822d0 .param/l "REG_ADDRESS_WIDTH" 0 4 10, +C4<00000000000000000000000000100000>;
P_0x55558ec82310 .param/l "REG_BASE_ADDRESS" 0 4 12, +C4<00000000000000000000000000000000>;
P_0x55558ec82350 .param/l "REG_DEFAULT_READ" 0 4 14, +C4<00000000000000000000000000000000>;
P_0x55558ec82390 .param/l "REG_ERROR_STATUS" 0 4 13, +C4<00000000000000000000000000000000>;
P_0x55558ec823d0 .param/l "REG_INSERT_SLICER" 0 4 15, +C4<00000000000000000000000000000000>;
P_0x55558ec82410 .param/l "REG_PRE_DECODE" 0 4 11, +C4<00000000000000000000000000000000>;
P_0x55558ec82450 .param/l "REG_USE_STALLS" 0 4 16, +C4<00000000000000000000000000000000>;
P_0x55558ec82490 .param/l "WB_DATA_WIDTH" 0 4 18, +C4<00000000000000000000000000100000>;
P_0x55558ec824d0 .param/l "WDG_PRECLKDIV_WIDTH" 0 4 21, +C4<00000000000000000000000000010100>;
P_0x55558ec82510 .param/l "WDG_TICK_BIT" 0 4 20, +C4<00000000000000000000000000000010>;
L_0x55558ed9e7f0 .functor AND 1, L_0x55558ed37990, L_0x55558ed9e600, C4<1>, C4<1>;
L_0x55558ed9eae0 .functor BUFZ 1, L_0x55558ed9e510, C4<0>, C4<0>, C4<0>;
L_0x55558ed9eb50 .functor BUFZ 1, L_0x55558ed9e470, C4<0>, C4<0>, C4<0>;
L_0x7fc758335ec0 .functor BUFT 1, C4<0000000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x55558ed7cf70_0 .net/2u *"_ivl_0", 21 0, L_0x7fc758335ec0;  1 drivers
L_0x7fc758335f50 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x55558ed7d070_0 .net/2u *"_ivl_10", 0 0, L_0x7fc758335f50;  1 drivers
v0x55558ed7d150_0 .net *"_ivl_6", 0 0, L_0x55558ed9e900;  1 drivers
L_0x7fc758335f08 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v0x55558ed7d1f0_0 .net/2u *"_ivl_8", 0 0, L_0x7fc758335f08;  1 drivers
v0x55558ed7d2d0_0 .net "clk", 0 0, v0x55558ed7f980_0;  alias, 1 drivers
v0x55558ed7d3c0_0 .net "cnt", 9 0, v0x55558eb74730_0;  1 drivers
v0x55558ed7d480_0 .net "cnt0", 0 0, L_0x55558ed9e9a0;  1 drivers
v0x55558ed7d520_0 .net "do_cnt", 0 0, L_0x55558ed9e600;  1 drivers
v0x55558ed7d5c0_0 .net "i_wb_adr", 31 0, v0x55558ed7ff30_0;  1 drivers
v0x55558ed7d660_0 .net "i_wb_cyc", 0 0, v0x55558ed7fff0_0;  1 drivers
v0x55558ed7d750_0 .net "i_wb_dat", 31 0, v0x55558ed80150_0;  1 drivers
v0x55558ed7d840_0 .net "i_wb_sel", 3 0, v0x55558ed80210_0;  1 drivers
v0x55558ed7d930_0 .net "i_wb_stb", 0 0, v0x55558ed80370_0;  1 drivers
v0x55558ed7da20_0 .net "i_wb_we", 0 0, v0x55558ed80410_0;  1 drivers
v0x55558ed7db10_0 .net "o_irq1", 0 0, L_0x55558ed9eae0;  1 drivers
v0x55558ed7dbd0_0 .net "o_irq2", 0 0, L_0x55558ed9eb50;  alias, 1 drivers
v0x55558ed7dc70_0 .net "o_wb_ack", 0 0, L_0x55558ed9ab20;  alias, 1 drivers
v0x55558ed7dd60_0 .net "o_wb_dat", 31 0, L_0x55558ed9ad20;  alias, 1 drivers
v0x55558ed7de50_0 .net "o_wb_err", 0 0, L_0x55558ed9ac80;  1 drivers
L_0x7fc758335c80 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x55558ed7df40_0 .net "o_wb_rty", 0 0, L_0x7fc758335c80;  1 drivers
v0x55558ed7e030_0 .net "o_wb_stall", 0 0, L_0x55558ed9a9c0;  alias, 1 drivers
v0x55558ed7e120_0 .net "res_n", 0 0, L_0x55558ed37990;  alias, 1 drivers
v0x55558ed7e3d0_0 .net "sw_trg_s1wto", 0 0, L_0x55558ed943c0;  1 drivers
v0x55558ed7e470_0 .net "sw_trg_s2wto", 0 0, L_0x55558ed95400;  1 drivers
v0x55558ed7e510_0 .net "wdcsr_s1wto", 0 0, L_0x55558ed9e510;  1 drivers
v0x55558ed7e5b0_0 .net "wdcsr_s2wto", 0 0, L_0x55558ed9e470;  1 drivers
v0x55558ed7e650_0 .net "wdcsr_wden", 0 0, L_0x55558ed92510;  1 drivers
v0x55558ed7e6f0_0 .net "wdcsr_wtocnt", 9 0, L_0x55558ed96500;  1 drivers
v0x55558ed7e7b0_0 .net "wdg_tick", 0 0, L_0x55558ed9e860;  1 drivers
L_0x55558ed9e200 .concat [ 10 22 0 0], v0x55558eb74730_0, L_0x7fc758335ec0;
L_0x55558ed9e900 .cmp/eq 10, v0x55558eb74730_0, L_0x55558ed96500;
L_0x55558ed9e9a0 .functor MUXZ 1, L_0x7fc758335f50, L_0x7fc758335f08, L_0x55558ed9e900, C4<>;
S_0x55558ecec970 .scope module, "clk_div_inst" "clkdiv" 4 129, 5 1 0, S_0x55558eced090;
 .timescale -8 -9;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /INPUT 1 "res_n";
    .port_info 2 /OUTPUT 1 "wdg_tick";
P_0x55558ed052a0 .param/l "WDG_TICK_BIT" 0 5 3, +C4<00000000000000000000000000000010>;
P_0x55558ed052e0 .param/l "WIDTH" 0 5 2, +C4<00000000000000000000000000010100>;
v0x55558eb42310_0 .net "clk", 0 0, v0x55558ed7f980_0;  alias, 1 drivers
v0x55558eb42e30_0 .var "cnt", 19 0;
v0x55558eb41e80_0 .net "res_n", 0 0, L_0x55558ed37990;  alias, 1 drivers
v0x55558eb7a940_0 .net "wdg_tick", 0 0, L_0x55558ed9e860;  alias, 1 drivers
L_0x55558ed9e860 .part v0x55558eb42e30_0, 2, 1;
S_0x55558eca61e0 .scope module, "cntr_inst" "cntr" 4 117, 6 2 0, S_0x55558eced090;
 .timescale -8 -9;
    .port_info 0 /INPUT 1 "mtick_clk";
    .port_info 1 /INPUT 1 "res_n";
    .port_info 2 /INPUT 10 "cnt_thrhd";
    .port_info 3 /OUTPUT 10 "count_wdg";
P_0x55558eb95f70 .param/l "WIDTH" 0 6 4, +C4<00000000000000000000000000001010>;
v0x55558eb770a0_0 .net "cnt_thrhd", 9 0, L_0x55558ed96500;  alias, 1 drivers
v0x55558eb74730_0 .var "count_wdg", 9 0;
v0x55558eb87c90_0 .net "mtick_clk", 0 0, L_0x55558ed9e860;  alias, 1 drivers
v0x55558ead6a30_0 .net "res_n", 0 0, L_0x55558ed9e7f0;  1 drivers
E_0x55558e9e8c60/0 .event negedge, v0x55558ead6a30_0;
E_0x55558e9e8c60/1 .event posedge, v0x55558eb7a940_0;
E_0x55558e9e8c60 .event/or E_0x55558e9e8c60/0, E_0x55558e9e8c60/1;
S_0x55558ed1a320 .scope module, "fsm_inst" "fsm" 4 101, 7 4 0, S_0x55558eced090;
 .timescale -8 -9;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /INPUT 1 "res_n";
    .port_info 2 /INPUT 1 "en";
    .port_info 3 /INPUT 1 "count0";
    .port_info 4 /OUTPUT 1 "s2wto";
    .port_info 5 /OUTPUT 1 "s1wto";
    .port_info 6 /OUTPUT 1 "do_cnt";
    .port_info 7 /INPUT 1 "sw_trg_s1wto";
    .port_info 8 /INPUT 1 "sw_trg_s2wto";
P_0x55558ec87f10 .param/l "S_CNT0" 0 7 19, C4<001>;
P_0x55558ec87f50 .param/l "S_CNT1" 0 7 21, C4<011>;
P_0x55558ec87f90 .param/l "S_IDLE" 0 7 18, C4<000>;
P_0x55558ec87fd0 .param/l "S_RAISE_S1" 0 7 20, C4<010>;
P_0x55558ec88010 .param/l "S_RAISE_S2" 0 7 22, C4<110>;
v0x55558eb66050_0 .net *"_ivl_7", 2 0, v0x55558ea7d9c0_0;  1 drivers
v0x55558eb65c70_0 .net "clk", 0 0, v0x55558ed7f980_0;  alias, 1 drivers
v0x55558eb659d0_0 .net "count0", 0 0, L_0x55558ed9e9a0;  alias, 1 drivers
v0x55558ea6e680_0 .net "do_cnt", 0 0, L_0x55558ed9e600;  alias, 1 drivers
v0x55558ea68ca0_0 .net "en", 0 0, L_0x55558ed92510;  alias, 1 drivers
v0x55558eae5c50_0 .net "inp", 3 0, L_0x55558ed9e380;  1 drivers
v0x55558ead6760_0 .var "next_state", 2 0;
v0x55558eb65ee0_0 .net "res_n", 0 0, L_0x55558ed37990;  alias, 1 drivers
v0x55558ea18930_0 .net "s1wto", 0 0, L_0x55558ed9e510;  alias, 1 drivers
v0x55558ea55c90_0 .net "s2wto", 0 0, L_0x55558ed9e470;  alias, 1 drivers
v0x55558ea7d9c0_0 .var "state", 2 0;
v0x55558ea8c240_0 .net "sw_trg_s1wto", 0 0, L_0x55558ed943c0;  alias, 1 drivers
v0x55558ea13180_0 .net "sw_trg_s2wto", 0 0, L_0x55558ed95400;  alias, 1 drivers
E_0x55558ed44af0/0 .event negedge, v0x55558eb41e80_0;
E_0x55558ed44af0/1 .event posedge, v0x55558ecfd060_0;
E_0x55558ed44af0 .event/or E_0x55558ed44af0/0, E_0x55558ed44af0/1;
E_0x55558eb945c0 .event anyedge, v0x55558eae5c50_0, v0x55558ea7d9c0_0;
L_0x55558ed9e380 .concat [ 1 1 1 1], L_0x55558ed95400, L_0x55558ed943c0, L_0x55558ed9e9a0, L_0x55558ed92510;
L_0x55558ed9e470 .part v0x55558ea7d9c0_0, 2, 1;
L_0x55558ed9e510 .part v0x55558ea7d9c0_0, 1, 1;
L_0x55558ed9e600 .part v0x55558ea7d9c0_0, 0, 1;
S_0x55558ecb6e40 .scope module, "wdgrv_regs_inst" "wdgrv_regs" 4 69, 8 2 0, S_0x55558eced090;
 .timescale -8 -9;
    .port_info 0 /INPUT 1 "i_clk";
    .port_info 1 /INPUT 1 "i_rst_n";
    .port_info 2 /INPUT 1 "i_wb_cyc";
    .port_info 3 /INPUT 1 "i_wb_stb";
    .port_info 4 /OUTPUT 1 "o_wb_stall";
    .port_info 5 /INPUT 32 "i_wb_adr";
    .port_info 6 /INPUT 1 "i_wb_we";
    .port_info 7 /INPUT 32 "i_wb_dat";
    .port_info 8 /INPUT 4 "i_wb_sel";
    .port_info 9 /OUTPUT 1 "o_wb_ack";
    .port_info 10 /OUTPUT 1 "o_wb_err";
    .port_info 11 /OUTPUT 1 "o_wb_rty";
    .port_info 12 /OUTPUT 32 "o_wb_dat";
    .port_info 13 /OUTPUT 1 "o_wdcsr_wden";
    .port_info 14 /INPUT 1 "i_wdcsr_rvd1";
    .port_info 15 /OUTPUT 1 "o_wdcsr_s1wto";
    .port_info 16 /INPUT 1 "i_wdcsr_s1wto_hw_set";
    .port_info 17 /OUTPUT 1 "o_wdcsr_s1wto_write_trigger";
    .port_info 18 /OUTPUT 1 "o_wdcsr_s2wto";
    .port_info 19 /INPUT 1 "i_wdcsr_s2wto_hw_set";
    .port_info 20 /OUTPUT 1 "o_wdcsr_s2wto_write_trigger";
    .port_info 21 /OUTPUT 10 "o_wdcsr_wtocnt";
    .port_info 22 /INPUT 18 "i_wdcsr_rvd2";
    .port_info 23 /INPUT 32 "i_wdcnt_cnt";
P_0x55558ec8d9a0 .param/l "ADDRESS_WIDTH" 0 8 3, +C4<00000000000000000000000000100000>;
P_0x55558ec8d9e0 .param/l "BASE_ADDRESS" 0 8 5, C4<00000000000000000000000000000000>;
P_0x55558ec8da20 .param/l "DEFAULT_READ_DATA" 0 8 7, C4<00000000000000000000000000000000>;
P_0x55558ec8da60 .param/l "ERROR_STATUS" 0 8 6, +C4<00000000000000000000000000000000>;
P_0x55558ec8daa0 .param/l "INSERT_SLICER" 0 8 8, +C4<00000000000000000000000000000000>;
P_0x55558ec8dae0 .param/l "PRE_DECODE" 0 8 4, +C4<00000000000000000000000000000000>;
P_0x55558ec8db20 .param/l "USE_STALL" 0 8 9, +C4<00000000000000000000000000000000>;
v0x55558ed7ad40_0 .net "i_clk", 0 0, v0x55558ed7f980_0;  alias, 1 drivers
v0x55558ed7b010_0 .net "i_rst_n", 0 0, L_0x55558ed37990;  alias, 1 drivers
v0x55558ed7b0d0_0 .net "i_wb_adr", 31 0, v0x55558ed7ff30_0;  alias, 1 drivers
v0x55558ed7b1d0_0 .net "i_wb_cyc", 0 0, v0x55558ed7fff0_0;  alias, 1 drivers
v0x55558ed7b2a0_0 .net "i_wb_dat", 31 0, v0x55558ed80150_0;  alias, 1 drivers
v0x55558ed7b340_0 .net "i_wb_sel", 3 0, v0x55558ed80210_0;  alias, 1 drivers
v0x55558ed7b410_0 .net "i_wb_stb", 0 0, v0x55558ed80370_0;  alias, 1 drivers
v0x55558ed7b4e0_0 .net "i_wb_we", 0 0, v0x55558ed80410_0;  alias, 1 drivers
v0x55558ed7b5b0_0 .net "i_wdcnt_cnt", 31 0, L_0x55558ed9e200;  1 drivers
o0x7fc758380618 .functor BUFZ 1, c4<z>; HiZ drive
v0x55558ed7b680_0 .net "i_wdcsr_rvd1", 0 0, o0x7fc758380618;  0 drivers
o0x7fc7583813f8 .functor BUFZ 18, c4<zzzzzzzzzzzzzzzzzz>; HiZ drive
v0x55558ed7b750_0 .net "i_wdcsr_rvd2", 17 0, o0x7fc7583813f8;  0 drivers
v0x55558ed7b820_0 .net "i_wdcsr_s1wto_hw_set", 0 0, L_0x55558ed9e510;  alias, 1 drivers
v0x55558ed7b8c0_0 .net "i_wdcsr_s2wto_hw_set", 0 0, L_0x55558ed9e470;  alias, 1 drivers
v0x55558ed7b960_0 .net "o_wb_ack", 0 0, L_0x55558ed9ab20;  alias, 1 drivers
v0x55558ed7ba00_0 .net "o_wb_dat", 31 0, L_0x55558ed9ad20;  alias, 1 drivers
v0x55558ed7baa0_0 .net "o_wb_err", 0 0, L_0x55558ed9ac80;  alias, 1 drivers
v0x55558ed7bb70_0 .net "o_wb_rty", 0 0, L_0x7fc758335c80;  alias, 1 drivers
v0x55558ed7bc40_0 .net "o_wb_stall", 0 0, L_0x55558ed9a9c0;  alias, 1 drivers
v0x55558ed7bd10_0 .net "o_wdcsr_s1wto", 0 0, L_0x55558ed945c0;  1 drivers
v0x55558ed7bde0_0 .net "o_wdcsr_s1wto_write_trigger", 0 0, L_0x55558ed943c0;  alias, 1 drivers
v0x55558ed7bed0_0 .net "o_wdcsr_s2wto", 0 0, L_0x55558ed95600;  1 drivers
v0x55558ed7bf70_0 .net "o_wdcsr_s2wto_write_trigger", 0 0, L_0x55558ed95400;  alias, 1 drivers
v0x55558ed7c060_0 .net "o_wdcsr_wden", 0 0, L_0x55558ed92510;  alias, 1 drivers
v0x55558ed7c150_0 .net "o_wdcsr_wtocnt", 9 0, L_0x55558ed96500;  alias, 1 drivers
v0x55558ed7c240_0 .net "w_register_access", 1 0, L_0x55558ed9c200;  1 drivers
v0x55558ed7c2e0_0 .net "w_register_active", 1 0, L_0x55558ed99bc0;  1 drivers
v0x55558ed7c380_0 .net "w_register_address", 2 0, L_0x55558ed9c270;  1 drivers
v0x55558ed7c530_0 .net "w_register_read_data", 63 0, L_0x55558ed99da0;  1 drivers
v0x55558ed7c620_0 .net "w_register_ready", 1 0, L_0x55558ed99c60;  1 drivers
v0x55558ed7c710_0 .net "w_register_status", 3 0, L_0x55558ed99d00;  1 drivers
v0x55558ed7c800_0 .net "w_register_strobe", 31 0, L_0x55558ed9c380;  1 drivers
v0x55558ed7c8a0_0 .net "w_register_valid", 0 0, L_0x55558ed9c190;  1 drivers
v0x55558ed7c940_0 .net "w_register_value", 63 0, L_0x55558ed99e40;  1 drivers
v0x55558ed7cbf0_0 .net "w_register_write_data", 31 0, L_0x55558ed9c310;  1 drivers
L_0x55558ed99bc0 .concat8 [ 1 1 0 0], L_0x55558ed81920, L_0x55558ed99760;
L_0x55558ed99c60 .concat8 [ 1 1 0 0], L_0x55558ed81990, L_0x55558ed997d0;
L_0x7fc7583340f0 .functor BUFT 1, C4<00>, C4<0>, C4<0>, C4<0>;
L_0x7fc7583355c0 .functor BUFT 1, C4<00>, C4<0>, C4<0>, C4<0>;
L_0x55558ed99d00 .concat8 [ 2 2 0 0], L_0x7fc7583340f0, L_0x7fc7583355c0;
L_0x55558ed99da0 .concat8 [ 32 32 0 0], L_0x55558ed81ad0, L_0x55558ed99910;
L_0x55558ed99e40 .concat8 [ 32 32 0 0], L_0x55558ed81c50, L_0x55558ed99a90;
S_0x55558ecc9560 .scope generate, "g_wdcnt" "g_wdcnt" 8 296, 8 296 0, S_0x55558ecb6e40;
 .timescale -8 -9;
v0x55558eb6e8f0_0 .net "w_bit_field_mask", 31 0, L_0x55558ed9ff00;  1 drivers
v0x55558ecf09d0_0 .net "w_bit_field_read_data", 31 0, L_0x55558ed9a420;  1 drivers
v0x55558ecf0a90_0 .net "w_bit_field_read_valid", 0 0, L_0x55558ed98fc0;  1 drivers
v0x55558ecb64c0_0 .net "w_bit_field_value", 31 0, L_0x55558ed9a4e0;  1 drivers
v0x55558ecb6560_0 .net "w_bit_field_write_data", 31 0, L_0x55558ed99a20;  1 drivers
v0x55558ecb6170_0 .net "w_bit_field_write_valid", 0 0, L_0x55558ed98920;  1 drivers
S_0x55558ecdbc20 .scope generate, "__g_tie_off" "__g_tie_off" 8 304, 8 304 0, S_0x55558ecc9560;
 .timescale -8 -9;
S_0x55558eca6900 .scope generate, "g[0]" "g[0]" 8 306, 8 306 0, S_0x55558ecdbc20;
 .timescale -8 -9;
P_0x55558eaf4950 .param/l "__i" 1 8 306, +C4<00>;
S_0x55558ecdb500 .scope generate, "g[1]" "g[1]" 8 306, 8 306 0, S_0x55558ecdbc20;
 .timescale -8 -9;
P_0x55558eaf4f20 .param/l "__i" 1 8 306, +C4<01>;
S_0x55558ed000f0 .scope generate, "g[2]" "g[2]" 8 306, 8 306 0, S_0x55558ecdbc20;
 .timescale -8 -9;
P_0x55558eb3fba0 .param/l "__i" 1 8 306, +C4<010>;
S_0x55558ecff600 .scope generate, "g[3]" "g[3]" 8 306, 8 306 0, S_0x55558ecdbc20;
 .timescale -8 -9;
P_0x55558eb2ca40 .param/l "__i" 1 8 306, +C4<011>;
S_0x55558ed067e0 .scope generate, "g[4]" "g[4]" 8 306, 8 306 0, S_0x55558ecdbc20;
 .timescale -8 -9;
P_0x55558eabe900 .param/l "__i" 1 8 306, +C4<0100>;
S_0x55558ec8b460 .scope generate, "g[5]" "g[5]" 8 306, 8 306 0, S_0x55558ecdbc20;
 .timescale -8 -9;
P_0x55558eac7770 .param/l "__i" 1 8 306, +C4<0101>;
S_0x55558ec91f40 .scope generate, "g[6]" "g[6]" 8 306, 8 306 0, S_0x55558ecdbc20;
 .timescale -8 -9;
P_0x55558ea9d5f0 .param/l "__i" 1 8 306, +C4<0110>;
S_0x55558ecb6720 .scope generate, "g[7]" "g[7]" 8 306, 8 306 0, S_0x55558ecdbc20;
 .timescale -8 -9;
P_0x55558ea9dc40 .param/l "__i" 1 8 306, +C4<0111>;
S_0x55558ecc8e40 .scope generate, "g[8]" "g[8]" 8 306, 8 306 0, S_0x55558ecdbc20;
 .timescale -8 -9;
P_0x55558ead2620 .param/l "__i" 1 8 306, +C4<01000>;
S_0x55558ed39010 .scope generate, "g[9]" "g[9]" 8 306, 8 306 0, S_0x55558ecdbc20;
 .timescale -8 -9;
P_0x55558ebc53c0 .param/l "__i" 1 8 306, +C4<01001>;
S_0x55558ed1d7f0 .scope generate, "g[10]" "g[10]" 8 306, 8 306 0, S_0x55558ecdbc20;
 .timescale -8 -9;
P_0x55558eb95300 .param/l "__i" 1 8 306, +C4<01010>;
S_0x55558ed1e3f0 .scope generate, "g[11]" "g[11]" 8 306, 8 306 0, S_0x55558ecdbc20;
 .timescale -8 -9;
P_0x55558eb95190 .param/l "__i" 1 8 306, +C4<01011>;
S_0x55558ed2ba70 .scope generate, "g[12]" "g[12]" 8 306, 8 306 0, S_0x55558ecdbc20;
 .timescale -8 -9;
P_0x55558eb95e40 .param/l "__i" 1 8 306, +C4<01100>;
S_0x55558ed24000 .scope generate, "g[13]" "g[13]" 8 306, 8 306 0, S_0x55558ecdbc20;
 .timescale -8 -9;
P_0x55558eb87a00 .param/l "__i" 1 8 306, +C4<01101>;
S_0x55558ed24e30 .scope generate, "g[14]" "g[14]" 8 306, 8 306 0, S_0x55558ecdbc20;
 .timescale -8 -9;
P_0x55558eb5bb70 .param/l "__i" 1 8 306, +C4<01110>;
S_0x55558ec939a0 .scope generate, "g[15]" "g[15]" 8 306, 8 306 0, S_0x55558ecdbc20;
 .timescale -8 -9;
P_0x55558eb421d0 .param/l "__i" 1 8 306, +C4<01111>;
S_0x55558ec935e0 .scope generate, "g[16]" "g[16]" 8 306, 8 306 0, S_0x55558ecdbc20;
 .timescale -8 -9;
P_0x55558ea68680 .param/l "__i" 1 8 306, +C4<010000>;
S_0x55558ec93dc0 .scope generate, "g[17]" "g[17]" 8 306, 8 306 0, S_0x55558ecdbc20;
 .timescale -8 -9;
P_0x55558eb66620 .param/l "__i" 1 8 306, +C4<010001>;
S_0x55558eceb850 .scope generate, "g[18]" "g[18]" 8 306, 8 306 0, S_0x55558ecdbc20;
 .timescale -8 -9;
P_0x55558ea7d370 .param/l "__i" 1 8 306, +C4<010010>;
S_0x55558ecea710 .scope generate, "g[19]" "g[19]" 8 306, 8 306 0, S_0x55558ecdbc20;
 .timescale -8 -9;
P_0x55558ea18030 .param/l "__i" 1 8 306, +C4<010011>;
S_0x55558eca50c0 .scope generate, "g[20]" "g[20]" 8 306, 8 306 0, S_0x55558ecdbc20;
 .timescale -8 -9;
P_0x55558eaf4de0 .param/l "__i" 1 8 306, +C4<010100>;
S_0x55558ecda3e0 .scope generate, "g[21]" "g[21]" 8 306, 8 306 0, S_0x55558ecdbc20;
 .timescale -8 -9;
P_0x55558eb3b210 .param/l "__i" 1 8 306, +C4<010101>;
S_0x55558ecd92a0 .scope generate, "g[22]" "g[22]" 8 306, 8 306 0, S_0x55558ecdbc20;
 .timescale -8 -9;
P_0x55558eb2c8d0 .param/l "__i" 1 8 306, +C4<010110>;
S_0x55558ecc7d20 .scope generate, "g[23]" "g[23]" 8 306, 8 306 0, S_0x55558ecdbc20;
 .timescale -8 -9;
P_0x55558eabebf0 .param/l "__i" 1 8 306, +C4<010111>;
S_0x55558ecc6be0 .scope generate, "g[24]" "g[24]" 8 306, 8 306 0, S_0x55558ecdbc20;
 .timescale -8 -9;
P_0x55558ea595c0 .param/l "__i" 1 8 306, +C4<011000>;
S_0x55558ecfc690 .scope generate, "g[25]" "g[25]" 8 306, 8 306 0, S_0x55558ecdbc20;
 .timescale -8 -9;
P_0x55558ea9e190 .param/l "__i" 1 8 306, +C4<011001>;
S_0x55558ecf1b50 .scope generate, "g[26]" "g[26]" 8 306, 8 306 0, S_0x55558ecdbc20;
 .timescale -8 -9;
P_0x55558ed2fc80 .param/l "__i" 1 8 306, +C4<011010>;
S_0x55558ecb55a0 .scope generate, "g[27]" "g[27]" 8 306, 8 306 0, S_0x55558ecdbc20;
 .timescale -8 -9;
P_0x55558eccf7c0 .param/l "__i" 1 8 306, +C4<011011>;
S_0x55558ecaac40 .scope generate, "g[28]" "g[28]" 8 306, 8 306 0, S_0x55558ecdbc20;
 .timescale -8 -9;
P_0x55558ecbd150 .param/l "__i" 1 8 306, +C4<011100>;
S_0x55558ed08240 .scope generate, "g[29]" "g[29]" 8 306, 8 306 0, S_0x55558ecdbc20;
 .timescale -8 -9;
P_0x55558ed0dde0 .param/l "__i" 1 8 306, +C4<011101>;
S_0x55558ed07e80 .scope generate, "g[30]" "g[30]" 8 306, 8 306 0, S_0x55558ecdbc20;
 .timescale -8 -9;
P_0x55558ed0bc90 .param/l "__i" 1 8 306, +C4<011110>;
S_0x55558ed08660 .scope generate, "g[31]" "g[31]" 8 306, 8 306 0, S_0x55558ecdbc20;
 .timescale -8 -9;
P_0x55558ed1b3e0 .param/l "__i" 1 8 306, +C4<011111>;
S_0x55558ed197b0 .scope generate, "g_cnt" "g_cnt" 8 331, 8 331 0, S_0x55558ecc9560;
 .timescale -8 -9;
S_0x55558ec8d450 .scope module, "u_bit_field" "rggen_bit_field" 8 337, 9 2 0, S_0x55558ed197b0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "i_clk";
    .port_info 1 /INPUT 1 "i_rst_n";
    .port_info 2 /INPUT 1 "i_sw_write_valid";
    .port_info 3 /INPUT 1 "i_sw_write_enable";
    .port_info 4 /INPUT 1 "i_sw_read_valid";
    .port_info 5 /INPUT 32 "i_sw_mask";
    .port_info 6 /INPUT 32 "i_sw_write_data";
    .port_info 7 /OUTPUT 32 "o_sw_read_data";
    .port_info 8 /OUTPUT 32 "o_sw_value";
    .port_info 9 /OUTPUT 1 "o_write_trigger";
    .port_info 10 /OUTPUT 1 "o_read_trigger";
    .port_info 11 /INPUT 1 "i_hw_write_enable";
    .port_info 12 /INPUT 32 "i_hw_write_data";
    .port_info 13 /INPUT 32 "i_hw_set";
    .port_info 14 /INPUT 32 "i_hw_clear";
    .port_info 15 /INPUT 32 "i_value";
    .port_info 16 /INPUT 32 "i_mask";
    .port_info 17 /OUTPUT 32 "o_value";
    .port_info 18 /OUTPUT 32 "o_value_unmasked";
P_0x55558eb86a50 .param/l "EXTERNAL_MASK" 0 9 17, C4<0>;
P_0x55558eb86a90 .param/l "EXTERNAL_READ_DATA" 0 9 16, +C4<00000000000000000000000000000001>;
P_0x55558eb86ad0 .param/l "HW_ACCESS" 0 9 12, C4<000>;
P_0x55558eb86b10 .param/l "HW_CLEAR_WIDTH" 0 9 14, +C4<00000000000000000000000000100000>;
P_0x55558eb86b50 .param/l "HW_SET_WIDTH" 0 9 13, +C4<00000000000000000000000000100000>;
P_0x55558eb86b90 .param/l "HW_WRITE_ENABLE_POLARITY" 0 9 11, C4<1>;
P_0x55558eb86bd0 .param/l "INITIAL_VALUE" 0 9 4, C4<00000000000000000000000000000000>;
P_0x55558eb86c10 .param/l "PRECEDENCE_ACCESS" 0 9 5, +C4<00000000000000000000000000000001>;
P_0x55558eb86c50 .param/l "STORAGE" 0 9 15, +C4<00000000000000000000000000000000>;
P_0x55558eb86c90 .param/l "SW_READABLE" 1 9 41, C4<1>;
P_0x55558eb86cd0 .param/l "SW_READ_ACTION" 0 9 6, +C4<00000000000000000000000000000001>;
P_0x55558eb86d10 .param/l "SW_READ_UPDATE" 1 9 42, C4<0>;
P_0x55558eb86d50 .param/l "SW_WRITABLE" 1 9 40, C4<1>;
P_0x55558eb86d90 .param/l "SW_WRITE_ACTION" 0 9 7, +C4<00000000000000000000000000000001>;
P_0x55558eb86dd0 .param/l "SW_WRITE_CONTROL" 0 9 8, C4<0>;
P_0x55558eb86e10 .param/l "SW_WRITE_ENABLE_POLARITY" 0 9 10, C4<1>;
P_0x55558eb86e50 .param/l "SW_WRITE_ONCE" 0 9 9, C4<0>;
P_0x55558eb86e90 .param/l "TRIGGER" 0 9 18, +C4<00000000000000000000000000000000>;
P_0x55558eb86ed0 .param/l "WIDTH" 0 9 3, +C4<00000000000000000000000000100000>;
L_0x55558ed9a420 .functor BUFZ 32, L_0x55558ed9a3b0, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0x55558ed9a4e0 .functor BUFZ 32, L_0x55558ed9a2f0, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0x55558ed9a730 .functor BUFZ 32, L_0x55558ed9a2f0, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0x55558ed9a7a0 .functor BUFZ 32, L_0x55558ed9a2f0, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
v0x55558ecee070_0 .net "i_clk", 0 0, v0x55558ed7f980_0;  alias, 1 drivers
L_0x7fc758335a88 .functor BUFT 1, C4<00000000000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x55558ecee410_0 .net "i_hw_clear", 31 0, L_0x7fc758335a88;  1 drivers
L_0x7fc758335a40 .functor BUFT 1, C4<00000000000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x55558eced470_0 .net "i_hw_set", 31 0, L_0x7fc758335a40;  1 drivers
L_0x7fc7583359f8 .functor BUFT 1, C4<00000000000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x55558eced810_0 .net "i_hw_write_data", 31 0, L_0x7fc7583359f8;  1 drivers
L_0x7fc7583359b0 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x55558ec8ca30_0 .net "i_hw_write_enable", 0 0, L_0x7fc7583359b0;  1 drivers
L_0x7fc758335ad0 .functor BUFT 1, C4<11111111111111111111111111111111>, C4<0>, C4<0>, C4<0>;
v0x55558ec63970_0 .net "i_mask", 31 0, L_0x7fc758335ad0;  1 drivers
v0x55558ec90220_0 .net "i_rst_n", 0 0, L_0x55558ed37990;  alias, 1 drivers
v0x55558ec90de0_0 .net "i_sw_mask", 31 0, L_0x55558ed9ff00;  alias, 1 drivers
v0x55558ec94150_0 .net "i_sw_read_valid", 0 0, L_0x55558ed98fc0;  alias, 1 drivers
v0x55558ec95130_0 .net "i_sw_write_data", 31 0, L_0x55558ed99a20;  alias, 1 drivers
L_0x7fc758335968 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x55558ec95740_0 .net "i_sw_write_enable", 0 0, L_0x7fc758335968;  1 drivers
v0x55558ed1b870_0 .net "i_sw_write_valid", 0 0, L_0x55558ed98920;  alias, 1 drivers
v0x55558ed1c650_0 .net "i_value", 31 0, L_0x55558ed9e200;  alias, 1 drivers
v0x55558ed1ce10_0 .net "o_read_trigger", 0 0, L_0x55558ed9a690;  1 drivers
v0x55558ed2aca0_0 .net "o_sw_read_data", 31 0, L_0x55558ed9a420;  alias, 1 drivers
v0x55558ed2c430_0 .net "o_sw_value", 31 0, L_0x55558ed9a4e0;  alias, 1 drivers
v0x55558ec96c50_0 .net "o_value", 31 0, L_0x55558ed9a730;  1 drivers
v0x55558ec89750_0 .net "o_value_unmasked", 31 0, L_0x55558ed9a7a0;  1 drivers
v0x55558ecbc350_0 .net "o_write_trigger", 0 0, L_0x55558ed9a5a0;  1 drivers
L_0x7fc758335848 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x55558eccea10_0 .net "w_hw_update", 0 0, L_0x7fc758335848;  1 drivers
v0x55558ed31580_0 .net "w_read_data", 31 0, L_0x55558ed9a3b0;  1 drivers
v0x55558ed0b920_0 .net "w_sw_update", 1 0, L_0x55558ed99ee0;  1 drivers
L_0x7fc758335890 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x55558ec2d3f0_0 .net "w_sw_write_done", 0 0, L_0x7fc758335890;  1 drivers
v0x55558ec8a1e0_0 .net "w_trigger", 1 0, L_0x55558ed9a1b0;  1 drivers
v0x55558ed38c80_0 .net "w_value", 31 0, L_0x55558ed9a2f0;  1 drivers
L_0x7fc7583357b8 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x55558ed99ee0 .concat8 [ 1 1 0 0], L_0x7fc7583357b8, L_0x55558ed9a020;
L_0x7fc7583358d8 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x7fc758335920 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x55558ed9a1b0 .concat8 [ 1 1 0 0], L_0x7fc7583358d8, L_0x7fc758335920;
L_0x55558ed9a5a0 .part L_0x55558ed9a1b0, 0, 1;
L_0x55558ed9a690 .part L_0x55558ed9a1b0, 1, 1;
S_0x55558eb937d0 .scope generate, "g_read_data" "g_read_data" 9 382, 9 382 0, S_0x55558ec8d450;
 .timescale 0 0;
L_0x55558ed9a3b0 .functor BUFZ 32, L_0x55558ed9e200, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
S_0x55558ec8ea00 .scope generate, "g_read_trigger" "g_read_trigger" 9 304, 9 304 0, S_0x55558ec8d450;
 .timescale 0 0;
v0x55558eb66740_0 .net/2u *"_ivl_0", 0 0, L_0x7fc758335920;  1 drivers
S_0x55558ed01c60 .scope generate, "g_sw_read_update" "g_sw_read_update" 9 245, 9 245 0, S_0x55558ec8d450;
 .timescale 0 0;
v0x55558ed0a060_0 .net/2u *"_ivl_0", 0 0, L_0x7fc7583357b8;  1 drivers
S_0x55558ed032a0 .scope generate, "g_sw_write_done" "g_sw_write_done" 9 268, 9 268 0, S_0x55558ec8d450;
 .timescale 0 0;
S_0x55558ed36c80 .scope generate, "g_sw_write_update" "g_sw_write_update" 9 252, 9 252 0, S_0x55558ec8d450;
 .timescale 0 0;
v0x55558eca8020_0 .net *"_ivl_0", 31 0, L_0x55558ed99f80;  1 drivers
L_0x7fc758335800 .functor BUFT 1, C4<0000000000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x55558ecb79c0_0 .net *"_ivl_3", 30 0, L_0x7fc758335800;  1 drivers
v0x55558ecb7d50_0 .net *"_ivl_5", 0 0, L_0x55558ed9a020;  1 drivers
L_0x55558ed99f80 .concat [ 1 31 0 0], L_0x55558ed98920, L_0x7fc758335800;
L_0x55558ed9a020 .ufunc/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcnt.g_cnt.u_bit_field.get_sw_write_update, 1, L_0x55558ed99f80, L_0x7fc758335968, L_0x7fc758335890 (v0x55558ecedc40_0, v0x55558ecea430_0, v0x55558ecdcec0_0) S_0x55558ed22a00;
S_0x55558ed32300 .scope generate, "g_value" "g_value" 9 323, 9 323 0, S_0x55558ec8d450;
 .timescale 0 0;
L_0x55558ed9a2f0 .functor BUFZ 32, L_0x55558ed9e200, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
S_0x55558ec968f0 .scope generate, "g_write_trigger" "g_write_trigger" 9 287, 9 287 0, S_0x55558ec8d450;
 .timescale 0 0;
v0x55558ecb7210_0 .net/2u *"_ivl_0", 0 0, L_0x7fc7583358d8;  1 drivers
S_0x55558ec96570 .scope generate, "genblk3" "genblk3" 9 259, 9 259 0, S_0x55558ec8d450;
 .timescale 0 0;
S_0x55558ec96270 .scope autofunction.vec4.s32, "get_hw_next_value" "get_hw_next_value" 9 177, 9 177 0, S_0x55558ec8d450;
 .timescale 0 0;
v0x55558ecb75a0_0 .var "clear", 31 0;
v0x55558ecf0ef0_0 .var "current_value", 31 0;
; Variable get_hw_next_value is vec4 return value of scope S_0x55558ec96270
v0x55558ecfe710_0 .var/i "i", 31 0;
v0x55558ecfe9e0_0 .var "set", 31 0;
v0x55558ecfe3b0 .array "set_clear", 1 0, 31 0;
v0x55558ecb8140_0 .var "value", 31 0;
v0x55558ecbb540_0 .var "write_data", 31 0;
v0x55558ecca080_0 .var "write_enable", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcnt.g_cnt.u_bit_field.get_hw_next_value ;
    %pushi/vec4 0, 0, 32;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x55558ecfe3b0, 4, 0;
    %pushi/vec4 0, 0, 32;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x55558ecfe3b0, 4, 0;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558ecfe710_0, 0, 32;
T_0.0 ; Top of for-loop
    %load/vec4 v0x55558ecfe710_0;
    %cmpi/s 32, 0, 32;
	  %jmp/0xz T_0.1, 5;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x55558ecfe3b0, 4;
    %load/vec4 v0x55558ecfe710_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_0.3, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x55558ecfe710_0;
    %store/vec4 v0x55558ecb8140_0, 4, 1;
    %jmp T_0.4;
T_0.3 ;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x55558ecfe3b0, 4;
    %load/vec4 v0x55558ecfe710_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_0.5, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x55558ecfe710_0;
    %store/vec4 v0x55558ecb8140_0, 4, 1;
    %jmp T_0.6;
T_0.5 ;
    %load/vec4 v0x55558ecf0ef0_0;
    %load/vec4 v0x55558ecfe710_0;
    %part/s 1;
    %ix/getv/s 4, v0x55558ecfe710_0;
    %store/vec4 v0x55558ecb8140_0, 4, 1;
T_0.6 ;
T_0.4 ;
T_0.2 ; for-loop step statement
    %load/vec4 v0x55558ecfe710_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558ecfe710_0, 0, 32;
    %jmp T_0.0;
T_0.1 ; for-loop exit label
    %load/vec4 v0x55558ecb8140_0;
    %ret/vec4 0, 0, 32;  Assign to get_hw_next_value (store_vec4_to_lval)
    %end;
S_0x55558ed0b2b0 .scope autofunction.vec4.s1, "get_hw_update" "get_hw_update" 9 72, 9 72 0, S_0x55558ec8d450;
 .timescale 0 0;
v0x55558ecca410_0 .var "clear", 31 0;
; Variable get_hw_update is vec4 return value of scope S_0x55558ed0b2b0
v0x55558ecc9c60_0 .var "set", 31 0;
v0x55558ecca800_0 .var "update", 2 0;
v0x55558eccdc00_0 .var "write_enable", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcnt.g_cnt.u_bit_field.get_hw_update ;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x55558ecca800_0, 4, 1;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x55558ecca800_0, 4, 1;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 2, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x55558ecca800_0, 4, 1;
    %load/vec4 v0x55558ecca800_0;
    %parti/s 1, 0, 2;
    %flag_set/vec4 8;
    %jmp/1 T_1.8, 8;
    %load/vec4 v0x55558ecca800_0;
    %parti/s 1, 1, 2;
    %flag_set/vec4 9;
    %flag_or 8, 9;
T_1.8;
    %flag_get/vec4 8;
    %jmp/1 T_1.7, 8;
    %load/vec4 v0x55558ecca800_0;
    %parti/s 1, 2, 3;
    %or;
T_1.7;
    %ret/vec4 0, 0, 1;  Assign to get_hw_update (store_vec4_to_lval)
    %end;
S_0x55558ed0afe0 .scope autofunction.vec4.s32, "get_sw_read_next_value" "get_sw_read_next_value" 9 86, 9 86 0, S_0x55558ec8d450;
 .timescale 0 0;
v0x55558ecdc740_0 .var "current_value", 31 0;
; Variable get_sw_read_next_value is vec4 return value of scope S_0x55558ed0afe0
v0x55558ecdbfc0_0 .var "mask", 31 0;
v0x55558ecdc320_0 .var "value", 31 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcnt.g_cnt.u_bit_field.get_sw_read_next_value ;
    %pushi/vec4 1, 0, 32;
    %dup/vec4;
    %pushi/vec4 2, 0, 32;
    %cmp/u;
    %jmp/1 T_2.9, 6;
    %dup/vec4;
    %pushi/vec4 3, 0, 32;
    %cmp/u;
    %jmp/1 T_2.10, 6;
    %load/vec4 v0x55558ecdc740_0;
    %store/vec4 v0x55558ecdc320_0, 0, 32;
    %jmp T_2.12;
T_2.9 ;
    %load/vec4 v0x55558ecdbfc0_0;
    %cmpi/ne 0, 0, 32;
    %flag_mov 8, 4;
    %jmp/0 T_2.13, 8;
    %pushi/vec4 0, 0, 32;
    %jmp/1 T_2.14, 8;
T_2.13 ; End of true expr.
    %load/vec4 v0x55558ecdc740_0;
    %jmp/0 T_2.14, 8;
 ; End of false expr.
    %blend;
T_2.14;
    %store/vec4 v0x55558ecdc320_0, 0, 32;
    %jmp T_2.12;
T_2.10 ;
    %load/vec4 v0x55558ecdbfc0_0;
    %cmpi/ne 0, 0, 32;
    %flag_mov 8, 4;
    %jmp/0 T_2.15, 8;
    %pushi/vec4 4294967295, 0, 32;
    %jmp/1 T_2.16, 8;
T_2.15 ; End of true expr.
    %load/vec4 v0x55558ecdc740_0;
    %jmp/0 T_2.16, 8;
 ; End of false expr.
    %blend;
T_2.16;
    %store/vec4 v0x55558ecdc320_0, 0, 32;
    %jmp T_2.12;
T_2.12 ;
    %pop/vec4 1;
    %load/vec4 v0x55558ecdc320_0;
    %ret/vec4 0, 0, 32;  Assign to get_sw_read_next_value (store_vec4_to_lval)
    %end;
S_0x55558ed1dcd0 .scope autofunction.vec4.s32, "get_sw_write_next_value" "get_sw_write_next_value" 9 101, 9 101 0, S_0x55558ec8d450;
 .timescale 0 0;
v0x55558ec98f10_0 .var "current_value", 31 0;
; Variable get_sw_write_next_value is vec4 return value of scope S_0x55558ed1dcd0
v0x55558eca7480_0 .var/i "i", 31 0;
v0x55558eca78a0_0 .var "mask", 31 0;
v0x55558eca7c30_0 .var "value", 31 0;
v0x55558eca6cd0_0 .var "write_data", 31 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcnt.g_cnt.u_bit_field.get_sw_write_next_value ;
    %load/vec4 v0x55558ec98f10_0;
    %store/vec4 v0x55558eca7c30_0, 0, 32;
    %pushi/vec4 1, 0, 32;
    %dup/vec4;
    %pushi/vec4 1, 0, 32;
    %cmp/u;
    %jmp/1 T_3.17, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 32;
    %cmp/u;
    %jmp/1 T_3.18, 6;
    %dup/vec4;
    %pushi/vec4 3, 0, 32;
    %cmp/u;
    %jmp/1 T_3.19, 6;
    %dup/vec4;
    %pushi/vec4 4, 0, 32;
    %cmp/u;
    %jmp/1 T_3.20, 6;
    %dup/vec4;
    %pushi/vec4 5, 0, 32;
    %cmp/u;
    %jmp/1 T_3.21, 6;
    %dup/vec4;
    %pushi/vec4 6, 0, 32;
    %cmp/u;
    %jmp/1 T_3.22, 6;
    %dup/vec4;
    %pushi/vec4 7, 0, 32;
    %cmp/u;
    %jmp/1 T_3.23, 6;
    %dup/vec4;
    %pushi/vec4 8, 0, 32;
    %cmp/u;
    %jmp/1 T_3.24, 6;
    %dup/vec4;
    %pushi/vec4 9, 0, 32;
    %cmp/u;
    %jmp/1 T_3.25, 6;
    %jmp T_3.27;
T_3.17 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558eca7480_0, 0, 32;
T_3.28 ; Top of for-loop
    %load/vec4 v0x55558eca7480_0;
    %cmpi/s 32, 0, 32;
	  %jmp/0xz T_3.29, 5;
    %load/vec4 v0x55558eca78a0_0;
    %load/vec4 v0x55558eca7480_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_3.31, 8;
    %load/vec4 v0x55558eca6cd0_0;
    %load/vec4 v0x55558eca7480_0;
    %part/s 1;
    %ix/getv/s 4, v0x55558eca7480_0;
    %store/vec4 v0x55558eca7c30_0, 4, 1;
T_3.31 ;
T_3.30 ; for-loop step statement
    %load/vec4 v0x55558eca7480_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558eca7480_0, 0, 32;
    %jmp T_3.28;
T_3.29 ; for-loop exit label
    %jmp T_3.27;
T_3.18 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558eca7480_0, 0, 32;
T_3.33 ; Top of for-loop
    %load/vec4 v0x55558eca7480_0;
    %cmpi/s 32, 0, 32;
	  %jmp/0xz T_3.34, 5;
    %load/vec4 v0x55558eca78a0_0;
    %load/vec4 v0x55558eca7480_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_3.38, 9;
    %load/vec4 v0x55558eca6cd0_0;
    %load/vec4 v0x55558eca7480_0;
    %part/s 1;
    %nor/r;
    %and;
T_3.38;
    %flag_set/vec4 8;
    %jmp/0xz  T_3.36, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x55558eca7480_0;
    %store/vec4 v0x55558eca7c30_0, 4, 1;
T_3.36 ;
T_3.35 ; for-loop step statement
    %load/vec4 v0x55558eca7480_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558eca7480_0, 0, 32;
    %jmp T_3.33;
T_3.34 ; for-loop exit label
    %jmp T_3.27;
T_3.19 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558eca7480_0, 0, 32;
T_3.39 ; Top of for-loop
    %load/vec4 v0x55558eca7480_0;
    %cmpi/s 32, 0, 32;
	  %jmp/0xz T_3.40, 5;
    %load/vec4 v0x55558eca78a0_0;
    %load/vec4 v0x55558eca7480_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_3.44, 9;
    %load/vec4 v0x55558eca6cd0_0;
    %load/vec4 v0x55558eca7480_0;
    %part/s 1;
    %and;
T_3.44;
    %flag_set/vec4 8;
    %jmp/0xz  T_3.42, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x55558eca7480_0;
    %store/vec4 v0x55558eca7c30_0, 4, 1;
T_3.42 ;
T_3.41 ; for-loop step statement
    %load/vec4 v0x55558eca7480_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558eca7480_0, 0, 32;
    %jmp T_3.39;
T_3.40 ; for-loop exit label
    %jmp T_3.27;
T_3.20 ;
    %load/vec4 v0x55558eca78a0_0;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_3.45, 4;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558eca7c30_0, 0, 32;
T_3.45 ;
    %jmp T_3.27;
T_3.21 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558eca7480_0, 0, 32;
T_3.47 ; Top of for-loop
    %load/vec4 v0x55558eca7480_0;
    %cmpi/s 32, 0, 32;
	  %jmp/0xz T_3.48, 5;
    %load/vec4 v0x55558eca78a0_0;
    %load/vec4 v0x55558eca7480_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_3.52, 9;
    %load/vec4 v0x55558eca6cd0_0;
    %load/vec4 v0x55558eca7480_0;
    %part/s 1;
    %nor/r;
    %and;
T_3.52;
    %flag_set/vec4 8;
    %jmp/0xz  T_3.50, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x55558eca7480_0;
    %store/vec4 v0x55558eca7c30_0, 4, 1;
T_3.50 ;
T_3.49 ; for-loop step statement
    %load/vec4 v0x55558eca7480_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558eca7480_0, 0, 32;
    %jmp T_3.47;
T_3.48 ; for-loop exit label
    %jmp T_3.27;
T_3.22 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558eca7480_0, 0, 32;
T_3.53 ; Top of for-loop
    %load/vec4 v0x55558eca7480_0;
    %cmpi/s 32, 0, 32;
	  %jmp/0xz T_3.54, 5;
    %load/vec4 v0x55558eca78a0_0;
    %load/vec4 v0x55558eca7480_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_3.58, 9;
    %load/vec4 v0x55558eca6cd0_0;
    %load/vec4 v0x55558eca7480_0;
    %part/s 1;
    %and;
T_3.58;
    %flag_set/vec4 8;
    %jmp/0xz  T_3.56, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x55558eca7480_0;
    %store/vec4 v0x55558eca7c30_0, 4, 1;
T_3.56 ;
T_3.55 ; for-loop step statement
    %load/vec4 v0x55558eca7480_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558eca7480_0, 0, 32;
    %jmp T_3.53;
T_3.54 ; for-loop exit label
    %jmp T_3.27;
T_3.23 ;
    %load/vec4 v0x55558eca78a0_0;
    %cmpi/ne 0, 0, 32;
    %jmp/0xz  T_3.59, 4;
    %pushi/vec4 4294967295, 0, 32;
    %store/vec4 v0x55558eca7c30_0, 0, 32;
T_3.59 ;
    %jmp T_3.27;
T_3.24 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558eca7480_0, 0, 32;
T_3.61 ; Top of for-loop
    %load/vec4 v0x55558eca7480_0;
    %cmpi/s 32, 0, 32;
	  %jmp/0xz T_3.62, 5;
    %load/vec4 v0x55558eca78a0_0;
    %load/vec4 v0x55558eca7480_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_3.66, 9;
    %load/vec4 v0x55558eca6cd0_0;
    %load/vec4 v0x55558eca7480_0;
    %part/s 1;
    %nor/r;
    %and;
T_3.66;
    %flag_set/vec4 8;
    %jmp/0xz  T_3.64, 8;
    %load/vec4 v0x55558ec98f10_0;
    %load/vec4 v0x55558eca7480_0;
    %part/s 1;
    %inv;
    %ix/getv/s 4, v0x55558eca7480_0;
    %store/vec4 v0x55558eca7c30_0, 4, 1;
T_3.64 ;
T_3.63 ; for-loop step statement
    %load/vec4 v0x55558eca7480_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558eca7480_0, 0, 32;
    %jmp T_3.61;
T_3.62 ; for-loop exit label
    %jmp T_3.27;
T_3.25 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558eca7480_0, 0, 32;
T_3.67 ; Top of for-loop
    %load/vec4 v0x55558eca7480_0;
    %cmpi/s 32, 0, 32;
	  %jmp/0xz T_3.68, 5;
    %load/vec4 v0x55558eca78a0_0;
    %load/vec4 v0x55558eca7480_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_3.72, 9;
    %load/vec4 v0x55558eca6cd0_0;
    %load/vec4 v0x55558eca7480_0;
    %part/s 1;
    %and;
T_3.72;
    %flag_set/vec4 8;
    %jmp/0xz  T_3.70, 8;
    %load/vec4 v0x55558ec98f10_0;
    %load/vec4 v0x55558eca7480_0;
    %part/s 1;
    %inv;
    %ix/getv/s 4, v0x55558eca7480_0;
    %store/vec4 v0x55558eca7c30_0, 4, 1;
T_3.70 ;
T_3.69 ; for-loop step statement
    %load/vec4 v0x55558eca7480_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558eca7480_0, 0, 32;
    %jmp T_3.67;
T_3.68 ; for-loop exit label
    %jmp T_3.27;
T_3.27 ;
    %pop/vec4 1;
    %load/vec4 v0x55558eca7c30_0;
    %ret/vec4 0, 0, 32;  Assign to get_sw_write_next_value (store_vec4_to_lval)
    %end;
S_0x55558ed22a00 .scope autofunction.vec4.s1, "get_sw_write_update" "get_sw_write_update" 9 47, 9 47 0, S_0x55558ec8d450;
 .timescale 0 0;
; Variable get_sw_write_update is vec4 return value of scope S_0x55558ed22a00
v0x55558ecdf540_0 .var "update", 2 0;
v0x55558ecdcec0_0 .var "write_done", 0 0;
v0x55558ecea430_0 .var "write_enable", 0 0;
v0x55558ecedc40_0 .var "write_valid", 31 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcnt.g_cnt.u_bit_field.get_sw_write_update ;
    %load/vec4 v0x55558ecedc40_0;
    %pad/u 1;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x55558ecdf540_0, 4, 1;
    %pushi/vec4 1, 0, 1;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x55558ecdf540_0, 4, 1;
    %pushi/vec4 1, 0, 1;
    %ix/load 4, 2, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x55558ecdf540_0, 4, 1;
    %load/vec4 v0x55558ecdf540_0;
    %parti/s 1, 0, 2;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_4.74, 9;
    %load/vec4 v0x55558ecdf540_0;
    %parti/s 1, 1, 2;
    %and;
T_4.74;
    %flag_set/vec4 8;
    %flag_get/vec4 8;
    %jmp/0 T_4.73, 8;
    %load/vec4 v0x55558ecdf540_0;
    %parti/s 1, 2, 3;
    %and;
T_4.73;
    %ret/vec4 0, 0, 1;  Assign to get_sw_write_update (store_vec4_to_lval)
    %end;
S_0x55558ed22060 .scope module, "u_register" "rggen_default_register" 8 311, 10 1 0, S_0x55558ecc9560;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "i_clk";
    .port_info 1 /INPUT 1 "i_rst_n";
    .port_info 2 /INPUT 1 "i_register_valid";
    .port_info 3 /INPUT 2 "i_register_access";
    .port_info 4 /INPUT 3 "i_register_address";
    .port_info 5 /INPUT 32 "i_register_write_data";
    .port_info 6 /INPUT 32 "i_register_strobe";
    .port_info 7 /OUTPUT 1 "o_register_active";
    .port_info 8 /OUTPUT 1 "o_register_ready";
    .port_info 9 /OUTPUT 2 "o_register_status";
    .port_info 10 /OUTPUT 32 "o_register_read_data";
    .port_info 11 /OUTPUT 32 "o_register_value";
    .port_info 12 /OUTPUT 1 "o_bit_field_write_valid";
    .port_info 13 /OUTPUT 1 "o_bit_field_read_valid";
    .port_info 14 /OUTPUT 32 "o_bit_field_mask";
    .port_info 15 /OUTPUT 32 "o_bit_field_write_data";
    .port_info 16 /INPUT 32 "i_bit_field_read_data";
    .port_info 17 /INPUT 32 "i_bit_field_value";
P_0x55558ed216c0 .param/l "ADDRESS_WIDTH" 0 10 4, +C4<00000000000000000000000000000011>;
P_0x55558ed21700 .param/l "BUS_WIDTH" 0 10 6, +C4<00000000000000000000000000100000>;
P_0x55558ed21740 .param/l "DATA_WIDTH" 0 10 7, +C4<00000000000000000000000000100000>;
P_0x55558ed21780 .param/l "OFFSET_ADDRESS" 0 10 5, C4<100>;
P_0x55558ed217c0 .param/l "READABLE" 0 10 2, +C4<00000000000000000000000000000001>;
P_0x55558ed21800 .param/l "WRITABLE" 0 10 3, +C4<00000000000000000000000000000000>;
v0x55558ed24ae0_0 .net "i_bit_field_read_data", 31 0, L_0x55558ed9a420;  alias, 1 drivers
v0x55558ecc8930_0 .net "i_bit_field_value", 31 0, L_0x55558ed9a4e0;  alias, 1 drivers
v0x55558ecc82d0_0 .net "i_clk", 0 0, v0x55558ed7f980_0;  alias, 1 drivers
v0x55558ecc7680_0 .net "i_register_access", 1 0, L_0x55558ed9c200;  alias, 1 drivers
v0x55558ecc7170_0 .net "i_register_address", 2 0, L_0x55558ed9c270;  alias, 1 drivers
v0x55558ecbb020_0 .net "i_register_strobe", 31 0, L_0x55558ed9c380;  alias, 1 drivers
v0x55558ecbb0e0_0 .net "i_register_valid", 0 0, L_0x55558ed9c190;  alias, 1 drivers
v0x55558ecc5790_0 .net "i_register_write_data", 31 0, L_0x55558ed9c310;  alias, 1 drivers
v0x55558ecc5830_0 .net "i_rst_n", 0 0, L_0x55558ed37990;  alias, 1 drivers
v0x55558ecfd5b0_0 .net "o_bit_field_mask", 31 0, L_0x55558ed9ff00;  alias, 1 drivers
v0x55558ecfd650_0 .net "o_bit_field_read_valid", 0 0, L_0x55558ed98fc0;  alias, 1 drivers
v0x55558ecfd260_0 .net "o_bit_field_write_data", 31 0, L_0x55558ed99a20;  alias, 1 drivers
v0x55558ecfcc20_0 .net "o_bit_field_write_valid", 0 0, L_0x55558ed98920;  alias, 1 drivers
v0x55558ecfbff0_0 .net "o_register_active", 0 0, L_0x55558ed99760;  1 drivers
v0x55558ecfc090_0 .net "o_register_read_data", 31 0, L_0x55558ed99910;  1 drivers
v0x55558ecfbae0_0 .net "o_register_ready", 0 0, L_0x55558ed997d0;  1 drivers
v0x55558ecfbb80_0 .net "o_register_status", 1 0, L_0x7fc7583355c0;  1 drivers
v0x55558ecfb5b0_0 .net "o_register_value", 31 0, L_0x55558ed99a90;  1 drivers
S_0x55558ed20cc0 .scope module, "u_register_common" "rggen_register_common" 10 35, 11 2 0, S_0x55558ed22060;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "i_clk";
    .port_info 1 /INPUT 1 "i_rst_n";
    .port_info 2 /INPUT 1 "i_register_valid";
    .port_info 3 /INPUT 2 "i_register_access";
    .port_info 4 /INPUT 3 "i_register_address";
    .port_info 5 /INPUT 32 "i_register_write_data";
    .port_info 6 /INPUT 32 "i_register_strobe";
    .port_info 7 /OUTPUT 1 "o_register_active";
    .port_info 8 /OUTPUT 1 "o_register_ready";
    .port_info 9 /OUTPUT 2 "o_register_status";
    .port_info 10 /OUTPUT 32 "o_register_read_data";
    .port_info 11 /OUTPUT 32 "o_register_value";
    .port_info 12 /INPUT 1 "i_additional_match";
    .port_info 13 /OUTPUT 1 "o_bit_field_write_valid";
    .port_info 14 /OUTPUT 1 "o_bit_field_read_valid";
    .port_info 15 /OUTPUT 32 "o_bit_field_mask";
    .port_info 16 /OUTPUT 32 "o_bit_field_write_data";
    .port_info 17 /INPUT 32 "i_bit_field_read_data";
    .port_info 18 /INPUT 32 "i_bit_field_value";
P_0x55558ebc4c60 .param/l "ADDRESS_WIDTH" 0 11 5, +C4<00000000000000000000000000000011>;
P_0x55558ebc4ca0 .param/l "BUS_BYTE_WIDTH" 1 11 32, +C4<00000000000000000000000000000100>;
P_0x55558ebc4ce0 .param/l "BUS_WIDTH" 0 11 7, +C4<00000000000000000000000000100000>;
P_0x55558ebc4d20 .param/l "DATA_BYTE_WIDTH" 1 11 33, +C4<00000000000000000000000000000100>;
P_0x55558ebc4d60 .param/l "DATA_WIDTH" 0 11 8, +C4<00000000000000000000000000100000>;
P_0x55558ebc4da0 .param/l "OFFSET_ADDRESS" 0 11 6, C4<100>;
P_0x55558ebc4de0 .param/l "READABLE" 0 11 3, +C4<00000000000000000000000000000001>;
P_0x55558ebc4e20 .param/l "USE_ADDITIONAL_MATCH" 0 11 9, C4<0>;
P_0x55558ebc4e60 .param/l "WORDS" 1 11 31, +C4<00000000000000000000000000000001>;
P_0x55558ebc4ea0 .param/l "WRITABLE" 0 11 4, +C4<00000000000000000000000000000000>;
L_0x7fc758335650 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x55558ed987d0 .functor OR 1, L_0x55558ed99160, L_0x7fc758335650, C4<0>, C4<0>;
L_0x55558ed98840 .functor AND 1, L_0x55558ed987d0, L_0x55558ed99330, C4<1>, C4<1>;
L_0x7fc758335608 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x7fc758335698 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x55558ed988b0 .functor AND 1, L_0x7fc758335608, L_0x7fc758335698, C4<1>, C4<1>;
L_0x55558ed98920 .functor OR 1, L_0x55558ed98840, L_0x55558ed988b0, C4<0>, C4<0>;
L_0x55558ed98a70 .functor OR 1, L_0x55558ed99160, L_0x7fc758335650, C4<0>, C4<0>;
L_0x55558ed98c70 .functor AND 1, L_0x55558ed98a70, L_0x55558ed98b80, C4<1>, C4<1>;
L_0x55558ed98eb0 .functor AND 1, L_0x7fc758335608, L_0x55558ed98dc0, C4<1>, C4<1>;
L_0x55558ed98fc0 .functor OR 1, L_0x55558ed98c70, L_0x55558ed98eb0, C4<0>, C4<0>;
L_0x55558ed99160 .functor AND 1, L_0x55558ed9c190, L_0x55558ed98760, C4<1>, C4<1>;
L_0x55558ed99580 .functor BUFZ 32, L_0x55558ed9c310, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0x55558ed99760 .functor BUFZ 1, L_0x55558ed98760, C4<0>, C4<0>, C4<0>;
L_0x55558ed99910 .functor BUFZ 32, L_0x55558ed99b50, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0x55558ed99a90 .functor BUFZ 32, L_0x55558ed9a4e0, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0x55558ed9ff00 .functor BUFT 32, L_0x55558ed993d0, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0x55558ed99a20 .functor BUFT 32, L_0x55558ed99580, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
v0x55558ec8b850_0 .net *"_ivl_1", 0 0, L_0x55558ed987d0;  1 drivers
v0x55558ec8b8f0_0 .net *"_ivl_11", 0 0, L_0x55558ed98a70;  1 drivers
v0x55558ecec710_0 .net *"_ivl_14", 0 0, L_0x55558ed98b80;  1 drivers
v0x55558ecec3c0_0 .net *"_ivl_16", 0 0, L_0x55558ed98c70;  1 drivers
v0x55558ecec480_0 .net *"_ivl_19", 0 0, L_0x55558ed98dc0;  1 drivers
v0x55558ecebdb0_0 .net *"_ivl_21", 0 0, L_0x55558ed98eb0;  1 drivers
v0x55558ecebe70_0 .net *"_ivl_4", 0 0, L_0x55558ed98840;  1 drivers
v0x55558eceb1b0_0 .net *"_ivl_7", 0 0, L_0x55558ed988b0;  1 drivers
L_0x7fc758335770 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v0x55558eceb270_0 .net "i_additional_match", 0 0, L_0x7fc758335770;  1 drivers
v0x55558eceaca0_0 .net "i_bit_field_read_data", 31 0, L_0x55558ed9a420;  alias, 1 drivers
v0x55558ecead40_0 .net "i_bit_field_value", 31 0, L_0x55558ed9a4e0;  alias, 1 drivers
v0x55558ecdf020_0 .net "i_clk", 0 0, v0x55558ed7f980_0;  alias, 1 drivers
v0x55558ecdf0c0_0 .net "i_register_access", 1 0, L_0x55558ed9c200;  alias, 1 drivers
v0x55558eca5f80_0 .net "i_register_address", 2 0, L_0x55558ed9c270;  alias, 1 drivers
v0x55558eca6020_0 .net "i_register_strobe", 31 0, L_0x55558ed9c380;  alias, 1 drivers
v0x55558eca5c30_0 .net "i_register_valid", 0 0, L_0x55558ed9c190;  alias, 1 drivers
v0x55558eca5cf0_0 .net "i_register_write_data", 31 0, L_0x55558ed9c310;  alias, 1 drivers
v0x55558eca4a20_0 .net "i_rst_n", 0 0, L_0x55558ed37990;  alias, 1 drivers
v0x55558eca4ac0_0 .net "o_bit_field_mask", 31 0, L_0x55558ed9ff00;  alias, 1 drivers
v0x55558eca4510_0 .net "o_bit_field_read_valid", 0 0, L_0x55558ed98fc0;  alias, 1 drivers
v0x55558eca45e0_0 .net "o_bit_field_write_data", 31 0, L_0x55558ed99a20;  alias, 1 drivers
v0x55558eca3fe0_0 .net "o_bit_field_write_valid", 0 0, L_0x55558ed98920;  alias, 1 drivers
v0x55558eca40b0_0 .net "o_register_active", 0 0, L_0x55558ed99760;  alias, 1 drivers
v0x55558ec989f0_0 .net "o_register_read_data", 31 0, L_0x55558ed99910;  alias, 1 drivers
v0x55558ec98a90_0 .net "o_register_ready", 0 0, L_0x55558ed997d0;  alias, 1 drivers
v0x55558ecdb2a0_0 .net "o_register_status", 1 0, L_0x7fc7583355c0;  alias, 1 drivers
v0x55558ecdaf50_0 .net "o_register_value", 31 0, L_0x55558ed99a90;  alias, 1 drivers
v0x55558ecda940_0 .net "w_active", 0 0, L_0x55558ed98760;  1 drivers
v0x55558ecdaa00_0 .net "w_backdoor_valid", 0 0, L_0x7fc758335608;  1 drivers
v0x55558ecd9d40_0 .net "w_frontdoor_valid", 0 0, L_0x55558ed99160;  1 drivers
v0x55558ecd9de0 .array "w_mask", 1 0;
v0x55558ecd9de0_0 .net v0x55558ecd9de0 0, 31 0, L_0x55558ed993d0; 1 drivers
L_0x7fc7583356e0 .functor BUFT 1, C4<00000000000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x55558ecd9de0_1 .net v0x55558ecd9de0 1, 31 0, L_0x7fc7583356e0; 1 drivers
v0x55558ecd9830_0 .net "w_match", 0 0, L_0x55558ed98650;  1 drivers
v0x55558ecd98f0_0 .net "w_pending_valid", 0 0, L_0x7fc758335650;  1 drivers
v0x55558eccd6e0_0 .net "w_read_data", 31 0, L_0x55558ed99b50;  1 drivers
v0x55558eccd7a0 .array "w_write", 1 0;
v0x55558eccd7a0_0 .net v0x55558eccd7a0 0, 0 0, L_0x55558ed99330; 1 drivers
v0x55558eccd7a0_1 .net v0x55558eccd7a0 1, 0 0, L_0x7fc758335698; 1 drivers
v0x55558ecd7e50 .array "w_write_data", 1 0;
v0x55558ecd7e50_0 .net v0x55558ecd7e50 0, 31 0, L_0x55558ed99580; 1 drivers
L_0x7fc758335728 .functor BUFT 1, C4<00000000000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x55558ecd7e50_1 .net v0x55558ecd7e50 1, 31 0, L_0x7fc758335728; 1 drivers
L_0x55558ed98b80 .reduce/nor L_0x55558ed99330;
L_0x55558ed98dc0 .reduce/nor L_0x7fc758335698;
L_0x55558ed99330 .part L_0x55558ed9c200, 0, 1;
L_0x55558ed993d0 .ufunc/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcnt.u_register.u_register_common.get_mask, 32, L_0x55558ed98650, L_0x55558ed9c380 (v0x55558ed26240_0, v0x55558ed1c080_0) S_0x55558ed04e80;
L_0x55558ed997d0 .reduce/nor L_0x7fc758335608;
S_0x55558ea9d300 .scope autofunction.vec4.s3, "calc_start_address" "calc_start_address" 11 67, 11 67 0, S_0x55558ed20cc0;
 .timescale 0 0;
; Variable calc_start_address is vec4 return value of scope S_0x55558ea9d300
v0x55558ed24b80_0 .var/i "delta", 31 0;
v0x55558ec94430_0 .var/i "index", 31 0;
v0x55558ec944d0_0 .var "offset_address", 2 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcnt.u_register.u_register_common.calc_start_address ;
    %pushi/vec4 4, 0, 3;
    %store/vec4 v0x55558ec944d0_0, 0, 3;
    %load/vec4 v0x55558ec94430_0;
    %muli 4, 0, 32;
    %store/vec4 v0x55558ed24b80_0, 0, 32;
    %load/vec4 v0x55558ec944d0_0;
    %load/vec4 v0x55558ed24b80_0;
    %parti/s 3, 0, 2;
    %add;
    %ret/vec4 0, 0, 3;  Assign to calc_start_address (store_vec4_to_lval)
    %end;
S_0x55558ed1ffe0 .scope generate, "g_decoder[0]" "g_decoder[0]" 11 42, 11 42 0, S_0x55558ed20cc0;
 .timescale 0 0;
P_0x55558ec97150 .param/l "g_i" 1 11 42, +C4<00>;
S_0x55558ec911a0 .scope module, "u_decoder" "rggen_address_decoder" 11 51, 12 1 0, S_0x55558ed1ffe0;
 .timescale 0 0;
    .port_info 0 /INPUT 3 "i_address";
    .port_info 1 /INPUT 2 "i_access";
    .port_info 2 /INPUT 1 "i_additional_match";
    .port_info 3 /OUTPUT 1 "o_match";
P_0x55558ea58f60 .param/l "ACCESS_BIT" 1 12 16, +C4<00000000000000000000000000000000>;
P_0x55558ea58fa0 .param/l "BEGIN_ADDRESS" 1 12 17, C4<1>;
P_0x55558ea58fe0 .param/l "BEGIN_ADDRESS_ALL_0" 1 12 19, C4<0>;
P_0x55558ea59020 .param/l "BUS_WIDTH" 0 12 5, +C4<00000000000000000000000000100000>;
P_0x55558ea59060 .param/l "BYTE_SIZE" 0 12 7, +C4<00000000000000000000000000000100>;
P_0x55558ea590a0 .param/l "END_ADDRESS" 1 12 18, C4<1>;
P_0x55558ea590e0 .param/l "END_ADDRESS_ALL_1" 1 12 20, C4<1>;
P_0x55558ea59120 .param/l "LSB" 1 12 15, +C4<000000000000000000000000000000010>;
P_0x55558ea59160 .param/l "READABLE" 0 12 2, +C4<00000000000000000000000000000001>;
P_0x55558ea591a0 .param/l "START_ADDRESS" 0 12 6, C4<100>;
P_0x55558ea591e0 .param/l "USE_ADDITIONAL_MATCH" 0 12 8, C4<0>;
P_0x55558ea59220 .param/l "WIDTH" 0 12 4, +C4<00000000000000000000000000000011>;
P_0x55558ea59260 .param/l "WRITABLE" 0 12 3, +C4<00000000000000000000000000000000>;
L_0x55558ed98540 .functor AND 1, L_0x55558ed97cb0, L_0x55558ed98430, C4<1>, C4<1>;
L_0x7fc758335578 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
L_0x55558ed98650 .functor AND 1, L_0x55558ed98540, L_0x7fc758335578, C4<1>, C4<1>;
v0x55558ed1df10_0 .net *"_ivl_3", 0 0, L_0x55558ed98540;  1 drivers
v0x55558ed1d370_0 .net "i_access", 1 0, L_0x55558ed9c200;  alias, 1 drivers
v0x55558ed2bdc0_0 .net "i_additional_match", 0 0, L_0x7fc758335770;  alias, 1 drivers
v0x55558ed2be60_0 .net "i_address", 2 0, L_0x55558ed9c270;  alias, 1 drivers
v0x55558ed274b0_0 .net "o_match", 0 0, L_0x55558ed98650;  alias, 1 drivers
v0x55558ed26fa0_0 .net "w_access_match", 0 0, L_0x55558ed98430;  1 drivers
v0x55558ed27060_0 .net "w_additional_match", 0 0, L_0x7fc758335578;  1 drivers
v0x55558ed26b30_0 .net "w_address_match", 0 0, L_0x55558ed97cb0;  1 drivers
L_0x55558ed98250 .part L_0x55558ed9c270, 2, 1;
L_0x55558ed98390 .part L_0x55558ed9c200, 0, 1;
S_0x55558ec905e0 .scope autofunction.vec4.s1, "calc_end_address" "calc_end_address" 12 38, 12 38 0, S_0x55558ec911a0;
 .timescale 0 0;
v0x55558ed08cd0_0 .var "address", 2 0;
v0x55558ed08d70_0 .var/i "byte_size", 31 0;
; Variable calc_end_address is vec4 return value of scope S_0x55558ec905e0
v0x55558ed2e9e0_0 .var/i "delta", 31 0;
v0x55558ed2e710_0 .var "start_address", 2 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcnt.u_register.u_register_common.g_decoder\x5B0\x5D.u_decoder.calc_end_address ;
    %load/vec4 v0x55558ed08d70_0;
    %subi 1, 0, 32;
    %store/vec4 v0x55558ed2e9e0_0, 0, 32;
    %load/vec4 v0x55558ed2e710_0;
    %load/vec4 v0x55558ed2e9e0_0;
    %parti/s 3, 0, 2;
    %add;
    %store/vec4 v0x55558ed08cd0_0, 0, 3;
    %load/vec4 v0x55558ed08cd0_0;
    %parti/s 1, 2, 3;
    %ret/vec4 0, 0, 1;  Assign to calc_end_address (store_vec4_to_lval)
    %end;
S_0x55558ececdc0 .scope autofunction.vec4.u32, "clog2" "clog2" 12 22, 12 22 0, S_0x55558ec911a0;
 .timescale 0 0;
; Variable clog2 is vec4 return value of scope S_0x55558ececdc0
v0x55558ecd8f90_0 .var/i "n", 31 0;
v0x55558ecc68d0_0 .var/i "result", 31 0;
v0x55558ecc6990_0 .var/i "value", 31 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcnt.u_register.u_register_common.g_decoder\x5B0\x5D.u_decoder.clog2 ;
    %load/vec4 v0x55558ecd8f90_0;
    %subi 1, 0, 32;
    %store/vec4 v0x55558ecc6990_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558ecc68d0_0, 0, 32;
T_7.75 ;
    %load/vec4 v0x55558ecc6990_0;
    %cmpi/s 0, 0, 32;
    %flag_or 5, 4; GT is !LE
    %flag_inv 5;
    %jmp/0xz T_7.76, 5;
    %load/vec4 v0x55558ecc68d0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558ecc68d0_0, 0, 32;
    %load/vec4 v0x55558ecc6990_0;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %shiftr 4;
    %store/vec4 v0x55558ecc6990_0, 0, 32;
    %jmp T_7.75;
T_7.76 ;
    %load/vec4 v0x55558ecc68d0_0;
    %ret/vec4 0, 0, 32;  Assign to clog2 (store_vec4_to_lval)
    %end;
S_0x55558eca6630 .scope generate, "g_access_match" "g_access_match" 12 79, 12 79 0, S_0x55558ec911a0;
 .timescale 0 0;
L_0x7fc758335530 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x55558ed98430 .functor XNOR 1, L_0x55558ed98390, L_0x7fc758335530, C4<0>, C4<0>;
v0x55558ed06430_0 .net *"_ivl_0", 0 0, L_0x55558ed98390;  1 drivers
v0x55558ed064f0_0 .net/2u *"_ivl_1", 0 0, L_0x7fc758335530;  1 drivers
S_0x55558ecc9290 .scope generate, "g_additional_match" "g_additional_match" 12 86, 12 86 0, S_0x55558ec911a0;
 .timescale 0 0;
S_0x55558ecb6b70 .scope generate, "g_address_match" "g_address_match" 12 58, 12 58 0, S_0x55558ec911a0;
 .timescale 0 0;
L_0x7fc7583354e8 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
L_0x55558ed97cb0 .functor XNOR 1, L_0x55558ed98250, L_0x7fc7583354e8, C4<0>, C4<0>;
v0x55558ed0b620_0 .net *"_ivl_0", 0 0, L_0x55558ed98250;  1 drivers
v0x55558ed0b6e0_0 .net/2u *"_ivl_1", 0 0, L_0x7fc7583354e8;  1 drivers
S_0x55558ed05a40 .scope generate, "g_match" "g_match" 11 59, 11 59 0, S_0x55558ed20cc0;
 .timescale 0 0;
L_0x55558ed98760 .functor BUFZ 1, L_0x55558ed98650, C4<0>, C4<0>, C4<0>;
S_0x55558ed04e80 .scope autofunction.vec4.s32, "get_mask" "get_mask" 11 97, 11 97 0, S_0x55558ed20cc0;
 .timescale 0 0;
; Variable get_mask is vec4 return value of scope S_0x55558ed04e80
v0x55558ed26550_0 .var "mask", 31 0;
v0x55558ed26240_0 .var "match", 0 0;
v0x55558ed1c080_0 .var "strobe", 31 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcnt.u_register.u_register_common.get_mask ;
    %load/vec4 v0x55558ed1c080_0;
    %store/vec4 v0x55558ed26550_0, 0, 32;
    %load/vec4 v0x55558ed26550_0;
    %ret/vec4 0, 0, 32;  Assign to get_mask (store_vec4_to_lval)
    %end;
S_0x55558ed1f600 .scope module, "u_read_data_mux" "rggen_mux" 11 134, 13 1 0, S_0x55558ed20cc0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "i_select";
    .port_info 1 /INPUT 32 "i_data";
    .port_info 2 /OUTPUT 32 "o_data";
P_0x55558ed42c40 .param/l "ENTRIES" 0 13 3, +C4<00000000000000000000000000000001>;
P_0x55558ed42c80 .param/l "WIDTH" 0 13 2, +C4<00000000000000000000000000100000>;
v0x55558ec92470_0 .net "i_data", 31 0, L_0x55558ed9a420;  alias, 1 drivers
v0x55558ec8bc00_0 .net "i_select", 0 0, L_0x55558ed98650;  alias, 1 drivers
v0x55558ec8bca0_0 .net "o_data", 31 0, L_0x55558ed99b50;  alias, 1 drivers
S_0x55558ed23c70 .scope generate, "g" "g" 13 10, 13 10 0, S_0x55558ed1f600;
 .timescale 0 0;
L_0x55558ed99b50 .functor BUFZ 32, L_0x55558ed9a420, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
S_0x55558ecfd810 .scope generate, "g_wdcsr" "g_wdcsr" 8 82, 8 82 0, S_0x55558ecb6e40;
 .timescale -8 -9;
v0x55558ecc7a90_0 .net "w_bit_field_mask", 31 0, L_0x55558ed9fd70;  1 drivers
v0x55558ed6e080_0 .net "w_bit_field_read_data", 31 0, L_0x55558ed97d20;  1 drivers
v0x55558ed6e140_0 .net "w_bit_field_read_valid", 0 0, L_0x55558ed814f0;  1 drivers
v0x55558ed6e2f0_0 .net "w_bit_field_value", 31 0, L_0x55558ed97fa0;  1 drivers
v0x55558ed6e3e0_0 .net "w_bit_field_write_data", 31 0, L_0x55558ed81be0;  1 drivers
v0x55558ed6e540_0 .net "w_bit_field_write_valid", 0 0, L_0x55558ed80e60;  1 drivers
L_0x55558ed92740 .part L_0x55558ed9fd70, 0, 1;
L_0x55558ed927e0 .part L_0x55558ed81be0, 0, 1;
L_0x55558ed934a0 .part L_0x55558ed9fd70, 1, 1;
L_0x55558ed935d0 .part L_0x55558ed81be0, 1, 1;
L_0x55558ed947b0 .part L_0x55558ed9fd70, 2, 1;
L_0x55558ed94850 .part L_0x55558ed81be0, 2, 1;
L_0x55558ed957f0 .part L_0x55558ed9fd70, 3, 1;
L_0x55558ed95890 .part L_0x55558ed81be0, 3, 1;
L_0x55558ed96760 .part L_0x55558ed9fd70, 4, 10;
L_0x55558ed96800 .part L_0x55558ed81be0, 4, 10;
L_0x55558ed97a30 .part L_0x55558ed9fd70, 14, 18;
L_0x55558ed97ad0 .part L_0x55558ed81be0, 14, 18;
LS_0x55558ed97d20_0_0 .concat8 [ 1 1 1 1], L_0x55558ed92220, L_0x55558ed92ff0, L_0x55558ed94290, L_0x55558ed952d0;
LS_0x55558ed97d20_0_4 .concat8 [ 10 18 0 0], L_0x55558ed961e0, L_0x55558ed974c0;
L_0x55558ed97d20 .concat8 [ 4 28 0 0], LS_0x55558ed97d20_0_0, LS_0x55558ed97d20_0_4;
LS_0x55558ed97fa0_0_0 .concat8 [ 1 1 1 1], L_0x55558ed922e0, L_0x55558ed930b0, L_0x55558ed94350, L_0x55558ed95390;
LS_0x55558ed97fa0_0_4 .concat8 [ 10 18 0 0], L_0x55558ed962a0, L_0x55558ed975b0;
L_0x55558ed97fa0 .concat8 [ 4 28 0 0], LS_0x55558ed97fa0_0_0, LS_0x55558ed97fa0_0_4;
S_0x55558ec8e050 .scope generate, "__g_tie_off" "__g_tie_off" 8 90, 8 90 0, S_0x55558ecfd810;
 .timescale -8 -9;
S_0x55558ec92e50 .scope generate, "g[0]" "g[0]" 8 92, 8 92 0, S_0x55558ec8e050;
 .timescale -8 -9;
P_0x55558ecb5bc0 .param/l "__i" 1 8 92, +C4<00>;
S_0x55558ec91650 .scope generate, "g[1]" "g[1]" 8 92, 8 92 0, S_0x55558ec8e050;
 .timescale -8 -9;
P_0x55558ecb4f90 .param/l "__i" 1 8 92, +C4<01>;
S_0x55558ec8fae0 .scope generate, "g[2]" "g[2]" 8 92, 8 92 0, S_0x55558ec8e050;
 .timescale -8 -9;
P_0x55558ecb4a40 .param/l "__i" 1 8 92, +C4<010>;
S_0x55558ec8c470 .scope generate, "g[3]" "g[3]" 8 92, 8 92 0, S_0x55558ec8e050;
 .timescale -8 -9;
P_0x55558ecb44c0 .param/l "__i" 1 8 92, +C4<011>;
S_0x55558ed02860 .scope generate, "g[4]" "g[4]" 8 92, 8 92 0, S_0x55558ec8e050;
 .timescale -8 -9;
P_0x55558eca9ac0 .param/l "__i" 1 8 92, +C4<0100>;
S_0x55558ed076f0 .scope generate, "g[5]" "g[5]" 8 92, 8 92 0, S_0x55558ec8e050;
 .timescale -8 -9;
P_0x55558ed07a20 .param/l "__i" 1 8 92, +C4<0101>;
S_0x55558ed05ef0 .scope generate, "g[6]" "g[6]" 8 92, 8 92 0, S_0x55558ec8e050;
 .timescale -8 -9;
P_0x55558ed06d60 .param/l "__i" 1 8 92, +C4<0110>;
S_0x55558ed04380 .scope generate, "g[7]" "g[7]" 8 92, 8 92 0, S_0x55558ec8e050;
 .timescale -8 -9;
P_0x55558ed00530 .param/l "__i" 1 8 92, +C4<0111>;
S_0x55558ed00d50 .scope generate, "g[8]" "g[8]" 8 92, 8 92 0, S_0x55558ec8e050;
 .timescale -8 -9;
P_0x55558eca9a70 .param/l "__i" 1 8 92, +C4<01000>;
S_0x55558ec90f40 .scope generate, "g[9]" "g[9]" 8 92, 8 92 0, S_0x55558ec8e050;
 .timescale -8 -9;
P_0x55558ed19e20 .param/l "__i" 1 8 92, +C4<01001>;
S_0x55558ec90380 .scope generate, "g[10]" "g[10]" 8 92, 8 92 0, S_0x55558ec8e050;
 .timescale -8 -9;
P_0x55558ed191a0 .param/l "__i" 1 8 92, +C4<01010>;
S_0x55558ec8f190 .scope generate, "g[11]" "g[11]" 8 92, 8 92 0, S_0x55558ec8e050;
 .timescale -8 -9;
P_0x55558ed18c00 .param/l "__i" 1 8 92, +C4<01011>;
S_0x55558ecdb950 .scope generate, "g[12]" "g[12]" 8 92, 8 92 0, S_0x55558ec8e050;
 .timescale -8 -9;
P_0x55558ed18ce0 .param/l "__i" 1 8 92, +C4<01100>;
S_0x55558ecfdcf0 .scope generate, "g[13]" "g[13]" 8 92, 8 92 0, S_0x55558ec8e050;
 .timescale -8 -9;
P_0x55558ed18760 .param/l "__i" 1 8 92, +C4<01101>;
S_0x55558ed021b0 .scope generate, "g[14]" "g[14]" 8 92, 8 92 0, S_0x55558ec8e050;
 .timescale -8 -9;
P_0x55558ed0d960 .param/l "__i" 1 8 92, +C4<01110>;
S_0x55558ed057e0 .scope generate, "g[15]" "g[15]" 8 92, 8 92 0, S_0x55558ec8e050;
 .timescale -8 -9;
P_0x55558ed0da40 .param/l "__i" 1 8 92, +C4<01111>;
S_0x55558ed04c20 .scope generate, "g[16]" "g[16]" 8 92, 8 92 0, S_0x55558ec8e050;
 .timescale -8 -9;
P_0x55558ed0ad80 .param/l "__i" 1 8 92, +C4<010000>;
S_0x55558ed03a30 .scope generate, "g[17]" "g[17]" 8 92, 8 92 0, S_0x55558ec8e050;
 .timescale -8 -9;
P_0x55558ed03bc0 .param/l "__i" 1 8 92, +C4<010001>;
S_0x55558ec949f0 .scope generate, "g[18]" "g[18]" 8 92, 8 92 0, S_0x55558ec8e050;
 .timescale -8 -9;
P_0x55558ec94bd0 .param/l "__i" 1 8 92, +C4<010010>;
S_0x55558eabe370 .scope generate, "g[19]" "g[19]" 8 92, 8 92 0, S_0x55558ec8e050;
 .timescale -8 -9;
P_0x55558eabe500 .param/l "__i" 1 8 92, +C4<010011>;
S_0x55558eabe5e0 .scope generate, "g[20]" "g[20]" 8 92, 8 92 0, S_0x55558ec8e050;
 .timescale -8 -9;
P_0x55558eabe7c0 .param/l "__i" 1 8 92, +C4<010100>;
S_0x55558eaccce0 .scope generate, "g[21]" "g[21]" 8 92, 8 92 0, S_0x55558ec8e050;
 .timescale -8 -9;
P_0x55558eaccec0 .param/l "__i" 1 8 92, +C4<010101>;
S_0x55558eaccfa0 .scope generate, "g[22]" "g[22]" 8 92, 8 92 0, S_0x55558ec8e050;
 .timescale -8 -9;
P_0x55558ecfb3c0 .param/l "__i" 1 8 92, +C4<010110>;
S_0x55558eb2bff0 .scope generate, "g[23]" "g[23]" 8 92, 8 92 0, S_0x55558ec8e050;
 .timescale -8 -9;
P_0x55558eb2c1f0 .param/l "__i" 1 8 92, +C4<010111>;
S_0x55558eb2c2d0 .scope generate, "g[24]" "g[24]" 8 92, 8 92 0, S_0x55558ec8e050;
 .timescale -8 -9;
P_0x55558ecb4240 .param/l "__i" 1 8 92, +C4<011000>;
S_0x55558eb3ab50 .scope generate, "g[25]" "g[25]" 8 92, 8 92 0, S_0x55558ec8e050;
 .timescale -8 -9;
P_0x55558eb3ad30 .param/l "__i" 1 8 92, +C4<011001>;
S_0x55558eb3ae10 .scope generate, "g[26]" "g[26]" 8 92, 8 92 0, S_0x55558ec8e050;
 .timescale -8 -9;
P_0x55558ecb4320 .param/l "__i" 1 8 92, +C4<011010>;
S_0x55558eaf43b0 .scope generate, "g[27]" "g[27]" 8 92, 8 92 0, S_0x55558ec8e050;
 .timescale -8 -9;
P_0x55558eaf4590 .param/l "__i" 1 8 92, +C4<011011>;
S_0x55558eaf4670 .scope generate, "g[28]" "g[28]" 8 92, 8 92 0, S_0x55558ec8e050;
 .timescale -8 -9;
P_0x55558ed184e0 .param/l "__i" 1 8 92, +C4<011100>;
S_0x55558eb1a410 .scope generate, "g[29]" "g[29]" 8 92, 8 92 0, S_0x55558ec8e050;
 .timescale -8 -9;
P_0x55558eb1a610 .param/l "__i" 1 8 92, +C4<011101>;
S_0x55558eb1a6f0 .scope generate, "g[30]" "g[30]" 8 92, 8 92 0, S_0x55558ec8e050;
 .timescale -8 -9;
P_0x55558eceb520 .param/l "__i" 1 8 92, +C4<011110>;
S_0x55558ea16dd0 .scope generate, "g[31]" "g[31]" 8 92, 8 92 0, S_0x55558ec8e050;
 .timescale -8 -9;
P_0x55558ea16fb0 .param/l "__i" 1 8 92, +C4<011111>;
S_0x55558ea17090 .scope generate, "g_rvd1" "g_rvd1" 8 145, 8 145 0, S_0x55558ecfd810;
 .timescale -8 -9;
S_0x55558ea52300 .scope module, "u_bit_field" "rggen_bit_field" 8 151, 9 2 0, S_0x55558ea17090;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "i_clk";
    .port_info 1 /INPUT 1 "i_rst_n";
    .port_info 2 /INPUT 1 "i_sw_write_valid";
    .port_info 3 /INPUT 1 "i_sw_write_enable";
    .port_info 4 /INPUT 1 "i_sw_read_valid";
    .port_info 5 /INPUT 1 "i_sw_mask";
    .port_info 6 /INPUT 1 "i_sw_write_data";
    .port_info 7 /OUTPUT 1 "o_sw_read_data";
    .port_info 8 /OUTPUT 1 "o_sw_value";
    .port_info 9 /OUTPUT 1 "o_write_trigger";
    .port_info 10 /OUTPUT 1 "o_read_trigger";
    .port_info 11 /INPUT 1 "i_hw_write_enable";
    .port_info 12 /INPUT 1 "i_hw_write_data";
    .port_info 13 /INPUT 1 "i_hw_set";
    .port_info 14 /INPUT 1 "i_hw_clear";
    .port_info 15 /INPUT 1 "i_value";
    .port_info 16 /INPUT 1 "i_mask";
    .port_info 17 /OUTPUT 1 "o_value";
    .port_info 18 /OUTPUT 1 "o_value_unmasked";
P_0x55558eb73ec0 .param/l "EXTERNAL_MASK" 0 9 17, C4<0>;
P_0x55558eb73f00 .param/l "EXTERNAL_READ_DATA" 0 9 16, +C4<00000000000000000000000000000001>;
P_0x55558eb73f40 .param/l "HW_ACCESS" 0 9 12, C4<000>;
P_0x55558eb73f80 .param/l "HW_CLEAR_WIDTH" 0 9 14, +C4<00000000000000000000000000000001>;
P_0x55558eb73fc0 .param/l "HW_SET_WIDTH" 0 9 13, +C4<00000000000000000000000000000001>;
P_0x55558eb74000 .param/l "HW_WRITE_ENABLE_POLARITY" 0 9 11, C4<1>;
P_0x55558eb74040 .param/l "INITIAL_VALUE" 0 9 4, C4<0>;
P_0x55558eb74080 .param/l "PRECEDENCE_ACCESS" 0 9 5, +C4<00000000000000000000000000000001>;
P_0x55558eb740c0 .param/l "STORAGE" 0 9 15, +C4<00000000000000000000000000000000>;
P_0x55558eb74100 .param/l "SW_READABLE" 1 9 41, C4<1>;
P_0x55558eb74140 .param/l "SW_READ_ACTION" 0 9 6, +C4<00000000000000000000000000000001>;
P_0x55558eb74180 .param/l "SW_READ_UPDATE" 1 9 42, C4<0>;
P_0x55558eb741c0 .param/l "SW_WRITABLE" 1 9 40, C4<1>;
P_0x55558eb74200 .param/l "SW_WRITE_ACTION" 0 9 7, +C4<00000000000000000000000000000001>;
P_0x55558eb74240 .param/l "SW_WRITE_CONTROL" 0 9 8, C4<0>;
P_0x55558eb74280 .param/l "SW_WRITE_ENABLE_POLARITY" 0 9 10, C4<1>;
P_0x55558eb742c0 .param/l "SW_WRITE_ONCE" 0 9 9, C4<0>;
P_0x55558eb74300 .param/l "TRIGGER" 0 9 18, +C4<00000000000000000000000000000000>;
P_0x55558eb74340 .param/l "WIDTH" 0 9 3, +C4<00000000000000000000000000000001>;
L_0x55558ed92ff0 .functor BUFZ 1, L_0x55558ed92f80, C4<0>, C4<0>, C4<0>;
L_0x55558ed930b0 .functor BUFZ 1, L_0x55558ed92ec0, C4<0>, C4<0>, C4<0>;
L_0x55558ed93330 .functor BUFZ 1, L_0x55558ed92ec0, C4<0>, C4<0>, C4<0>;
L_0x55558ed933d0 .functor BUFZ 1, L_0x55558ed92ec0, C4<0>, C4<0>, C4<0>;
v0x55558ebc2670_0 .net "i_clk", 0 0, v0x55558ed7f980_0;  alias, 1 drivers
L_0x7fc7583348d0 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x55558ebc2730_0 .net "i_hw_clear", 0 0, L_0x7fc7583348d0;  1 drivers
L_0x7fc758334888 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x55558ebc2810_0 .net "i_hw_set", 0 0, L_0x7fc758334888;  1 drivers
L_0x7fc758334840 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x55558ebc28d0_0 .net "i_hw_write_data", 0 0, L_0x7fc758334840;  1 drivers
L_0x7fc7583347f8 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x55558ebc29b0_0 .net "i_hw_write_enable", 0 0, L_0x7fc7583347f8;  1 drivers
L_0x7fc758334918 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v0x55558ead61f0_0 .net "i_mask", 0 0, L_0x7fc758334918;  1 drivers
v0x55558ead62d0_0 .net "i_rst_n", 0 0, L_0x55558ed37990;  alias, 1 drivers
v0x55558ead6370_0 .net "i_sw_mask", 0 0, L_0x55558ed934a0;  1 drivers
v0x55558ead6450_0 .net "i_sw_read_valid", 0 0, L_0x55558ed814f0;  alias, 1 drivers
v0x55558ead65a0_0 .net "i_sw_write_data", 0 0, L_0x55558ed935d0;  1 drivers
L_0x7fc7583347b0 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x55558ed44f90_0 .net "i_sw_write_enable", 0 0, L_0x7fc7583347b0;  1 drivers
v0x55558ed45030_0 .net "i_sw_write_valid", 0 0, L_0x55558ed80e60;  alias, 1 drivers
v0x55558ed450d0_0 .net "i_value", 0 0, o0x7fc758380618;  alias, 0 drivers
v0x55558ed45170_0 .net "o_read_trigger", 0 0, L_0x55558ed93260;  1 drivers
v0x55558ed45210_0 .net "o_sw_read_data", 0 0, L_0x55558ed92ff0;  1 drivers
v0x55558ed452b0_0 .net "o_sw_value", 0 0, L_0x55558ed930b0;  1 drivers
v0x55558ed45350_0 .net "o_value", 0 0, L_0x55558ed93330;  1 drivers
v0x55558ed45500_0 .net "o_value_unmasked", 0 0, L_0x55558ed933d0;  1 drivers
v0x55558ed455a0_0 .net "o_write_trigger", 0 0, L_0x55558ed93170;  1 drivers
L_0x7fc758334690 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x55558ed45640_0 .net "w_hw_update", 0 0, L_0x7fc758334690;  1 drivers
v0x55558ed456e0_0 .net "w_read_data", 0 0, L_0x55558ed92f80;  1 drivers
v0x55558ed45780_0 .net "w_sw_update", 1 0, L_0x55558ed92ab0;  1 drivers
L_0x7fc7583346d8 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x55558ed45820_0 .net "w_sw_write_done", 0 0, L_0x7fc7583346d8;  1 drivers
v0x55558ed458c0_0 .net "w_trigger", 1 0, L_0x55558ed92d50;  1 drivers
v0x55558ed45960_0 .net "w_value", 0 0, L_0x55558ed92ec0;  1 drivers
L_0x7fc758334648 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x55558ed92ab0 .concat8 [ 1 1 0 0], L_0x7fc758334648, L_0x55558ed92b80;
L_0x7fc758334720 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x7fc758334768 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x55558ed92d50 .concat8 [ 1 1 0 0], L_0x7fc758334720, L_0x7fc758334768;
L_0x55558ed93170 .part L_0x55558ed92d50, 0, 1;
L_0x55558ed93260 .part L_0x55558ed92d50, 1, 1;
S_0x55558ea7cce0 .scope generate, "g_read_data" "g_read_data" 9 382, 9 382 0, S_0x55558ea52300;
 .timescale 0 0;
L_0x55558ed92f80 .functor BUFZ 1, o0x7fc758380618, C4<0>, C4<0>, C4<0>;
S_0x55558ea7cec0 .scope generate, "g_read_trigger" "g_read_trigger" 9 304, 9 304 0, S_0x55558ea52300;
 .timescale 0 0;
v0x55558ea7d0c0_0 .net/2u *"_ivl_0", 0 0, L_0x7fc758334768;  1 drivers
S_0x55558ea84330 .scope generate, "g_sw_read_update" "g_sw_read_update" 9 245, 9 245 0, S_0x55558ea52300;
 .timescale 0 0;
v0x55558ea84510_0 .net/2u *"_ivl_0", 0 0, L_0x7fc758334648;  1 drivers
S_0x55558ea845f0 .scope generate, "g_sw_write_done" "g_sw_write_done" 9 268, 9 268 0, S_0x55558ea52300;
 .timescale 0 0;
S_0x55558ea94c30 .scope generate, "g_sw_write_update" "g_sw_write_update" 9 252, 9 252 0, S_0x55558ea52300;
 .timescale 0 0;
v0x55558ea94e60_0 .net *"_ivl_1", 0 0, L_0x55558ed92b80;  1 drivers
L_0x55558ed92b80 .ufunc/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_rvd1.u_bit_field.get_sw_write_update, 1, L_0x55558ed80e60, L_0x7fc7583347b0, L_0x7fc7583346d8 (v0x55558ecc5580_0, v0x55558ecc54c0_0, v0x55558eb5b850_0) S_0x55558eb5b4b0;
S_0x55558ea94f60 .scope generate, "g_value" "g_value" 9 323, 9 323 0, S_0x55558ea52300;
 .timescale 0 0;
L_0x55558ed92ec0 .functor BUFZ 1, o0x7fc758380618, C4<0>, C4<0>, C4<0>;
S_0x55558ea12bf0 .scope generate, "g_write_trigger" "g_write_trigger" 9 287, 9 287 0, S_0x55558ea52300;
 .timescale 0 0;
v0x55558ea12dd0_0 .net/2u *"_ivl_0", 0 0, L_0x7fc758334720;  1 drivers
S_0x55558ea12ed0 .scope generate, "genblk3" "genblk3" 9 259, 9 259 0, S_0x55558ea52300;
 .timescale 0 0;
S_0x55558eb65440 .scope autofunction.vec4.s1, "get_hw_next_value" "get_hw_next_value" 9 177, 9 177 0, S_0x55558ea52300;
 .timescale 0 0;
v0x55558eb65620_0 .var "clear", 0 0;
v0x55558eb65720_0 .var "current_value", 0 0;
; Variable get_hw_next_value is vec4 return value of scope S_0x55558eb65440
v0x55558ecfc360_0 .var/i "i", 31 0;
v0x55558ecfc440_0 .var "set", 0 0;
v0x55558ecb5270 .array "set_clear", 1 0, 0 0;
v0x55558ecb5330_0 .var "value", 0 0;
v0x55558ed19480_0 .var "write_data", 0 0;
v0x55558ed19540_0 .var "write_enable", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_rvd1.u_bit_field.get_hw_next_value ;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x55558ecb5270, 4, 0;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x55558ecb5270, 4, 0;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558ecfc360_0, 0, 32;
T_9.77 ; Top of for-loop
    %load/vec4 v0x55558ecfc360_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_9.78, 5;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x55558ecb5270, 4;
    %load/vec4 v0x55558ecfc360_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_9.80, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x55558ecfc360_0;
    %store/vec4 v0x55558ecb5330_0, 4, 1;
    %jmp T_9.81;
T_9.80 ;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x55558ecb5270, 4;
    %load/vec4 v0x55558ecfc360_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_9.82, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x55558ecfc360_0;
    %store/vec4 v0x55558ecb5330_0, 4, 1;
    %jmp T_9.83;
T_9.82 ;
    %load/vec4 v0x55558eb65720_0;
    %load/vec4 v0x55558ecfc360_0;
    %part/s 1;
    %ix/getv/s 4, v0x55558ecfc360_0;
    %store/vec4 v0x55558ecb5330_0, 4, 1;
T_9.83 ;
T_9.81 ;
T_9.79 ; for-loop step statement
    %load/vec4 v0x55558ecfc360_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558ecfc360_0, 0, 32;
    %jmp T_9.77;
T_9.78 ; for-loop exit label
    %load/vec4 v0x55558ecb5330_0;
    %ret/vec4 0, 0, 1;  Assign to get_hw_next_value (store_vec4_to_lval)
    %end;
S_0x55558e9c4d40 .scope autofunction.vec4.s1, "get_hw_update" "get_hw_update" 9 72, 9 72 0, S_0x55558ea52300;
 .timescale 0 0;
v0x55558e9c4ed0_0 .var "clear", 0 0;
; Variable get_hw_update is vec4 return value of scope S_0x55558e9c4d40
v0x55558e9c5090_0 .var "set", 0 0;
v0x55558e9c5150_0 .var "update", 2 0;
v0x55558ece6480_0 .var "write_enable", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_rvd1.u_bit_field.get_hw_update ;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x55558e9c5150_0, 4, 1;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x55558e9c5150_0, 4, 1;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 2, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x55558e9c5150_0, 4, 1;
    %load/vec4 v0x55558e9c5150_0;
    %parti/s 1, 0, 2;
    %flag_set/vec4 8;
    %jmp/1 T_10.85, 8;
    %load/vec4 v0x55558e9c5150_0;
    %parti/s 1, 1, 2;
    %flag_set/vec4 9;
    %flag_or 8, 9;
T_10.85;
    %flag_get/vec4 8;
    %jmp/1 T_10.84, 8;
    %load/vec4 v0x55558e9c5150_0;
    %parti/s 1, 2, 3;
    %or;
T_10.84;
    %ret/vec4 0, 0, 1;  Assign to get_hw_update (store_vec4_to_lval)
    %end;
S_0x55558ea680d0 .scope autofunction.vec4.s1, "get_sw_read_next_value" "get_sw_read_next_value" 9 86, 9 86 0, S_0x55558ea52300;
 .timescale 0 0;
v0x55558ea68260_0 .var "current_value", 0 0;
; Variable get_sw_read_next_value is vec4 return value of scope S_0x55558ea680d0
v0x55558ea68440_0 .var "mask", 0 0;
v0x55558ea68500_0 .var "value", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_rvd1.u_bit_field.get_sw_read_next_value ;
    %pushi/vec4 1, 0, 32;
    %dup/vec4;
    %pushi/vec4 2, 0, 32;
    %cmp/u;
    %jmp/1 T_11.86, 6;
    %dup/vec4;
    %pushi/vec4 3, 0, 32;
    %cmp/u;
    %jmp/1 T_11.87, 6;
    %load/vec4 v0x55558ea68260_0;
    %store/vec4 v0x55558ea68500_0, 0, 1;
    %jmp T_11.89;
T_11.86 ;
    %load/vec4 v0x55558ea68440_0;
    %cmpi/ne 0, 0, 1;
    %flag_mov 8, 4;
    %jmp/0 T_11.90, 8;
    %pushi/vec4 0, 0, 1;
    %jmp/1 T_11.91, 8;
T_11.90 ; End of true expr.
    %load/vec4 v0x55558ea68260_0;
    %jmp/0 T_11.91, 8;
 ; End of false expr.
    %blend;
T_11.91;
    %store/vec4 v0x55558ea68500_0, 0, 1;
    %jmp T_11.89;
T_11.87 ;
    %load/vec4 v0x55558ea68440_0;
    %cmpi/ne 0, 0, 1;
    %flag_mov 8, 4;
    %jmp/0 T_11.92, 8;
    %pushi/vec4 1, 0, 1;
    %jmp/1 T_11.93, 8;
T_11.92 ; End of true expr.
    %load/vec4 v0x55558ea68260_0;
    %jmp/0 T_11.93, 8;
 ; End of false expr.
    %blend;
T_11.93;
    %store/vec4 v0x55558ea68500_0, 0, 1;
    %jmp T_11.89;
T_11.89 ;
    %pop/vec4 1;
    %load/vec4 v0x55558ea68500_0;
    %ret/vec4 0, 0, 1;  Assign to get_sw_read_next_value (store_vec4_to_lval)
    %end;
S_0x55558eb418a0 .scope autofunction.vec4.s1, "get_sw_write_next_value" "get_sw_write_next_value" 9 101, 9 101 0, S_0x55558ea52300;
 .timescale 0 0;
v0x55558eb41a80_0 .var "current_value", 0 0;
; Variable get_sw_write_next_value is vec4 return value of scope S_0x55558eb418a0
v0x55558eb41c60_0 .var/i "i", 31 0;
v0x55558ec9fcc0_0 .var "mask", 0 0;
v0x55558ec9fd80_0 .var "value", 0 0;
v0x55558ecd7bf0_0 .var "write_data", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_rvd1.u_bit_field.get_sw_write_next_value ;
    %load/vec4 v0x55558eb41a80_0;
    %store/vec4 v0x55558ec9fd80_0, 0, 1;
    %pushi/vec4 1, 0, 32;
    %dup/vec4;
    %pushi/vec4 1, 0, 32;
    %cmp/u;
    %jmp/1 T_12.94, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 32;
    %cmp/u;
    %jmp/1 T_12.95, 6;
    %dup/vec4;
    %pushi/vec4 3, 0, 32;
    %cmp/u;
    %jmp/1 T_12.96, 6;
    %dup/vec4;
    %pushi/vec4 4, 0, 32;
    %cmp/u;
    %jmp/1 T_12.97, 6;
    %dup/vec4;
    %pushi/vec4 5, 0, 32;
    %cmp/u;
    %jmp/1 T_12.98, 6;
    %dup/vec4;
    %pushi/vec4 6, 0, 32;
    %cmp/u;
    %jmp/1 T_12.99, 6;
    %dup/vec4;
    %pushi/vec4 7, 0, 32;
    %cmp/u;
    %jmp/1 T_12.100, 6;
    %dup/vec4;
    %pushi/vec4 8, 0, 32;
    %cmp/u;
    %jmp/1 T_12.101, 6;
    %dup/vec4;
    %pushi/vec4 9, 0, 32;
    %cmp/u;
    %jmp/1 T_12.102, 6;
    %jmp T_12.104;
T_12.94 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558eb41c60_0, 0, 32;
T_12.105 ; Top of for-loop
    %load/vec4 v0x55558eb41c60_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_12.106, 5;
    %load/vec4 v0x55558ec9fcc0_0;
    %load/vec4 v0x55558eb41c60_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_12.108, 8;
    %load/vec4 v0x55558ecd7bf0_0;
    %load/vec4 v0x55558eb41c60_0;
    %part/s 1;
    %ix/getv/s 4, v0x55558eb41c60_0;
    %store/vec4 v0x55558ec9fd80_0, 4, 1;
T_12.108 ;
T_12.107 ; for-loop step statement
    %load/vec4 v0x55558eb41c60_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558eb41c60_0, 0, 32;
    %jmp T_12.105;
T_12.106 ; for-loop exit label
    %jmp T_12.104;
T_12.95 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558eb41c60_0, 0, 32;
T_12.110 ; Top of for-loop
    %load/vec4 v0x55558eb41c60_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_12.111, 5;
    %load/vec4 v0x55558ec9fcc0_0;
    %load/vec4 v0x55558eb41c60_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_12.115, 9;
    %load/vec4 v0x55558ecd7bf0_0;
    %load/vec4 v0x55558eb41c60_0;
    %part/s 1;
    %nor/r;
    %and;
T_12.115;
    %flag_set/vec4 8;
    %jmp/0xz  T_12.113, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x55558eb41c60_0;
    %store/vec4 v0x55558ec9fd80_0, 4, 1;
T_12.113 ;
T_12.112 ; for-loop step statement
    %load/vec4 v0x55558eb41c60_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558eb41c60_0, 0, 32;
    %jmp T_12.110;
T_12.111 ; for-loop exit label
    %jmp T_12.104;
T_12.96 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558eb41c60_0, 0, 32;
T_12.116 ; Top of for-loop
    %load/vec4 v0x55558eb41c60_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_12.117, 5;
    %load/vec4 v0x55558ec9fcc0_0;
    %load/vec4 v0x55558eb41c60_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_12.121, 9;
    %load/vec4 v0x55558ecd7bf0_0;
    %load/vec4 v0x55558eb41c60_0;
    %part/s 1;
    %and;
T_12.121;
    %flag_set/vec4 8;
    %jmp/0xz  T_12.119, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x55558eb41c60_0;
    %store/vec4 v0x55558ec9fd80_0, 4, 1;
T_12.119 ;
T_12.118 ; for-loop step statement
    %load/vec4 v0x55558eb41c60_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558eb41c60_0, 0, 32;
    %jmp T_12.116;
T_12.117 ; for-loop exit label
    %jmp T_12.104;
T_12.97 ;
    %load/vec4 v0x55558ec9fcc0_0;
    %cmpi/ne 0, 0, 1;
    %jmp/0xz  T_12.122, 4;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x55558ec9fd80_0, 0, 1;
T_12.122 ;
    %jmp T_12.104;
T_12.98 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558eb41c60_0, 0, 32;
T_12.124 ; Top of for-loop
    %load/vec4 v0x55558eb41c60_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_12.125, 5;
    %load/vec4 v0x55558ec9fcc0_0;
    %load/vec4 v0x55558eb41c60_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_12.129, 9;
    %load/vec4 v0x55558ecd7bf0_0;
    %load/vec4 v0x55558eb41c60_0;
    %part/s 1;
    %nor/r;
    %and;
T_12.129;
    %flag_set/vec4 8;
    %jmp/0xz  T_12.127, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x55558eb41c60_0;
    %store/vec4 v0x55558ec9fd80_0, 4, 1;
T_12.127 ;
T_12.126 ; for-loop step statement
    %load/vec4 v0x55558eb41c60_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558eb41c60_0, 0, 32;
    %jmp T_12.124;
T_12.125 ; for-loop exit label
    %jmp T_12.104;
T_12.99 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558eb41c60_0, 0, 32;
T_12.130 ; Top of for-loop
    %load/vec4 v0x55558eb41c60_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_12.131, 5;
    %load/vec4 v0x55558ec9fcc0_0;
    %load/vec4 v0x55558eb41c60_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_12.135, 9;
    %load/vec4 v0x55558ecd7bf0_0;
    %load/vec4 v0x55558eb41c60_0;
    %part/s 1;
    %and;
T_12.135;
    %flag_set/vec4 8;
    %jmp/0xz  T_12.133, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x55558eb41c60_0;
    %store/vec4 v0x55558ec9fd80_0, 4, 1;
T_12.133 ;
T_12.132 ; for-loop step statement
    %load/vec4 v0x55558eb41c60_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558eb41c60_0, 0, 32;
    %jmp T_12.130;
T_12.131 ; for-loop exit label
    %jmp T_12.104;
T_12.100 ;
    %load/vec4 v0x55558ec9fcc0_0;
    %cmpi/ne 0, 0, 1;
    %jmp/0xz  T_12.136, 4;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x55558ec9fd80_0, 0, 1;
T_12.136 ;
    %jmp T_12.104;
T_12.101 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558eb41c60_0, 0, 32;
T_12.138 ; Top of for-loop
    %load/vec4 v0x55558eb41c60_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_12.139, 5;
    %load/vec4 v0x55558ec9fcc0_0;
    %load/vec4 v0x55558eb41c60_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_12.143, 9;
    %load/vec4 v0x55558ecd7bf0_0;
    %load/vec4 v0x55558eb41c60_0;
    %part/s 1;
    %nor/r;
    %and;
T_12.143;
    %flag_set/vec4 8;
    %jmp/0xz  T_12.141, 8;
    %load/vec4 v0x55558eb41a80_0;
    %load/vec4 v0x55558eb41c60_0;
    %part/s 1;
    %inv;
    %ix/getv/s 4, v0x55558eb41c60_0;
    %store/vec4 v0x55558ec9fd80_0, 4, 1;
T_12.141 ;
T_12.140 ; for-loop step statement
    %load/vec4 v0x55558eb41c60_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558eb41c60_0, 0, 32;
    %jmp T_12.138;
T_12.139 ; for-loop exit label
    %jmp T_12.104;
T_12.102 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558eb41c60_0, 0, 32;
T_12.144 ; Top of for-loop
    %load/vec4 v0x55558eb41c60_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_12.145, 5;
    %load/vec4 v0x55558ec9fcc0_0;
    %load/vec4 v0x55558eb41c60_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_12.149, 9;
    %load/vec4 v0x55558ecd7bf0_0;
    %load/vec4 v0x55558eb41c60_0;
    %part/s 1;
    %and;
T_12.149;
    %flag_set/vec4 8;
    %jmp/0xz  T_12.147, 8;
    %load/vec4 v0x55558eb41a80_0;
    %load/vec4 v0x55558eb41c60_0;
    %part/s 1;
    %inv;
    %ix/getv/s 4, v0x55558eb41c60_0;
    %store/vec4 v0x55558ec9fd80_0, 4, 1;
T_12.147 ;
T_12.146 ; for-loop step statement
    %load/vec4 v0x55558eb41c60_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558eb41c60_0, 0, 32;
    %jmp T_12.144;
T_12.145 ; for-loop exit label
    %jmp T_12.104;
T_12.104 ;
    %pop/vec4 1;
    %load/vec4 v0x55558ec9fd80_0;
    %ret/vec4 0, 0, 1;  Assign to get_sw_write_next_value (store_vec4_to_lval)
    %end;
S_0x55558eb5b4b0 .scope autofunction.vec4.s1, "get_sw_write_update" "get_sw_write_update" 9 47, 9 47 0, S_0x55558ea52300;
 .timescale 0 0;
; Variable get_sw_write_update is vec4 return value of scope S_0x55558eb5b4b0
v0x55558eb5b770_0 .var "update", 2 0;
v0x55558eb5b850_0 .var "write_done", 0 0;
v0x55558ecc54c0_0 .var "write_enable", 0 0;
v0x55558ecc5580_0 .var "write_valid", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_rvd1.u_bit_field.get_sw_write_update ;
    %load/vec4 v0x55558ecc5580_0;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x55558eb5b770_0, 4, 1;
    %pushi/vec4 1, 0, 1;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x55558eb5b770_0, 4, 1;
    %pushi/vec4 1, 0, 1;
    %ix/load 4, 2, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x55558eb5b770_0, 4, 1;
    %load/vec4 v0x55558eb5b770_0;
    %parti/s 1, 0, 2;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_13.151, 9;
    %load/vec4 v0x55558eb5b770_0;
    %parti/s 1, 1, 2;
    %and;
T_13.151;
    %flag_set/vec4 8;
    %flag_get/vec4 8;
    %jmp/0 T_13.150, 8;
    %load/vec4 v0x55558eb5b770_0;
    %parti/s 1, 2, 3;
    %and;
T_13.150;
    %ret/vec4 0, 0, 1;  Assign to get_sw_write_update (store_vec4_to_lval)
    %end;
S_0x55558ed45ba0 .scope generate, "g_rvd2" "g_rvd2" 8 267, 8 267 0, S_0x55558ecfd810;
 .timescale -8 -9;
S_0x55558ed45d30 .scope module, "u_bit_field" "rggen_bit_field" 8 273, 9 2 0, S_0x55558ed45ba0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "i_clk";
    .port_info 1 /INPUT 1 "i_rst_n";
    .port_info 2 /INPUT 1 "i_sw_write_valid";
    .port_info 3 /INPUT 1 "i_sw_write_enable";
    .port_info 4 /INPUT 1 "i_sw_read_valid";
    .port_info 5 /INPUT 18 "i_sw_mask";
    .port_info 6 /INPUT 18 "i_sw_write_data";
    .port_info 7 /OUTPUT 18 "o_sw_read_data";
    .port_info 8 /OUTPUT 18 "o_sw_value";
    .port_info 9 /OUTPUT 1 "o_write_trigger";
    .port_info 10 /OUTPUT 1 "o_read_trigger";
    .port_info 11 /INPUT 1 "i_hw_write_enable";
    .port_info 12 /INPUT 18 "i_hw_write_data";
    .port_info 13 /INPUT 18 "i_hw_set";
    .port_info 14 /INPUT 18 "i_hw_clear";
    .port_info 15 /INPUT 18 "i_value";
    .port_info 16 /INPUT 18 "i_mask";
    .port_info 17 /OUTPUT 18 "o_value";
    .port_info 18 /OUTPUT 18 "o_value_unmasked";
P_0x55558ed45f10 .param/l "EXTERNAL_MASK" 0 9 17, C4<0>;
P_0x55558ed45f50 .param/l "EXTERNAL_READ_DATA" 0 9 16, +C4<00000000000000000000000000000001>;
P_0x55558ed45f90 .param/l "HW_ACCESS" 0 9 12, C4<000>;
P_0x55558ed45fd0 .param/l "HW_CLEAR_WIDTH" 0 9 14, +C4<00000000000000000000000000010010>;
P_0x55558ed46010 .param/l "HW_SET_WIDTH" 0 9 13, +C4<00000000000000000000000000010010>;
P_0x55558ed46050 .param/l "HW_WRITE_ENABLE_POLARITY" 0 9 11, C4<1>;
P_0x55558ed46090 .param/l "INITIAL_VALUE" 0 9 4, C4<000000000000000000>;
P_0x55558ed460d0 .param/l "PRECEDENCE_ACCESS" 0 9 5, +C4<00000000000000000000000000000001>;
P_0x55558ed46110 .param/l "STORAGE" 0 9 15, +C4<00000000000000000000000000000000>;
P_0x55558ed46150 .param/l "SW_READABLE" 1 9 41, C4<1>;
P_0x55558ed46190 .param/l "SW_READ_ACTION" 0 9 6, +C4<00000000000000000000000000000001>;
P_0x55558ed461d0 .param/l "SW_READ_UPDATE" 1 9 42, C4<0>;
P_0x55558ed46210 .param/l "SW_WRITABLE" 1 9 40, C4<1>;
P_0x55558ed46250 .param/l "SW_WRITE_ACTION" 0 9 7, +C4<00000000000000000000000000000001>;
P_0x55558ed46290 .param/l "SW_WRITE_CONTROL" 0 9 8, C4<0>;
P_0x55558ed462d0 .param/l "SW_WRITE_ENABLE_POLARITY" 0 9 10, C4<1>;
P_0x55558ed46310 .param/l "SW_WRITE_ONCE" 0 9 9, C4<0>;
P_0x55558ed46350 .param/l "TRIGGER" 0 9 18, +C4<00000000000000000000000000000000>;
P_0x55558ed46390 .param/l "WIDTH" 0 9 3, +C4<00000000000000000000000000010010>;
L_0x55558ed974c0 .functor BUFZ 18, L_0x55558ed97450, C4<000000000000000000>, C4<000000000000000000>, C4<000000000000000000>;
L_0x55558ed975b0 .functor BUFZ 18, L_0x55558ed97390, C4<000000000000000000>, C4<000000000000000000>, C4<000000000000000000>;
L_0x55558ed97830 .functor BUFZ 18, L_0x55558ed97390, C4<000000000000000000>, C4<000000000000000000>, C4<000000000000000000>;
L_0x55558ed978d0 .functor BUFZ 18, L_0x55558ed97390, C4<000000000000000000>, C4<000000000000000000>, C4<000000000000000000>;
v0x55558ed4a7c0_0 .net "i_clk", 0 0, v0x55558ed7f980_0;  alias, 1 drivers
L_0x7fc758335458 .functor BUFT 1, C4<000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x55558ed4a880_0 .net "i_hw_clear", 17 0, L_0x7fc758335458;  1 drivers
L_0x7fc758335410 .functor BUFT 1, C4<000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x55558ed4a960_0 .net "i_hw_set", 17 0, L_0x7fc758335410;  1 drivers
L_0x7fc7583353c8 .functor BUFT 1, C4<000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x55558ed4aa20_0 .net "i_hw_write_data", 17 0, L_0x7fc7583353c8;  1 drivers
L_0x7fc758335380 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x55558ed4ab00_0 .net "i_hw_write_enable", 0 0, L_0x7fc758335380;  1 drivers
L_0x7fc7583354a0 .functor BUFT 1, C4<111111111111111111>, C4<0>, C4<0>, C4<0>;
v0x55558ed4ac10_0 .net "i_mask", 17 0, L_0x7fc7583354a0;  1 drivers
v0x55558ed4acf0_0 .net "i_rst_n", 0 0, L_0x55558ed37990;  alias, 1 drivers
v0x55558ed4ad90_0 .net "i_sw_mask", 17 0, L_0x55558ed97a30;  1 drivers
v0x55558ed4ae70_0 .net "i_sw_read_valid", 0 0, L_0x55558ed814f0;  alias, 1 drivers
v0x55558ed4afa0_0 .net "i_sw_write_data", 17 0, L_0x55558ed97ad0;  1 drivers
L_0x7fc758335338 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x55558ed4b060_0 .net "i_sw_write_enable", 0 0, L_0x7fc758335338;  1 drivers
v0x55558ed4b120_0 .net "i_sw_write_valid", 0 0, L_0x55558ed80e60;  alias, 1 drivers
v0x55558ed4b1f0_0 .net "i_value", 17 0, o0x7fc7583813f8;  alias, 0 drivers
v0x55558ed4b2b0_0 .net "o_read_trigger", 0 0, L_0x55558ed97760;  1 drivers
v0x55558ed4b370_0 .net "o_sw_read_data", 17 0, L_0x55558ed974c0;  1 drivers
v0x55558ed4b450_0 .net "o_sw_value", 17 0, L_0x55558ed975b0;  1 drivers
v0x55558ed4b530_0 .net "o_value", 17 0, L_0x55558ed97830;  1 drivers
v0x55558ed4b720_0 .net "o_value_unmasked", 17 0, L_0x55558ed978d0;  1 drivers
v0x55558ed4b800_0 .net "o_write_trigger", 0 0, L_0x55558ed97670;  1 drivers
L_0x7fc758335218 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x55558ed4b8c0_0 .net "w_hw_update", 0 0, L_0x7fc758335218;  1 drivers
v0x55558ed4b980_0 .net "w_read_data", 17 0, L_0x55558ed97450;  1 drivers
v0x55558ed4ba60_0 .net "w_sw_update", 1 0, L_0x55558ed96a80;  1 drivers
L_0x7fc758335260 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x55558ed4bb40_0 .net "w_sw_write_done", 0 0, L_0x7fc758335260;  1 drivers
v0x55558ed4bc00_0 .net "w_trigger", 1 0, L_0x55558ed97220;  1 drivers
v0x55558ed4bce0_0 .net "w_value", 17 0, L_0x55558ed97390;  1 drivers
L_0x7fc758335188 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x55558ed96a80 .concat8 [ 1 1 0 0], L_0x7fc758335188, L_0x55558ed96c50;
L_0x7fc7583352a8 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x7fc7583352f0 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x55558ed97220 .concat8 [ 1 1 0 0], L_0x7fc7583352a8, L_0x7fc7583352f0;
L_0x55558ed97670 .part L_0x55558ed97220, 0, 1;
L_0x55558ed97760 .part L_0x55558ed97220, 1, 1;
S_0x55558ed46fa0 .scope generate, "g_read_data" "g_read_data" 9 382, 9 382 0, S_0x55558ed45d30;
 .timescale 0 0;
L_0x55558ed97450 .functor BUFZ 18, o0x7fc7583813f8, C4<000000000000000000>, C4<000000000000000000>, C4<000000000000000000>;
S_0x55558ed47130 .scope generate, "g_read_trigger" "g_read_trigger" 9 304, 9 304 0, S_0x55558ed45d30;
 .timescale 0 0;
v0x55558ed47330_0 .net/2u *"_ivl_0", 0 0, L_0x7fc7583352f0;  1 drivers
S_0x55558ed47410 .scope generate, "g_sw_read_update" "g_sw_read_update" 9 245, 9 245 0, S_0x55558ed45d30;
 .timescale 0 0;
v0x55558ed47620_0 .net/2u *"_ivl_0", 0 0, L_0x7fc758335188;  1 drivers
S_0x55558ed47700 .scope generate, "g_sw_write_done" "g_sw_write_done" 9 268, 9 268 0, S_0x55558ed45d30;
 .timescale 0 0;
S_0x55558ed478e0 .scope generate, "g_sw_write_update" "g_sw_write_update" 9 252, 9 252 0, S_0x55558ed45d30;
 .timescale 0 0;
v0x55558ed47b10_0 .net *"_ivl_0", 17 0, L_0x55558ed96b50;  1 drivers
L_0x7fc7583351d0 .functor BUFT 1, C4<00000000000000000>, C4<0>, C4<0>, C4<0>;
v0x55558ed47c10_0 .net *"_ivl_3", 16 0, L_0x7fc7583351d0;  1 drivers
v0x55558ed47cf0_0 .net *"_ivl_5", 0 0, L_0x55558ed96c50;  1 drivers
L_0x55558ed96b50 .concat [ 1 17 0 0], L_0x55558ed80e60, L_0x7fc7583351d0;
L_0x55558ed96c50 .ufunc/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_rvd2.u_bit_field.get_sw_write_update, 1, L_0x55558ed96b50, L_0x7fc758335338, L_0x7fc758335260 (v0x55558ed4a690_0, v0x55558ed4a5d0_0, v0x55558ed4a530_0) S_0x55558ed4a190;
S_0x55558ed47db0 .scope generate, "g_value" "g_value" 9 323, 9 323 0, S_0x55558ed45d30;
 .timescale 0 0;
L_0x55558ed97390 .functor BUFZ 18, o0x7fc7583813f8, C4<000000000000000000>, C4<000000000000000000>, C4<000000000000000000>;
S_0x55558ed47f90 .scope generate, "g_write_trigger" "g_write_trigger" 9 287, 9 287 0, S_0x55558ed45d30;
 .timescale 0 0;
v0x55558ed48170_0 .net/2u *"_ivl_0", 0 0, L_0x7fc7583352a8;  1 drivers
S_0x55558ed48270 .scope generate, "genblk3" "genblk3" 9 259, 9 259 0, S_0x55558ed45d30;
 .timescale 0 0;
S_0x55558ed48450 .scope autofunction.vec4.s18, "get_hw_next_value" "get_hw_next_value" 9 177, 9 177 0, S_0x55558ed45d30;
 .timescale 0 0;
v0x55558ed48630_0 .var "clear", 17 0;
v0x55558ed48730_0 .var "current_value", 17 0;
; Variable get_hw_next_value is vec4 return value of scope S_0x55558ed48450
v0x55558ed48900_0 .var/i "i", 31 0;
v0x55558ed489e0_0 .var "set", 17 0;
v0x55558ed48ac0 .array "set_clear", 1 0, 17 0;
v0x55558ed48b80_0 .var "value", 17 0;
v0x55558ed48c60_0 .var "write_data", 17 0;
v0x55558ed48d40_0 .var "write_enable", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_rvd2.u_bit_field.get_hw_next_value ;
    %pushi/vec4 0, 0, 18;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x55558ed48ac0, 4, 0;
    %pushi/vec4 0, 0, 18;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x55558ed48ac0, 4, 0;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558ed48900_0, 0, 32;
T_14.152 ; Top of for-loop
    %load/vec4 v0x55558ed48900_0;
    %cmpi/s 18, 0, 32;
	  %jmp/0xz T_14.153, 5;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x55558ed48ac0, 4;
    %load/vec4 v0x55558ed48900_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_14.155, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x55558ed48900_0;
    %store/vec4 v0x55558ed48b80_0, 4, 1;
    %jmp T_14.156;
T_14.155 ;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x55558ed48ac0, 4;
    %load/vec4 v0x55558ed48900_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_14.157, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x55558ed48900_0;
    %store/vec4 v0x55558ed48b80_0, 4, 1;
    %jmp T_14.158;
T_14.157 ;
    %load/vec4 v0x55558ed48730_0;
    %load/vec4 v0x55558ed48900_0;
    %part/s 1;
    %ix/getv/s 4, v0x55558ed48900_0;
    %store/vec4 v0x55558ed48b80_0, 4, 1;
T_14.158 ;
T_14.156 ;
T_14.154 ; for-loop step statement
    %load/vec4 v0x55558ed48900_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558ed48900_0, 0, 32;
    %jmp T_14.152;
T_14.153 ; for-loop exit label
    %load/vec4 v0x55558ed48b80_0;
    %ret/vec4 0, 0, 18;  Assign to get_hw_next_value (store_vec4_to_lval)
    %end;
S_0x55558ed48e90 .scope autofunction.vec4.s1, "get_hw_update" "get_hw_update" 9 72, 9 72 0, S_0x55558ed45d30;
 .timescale 0 0;
v0x55558ed49020_0 .var "clear", 17 0;
; Variable get_hw_update is vec4 return value of scope S_0x55558ed48e90
v0x55558ed491e0_0 .var "set", 17 0;
v0x55558ed492a0_0 .var "update", 2 0;
v0x55558ed49380_0 .var "write_enable", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_rvd2.u_bit_field.get_hw_update ;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x55558ed492a0_0, 4, 1;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x55558ed492a0_0, 4, 1;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 2, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x55558ed492a0_0, 4, 1;
    %load/vec4 v0x55558ed492a0_0;
    %parti/s 1, 0, 2;
    %flag_set/vec4 8;
    %jmp/1 T_15.160, 8;
    %load/vec4 v0x55558ed492a0_0;
    %parti/s 1, 1, 2;
    %flag_set/vec4 9;
    %flag_or 8, 9;
T_15.160;
    %flag_get/vec4 8;
    %jmp/1 T_15.159, 8;
    %load/vec4 v0x55558ed492a0_0;
    %parti/s 1, 2, 3;
    %or;
T_15.159;
    %ret/vec4 0, 0, 1;  Assign to get_hw_update (store_vec4_to_lval)
    %end;
S_0x55558ed49490 .scope autofunction.vec4.s18, "get_sw_read_next_value" "get_sw_read_next_value" 9 86, 9 86 0, S_0x55558ed45d30;
 .timescale 0 0;
v0x55558ed49670_0 .var "current_value", 17 0;
; Variable get_sw_read_next_value is vec4 return value of scope S_0x55558ed49490
v0x55558ed49850_0 .var "mask", 17 0;
v0x55558ed49910_0 .var "value", 17 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_rvd2.u_bit_field.get_sw_read_next_value ;
    %pushi/vec4 1, 0, 32;
    %dup/vec4;
    %pushi/vec4 2, 0, 32;
    %cmp/u;
    %jmp/1 T_16.161, 6;
    %dup/vec4;
    %pushi/vec4 3, 0, 32;
    %cmp/u;
    %jmp/1 T_16.162, 6;
    %load/vec4 v0x55558ed49670_0;
    %store/vec4 v0x55558ed49910_0, 0, 18;
    %jmp T_16.164;
T_16.161 ;
    %load/vec4 v0x55558ed49850_0;
    %cmpi/ne 0, 0, 18;
    %flag_mov 8, 4;
    %jmp/0 T_16.165, 8;
    %pushi/vec4 0, 0, 18;
    %jmp/1 T_16.166, 8;
T_16.165 ; End of true expr.
    %load/vec4 v0x55558ed49670_0;
    %jmp/0 T_16.166, 8;
 ; End of false expr.
    %blend;
T_16.166;
    %store/vec4 v0x55558ed49910_0, 0, 18;
    %jmp T_16.164;
T_16.162 ;
    %load/vec4 v0x55558ed49850_0;
    %cmpi/ne 0, 0, 18;
    %flag_mov 8, 4;
    %jmp/0 T_16.167, 8;
    %pushi/vec4 262143, 0, 18;
    %jmp/1 T_16.168, 8;
T_16.167 ; End of true expr.
    %load/vec4 v0x55558ed49670_0;
    %jmp/0 T_16.168, 8;
 ; End of false expr.
    %blend;
T_16.168;
    %store/vec4 v0x55558ed49910_0, 0, 18;
    %jmp T_16.164;
T_16.164 ;
    %pop/vec4 1;
    %load/vec4 v0x55558ed49910_0;
    %ret/vec4 0, 0, 18;  Assign to get_sw_read_next_value (store_vec4_to_lval)
    %end;
S_0x55558ed499f0 .scope autofunction.vec4.s18, "get_sw_write_next_value" "get_sw_write_next_value" 9 101, 9 101 0, S_0x55558ed45d30;
 .timescale 0 0;
v0x55558ed49bd0_0 .var "current_value", 17 0;
; Variable get_sw_write_next_value is vec4 return value of scope S_0x55558ed499f0
v0x55558ed49db0_0 .var/i "i", 31 0;
v0x55558ed49ea0_0 .var "mask", 17 0;
v0x55558ed49f80_0 .var "value", 17 0;
v0x55558ed4a0b0_0 .var "write_data", 17 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_rvd2.u_bit_field.get_sw_write_next_value ;
    %load/vec4 v0x55558ed49bd0_0;
    %store/vec4 v0x55558ed49f80_0, 0, 18;
    %pushi/vec4 1, 0, 32;
    %dup/vec4;
    %pushi/vec4 1, 0, 32;
    %cmp/u;
    %jmp/1 T_17.169, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 32;
    %cmp/u;
    %jmp/1 T_17.170, 6;
    %dup/vec4;
    %pushi/vec4 3, 0, 32;
    %cmp/u;
    %jmp/1 T_17.171, 6;
    %dup/vec4;
    %pushi/vec4 4, 0, 32;
    %cmp/u;
    %jmp/1 T_17.172, 6;
    %dup/vec4;
    %pushi/vec4 5, 0, 32;
    %cmp/u;
    %jmp/1 T_17.173, 6;
    %dup/vec4;
    %pushi/vec4 6, 0, 32;
    %cmp/u;
    %jmp/1 T_17.174, 6;
    %dup/vec4;
    %pushi/vec4 7, 0, 32;
    %cmp/u;
    %jmp/1 T_17.175, 6;
    %dup/vec4;
    %pushi/vec4 8, 0, 32;
    %cmp/u;
    %jmp/1 T_17.176, 6;
    %dup/vec4;
    %pushi/vec4 9, 0, 32;
    %cmp/u;
    %jmp/1 T_17.177, 6;
    %jmp T_17.179;
T_17.169 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558ed49db0_0, 0, 32;
T_17.180 ; Top of for-loop
    %load/vec4 v0x55558ed49db0_0;
    %cmpi/s 18, 0, 32;
	  %jmp/0xz T_17.181, 5;
    %load/vec4 v0x55558ed49ea0_0;
    %load/vec4 v0x55558ed49db0_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_17.183, 8;
    %load/vec4 v0x55558ed4a0b0_0;
    %load/vec4 v0x55558ed49db0_0;
    %part/s 1;
    %ix/getv/s 4, v0x55558ed49db0_0;
    %store/vec4 v0x55558ed49f80_0, 4, 1;
T_17.183 ;
T_17.182 ; for-loop step statement
    %load/vec4 v0x55558ed49db0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558ed49db0_0, 0, 32;
    %jmp T_17.180;
T_17.181 ; for-loop exit label
    %jmp T_17.179;
T_17.170 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558ed49db0_0, 0, 32;
T_17.185 ; Top of for-loop
    %load/vec4 v0x55558ed49db0_0;
    %cmpi/s 18, 0, 32;
	  %jmp/0xz T_17.186, 5;
    %load/vec4 v0x55558ed49ea0_0;
    %load/vec4 v0x55558ed49db0_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_17.190, 9;
    %load/vec4 v0x55558ed4a0b0_0;
    %load/vec4 v0x55558ed49db0_0;
    %part/s 1;
    %nor/r;
    %and;
T_17.190;
    %flag_set/vec4 8;
    %jmp/0xz  T_17.188, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x55558ed49db0_0;
    %store/vec4 v0x55558ed49f80_0, 4, 1;
T_17.188 ;
T_17.187 ; for-loop step statement
    %load/vec4 v0x55558ed49db0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558ed49db0_0, 0, 32;
    %jmp T_17.185;
T_17.186 ; for-loop exit label
    %jmp T_17.179;
T_17.171 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558ed49db0_0, 0, 32;
T_17.191 ; Top of for-loop
    %load/vec4 v0x55558ed49db0_0;
    %cmpi/s 18, 0, 32;
	  %jmp/0xz T_17.192, 5;
    %load/vec4 v0x55558ed49ea0_0;
    %load/vec4 v0x55558ed49db0_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_17.196, 9;
    %load/vec4 v0x55558ed4a0b0_0;
    %load/vec4 v0x55558ed49db0_0;
    %part/s 1;
    %and;
T_17.196;
    %flag_set/vec4 8;
    %jmp/0xz  T_17.194, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x55558ed49db0_0;
    %store/vec4 v0x55558ed49f80_0, 4, 1;
T_17.194 ;
T_17.193 ; for-loop step statement
    %load/vec4 v0x55558ed49db0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558ed49db0_0, 0, 32;
    %jmp T_17.191;
T_17.192 ; for-loop exit label
    %jmp T_17.179;
T_17.172 ;
    %load/vec4 v0x55558ed49ea0_0;
    %cmpi/ne 0, 0, 18;
    %jmp/0xz  T_17.197, 4;
    %pushi/vec4 0, 0, 18;
    %store/vec4 v0x55558ed49f80_0, 0, 18;
T_17.197 ;
    %jmp T_17.179;
T_17.173 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558ed49db0_0, 0, 32;
T_17.199 ; Top of for-loop
    %load/vec4 v0x55558ed49db0_0;
    %cmpi/s 18, 0, 32;
	  %jmp/0xz T_17.200, 5;
    %load/vec4 v0x55558ed49ea0_0;
    %load/vec4 v0x55558ed49db0_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_17.204, 9;
    %load/vec4 v0x55558ed4a0b0_0;
    %load/vec4 v0x55558ed49db0_0;
    %part/s 1;
    %nor/r;
    %and;
T_17.204;
    %flag_set/vec4 8;
    %jmp/0xz  T_17.202, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x55558ed49db0_0;
    %store/vec4 v0x55558ed49f80_0, 4, 1;
T_17.202 ;
T_17.201 ; for-loop step statement
    %load/vec4 v0x55558ed49db0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558ed49db0_0, 0, 32;
    %jmp T_17.199;
T_17.200 ; for-loop exit label
    %jmp T_17.179;
T_17.174 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558ed49db0_0, 0, 32;
T_17.205 ; Top of for-loop
    %load/vec4 v0x55558ed49db0_0;
    %cmpi/s 18, 0, 32;
	  %jmp/0xz T_17.206, 5;
    %load/vec4 v0x55558ed49ea0_0;
    %load/vec4 v0x55558ed49db0_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_17.210, 9;
    %load/vec4 v0x55558ed4a0b0_0;
    %load/vec4 v0x55558ed49db0_0;
    %part/s 1;
    %and;
T_17.210;
    %flag_set/vec4 8;
    %jmp/0xz  T_17.208, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x55558ed49db0_0;
    %store/vec4 v0x55558ed49f80_0, 4, 1;
T_17.208 ;
T_17.207 ; for-loop step statement
    %load/vec4 v0x55558ed49db0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558ed49db0_0, 0, 32;
    %jmp T_17.205;
T_17.206 ; for-loop exit label
    %jmp T_17.179;
T_17.175 ;
    %load/vec4 v0x55558ed49ea0_0;
    %cmpi/ne 0, 0, 18;
    %jmp/0xz  T_17.211, 4;
    %pushi/vec4 262143, 0, 18;
    %store/vec4 v0x55558ed49f80_0, 0, 18;
T_17.211 ;
    %jmp T_17.179;
T_17.176 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558ed49db0_0, 0, 32;
T_17.213 ; Top of for-loop
    %load/vec4 v0x55558ed49db0_0;
    %cmpi/s 18, 0, 32;
	  %jmp/0xz T_17.214, 5;
    %load/vec4 v0x55558ed49ea0_0;
    %load/vec4 v0x55558ed49db0_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_17.218, 9;
    %load/vec4 v0x55558ed4a0b0_0;
    %load/vec4 v0x55558ed49db0_0;
    %part/s 1;
    %nor/r;
    %and;
T_17.218;
    %flag_set/vec4 8;
    %jmp/0xz  T_17.216, 8;
    %load/vec4 v0x55558ed49bd0_0;
    %load/vec4 v0x55558ed49db0_0;
    %part/s 1;
    %inv;
    %ix/getv/s 4, v0x55558ed49db0_0;
    %store/vec4 v0x55558ed49f80_0, 4, 1;
T_17.216 ;
T_17.215 ; for-loop step statement
    %load/vec4 v0x55558ed49db0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558ed49db0_0, 0, 32;
    %jmp T_17.213;
T_17.214 ; for-loop exit label
    %jmp T_17.179;
T_17.177 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558ed49db0_0, 0, 32;
T_17.219 ; Top of for-loop
    %load/vec4 v0x55558ed49db0_0;
    %cmpi/s 18, 0, 32;
	  %jmp/0xz T_17.220, 5;
    %load/vec4 v0x55558ed49ea0_0;
    %load/vec4 v0x55558ed49db0_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_17.224, 9;
    %load/vec4 v0x55558ed4a0b0_0;
    %load/vec4 v0x55558ed49db0_0;
    %part/s 1;
    %and;
T_17.224;
    %flag_set/vec4 8;
    %jmp/0xz  T_17.222, 8;
    %load/vec4 v0x55558ed49bd0_0;
    %load/vec4 v0x55558ed49db0_0;
    %part/s 1;
    %inv;
    %ix/getv/s 4, v0x55558ed49db0_0;
    %store/vec4 v0x55558ed49f80_0, 4, 1;
T_17.222 ;
T_17.221 ; for-loop step statement
    %load/vec4 v0x55558ed49db0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558ed49db0_0, 0, 32;
    %jmp T_17.219;
T_17.220 ; for-loop exit label
    %jmp T_17.179;
T_17.179 ;
    %pop/vec4 1;
    %load/vec4 v0x55558ed49f80_0;
    %ret/vec4 0, 0, 18;  Assign to get_sw_write_next_value (store_vec4_to_lval)
    %end;
S_0x55558ed4a190 .scope autofunction.vec4.s1, "get_sw_write_update" "get_sw_write_update" 9 47, 9 47 0, S_0x55558ed45d30;
 .timescale 0 0;
; Variable get_sw_write_update is vec4 return value of scope S_0x55558ed4a190
v0x55558ed4a450_0 .var "update", 2 0;
v0x55558ed4a530_0 .var "write_done", 0 0;
v0x55558ed4a5d0_0 .var "write_enable", 0 0;
v0x55558ed4a690_0 .var "write_valid", 17 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_rvd2.u_bit_field.get_sw_write_update ;
    %load/vec4 v0x55558ed4a690_0;
    %pad/u 1;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x55558ed4a450_0, 4, 1;
    %pushi/vec4 1, 0, 1;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x55558ed4a450_0, 4, 1;
    %pushi/vec4 1, 0, 1;
    %ix/load 4, 2, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x55558ed4a450_0, 4, 1;
    %load/vec4 v0x55558ed4a450_0;
    %parti/s 1, 0, 2;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_18.226, 9;
    %load/vec4 v0x55558ed4a450_0;
    %parti/s 1, 1, 2;
    %and;
T_18.226;
    %flag_set/vec4 8;
    %flag_get/vec4 8;
    %jmp/0 T_18.225, 8;
    %load/vec4 v0x55558ed4a450_0;
    %parti/s 1, 2, 3;
    %and;
T_18.225;
    %ret/vec4 0, 0, 1;  Assign to get_sw_write_update (store_vec4_to_lval)
    %end;
S_0x55558ed4c0c0 .scope generate, "g_s1wto" "g_s1wto" 8 173, 8 173 0, S_0x55558ecfd810;
 .timescale -8 -9;
S_0x55558ed4c250 .scope module, "u_bit_field" "rggen_bit_field" 8 184, 9 2 0, S_0x55558ed4c0c0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "i_clk";
    .port_info 1 /INPUT 1 "i_rst_n";
    .port_info 2 /INPUT 1 "i_sw_write_valid";
    .port_info 3 /INPUT 1 "i_sw_write_enable";
    .port_info 4 /INPUT 1 "i_sw_read_valid";
    .port_info 5 /INPUT 1 "i_sw_mask";
    .port_info 6 /INPUT 1 "i_sw_write_data";
    .port_info 7 /OUTPUT 1 "o_sw_read_data";
    .port_info 8 /OUTPUT 1 "o_sw_value";
    .port_info 9 /OUTPUT 1 "o_write_trigger";
    .port_info 10 /OUTPUT 1 "o_read_trigger";
    .port_info 11 /INPUT 1 "i_hw_write_enable";
    .port_info 12 /INPUT 1 "i_hw_write_data";
    .port_info 13 /INPUT 1 "i_hw_set";
    .port_info 14 /INPUT 1 "i_hw_clear";
    .port_info 15 /INPUT 1 "i_value";
    .port_info 16 /INPUT 1 "i_mask";
    .port_info 17 /OUTPUT 1 "o_value";
    .port_info 18 /OUTPUT 1 "o_value_unmasked";
P_0x55558ed4c450 .param/l "EXTERNAL_MASK" 0 9 17, C4<0>;
P_0x55558ed4c490 .param/l "EXTERNAL_READ_DATA" 0 9 16, +C4<00000000000000000000000000000000>;
P_0x55558ed4c4d0 .param/l "HW_ACCESS" 0 9 12, C4<010>;
P_0x55558ed4c510 .param/l "HW_CLEAR_WIDTH" 0 9 14, +C4<00000000000000000000000000000001>;
P_0x55558ed4c550 .param/l "HW_SET_WIDTH" 0 9 13, +C4<00000000000000000000000000000001>;
P_0x55558ed4c590 .param/l "HW_WRITE_ENABLE_POLARITY" 0 9 11, C4<1>;
P_0x55558ed4c5d0 .param/l "INITIAL_VALUE" 0 9 4, C4<0>;
P_0x55558ed4c610 .param/l "PRECEDENCE_ACCESS" 0 9 5, +C4<00000000000000000000000000000001>;
P_0x55558ed4c650 .param/l "STORAGE" 0 9 15, +C4<00000000000000000000000000000001>;
P_0x55558ed4c690 .param/l "SW_READABLE" 1 9 41, C4<1>;
P_0x55558ed4c6d0 .param/l "SW_READ_ACTION" 0 9 6, +C4<00000000000000000000000000000001>;
P_0x55558ed4c710 .param/l "SW_READ_UPDATE" 1 9 42, C4<0>;
P_0x55558ed4c750 .param/l "SW_WRITABLE" 1 9 40, C4<1>;
P_0x55558ed4c790 .param/l "SW_WRITE_ACTION" 0 9 7, +C4<00000000000000000000000000000010>;
P_0x55558ed4c7d0 .param/l "SW_WRITE_CONTROL" 0 9 8, C4<0>;
P_0x55558ed4c810 .param/l "SW_WRITE_ENABLE_POLARITY" 0 9 10, C4<1>;
P_0x55558ed4c850 .param/l "SW_WRITE_ONCE" 0 9 9, +C4<00000000000000000000000000000000>;
P_0x55558ed4c890 .param/l "TRIGGER" 0 9 18, +C4<00000000000000000000000000000001>;
P_0x55558ed4c8d0 .param/l "WIDTH" 0 9 3, +C4<00000000000000000000000000000001>;
L_0x55558ed94290 .functor BUFZ 1, L_0x55558ed941a0, C4<0>, C4<0>, C4<0>;
L_0x55558ed94350 .functor BUFZ 1, v0x55558ed4e5e0_0, C4<0>, C4<0>, C4<0>;
L_0x55558ed945c0 .functor BUFZ 1, v0x55558ed4e5e0_0, C4<0>, C4<0>, C4<0>;
L_0x55558ed94710 .functor BUFZ 1, v0x55558ed4e5e0_0, C4<0>, C4<0>, C4<0>;
v0x55558ed50dc0_0 .net "i_clk", 0 0, v0x55558ed7f980_0;  alias, 1 drivers
L_0x7fc758334ac8 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x55558ed50f90_0 .net "i_hw_clear", 0 0, L_0x7fc758334ac8;  1 drivers
v0x55558ed51070_0 .net "i_hw_set", 0 0, L_0x55558ed9e510;  alias, 1 drivers
L_0x7fc758334a80 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x55558ed51140_0 .net "i_hw_write_data", 0 0, L_0x7fc758334a80;  1 drivers
L_0x7fc758334a38 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x55558ed51200_0 .net "i_hw_write_enable", 0 0, L_0x7fc758334a38;  1 drivers
L_0x7fc758334b58 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v0x55558ed51310_0 .net "i_mask", 0 0, L_0x7fc758334b58;  1 drivers
v0x55558ed513f0_0 .net "i_rst_n", 0 0, L_0x55558ed37990;  alias, 1 drivers
v0x55558ed51490_0 .net "i_sw_mask", 0 0, L_0x55558ed947b0;  1 drivers
v0x55558ed51570_0 .net "i_sw_read_valid", 0 0, L_0x55558ed814f0;  alias, 1 drivers
v0x55558ed51610_0 .net "i_sw_write_data", 0 0, L_0x55558ed94850;  1 drivers
L_0x7fc7583349f0 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v0x55558ed516f0_0 .net "i_sw_write_enable", 0 0, L_0x7fc7583349f0;  1 drivers
v0x55558ed517b0_0 .net "i_sw_write_valid", 0 0, L_0x55558ed80e60;  alias, 1 drivers
L_0x7fc758334b10 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x55558ed518a0_0 .net "i_value", 0 0, L_0x7fc758334b10;  1 drivers
v0x55558ed51980_0 .net "o_read_trigger", 0 0, L_0x55558ed944f0;  1 drivers
v0x55558ed51a40_0 .net "o_sw_read_data", 0 0, L_0x55558ed94290;  1 drivers
v0x55558ed51b20_0 .net "o_sw_value", 0 0, L_0x55558ed94350;  1 drivers
v0x55558ed51c00_0 .net "o_value", 0 0, L_0x55558ed945c0;  alias, 1 drivers
v0x55558ed51df0_0 .net "o_value_unmasked", 0 0, L_0x55558ed94710;  1 drivers
v0x55558ed51ed0_0 .net "o_write_trigger", 0 0, L_0x55558ed943c0;  alias, 1 drivers
v0x55558ed51f70_0 .net "w_hw_update", 0 0, L_0x55558ed93c60;  1 drivers
v0x55558ed52010_0 .net "w_read_data", 0 0, L_0x55558ed941a0;  1 drivers
v0x55558ed520f0_0 .net "w_sw_update", 1 0, L_0x55558ed93a90;  1 drivers
L_0x7fc7583349a8 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x55558ed521d0_0 .net "w_sw_write_done", 0 0, L_0x7fc7583349a8;  1 drivers
v0x55558ed52290_0 .net "w_trigger", 1 0, L_0x55558ed93ef0;  1 drivers
v0x55558ed52370_0 .net "w_value", 0 0, v0x55558ed4e5e0_0;  1 drivers
L_0x7fc758334960 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x55558ed93a90 .concat8 [ 1 1 0 0], L_0x7fc758334960, L_0x55558ed93b60;
L_0x55558ed93ef0 .concat8 [ 1 1 0 0], v0x55558ed4e9c0_0, v0x55558ed4db50_0;
L_0x55558ed943c0 .part L_0x55558ed93ef0, 0, 1;
L_0x55558ed944f0 .part L_0x55558ed93ef0, 1, 1;
S_0x55558ed4d4a0 .scope generate, "g_hw_update" "g_hw_update" 9 259, 9 259 0, S_0x55558ed4c250;
 .timescale 0 0;
L_0x55558ed93c60 .ufunc/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_s1wto.u_bit_field.get_hw_update, 1, L_0x7fc758334a38, L_0x55558ed9e510, L_0x7fc758334ac8 (v0x55558ed4f980_0, v0x55558ed4f7e0_0, v0x55558ed4f620_0) S_0x55558ed4f490;
S_0x55558ed4d680 .scope generate, "g_read_data" "g_read_data" 9 382, 9 382 0, S_0x55558ed4c250;
 .timescale 0 0;
L_0x55558ed941a0 .functor BUFZ 1, v0x55558ed4e5e0_0, C4<0>, C4<0>, C4<0>;
S_0x55558ed4d880 .scope generate, "g_read_trigger" "g_read_trigger" 9 304, 9 304 0, S_0x55558ed4c250;
 .timescale 0 0;
v0x55558ed4da90_0 .net *"_ivl_1", 0 0, v0x55558ed4db50_0;  1 drivers
v0x55558ed4db50_0 .var "r_trigger", 0 0;
S_0x55558ed4dc10 .scope generate, "g_sw_read_update" "g_sw_read_update" 9 245, 9 245 0, S_0x55558ed4c250;
 .timescale 0 0;
v0x55558ed4ddf0_0 .net/2u *"_ivl_0", 0 0, L_0x7fc758334960;  1 drivers
S_0x55558ed4def0 .scope generate, "g_sw_write_done" "g_sw_write_done" 9 268, 9 268 0, S_0x55558ed4c250;
 .timescale 0 0;
S_0x55558ed4e120 .scope generate, "g_sw_write_update" "g_sw_write_update" 9 252, 9 252 0, S_0x55558ed4c250;
 .timescale 0 0;
v0x55558ed4e300_0 .net *"_ivl_1", 0 0, L_0x55558ed93b60;  1 drivers
L_0x55558ed93b60 .ufunc/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_s1wto.u_bit_field.get_sw_write_update, 1, L_0x55558ed80e60, L_0x7fc7583349f0, L_0x7fc7583349a8 (v0x55558ed50c90_0, v0x55558ed50bd0_0, v0x55558ed50b30_0) S_0x55558ed50790;
S_0x55558ed4e400 .scope generate, "g_value" "g_value" 9 326, 9 326 0, S_0x55558ed4c250;
 .timescale 0 0;
v0x55558ed4e5e0_0 .var "r_value", 0 0;
S_0x55558ed4e6e0 .scope generate, "g_write_trigger" "g_write_trigger" 9 287, 9 287 0, S_0x55558ed4c250;
 .timescale 0 0;
v0x55558ed4e8c0_0 .net *"_ivl_1", 0 0, v0x55558ed4e9c0_0;  1 drivers
v0x55558ed4e9c0_0 .var "r_trigger", 0 0;
S_0x55558ed4ea80 .scope autofunction.vec4.s1, "get_hw_next_value" "get_hw_next_value" 9 177, 9 177 0, S_0x55558ed4c250;
 .timescale 0 0;
v0x55558ed4ec60_0 .var "clear", 0 0;
v0x55558ed4ed60_0 .var "current_value", 0 0;
; Variable get_hw_next_value is vec4 return value of scope S_0x55558ed4ea80
v0x55558ed4ef00_0 .var/i "i", 31 0;
v0x55558ed4efe0_0 .var "set", 0 0;
v0x55558ed4f0c0 .array "set_clear", 1 0, 0 0;
v0x55558ed4f180_0 .var "value", 0 0;
v0x55558ed4f260_0 .var "write_data", 0 0;
v0x55558ed4f340_0 .var "write_enable", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_s1wto.u_bit_field.get_hw_next_value ;
    %load/vec4 v0x55558ed4efe0_0;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x55558ed4f0c0, 4, 0;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x55558ed4f0c0, 4, 0;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558ed4ef00_0, 0, 32;
T_19.227 ; Top of for-loop
    %load/vec4 v0x55558ed4ef00_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_19.228, 5;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x55558ed4f0c0, 4;
    %load/vec4 v0x55558ed4ef00_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_19.230, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x55558ed4ef00_0;
    %store/vec4 v0x55558ed4f180_0, 4, 1;
    %jmp T_19.231;
T_19.230 ;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x55558ed4f0c0, 4;
    %load/vec4 v0x55558ed4ef00_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_19.232, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x55558ed4ef00_0;
    %store/vec4 v0x55558ed4f180_0, 4, 1;
    %jmp T_19.233;
T_19.232 ;
    %load/vec4 v0x55558ed4ed60_0;
    %load/vec4 v0x55558ed4ef00_0;
    %part/s 1;
    %ix/getv/s 4, v0x55558ed4ef00_0;
    %store/vec4 v0x55558ed4f180_0, 4, 1;
T_19.233 ;
T_19.231 ;
T_19.229 ; for-loop step statement
    %load/vec4 v0x55558ed4ef00_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558ed4ef00_0, 0, 32;
    %jmp T_19.227;
T_19.228 ; for-loop exit label
    %load/vec4 v0x55558ed4f180_0;
    %ret/vec4 0, 0, 1;  Assign to get_hw_next_value (store_vec4_to_lval)
    %end;
S_0x55558ed4f490 .scope autofunction.vec4.s1, "get_hw_update" "get_hw_update" 9 72, 9 72 0, S_0x55558ed4c250;
 .timescale 0 0;
v0x55558ed4f620_0 .var "clear", 0 0;
; Variable get_hw_update is vec4 return value of scope S_0x55558ed4f490
v0x55558ed4f7e0_0 .var "set", 0 0;
v0x55558ed4f8a0_0 .var "update", 2 0;
v0x55558ed4f980_0 .var "write_enable", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_s1wto.u_bit_field.get_hw_update ;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x55558ed4f8a0_0, 4, 1;
    %pushi/vec4 1, 0, 1;
    %flag_set/vec4 8;
    %flag_get/vec4 8;
    %jmp/0 T_20.234, 8;
    %load/vec4 v0x55558ed4f7e0_0;
    %pushi/vec4 0, 0, 1;
    %cmp/ne;
    %flag_get/vec4 4;
    %and;
T_20.234;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x55558ed4f8a0_0, 4, 1;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 2, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x55558ed4f8a0_0, 4, 1;
    %load/vec4 v0x55558ed4f8a0_0;
    %parti/s 1, 0, 2;
    %flag_set/vec4 8;
    %jmp/1 T_20.236, 8;
    %load/vec4 v0x55558ed4f8a0_0;
    %parti/s 1, 1, 2;
    %flag_set/vec4 9;
    %flag_or 8, 9;
T_20.236;
    %flag_get/vec4 8;
    %jmp/1 T_20.235, 8;
    %load/vec4 v0x55558ed4f8a0_0;
    %parti/s 1, 2, 3;
    %or;
T_20.235;
    %ret/vec4 0, 0, 1;  Assign to get_hw_update (store_vec4_to_lval)
    %end;
S_0x55558ed4fa90 .scope autofunction.vec4.s1, "get_sw_read_next_value" "get_sw_read_next_value" 9 86, 9 86 0, S_0x55558ed4c250;
 .timescale 0 0;
v0x55558ed4fc70_0 .var "current_value", 0 0;
; Variable get_sw_read_next_value is vec4 return value of scope S_0x55558ed4fa90
v0x55558ed4fe50_0 .var "mask", 0 0;
v0x55558ed4ff10_0 .var "value", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_s1wto.u_bit_field.get_sw_read_next_value ;
    %pushi/vec4 1, 0, 32;
    %dup/vec4;
    %pushi/vec4 2, 0, 32;
    %cmp/u;
    %jmp/1 T_21.237, 6;
    %dup/vec4;
    %pushi/vec4 3, 0, 32;
    %cmp/u;
    %jmp/1 T_21.238, 6;
    %load/vec4 v0x55558ed4fc70_0;
    %store/vec4 v0x55558ed4ff10_0, 0, 1;
    %jmp T_21.240;
T_21.237 ;
    %load/vec4 v0x55558ed4fe50_0;
    %cmpi/ne 0, 0, 1;
    %flag_mov 8, 4;
    %jmp/0 T_21.241, 8;
    %pushi/vec4 0, 0, 1;
    %jmp/1 T_21.242, 8;
T_21.241 ; End of true expr.
    %load/vec4 v0x55558ed4fc70_0;
    %jmp/0 T_21.242, 8;
 ; End of false expr.
    %blend;
T_21.242;
    %store/vec4 v0x55558ed4ff10_0, 0, 1;
    %jmp T_21.240;
T_21.238 ;
    %load/vec4 v0x55558ed4fe50_0;
    %cmpi/ne 0, 0, 1;
    %flag_mov 8, 4;
    %jmp/0 T_21.243, 8;
    %pushi/vec4 1, 0, 1;
    %jmp/1 T_21.244, 8;
T_21.243 ; End of true expr.
    %load/vec4 v0x55558ed4fc70_0;
    %jmp/0 T_21.244, 8;
 ; End of false expr.
    %blend;
T_21.244;
    %store/vec4 v0x55558ed4ff10_0, 0, 1;
    %jmp T_21.240;
T_21.240 ;
    %pop/vec4 1;
    %load/vec4 v0x55558ed4ff10_0;
    %ret/vec4 0, 0, 1;  Assign to get_sw_read_next_value (store_vec4_to_lval)
    %end;
S_0x55558ed4fff0 .scope autofunction.vec4.s1, "get_sw_write_next_value" "get_sw_write_next_value" 9 101, 9 101 0, S_0x55558ed4c250;
 .timescale 0 0;
v0x55558ed501d0_0 .var "current_value", 0 0;
; Variable get_sw_write_next_value is vec4 return value of scope S_0x55558ed4fff0
v0x55558ed503b0_0 .var/i "i", 31 0;
v0x55558ed504a0_0 .var "mask", 0 0;
v0x55558ed50580_0 .var "value", 0 0;
v0x55558ed506b0_0 .var "write_data", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_s1wto.u_bit_field.get_sw_write_next_value ;
    %load/vec4 v0x55558ed501d0_0;
    %store/vec4 v0x55558ed50580_0, 0, 1;
    %pushi/vec4 2, 0, 32;
    %dup/vec4;
    %pushi/vec4 1, 0, 32;
    %cmp/u;
    %jmp/1 T_22.245, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 32;
    %cmp/u;
    %jmp/1 T_22.246, 6;
    %dup/vec4;
    %pushi/vec4 3, 0, 32;
    %cmp/u;
    %jmp/1 T_22.247, 6;
    %dup/vec4;
    %pushi/vec4 4, 0, 32;
    %cmp/u;
    %jmp/1 T_22.248, 6;
    %dup/vec4;
    %pushi/vec4 5, 0, 32;
    %cmp/u;
    %jmp/1 T_22.249, 6;
    %dup/vec4;
    %pushi/vec4 6, 0, 32;
    %cmp/u;
    %jmp/1 T_22.250, 6;
    %dup/vec4;
    %pushi/vec4 7, 0, 32;
    %cmp/u;
    %jmp/1 T_22.251, 6;
    %dup/vec4;
    %pushi/vec4 8, 0, 32;
    %cmp/u;
    %jmp/1 T_22.252, 6;
    %dup/vec4;
    %pushi/vec4 9, 0, 32;
    %cmp/u;
    %jmp/1 T_22.253, 6;
    %jmp T_22.255;
T_22.245 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558ed503b0_0, 0, 32;
T_22.256 ; Top of for-loop
    %load/vec4 v0x55558ed503b0_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_22.257, 5;
    %load/vec4 v0x55558ed504a0_0;
    %load/vec4 v0x55558ed503b0_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_22.259, 8;
    %load/vec4 v0x55558ed506b0_0;
    %load/vec4 v0x55558ed503b0_0;
    %part/s 1;
    %ix/getv/s 4, v0x55558ed503b0_0;
    %store/vec4 v0x55558ed50580_0, 4, 1;
T_22.259 ;
T_22.258 ; for-loop step statement
    %load/vec4 v0x55558ed503b0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558ed503b0_0, 0, 32;
    %jmp T_22.256;
T_22.257 ; for-loop exit label
    %jmp T_22.255;
T_22.246 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558ed503b0_0, 0, 32;
T_22.261 ; Top of for-loop
    %load/vec4 v0x55558ed503b0_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_22.262, 5;
    %load/vec4 v0x55558ed504a0_0;
    %load/vec4 v0x55558ed503b0_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_22.266, 9;
    %load/vec4 v0x55558ed506b0_0;
    %load/vec4 v0x55558ed503b0_0;
    %part/s 1;
    %nor/r;
    %and;
T_22.266;
    %flag_set/vec4 8;
    %jmp/0xz  T_22.264, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x55558ed503b0_0;
    %store/vec4 v0x55558ed50580_0, 4, 1;
T_22.264 ;
T_22.263 ; for-loop step statement
    %load/vec4 v0x55558ed503b0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558ed503b0_0, 0, 32;
    %jmp T_22.261;
T_22.262 ; for-loop exit label
    %jmp T_22.255;
T_22.247 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558ed503b0_0, 0, 32;
T_22.267 ; Top of for-loop
    %load/vec4 v0x55558ed503b0_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_22.268, 5;
    %load/vec4 v0x55558ed504a0_0;
    %load/vec4 v0x55558ed503b0_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_22.272, 9;
    %load/vec4 v0x55558ed506b0_0;
    %load/vec4 v0x55558ed503b0_0;
    %part/s 1;
    %and;
T_22.272;
    %flag_set/vec4 8;
    %jmp/0xz  T_22.270, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x55558ed503b0_0;
    %store/vec4 v0x55558ed50580_0, 4, 1;
T_22.270 ;
T_22.269 ; for-loop step statement
    %load/vec4 v0x55558ed503b0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558ed503b0_0, 0, 32;
    %jmp T_22.267;
T_22.268 ; for-loop exit label
    %jmp T_22.255;
T_22.248 ;
    %load/vec4 v0x55558ed504a0_0;
    %cmpi/ne 0, 0, 1;
    %jmp/0xz  T_22.273, 4;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x55558ed50580_0, 0, 1;
T_22.273 ;
    %jmp T_22.255;
T_22.249 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558ed503b0_0, 0, 32;
T_22.275 ; Top of for-loop
    %load/vec4 v0x55558ed503b0_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_22.276, 5;
    %load/vec4 v0x55558ed504a0_0;
    %load/vec4 v0x55558ed503b0_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_22.280, 9;
    %load/vec4 v0x55558ed506b0_0;
    %load/vec4 v0x55558ed503b0_0;
    %part/s 1;
    %nor/r;
    %and;
T_22.280;
    %flag_set/vec4 8;
    %jmp/0xz  T_22.278, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x55558ed503b0_0;
    %store/vec4 v0x55558ed50580_0, 4, 1;
T_22.278 ;
T_22.277 ; for-loop step statement
    %load/vec4 v0x55558ed503b0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558ed503b0_0, 0, 32;
    %jmp T_22.275;
T_22.276 ; for-loop exit label
    %jmp T_22.255;
T_22.250 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558ed503b0_0, 0, 32;
T_22.281 ; Top of for-loop
    %load/vec4 v0x55558ed503b0_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_22.282, 5;
    %load/vec4 v0x55558ed504a0_0;
    %load/vec4 v0x55558ed503b0_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_22.286, 9;
    %load/vec4 v0x55558ed506b0_0;
    %load/vec4 v0x55558ed503b0_0;
    %part/s 1;
    %and;
T_22.286;
    %flag_set/vec4 8;
    %jmp/0xz  T_22.284, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x55558ed503b0_0;
    %store/vec4 v0x55558ed50580_0, 4, 1;
T_22.284 ;
T_22.283 ; for-loop step statement
    %load/vec4 v0x55558ed503b0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558ed503b0_0, 0, 32;
    %jmp T_22.281;
T_22.282 ; for-loop exit label
    %jmp T_22.255;
T_22.251 ;
    %load/vec4 v0x55558ed504a0_0;
    %cmpi/ne 0, 0, 1;
    %jmp/0xz  T_22.287, 4;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x55558ed50580_0, 0, 1;
T_22.287 ;
    %jmp T_22.255;
T_22.252 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558ed503b0_0, 0, 32;
T_22.289 ; Top of for-loop
    %load/vec4 v0x55558ed503b0_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_22.290, 5;
    %load/vec4 v0x55558ed504a0_0;
    %load/vec4 v0x55558ed503b0_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_22.294, 9;
    %load/vec4 v0x55558ed506b0_0;
    %load/vec4 v0x55558ed503b0_0;
    %part/s 1;
    %nor/r;
    %and;
T_22.294;
    %flag_set/vec4 8;
    %jmp/0xz  T_22.292, 8;
    %load/vec4 v0x55558ed501d0_0;
    %load/vec4 v0x55558ed503b0_0;
    %part/s 1;
    %inv;
    %ix/getv/s 4, v0x55558ed503b0_0;
    %store/vec4 v0x55558ed50580_0, 4, 1;
T_22.292 ;
T_22.291 ; for-loop step statement
    %load/vec4 v0x55558ed503b0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558ed503b0_0, 0, 32;
    %jmp T_22.289;
T_22.290 ; for-loop exit label
    %jmp T_22.255;
T_22.253 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558ed503b0_0, 0, 32;
T_22.295 ; Top of for-loop
    %load/vec4 v0x55558ed503b0_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_22.296, 5;
    %load/vec4 v0x55558ed504a0_0;
    %load/vec4 v0x55558ed503b0_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_22.300, 9;
    %load/vec4 v0x55558ed506b0_0;
    %load/vec4 v0x55558ed503b0_0;
    %part/s 1;
    %and;
T_22.300;
    %flag_set/vec4 8;
    %jmp/0xz  T_22.298, 8;
    %load/vec4 v0x55558ed501d0_0;
    %load/vec4 v0x55558ed503b0_0;
    %part/s 1;
    %inv;
    %ix/getv/s 4, v0x55558ed503b0_0;
    %store/vec4 v0x55558ed50580_0, 4, 1;
T_22.298 ;
T_22.297 ; for-loop step statement
    %load/vec4 v0x55558ed503b0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558ed503b0_0, 0, 32;
    %jmp T_22.295;
T_22.296 ; for-loop exit label
    %jmp T_22.255;
T_22.255 ;
    %pop/vec4 1;
    %load/vec4 v0x55558ed50580_0;
    %ret/vec4 0, 0, 1;  Assign to get_sw_write_next_value (store_vec4_to_lval)
    %end;
S_0x55558ed50790 .scope autofunction.vec4.s1, "get_sw_write_update" "get_sw_write_update" 9 47, 9 47 0, S_0x55558ed4c250;
 .timescale 0 0;
; Variable get_sw_write_update is vec4 return value of scope S_0x55558ed50790
v0x55558ed50a50_0 .var "update", 2 0;
v0x55558ed50b30_0 .var "write_done", 0 0;
v0x55558ed50bd0_0 .var "write_enable", 0 0;
v0x55558ed50c90_0 .var "write_valid", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_s1wto.u_bit_field.get_sw_write_update ;
    %load/vec4 v0x55558ed50c90_0;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x55558ed50a50_0, 4, 1;
    %pushi/vec4 1, 0, 1;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x55558ed50a50_0, 4, 1;
    %pushi/vec4 1, 0, 1;
    %ix/load 4, 2, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x55558ed50a50_0, 4, 1;
    %load/vec4 v0x55558ed50a50_0;
    %parti/s 1, 0, 2;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_23.302, 9;
    %load/vec4 v0x55558ed50a50_0;
    %parti/s 1, 1, 2;
    %and;
T_23.302;
    %flag_set/vec4 8;
    %flag_get/vec4 8;
    %jmp/0 T_23.301, 8;
    %load/vec4 v0x55558ed50a50_0;
    %parti/s 1, 2, 3;
    %and;
T_23.301;
    %ret/vec4 0, 0, 1;  Assign to get_sw_write_update (store_vec4_to_lval)
    %end;
S_0x55558ed52750 .scope generate, "g_s2wto" "g_s2wto" 8 206, 8 206 0, S_0x55558ecfd810;
 .timescale -8 -9;
S_0x55558ed52980 .scope module, "u_bit_field" "rggen_bit_field" 8 217, 9 2 0, S_0x55558ed52750;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "i_clk";
    .port_info 1 /INPUT 1 "i_rst_n";
    .port_info 2 /INPUT 1 "i_sw_write_valid";
    .port_info 3 /INPUT 1 "i_sw_write_enable";
    .port_info 4 /INPUT 1 "i_sw_read_valid";
    .port_info 5 /INPUT 1 "i_sw_mask";
    .port_info 6 /INPUT 1 "i_sw_write_data";
    .port_info 7 /OUTPUT 1 "o_sw_read_data";
    .port_info 8 /OUTPUT 1 "o_sw_value";
    .port_info 9 /OUTPUT 1 "o_write_trigger";
    .port_info 10 /OUTPUT 1 "o_read_trigger";
    .port_info 11 /INPUT 1 "i_hw_write_enable";
    .port_info 12 /INPUT 1 "i_hw_write_data";
    .port_info 13 /INPUT 1 "i_hw_set";
    .port_info 14 /INPUT 1 "i_hw_clear";
    .port_info 15 /INPUT 1 "i_value";
    .port_info 16 /INPUT 1 "i_mask";
    .port_info 17 /OUTPUT 1 "o_value";
    .port_info 18 /OUTPUT 1 "o_value_unmasked";
P_0x55558ed52b80 .param/l "EXTERNAL_MASK" 0 9 17, C4<0>;
P_0x55558ed52bc0 .param/l "EXTERNAL_READ_DATA" 0 9 16, +C4<00000000000000000000000000000000>;
P_0x55558ed52c00 .param/l "HW_ACCESS" 0 9 12, C4<010>;
P_0x55558ed52c40 .param/l "HW_CLEAR_WIDTH" 0 9 14, +C4<00000000000000000000000000000001>;
P_0x55558ed52c80 .param/l "HW_SET_WIDTH" 0 9 13, +C4<00000000000000000000000000000001>;
P_0x55558ed52cc0 .param/l "HW_WRITE_ENABLE_POLARITY" 0 9 11, C4<1>;
P_0x55558ed52d00 .param/l "INITIAL_VALUE" 0 9 4, C4<0>;
P_0x55558ed52d40 .param/l "PRECEDENCE_ACCESS" 0 9 5, +C4<00000000000000000000000000000001>;
P_0x55558ed52d80 .param/l "STORAGE" 0 9 15, +C4<00000000000000000000000000000001>;
P_0x55558ed52dc0 .param/l "SW_READABLE" 1 9 41, C4<1>;
P_0x55558ed52e00 .param/l "SW_READ_ACTION" 0 9 6, +C4<00000000000000000000000000000001>;
P_0x55558ed52e40 .param/l "SW_READ_UPDATE" 1 9 42, C4<0>;
P_0x55558ed52e80 .param/l "SW_WRITABLE" 1 9 40, C4<1>;
P_0x55558ed52ec0 .param/l "SW_WRITE_ACTION" 0 9 7, +C4<00000000000000000000000000000010>;
P_0x55558ed52f00 .param/l "SW_WRITE_CONTROL" 0 9 8, C4<0>;
P_0x55558ed52f40 .param/l "SW_WRITE_ENABLE_POLARITY" 0 9 10, C4<1>;
P_0x55558ed52f80 .param/l "SW_WRITE_ONCE" 0 9 9, +C4<00000000000000000000000000000000>;
P_0x55558ed52fc0 .param/l "TRIGGER" 0 9 18, +C4<00000000000000000000000000000001>;
P_0x55558ed53000 .param/l "WIDTH" 0 9 3, +C4<00000000000000000000000000000001>;
L_0x55558ed952d0 .functor BUFZ 1, L_0x55558ed951e0, C4<0>, C4<0>, C4<0>;
L_0x55558ed95390 .functor BUFZ 1, v0x55558ed54c80_0, C4<0>, C4<0>, C4<0>;
L_0x55558ed95600 .functor BUFZ 1, v0x55558ed54c80_0, C4<0>, C4<0>, C4<0>;
L_0x55558ed95750 .functor BUFZ 1, v0x55558ed54c80_0, C4<0>, C4<0>, C4<0>;
v0x55558ed57460_0 .net "i_clk", 0 0, v0x55558ed7f980_0;  alias, 1 drivers
L_0x7fc758334d08 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x55558ed57520_0 .net "i_hw_clear", 0 0, L_0x7fc758334d08;  1 drivers
v0x55558ed57600_0 .net "i_hw_set", 0 0, L_0x55558ed9e470;  alias, 1 drivers
L_0x7fc758334cc0 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x55558ed576d0_0 .net "i_hw_write_data", 0 0, L_0x7fc758334cc0;  1 drivers
L_0x7fc758334c78 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x55558ed57790_0 .net "i_hw_write_enable", 0 0, L_0x7fc758334c78;  1 drivers
L_0x7fc758334d98 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v0x55558ed578a0_0 .net "i_mask", 0 0, L_0x7fc758334d98;  1 drivers
v0x55558ed57980_0 .net "i_rst_n", 0 0, L_0x55558ed37990;  alias, 1 drivers
v0x55558ed57b30_0 .net "i_sw_mask", 0 0, L_0x55558ed957f0;  1 drivers
v0x55558ed57c10_0 .net "i_sw_read_valid", 0 0, L_0x55558ed814f0;  alias, 1 drivers
v0x55558ed57cb0_0 .net "i_sw_write_data", 0 0, L_0x55558ed95890;  1 drivers
L_0x7fc758334c30 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v0x55558ed57d90_0 .net "i_sw_write_enable", 0 0, L_0x7fc758334c30;  1 drivers
v0x55558ed57e50_0 .net "i_sw_write_valid", 0 0, L_0x55558ed80e60;  alias, 1 drivers
L_0x7fc758334d50 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x55558ed57ef0_0 .net "i_value", 0 0, L_0x7fc758334d50;  1 drivers
v0x55558ed57fd0_0 .net "o_read_trigger", 0 0, L_0x55558ed95530;  1 drivers
v0x55558ed58090_0 .net "o_sw_read_data", 0 0, L_0x55558ed952d0;  1 drivers
v0x55558ed58170_0 .net "o_sw_value", 0 0, L_0x55558ed95390;  1 drivers
v0x55558ed58250_0 .net "o_value", 0 0, L_0x55558ed95600;  alias, 1 drivers
v0x55558ed58440_0 .net "o_value_unmasked", 0 0, L_0x55558ed95750;  1 drivers
v0x55558ed58520_0 .net "o_write_trigger", 0 0, L_0x55558ed95400;  alias, 1 drivers
v0x55558ed585c0_0 .net "w_hw_update", 0 0, L_0x55558ed94ca0;  1 drivers
v0x55558ed58660_0 .net "w_read_data", 0 0, L_0x55558ed951e0;  1 drivers
v0x55558ed58740_0 .net "w_sw_update", 1 0, L_0x55558ed94a30;  1 drivers
L_0x7fc758334be8 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x55558ed58820_0 .net "w_sw_write_done", 0 0, L_0x7fc758334be8;  1 drivers
v0x55558ed588e0_0 .net "w_trigger", 1 0, L_0x55558ed94f30;  1 drivers
v0x55558ed589c0_0 .net "w_value", 0 0, v0x55558ed54c80_0;  1 drivers
L_0x7fc758334ba0 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x55558ed94a30 .concat8 [ 1 1 0 0], L_0x7fc758334ba0, L_0x55558ed94b50;
L_0x55558ed94f30 .concat8 [ 1 1 0 0], v0x55558ed55060_0, v0x55558ed541f0_0;
L_0x55558ed95400 .part L_0x55558ed94f30, 0, 1;
L_0x55558ed95530 .part L_0x55558ed94f30, 1, 1;
S_0x55558ed53b40 .scope generate, "g_hw_update" "g_hw_update" 9 259, 9 259 0, S_0x55558ed52980;
 .timescale 0 0;
L_0x55558ed94ca0 .ufunc/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_s2wto.u_bit_field.get_hw_update, 1, L_0x7fc758334c78, L_0x55558ed9e470, L_0x7fc758334d08 (v0x55558ed56020_0, v0x55558ed55e80_0, v0x55558ed55cc0_0) S_0x55558ed55b30;
S_0x55558ed53d20 .scope generate, "g_read_data" "g_read_data" 9 382, 9 382 0, S_0x55558ed52980;
 .timescale 0 0;
L_0x55558ed951e0 .functor BUFZ 1, v0x55558ed54c80_0, C4<0>, C4<0>, C4<0>;
S_0x55558ed53f20 .scope generate, "g_read_trigger" "g_read_trigger" 9 304, 9 304 0, S_0x55558ed52980;
 .timescale 0 0;
v0x55558ed54130_0 .net *"_ivl_1", 0 0, v0x55558ed541f0_0;  1 drivers
v0x55558ed541f0_0 .var "r_trigger", 0 0;
S_0x55558ed542b0 .scope generate, "g_sw_read_update" "g_sw_read_update" 9 245, 9 245 0, S_0x55558ed52980;
 .timescale 0 0;
v0x55558ed54490_0 .net/2u *"_ivl_0", 0 0, L_0x7fc758334ba0;  1 drivers
S_0x55558ed54590 .scope generate, "g_sw_write_done" "g_sw_write_done" 9 268, 9 268 0, S_0x55558ed52980;
 .timescale 0 0;
S_0x55558ed547c0 .scope generate, "g_sw_write_update" "g_sw_write_update" 9 252, 9 252 0, S_0x55558ed52980;
 .timescale 0 0;
v0x55558ed549a0_0 .net *"_ivl_1", 0 0, L_0x55558ed94b50;  1 drivers
L_0x55558ed94b50 .ufunc/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_s2wto.u_bit_field.get_sw_write_update, 1, L_0x55558ed80e60, L_0x7fc758334c30, L_0x7fc758334be8 (v0x55558ed57330_0, v0x55558ed57270_0, v0x55558ed571d0_0) S_0x55558ed56e30;
S_0x55558ed54aa0 .scope generate, "g_value" "g_value" 9 326, 9 326 0, S_0x55558ed52980;
 .timescale 0 0;
v0x55558ed54c80_0 .var "r_value", 0 0;
S_0x55558ed54d80 .scope generate, "g_write_trigger" "g_write_trigger" 9 287, 9 287 0, S_0x55558ed52980;
 .timescale 0 0;
v0x55558ed54f60_0 .net *"_ivl_1", 0 0, v0x55558ed55060_0;  1 drivers
v0x55558ed55060_0 .var "r_trigger", 0 0;
S_0x55558ed55120 .scope autofunction.vec4.s1, "get_hw_next_value" "get_hw_next_value" 9 177, 9 177 0, S_0x55558ed52980;
 .timescale 0 0;
v0x55558ed55300_0 .var "clear", 0 0;
v0x55558ed55400_0 .var "current_value", 0 0;
; Variable get_hw_next_value is vec4 return value of scope S_0x55558ed55120
v0x55558ed555a0_0 .var/i "i", 31 0;
v0x55558ed55680_0 .var "set", 0 0;
v0x55558ed55760 .array "set_clear", 1 0, 0 0;
v0x55558ed55820_0 .var "value", 0 0;
v0x55558ed55900_0 .var "write_data", 0 0;
v0x55558ed559e0_0 .var "write_enable", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_s2wto.u_bit_field.get_hw_next_value ;
    %load/vec4 v0x55558ed55680_0;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x55558ed55760, 4, 0;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x55558ed55760, 4, 0;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558ed555a0_0, 0, 32;
T_24.303 ; Top of for-loop
    %load/vec4 v0x55558ed555a0_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_24.304, 5;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x55558ed55760, 4;
    %load/vec4 v0x55558ed555a0_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_24.306, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x55558ed555a0_0;
    %store/vec4 v0x55558ed55820_0, 4, 1;
    %jmp T_24.307;
T_24.306 ;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x55558ed55760, 4;
    %load/vec4 v0x55558ed555a0_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_24.308, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x55558ed555a0_0;
    %store/vec4 v0x55558ed55820_0, 4, 1;
    %jmp T_24.309;
T_24.308 ;
    %load/vec4 v0x55558ed55400_0;
    %load/vec4 v0x55558ed555a0_0;
    %part/s 1;
    %ix/getv/s 4, v0x55558ed555a0_0;
    %store/vec4 v0x55558ed55820_0, 4, 1;
T_24.309 ;
T_24.307 ;
T_24.305 ; for-loop step statement
    %load/vec4 v0x55558ed555a0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558ed555a0_0, 0, 32;
    %jmp T_24.303;
T_24.304 ; for-loop exit label
    %load/vec4 v0x55558ed55820_0;
    %ret/vec4 0, 0, 1;  Assign to get_hw_next_value (store_vec4_to_lval)
    %end;
S_0x55558ed55b30 .scope autofunction.vec4.s1, "get_hw_update" "get_hw_update" 9 72, 9 72 0, S_0x55558ed52980;
 .timescale 0 0;
v0x55558ed55cc0_0 .var "clear", 0 0;
; Variable get_hw_update is vec4 return value of scope S_0x55558ed55b30
v0x55558ed55e80_0 .var "set", 0 0;
v0x55558ed55f40_0 .var "update", 2 0;
v0x55558ed56020_0 .var "write_enable", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_s2wto.u_bit_field.get_hw_update ;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x55558ed55f40_0, 4, 1;
    %pushi/vec4 1, 0, 1;
    %flag_set/vec4 8;
    %flag_get/vec4 8;
    %jmp/0 T_25.310, 8;
    %load/vec4 v0x55558ed55e80_0;
    %pushi/vec4 0, 0, 1;
    %cmp/ne;
    %flag_get/vec4 4;
    %and;
T_25.310;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x55558ed55f40_0, 4, 1;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 2, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x55558ed55f40_0, 4, 1;
    %load/vec4 v0x55558ed55f40_0;
    %parti/s 1, 0, 2;
    %flag_set/vec4 8;
    %jmp/1 T_25.312, 8;
    %load/vec4 v0x55558ed55f40_0;
    %parti/s 1, 1, 2;
    %flag_set/vec4 9;
    %flag_or 8, 9;
T_25.312;
    %flag_get/vec4 8;
    %jmp/1 T_25.311, 8;
    %load/vec4 v0x55558ed55f40_0;
    %parti/s 1, 2, 3;
    %or;
T_25.311;
    %ret/vec4 0, 0, 1;  Assign to get_hw_update (store_vec4_to_lval)
    %end;
S_0x55558ed56130 .scope autofunction.vec4.s1, "get_sw_read_next_value" "get_sw_read_next_value" 9 86, 9 86 0, S_0x55558ed52980;
 .timescale 0 0;
v0x55558ed56310_0 .var "current_value", 0 0;
; Variable get_sw_read_next_value is vec4 return value of scope S_0x55558ed56130
v0x55558ed564f0_0 .var "mask", 0 0;
v0x55558ed565b0_0 .var "value", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_s2wto.u_bit_field.get_sw_read_next_value ;
    %pushi/vec4 1, 0, 32;
    %dup/vec4;
    %pushi/vec4 2, 0, 32;
    %cmp/u;
    %jmp/1 T_26.313, 6;
    %dup/vec4;
    %pushi/vec4 3, 0, 32;
    %cmp/u;
    %jmp/1 T_26.314, 6;
    %load/vec4 v0x55558ed56310_0;
    %store/vec4 v0x55558ed565b0_0, 0, 1;
    %jmp T_26.316;
T_26.313 ;
    %load/vec4 v0x55558ed564f0_0;
    %cmpi/ne 0, 0, 1;
    %flag_mov 8, 4;
    %jmp/0 T_26.317, 8;
    %pushi/vec4 0, 0, 1;
    %jmp/1 T_26.318, 8;
T_26.317 ; End of true expr.
    %load/vec4 v0x55558ed56310_0;
    %jmp/0 T_26.318, 8;
 ; End of false expr.
    %blend;
T_26.318;
    %store/vec4 v0x55558ed565b0_0, 0, 1;
    %jmp T_26.316;
T_26.314 ;
    %load/vec4 v0x55558ed564f0_0;
    %cmpi/ne 0, 0, 1;
    %flag_mov 8, 4;
    %jmp/0 T_26.319, 8;
    %pushi/vec4 1, 0, 1;
    %jmp/1 T_26.320, 8;
T_26.319 ; End of true expr.
    %load/vec4 v0x55558ed56310_0;
    %jmp/0 T_26.320, 8;
 ; End of false expr.
    %blend;
T_26.320;
    %store/vec4 v0x55558ed565b0_0, 0, 1;
    %jmp T_26.316;
T_26.316 ;
    %pop/vec4 1;
    %load/vec4 v0x55558ed565b0_0;
    %ret/vec4 0, 0, 1;  Assign to get_sw_read_next_value (store_vec4_to_lval)
    %end;
S_0x55558ed56690 .scope autofunction.vec4.s1, "get_sw_write_next_value" "get_sw_write_next_value" 9 101, 9 101 0, S_0x55558ed52980;
 .timescale 0 0;
v0x55558ed56870_0 .var "current_value", 0 0;
; Variable get_sw_write_next_value is vec4 return value of scope S_0x55558ed56690
v0x55558ed56a50_0 .var/i "i", 31 0;
v0x55558ed56b40_0 .var "mask", 0 0;
v0x55558ed56c20_0 .var "value", 0 0;
v0x55558ed56d50_0 .var "write_data", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_s2wto.u_bit_field.get_sw_write_next_value ;
    %load/vec4 v0x55558ed56870_0;
    %store/vec4 v0x55558ed56c20_0, 0, 1;
    %pushi/vec4 2, 0, 32;
    %dup/vec4;
    %pushi/vec4 1, 0, 32;
    %cmp/u;
    %jmp/1 T_27.321, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 32;
    %cmp/u;
    %jmp/1 T_27.322, 6;
    %dup/vec4;
    %pushi/vec4 3, 0, 32;
    %cmp/u;
    %jmp/1 T_27.323, 6;
    %dup/vec4;
    %pushi/vec4 4, 0, 32;
    %cmp/u;
    %jmp/1 T_27.324, 6;
    %dup/vec4;
    %pushi/vec4 5, 0, 32;
    %cmp/u;
    %jmp/1 T_27.325, 6;
    %dup/vec4;
    %pushi/vec4 6, 0, 32;
    %cmp/u;
    %jmp/1 T_27.326, 6;
    %dup/vec4;
    %pushi/vec4 7, 0, 32;
    %cmp/u;
    %jmp/1 T_27.327, 6;
    %dup/vec4;
    %pushi/vec4 8, 0, 32;
    %cmp/u;
    %jmp/1 T_27.328, 6;
    %dup/vec4;
    %pushi/vec4 9, 0, 32;
    %cmp/u;
    %jmp/1 T_27.329, 6;
    %jmp T_27.331;
T_27.321 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558ed56a50_0, 0, 32;
T_27.332 ; Top of for-loop
    %load/vec4 v0x55558ed56a50_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_27.333, 5;
    %load/vec4 v0x55558ed56b40_0;
    %load/vec4 v0x55558ed56a50_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_27.335, 8;
    %load/vec4 v0x55558ed56d50_0;
    %load/vec4 v0x55558ed56a50_0;
    %part/s 1;
    %ix/getv/s 4, v0x55558ed56a50_0;
    %store/vec4 v0x55558ed56c20_0, 4, 1;
T_27.335 ;
T_27.334 ; for-loop step statement
    %load/vec4 v0x55558ed56a50_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558ed56a50_0, 0, 32;
    %jmp T_27.332;
T_27.333 ; for-loop exit label
    %jmp T_27.331;
T_27.322 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558ed56a50_0, 0, 32;
T_27.337 ; Top of for-loop
    %load/vec4 v0x55558ed56a50_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_27.338, 5;
    %load/vec4 v0x55558ed56b40_0;
    %load/vec4 v0x55558ed56a50_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_27.342, 9;
    %load/vec4 v0x55558ed56d50_0;
    %load/vec4 v0x55558ed56a50_0;
    %part/s 1;
    %nor/r;
    %and;
T_27.342;
    %flag_set/vec4 8;
    %jmp/0xz  T_27.340, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x55558ed56a50_0;
    %store/vec4 v0x55558ed56c20_0, 4, 1;
T_27.340 ;
T_27.339 ; for-loop step statement
    %load/vec4 v0x55558ed56a50_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558ed56a50_0, 0, 32;
    %jmp T_27.337;
T_27.338 ; for-loop exit label
    %jmp T_27.331;
T_27.323 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558ed56a50_0, 0, 32;
T_27.343 ; Top of for-loop
    %load/vec4 v0x55558ed56a50_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_27.344, 5;
    %load/vec4 v0x55558ed56b40_0;
    %load/vec4 v0x55558ed56a50_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_27.348, 9;
    %load/vec4 v0x55558ed56d50_0;
    %load/vec4 v0x55558ed56a50_0;
    %part/s 1;
    %and;
T_27.348;
    %flag_set/vec4 8;
    %jmp/0xz  T_27.346, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x55558ed56a50_0;
    %store/vec4 v0x55558ed56c20_0, 4, 1;
T_27.346 ;
T_27.345 ; for-loop step statement
    %load/vec4 v0x55558ed56a50_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558ed56a50_0, 0, 32;
    %jmp T_27.343;
T_27.344 ; for-loop exit label
    %jmp T_27.331;
T_27.324 ;
    %load/vec4 v0x55558ed56b40_0;
    %cmpi/ne 0, 0, 1;
    %jmp/0xz  T_27.349, 4;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x55558ed56c20_0, 0, 1;
T_27.349 ;
    %jmp T_27.331;
T_27.325 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558ed56a50_0, 0, 32;
T_27.351 ; Top of for-loop
    %load/vec4 v0x55558ed56a50_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_27.352, 5;
    %load/vec4 v0x55558ed56b40_0;
    %load/vec4 v0x55558ed56a50_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_27.356, 9;
    %load/vec4 v0x55558ed56d50_0;
    %load/vec4 v0x55558ed56a50_0;
    %part/s 1;
    %nor/r;
    %and;
T_27.356;
    %flag_set/vec4 8;
    %jmp/0xz  T_27.354, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x55558ed56a50_0;
    %store/vec4 v0x55558ed56c20_0, 4, 1;
T_27.354 ;
T_27.353 ; for-loop step statement
    %load/vec4 v0x55558ed56a50_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558ed56a50_0, 0, 32;
    %jmp T_27.351;
T_27.352 ; for-loop exit label
    %jmp T_27.331;
T_27.326 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558ed56a50_0, 0, 32;
T_27.357 ; Top of for-loop
    %load/vec4 v0x55558ed56a50_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_27.358, 5;
    %load/vec4 v0x55558ed56b40_0;
    %load/vec4 v0x55558ed56a50_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_27.362, 9;
    %load/vec4 v0x55558ed56d50_0;
    %load/vec4 v0x55558ed56a50_0;
    %part/s 1;
    %and;
T_27.362;
    %flag_set/vec4 8;
    %jmp/0xz  T_27.360, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x55558ed56a50_0;
    %store/vec4 v0x55558ed56c20_0, 4, 1;
T_27.360 ;
T_27.359 ; for-loop step statement
    %load/vec4 v0x55558ed56a50_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558ed56a50_0, 0, 32;
    %jmp T_27.357;
T_27.358 ; for-loop exit label
    %jmp T_27.331;
T_27.327 ;
    %load/vec4 v0x55558ed56b40_0;
    %cmpi/ne 0, 0, 1;
    %jmp/0xz  T_27.363, 4;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x55558ed56c20_0, 0, 1;
T_27.363 ;
    %jmp T_27.331;
T_27.328 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558ed56a50_0, 0, 32;
T_27.365 ; Top of for-loop
    %load/vec4 v0x55558ed56a50_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_27.366, 5;
    %load/vec4 v0x55558ed56b40_0;
    %load/vec4 v0x55558ed56a50_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_27.370, 9;
    %load/vec4 v0x55558ed56d50_0;
    %load/vec4 v0x55558ed56a50_0;
    %part/s 1;
    %nor/r;
    %and;
T_27.370;
    %flag_set/vec4 8;
    %jmp/0xz  T_27.368, 8;
    %load/vec4 v0x55558ed56870_0;
    %load/vec4 v0x55558ed56a50_0;
    %part/s 1;
    %inv;
    %ix/getv/s 4, v0x55558ed56a50_0;
    %store/vec4 v0x55558ed56c20_0, 4, 1;
T_27.368 ;
T_27.367 ; for-loop step statement
    %load/vec4 v0x55558ed56a50_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558ed56a50_0, 0, 32;
    %jmp T_27.365;
T_27.366 ; for-loop exit label
    %jmp T_27.331;
T_27.329 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558ed56a50_0, 0, 32;
T_27.371 ; Top of for-loop
    %load/vec4 v0x55558ed56a50_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_27.372, 5;
    %load/vec4 v0x55558ed56b40_0;
    %load/vec4 v0x55558ed56a50_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_27.376, 9;
    %load/vec4 v0x55558ed56d50_0;
    %load/vec4 v0x55558ed56a50_0;
    %part/s 1;
    %and;
T_27.376;
    %flag_set/vec4 8;
    %jmp/0xz  T_27.374, 8;
    %load/vec4 v0x55558ed56870_0;
    %load/vec4 v0x55558ed56a50_0;
    %part/s 1;
    %inv;
    %ix/getv/s 4, v0x55558ed56a50_0;
    %store/vec4 v0x55558ed56c20_0, 4, 1;
T_27.374 ;
T_27.373 ; for-loop step statement
    %load/vec4 v0x55558ed56a50_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558ed56a50_0, 0, 32;
    %jmp T_27.371;
T_27.372 ; for-loop exit label
    %jmp T_27.331;
T_27.331 ;
    %pop/vec4 1;
    %load/vec4 v0x55558ed56c20_0;
    %ret/vec4 0, 0, 1;  Assign to get_sw_write_next_value (store_vec4_to_lval)
    %end;
S_0x55558ed56e30 .scope autofunction.vec4.s1, "get_sw_write_update" "get_sw_write_update" 9 47, 9 47 0, S_0x55558ed52980;
 .timescale 0 0;
; Variable get_sw_write_update is vec4 return value of scope S_0x55558ed56e30
v0x55558ed570f0_0 .var "update", 2 0;
v0x55558ed571d0_0 .var "write_done", 0 0;
v0x55558ed57270_0 .var "write_enable", 0 0;
v0x55558ed57330_0 .var "write_valid", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_s2wto.u_bit_field.get_sw_write_update ;
    %load/vec4 v0x55558ed57330_0;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x55558ed570f0_0, 4, 1;
    %pushi/vec4 1, 0, 1;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x55558ed570f0_0, 4, 1;
    %pushi/vec4 1, 0, 1;
    %ix/load 4, 2, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x55558ed570f0_0, 4, 1;
    %load/vec4 v0x55558ed570f0_0;
    %parti/s 1, 0, 2;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_28.378, 9;
    %load/vec4 v0x55558ed570f0_0;
    %parti/s 1, 1, 2;
    %and;
T_28.378;
    %flag_set/vec4 8;
    %flag_get/vec4 8;
    %jmp/0 T_28.377, 8;
    %load/vec4 v0x55558ed570f0_0;
    %parti/s 1, 2, 3;
    %and;
T_28.377;
    %ret/vec4 0, 0, 1;  Assign to get_sw_write_update (store_vec4_to_lval)
    %end;
S_0x55558ed58da0 .scope generate, "g_wden" "g_wden" 8 117, 8 117 0, S_0x55558ecfd810;
 .timescale -8 -9;
S_0x55558ed58f30 .scope module, "u_bit_field" "rggen_bit_field" 8 123, 9 2 0, S_0x55558ed58da0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "i_clk";
    .port_info 1 /INPUT 1 "i_rst_n";
    .port_info 2 /INPUT 1 "i_sw_write_valid";
    .port_info 3 /INPUT 1 "i_sw_write_enable";
    .port_info 4 /INPUT 1 "i_sw_read_valid";
    .port_info 5 /INPUT 1 "i_sw_mask";
    .port_info 6 /INPUT 1 "i_sw_write_data";
    .port_info 7 /OUTPUT 1 "o_sw_read_data";
    .port_info 8 /OUTPUT 1 "o_sw_value";
    .port_info 9 /OUTPUT 1 "o_write_trigger";
    .port_info 10 /OUTPUT 1 "o_read_trigger";
    .port_info 11 /INPUT 1 "i_hw_write_enable";
    .port_info 12 /INPUT 1 "i_hw_write_data";
    .port_info 13 /INPUT 1 "i_hw_set";
    .port_info 14 /INPUT 1 "i_hw_clear";
    .port_info 15 /INPUT 1 "i_value";
    .port_info 16 /INPUT 1 "i_mask";
    .port_info 17 /OUTPUT 1 "o_value";
    .port_info 18 /OUTPUT 1 "o_value_unmasked";
P_0x55558ed59130 .param/l "EXTERNAL_MASK" 0 9 17, C4<0>;
P_0x55558ed59170 .param/l "EXTERNAL_READ_DATA" 0 9 16, C4<0>;
P_0x55558ed591b0 .param/l "HW_ACCESS" 0 9 12, C4<000>;
P_0x55558ed591f0 .param/l "HW_CLEAR_WIDTH" 0 9 14, +C4<00000000000000000000000000000001>;
P_0x55558ed59230 .param/l "HW_SET_WIDTH" 0 9 13, +C4<00000000000000000000000000000001>;
P_0x55558ed59270 .param/l "HW_WRITE_ENABLE_POLARITY" 0 9 11, C4<1>;
P_0x55558ed592b0 .param/l "INITIAL_VALUE" 0 9 4, C4<0>;
P_0x55558ed592f0 .param/l "PRECEDENCE_ACCESS" 0 9 5, +C4<00000000000000000000000000000001>;
P_0x55558ed59330 .param/l "STORAGE" 0 9 15, C4<1>;
P_0x55558ed59370 .param/l "SW_READABLE" 1 9 41, C4<1>;
P_0x55558ed593b0 .param/l "SW_READ_ACTION" 0 9 6, +C4<00000000000000000000000000000001>;
P_0x55558ed593f0 .param/l "SW_READ_UPDATE" 1 9 42, C4<0>;
P_0x55558ed59430 .param/l "SW_WRITABLE" 1 9 40, C4<1>;
P_0x55558ed59470 .param/l "SW_WRITE_ACTION" 0 9 7, +C4<00000000000000000000000000000001>;
P_0x55558ed594b0 .param/l "SW_WRITE_CONTROL" 0 9 8, C4<0>;
P_0x55558ed594f0 .param/l "SW_WRITE_ENABLE_POLARITY" 0 9 10, C4<1>;
P_0x55558ed59530 .param/l "SW_WRITE_ONCE" 0 9 9, +C4<00000000000000000000000000000000>;
P_0x55558ed59570 .param/l "TRIGGER" 0 9 18, +C4<00000000000000000000000000000000>;
P_0x55558ed595b0 .param/l "WIDTH" 0 9 3, +C4<00000000000000000000000000000001>;
L_0x55558ed92220 .functor BUFZ 1, L_0x55558ed92160, C4<0>, C4<0>, C4<0>;
L_0x55558ed922e0 .functor BUFZ 1, v0x55558ed5b000_0, C4<0>, C4<0>, C4<0>;
L_0x55558ed92510 .functor BUFZ 1, v0x55558ed5b000_0, C4<0>, C4<0>, C4<0>;
L_0x55558ed926a0 .functor BUFZ 1, v0x55558ed5b000_0, C4<0>, C4<0>, C4<0>;
v0x55558ed5d900_0 .net "i_clk", 0 0, v0x55558ed7f980_0;  alias, 1 drivers
L_0x7fc758334570 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x55558ed5d9c0_0 .net "i_hw_clear", 0 0, L_0x7fc758334570;  1 drivers
L_0x7fc758334528 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x55558ed5daa0_0 .net "i_hw_set", 0 0, L_0x7fc758334528;  1 drivers
L_0x7fc7583344e0 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x55558ed5db60_0 .net "i_hw_write_data", 0 0, L_0x7fc7583344e0;  1 drivers
L_0x7fc758334498 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x55558ed5dc40_0 .net "i_hw_write_enable", 0 0, L_0x7fc758334498;  1 drivers
L_0x7fc758334600 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v0x55558ed5dd50_0 .net "i_mask", 0 0, L_0x7fc758334600;  1 drivers
v0x55558ed5de30_0 .net "i_rst_n", 0 0, L_0x55558ed37990;  alias, 1 drivers
v0x55558ed5ded0_0 .net "i_sw_mask", 0 0, L_0x55558ed92740;  1 drivers
v0x55558ed5dfb0_0 .net "i_sw_read_valid", 0 0, L_0x55558ed814f0;  alias, 1 drivers
v0x55558ed5e170_0 .net "i_sw_write_data", 0 0, L_0x55558ed927e0;  1 drivers
L_0x7fc758334450 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v0x55558ed5e250_0 .net "i_sw_write_enable", 0 0, L_0x7fc758334450;  1 drivers
v0x55558ed5e310_0 .net "i_sw_write_valid", 0 0, L_0x55558ed80e60;  alias, 1 drivers
L_0x7fc7583345b8 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x55558ed5e440_0 .net "i_value", 0 0, L_0x7fc7583345b8;  1 drivers
v0x55558ed5e520_0 .net "o_read_trigger", 0 0, L_0x55558ed92440;  1 drivers
v0x55558ed5e5e0_0 .net "o_sw_read_data", 0 0, L_0x55558ed92220;  1 drivers
v0x55558ed5e6c0_0 .net "o_sw_value", 0 0, L_0x55558ed922e0;  1 drivers
v0x55558ed5e7a0_0 .net "o_value", 0 0, L_0x55558ed92510;  alias, 1 drivers
v0x55558ed5e970_0 .net "o_value_unmasked", 0 0, L_0x55558ed926a0;  1 drivers
v0x55558ed5ea30_0 .net "o_write_trigger", 0 0, L_0x55558ed92350;  1 drivers
L_0x7fc758334330 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x55558ed5eaf0_0 .net "w_hw_update", 0 0, L_0x7fc758334330;  1 drivers
v0x55558ed5ebb0_0 .net "w_read_data", 0 0, L_0x55558ed92160;  1 drivers
v0x55558ed5ec90_0 .net "w_sw_update", 1 0, L_0x55558ed91e20;  1 drivers
L_0x7fc758334378 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x55558ed5ed70_0 .net "w_sw_write_done", 0 0, L_0x7fc758334378;  1 drivers
v0x55558ed5ee30_0 .net "w_trigger", 1 0, L_0x55558ed91fb0;  1 drivers
v0x55558ed5ef10_0 .net "w_value", 0 0, v0x55558ed5b000_0;  1 drivers
L_0x7fc7583342e8 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x55558ed91e20 .concat8 [ 1 1 0 0], L_0x7fc7583342e8, L_0x55558ed91ec0;
L_0x7fc7583343c0 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x7fc758334408 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x55558ed91fb0 .concat8 [ 1 1 0 0], L_0x7fc7583343c0, L_0x7fc758334408;
L_0x55558ed92350 .part L_0x55558ed91fb0, 0, 1;
L_0x55558ed92440 .part L_0x55558ed91fb0, 1, 1;
S_0x55558ed5a160 .scope generate, "g_read_data" "g_read_data" 9 382, 9 382 0, S_0x55558ed58f30;
 .timescale 0 0;
L_0x55558ed92160 .functor BUFZ 1, v0x55558ed5b000_0, C4<0>, C4<0>, C4<0>;
S_0x55558ed5a340 .scope generate, "g_read_trigger" "g_read_trigger" 9 304, 9 304 0, S_0x55558ed58f30;
 .timescale 0 0;
v0x55558ed5a540_0 .net/2u *"_ivl_0", 0 0, L_0x7fc758334408;  1 drivers
S_0x55558ed5a620 .scope generate, "g_sw_read_update" "g_sw_read_update" 9 245, 9 245 0, S_0x55558ed58f30;
 .timescale 0 0;
v0x55558ed5a830_0 .net/2u *"_ivl_0", 0 0, L_0x7fc7583342e8;  1 drivers
S_0x55558ed5a910 .scope generate, "g_sw_write_done" "g_sw_write_done" 9 268, 9 268 0, S_0x55558ed58f30;
 .timescale 0 0;
S_0x55558ed5aaf0 .scope generate, "g_sw_write_update" "g_sw_write_update" 9 252, 9 252 0, S_0x55558ed58f30;
 .timescale 0 0;
v0x55558ed5ad20_0 .net *"_ivl_1", 0 0, L_0x55558ed91ec0;  1 drivers
L_0x55558ed91ec0 .ufunc/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_wden.u_bit_field.get_sw_write_update, 1, L_0x55558ed80e60, L_0x7fc758334450, L_0x7fc758334378 (v0x55558ed5d7d0_0, v0x55558ed5d710_0, v0x55558ed5d670_0) S_0x55558ed5d2d0;
S_0x55558ed5ae20 .scope generate, "g_value" "g_value" 9 326, 9 326 0, S_0x55558ed58f30;
 .timescale 0 0;
v0x55558ed5b000_0 .var "r_value", 0 0;
S_0x55558ed5b100 .scope generate, "g_write_trigger" "g_write_trigger" 9 287, 9 287 0, S_0x55558ed58f30;
 .timescale 0 0;
v0x55558ed5b2e0_0 .net/2u *"_ivl_0", 0 0, L_0x7fc7583343c0;  1 drivers
S_0x55558ed5b3e0 .scope generate, "genblk3" "genblk3" 9 259, 9 259 0, S_0x55558ed58f30;
 .timescale 0 0;
S_0x55558ed5b5c0 .scope autofunction.vec4.s1, "get_hw_next_value" "get_hw_next_value" 9 177, 9 177 0, S_0x55558ed58f30;
 .timescale 0 0;
v0x55558ed5b7a0_0 .var "clear", 0 0;
v0x55558ed5b8a0_0 .var "current_value", 0 0;
; Variable get_hw_next_value is vec4 return value of scope S_0x55558ed5b5c0
v0x55558ed5ba40_0 .var/i "i", 31 0;
v0x55558ed5bb20_0 .var "set", 0 0;
v0x55558ed5bc00 .array "set_clear", 1 0, 0 0;
v0x55558ed5bcc0_0 .var "value", 0 0;
v0x55558ed5bda0_0 .var "write_data", 0 0;
v0x55558ed5be80_0 .var "write_enable", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_wden.u_bit_field.get_hw_next_value ;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x55558ed5bc00, 4, 0;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x55558ed5bc00, 4, 0;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558ed5ba40_0, 0, 32;
T_29.379 ; Top of for-loop
    %load/vec4 v0x55558ed5ba40_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_29.380, 5;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x55558ed5bc00, 4;
    %load/vec4 v0x55558ed5ba40_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_29.382, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x55558ed5ba40_0;
    %store/vec4 v0x55558ed5bcc0_0, 4, 1;
    %jmp T_29.383;
T_29.382 ;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x55558ed5bc00, 4;
    %load/vec4 v0x55558ed5ba40_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_29.384, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x55558ed5ba40_0;
    %store/vec4 v0x55558ed5bcc0_0, 4, 1;
    %jmp T_29.385;
T_29.384 ;
    %load/vec4 v0x55558ed5b8a0_0;
    %load/vec4 v0x55558ed5ba40_0;
    %part/s 1;
    %ix/getv/s 4, v0x55558ed5ba40_0;
    %store/vec4 v0x55558ed5bcc0_0, 4, 1;
T_29.385 ;
T_29.383 ;
T_29.381 ; for-loop step statement
    %load/vec4 v0x55558ed5ba40_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558ed5ba40_0, 0, 32;
    %jmp T_29.379;
T_29.380 ; for-loop exit label
    %load/vec4 v0x55558ed5bcc0_0;
    %ret/vec4 0, 0, 1;  Assign to get_hw_next_value (store_vec4_to_lval)
    %end;
S_0x55558ed5bfd0 .scope autofunction.vec4.s1, "get_hw_update" "get_hw_update" 9 72, 9 72 0, S_0x55558ed58f30;
 .timescale 0 0;
v0x55558ed5c160_0 .var "clear", 0 0;
; Variable get_hw_update is vec4 return value of scope S_0x55558ed5bfd0
v0x55558ed5c320_0 .var "set", 0 0;
v0x55558ed5c3e0_0 .var "update", 2 0;
v0x55558ed5c4c0_0 .var "write_enable", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_wden.u_bit_field.get_hw_update ;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x55558ed5c3e0_0, 4, 1;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x55558ed5c3e0_0, 4, 1;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 2, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x55558ed5c3e0_0, 4, 1;
    %load/vec4 v0x55558ed5c3e0_0;
    %parti/s 1, 0, 2;
    %flag_set/vec4 8;
    %jmp/1 T_30.387, 8;
    %load/vec4 v0x55558ed5c3e0_0;
    %parti/s 1, 1, 2;
    %flag_set/vec4 9;
    %flag_or 8, 9;
T_30.387;
    %flag_get/vec4 8;
    %jmp/1 T_30.386, 8;
    %load/vec4 v0x55558ed5c3e0_0;
    %parti/s 1, 2, 3;
    %or;
T_30.386;
    %ret/vec4 0, 0, 1;  Assign to get_hw_update (store_vec4_to_lval)
    %end;
S_0x55558ed5c5d0 .scope autofunction.vec4.s1, "get_sw_read_next_value" "get_sw_read_next_value" 9 86, 9 86 0, S_0x55558ed58f30;
 .timescale 0 0;
v0x55558ed5c7b0_0 .var "current_value", 0 0;
; Variable get_sw_read_next_value is vec4 return value of scope S_0x55558ed5c5d0
v0x55558ed5c990_0 .var "mask", 0 0;
v0x55558ed5ca50_0 .var "value", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_wden.u_bit_field.get_sw_read_next_value ;
    %pushi/vec4 1, 0, 32;
    %dup/vec4;
    %pushi/vec4 2, 0, 32;
    %cmp/u;
    %jmp/1 T_31.388, 6;
    %dup/vec4;
    %pushi/vec4 3, 0, 32;
    %cmp/u;
    %jmp/1 T_31.389, 6;
    %load/vec4 v0x55558ed5c7b0_0;
    %store/vec4 v0x55558ed5ca50_0, 0, 1;
    %jmp T_31.391;
T_31.388 ;
    %load/vec4 v0x55558ed5c990_0;
    %cmpi/ne 0, 0, 1;
    %flag_mov 8, 4;
    %jmp/0 T_31.392, 8;
    %pushi/vec4 0, 0, 1;
    %jmp/1 T_31.393, 8;
T_31.392 ; End of true expr.
    %load/vec4 v0x55558ed5c7b0_0;
    %jmp/0 T_31.393, 8;
 ; End of false expr.
    %blend;
T_31.393;
    %store/vec4 v0x55558ed5ca50_0, 0, 1;
    %jmp T_31.391;
T_31.389 ;
    %load/vec4 v0x55558ed5c990_0;
    %cmpi/ne 0, 0, 1;
    %flag_mov 8, 4;
    %jmp/0 T_31.394, 8;
    %pushi/vec4 1, 0, 1;
    %jmp/1 T_31.395, 8;
T_31.394 ; End of true expr.
    %load/vec4 v0x55558ed5c7b0_0;
    %jmp/0 T_31.395, 8;
 ; End of false expr.
    %blend;
T_31.395;
    %store/vec4 v0x55558ed5ca50_0, 0, 1;
    %jmp T_31.391;
T_31.391 ;
    %pop/vec4 1;
    %load/vec4 v0x55558ed5ca50_0;
    %ret/vec4 0, 0, 1;  Assign to get_sw_read_next_value (store_vec4_to_lval)
    %end;
S_0x55558ed5cb30 .scope autofunction.vec4.s1, "get_sw_write_next_value" "get_sw_write_next_value" 9 101, 9 101 0, S_0x55558ed58f30;
 .timescale 0 0;
v0x55558ed5cd10_0 .var "current_value", 0 0;
; Variable get_sw_write_next_value is vec4 return value of scope S_0x55558ed5cb30
v0x55558ed5cef0_0 .var/i "i", 31 0;
v0x55558ed5cfe0_0 .var "mask", 0 0;
v0x55558ed5d0c0_0 .var "value", 0 0;
v0x55558ed5d1f0_0 .var "write_data", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_wden.u_bit_field.get_sw_write_next_value ;
    %load/vec4 v0x55558ed5cd10_0;
    %store/vec4 v0x55558ed5d0c0_0, 0, 1;
    %pushi/vec4 1, 0, 32;
    %dup/vec4;
    %pushi/vec4 1, 0, 32;
    %cmp/u;
    %jmp/1 T_32.396, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 32;
    %cmp/u;
    %jmp/1 T_32.397, 6;
    %dup/vec4;
    %pushi/vec4 3, 0, 32;
    %cmp/u;
    %jmp/1 T_32.398, 6;
    %dup/vec4;
    %pushi/vec4 4, 0, 32;
    %cmp/u;
    %jmp/1 T_32.399, 6;
    %dup/vec4;
    %pushi/vec4 5, 0, 32;
    %cmp/u;
    %jmp/1 T_32.400, 6;
    %dup/vec4;
    %pushi/vec4 6, 0, 32;
    %cmp/u;
    %jmp/1 T_32.401, 6;
    %dup/vec4;
    %pushi/vec4 7, 0, 32;
    %cmp/u;
    %jmp/1 T_32.402, 6;
    %dup/vec4;
    %pushi/vec4 8, 0, 32;
    %cmp/u;
    %jmp/1 T_32.403, 6;
    %dup/vec4;
    %pushi/vec4 9, 0, 32;
    %cmp/u;
    %jmp/1 T_32.404, 6;
    %jmp T_32.406;
T_32.396 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558ed5cef0_0, 0, 32;
T_32.407 ; Top of for-loop
    %load/vec4 v0x55558ed5cef0_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_32.408, 5;
    %load/vec4 v0x55558ed5cfe0_0;
    %load/vec4 v0x55558ed5cef0_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_32.410, 8;
    %load/vec4 v0x55558ed5d1f0_0;
    %load/vec4 v0x55558ed5cef0_0;
    %part/s 1;
    %ix/getv/s 4, v0x55558ed5cef0_0;
    %store/vec4 v0x55558ed5d0c0_0, 4, 1;
T_32.410 ;
T_32.409 ; for-loop step statement
    %load/vec4 v0x55558ed5cef0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558ed5cef0_0, 0, 32;
    %jmp T_32.407;
T_32.408 ; for-loop exit label
    %jmp T_32.406;
T_32.397 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558ed5cef0_0, 0, 32;
T_32.412 ; Top of for-loop
    %load/vec4 v0x55558ed5cef0_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_32.413, 5;
    %load/vec4 v0x55558ed5cfe0_0;
    %load/vec4 v0x55558ed5cef0_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_32.417, 9;
    %load/vec4 v0x55558ed5d1f0_0;
    %load/vec4 v0x55558ed5cef0_0;
    %part/s 1;
    %nor/r;
    %and;
T_32.417;
    %flag_set/vec4 8;
    %jmp/0xz  T_32.415, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x55558ed5cef0_0;
    %store/vec4 v0x55558ed5d0c0_0, 4, 1;
T_32.415 ;
T_32.414 ; for-loop step statement
    %load/vec4 v0x55558ed5cef0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558ed5cef0_0, 0, 32;
    %jmp T_32.412;
T_32.413 ; for-loop exit label
    %jmp T_32.406;
T_32.398 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558ed5cef0_0, 0, 32;
T_32.418 ; Top of for-loop
    %load/vec4 v0x55558ed5cef0_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_32.419, 5;
    %load/vec4 v0x55558ed5cfe0_0;
    %load/vec4 v0x55558ed5cef0_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_32.423, 9;
    %load/vec4 v0x55558ed5d1f0_0;
    %load/vec4 v0x55558ed5cef0_0;
    %part/s 1;
    %and;
T_32.423;
    %flag_set/vec4 8;
    %jmp/0xz  T_32.421, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x55558ed5cef0_0;
    %store/vec4 v0x55558ed5d0c0_0, 4, 1;
T_32.421 ;
T_32.420 ; for-loop step statement
    %load/vec4 v0x55558ed5cef0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558ed5cef0_0, 0, 32;
    %jmp T_32.418;
T_32.419 ; for-loop exit label
    %jmp T_32.406;
T_32.399 ;
    %load/vec4 v0x55558ed5cfe0_0;
    %cmpi/ne 0, 0, 1;
    %jmp/0xz  T_32.424, 4;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x55558ed5d0c0_0, 0, 1;
T_32.424 ;
    %jmp T_32.406;
T_32.400 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558ed5cef0_0, 0, 32;
T_32.426 ; Top of for-loop
    %load/vec4 v0x55558ed5cef0_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_32.427, 5;
    %load/vec4 v0x55558ed5cfe0_0;
    %load/vec4 v0x55558ed5cef0_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_32.431, 9;
    %load/vec4 v0x55558ed5d1f0_0;
    %load/vec4 v0x55558ed5cef0_0;
    %part/s 1;
    %nor/r;
    %and;
T_32.431;
    %flag_set/vec4 8;
    %jmp/0xz  T_32.429, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x55558ed5cef0_0;
    %store/vec4 v0x55558ed5d0c0_0, 4, 1;
T_32.429 ;
T_32.428 ; for-loop step statement
    %load/vec4 v0x55558ed5cef0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558ed5cef0_0, 0, 32;
    %jmp T_32.426;
T_32.427 ; for-loop exit label
    %jmp T_32.406;
T_32.401 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558ed5cef0_0, 0, 32;
T_32.432 ; Top of for-loop
    %load/vec4 v0x55558ed5cef0_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_32.433, 5;
    %load/vec4 v0x55558ed5cfe0_0;
    %load/vec4 v0x55558ed5cef0_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_32.437, 9;
    %load/vec4 v0x55558ed5d1f0_0;
    %load/vec4 v0x55558ed5cef0_0;
    %part/s 1;
    %and;
T_32.437;
    %flag_set/vec4 8;
    %jmp/0xz  T_32.435, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x55558ed5cef0_0;
    %store/vec4 v0x55558ed5d0c0_0, 4, 1;
T_32.435 ;
T_32.434 ; for-loop step statement
    %load/vec4 v0x55558ed5cef0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558ed5cef0_0, 0, 32;
    %jmp T_32.432;
T_32.433 ; for-loop exit label
    %jmp T_32.406;
T_32.402 ;
    %load/vec4 v0x55558ed5cfe0_0;
    %cmpi/ne 0, 0, 1;
    %jmp/0xz  T_32.438, 4;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x55558ed5d0c0_0, 0, 1;
T_32.438 ;
    %jmp T_32.406;
T_32.403 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558ed5cef0_0, 0, 32;
T_32.440 ; Top of for-loop
    %load/vec4 v0x55558ed5cef0_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_32.441, 5;
    %load/vec4 v0x55558ed5cfe0_0;
    %load/vec4 v0x55558ed5cef0_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_32.445, 9;
    %load/vec4 v0x55558ed5d1f0_0;
    %load/vec4 v0x55558ed5cef0_0;
    %part/s 1;
    %nor/r;
    %and;
T_32.445;
    %flag_set/vec4 8;
    %jmp/0xz  T_32.443, 8;
    %load/vec4 v0x55558ed5cd10_0;
    %load/vec4 v0x55558ed5cef0_0;
    %part/s 1;
    %inv;
    %ix/getv/s 4, v0x55558ed5cef0_0;
    %store/vec4 v0x55558ed5d0c0_0, 4, 1;
T_32.443 ;
T_32.442 ; for-loop step statement
    %load/vec4 v0x55558ed5cef0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558ed5cef0_0, 0, 32;
    %jmp T_32.440;
T_32.441 ; for-loop exit label
    %jmp T_32.406;
T_32.404 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558ed5cef0_0, 0, 32;
T_32.446 ; Top of for-loop
    %load/vec4 v0x55558ed5cef0_0;
    %cmpi/s 1, 0, 32;
	  %jmp/0xz T_32.447, 5;
    %load/vec4 v0x55558ed5cfe0_0;
    %load/vec4 v0x55558ed5cef0_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_32.451, 9;
    %load/vec4 v0x55558ed5d1f0_0;
    %load/vec4 v0x55558ed5cef0_0;
    %part/s 1;
    %and;
T_32.451;
    %flag_set/vec4 8;
    %jmp/0xz  T_32.449, 8;
    %load/vec4 v0x55558ed5cd10_0;
    %load/vec4 v0x55558ed5cef0_0;
    %part/s 1;
    %inv;
    %ix/getv/s 4, v0x55558ed5cef0_0;
    %store/vec4 v0x55558ed5d0c0_0, 4, 1;
T_32.449 ;
T_32.448 ; for-loop step statement
    %load/vec4 v0x55558ed5cef0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558ed5cef0_0, 0, 32;
    %jmp T_32.446;
T_32.447 ; for-loop exit label
    %jmp T_32.406;
T_32.406 ;
    %pop/vec4 1;
    %load/vec4 v0x55558ed5d0c0_0;
    %ret/vec4 0, 0, 1;  Assign to get_sw_write_next_value (store_vec4_to_lval)
    %end;
S_0x55558ed5d2d0 .scope autofunction.vec4.s1, "get_sw_write_update" "get_sw_write_update" 9 47, 9 47 0, S_0x55558ed58f30;
 .timescale 0 0;
; Variable get_sw_write_update is vec4 return value of scope S_0x55558ed5d2d0
v0x55558ed5d590_0 .var "update", 2 0;
v0x55558ed5d670_0 .var "write_done", 0 0;
v0x55558ed5d710_0 .var "write_enable", 0 0;
v0x55558ed5d7d0_0 .var "write_valid", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_wden.u_bit_field.get_sw_write_update ;
    %load/vec4 v0x55558ed5d7d0_0;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x55558ed5d590_0, 4, 1;
    %pushi/vec4 1, 0, 1;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x55558ed5d590_0, 4, 1;
    %pushi/vec4 1, 0, 1;
    %ix/load 4, 2, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x55558ed5d590_0, 4, 1;
    %load/vec4 v0x55558ed5d590_0;
    %parti/s 1, 0, 2;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_33.453, 9;
    %load/vec4 v0x55558ed5d590_0;
    %parti/s 1, 1, 2;
    %and;
T_33.453;
    %flag_set/vec4 8;
    %flag_get/vec4 8;
    %jmp/0 T_33.452, 8;
    %load/vec4 v0x55558ed5d590_0;
    %parti/s 1, 2, 3;
    %and;
T_33.452;
    %ret/vec4 0, 0, 1;  Assign to get_sw_write_update (store_vec4_to_lval)
    %end;
S_0x55558ed5f2f0 .scope generate, "g_wtocnt" "g_wtocnt" 8 239, 8 239 0, S_0x55558ecfd810;
 .timescale -8 -9;
S_0x55558ed5f480 .scope module, "u_bit_field" "rggen_bit_field" 8 245, 9 2 0, S_0x55558ed5f2f0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "i_clk";
    .port_info 1 /INPUT 1 "i_rst_n";
    .port_info 2 /INPUT 1 "i_sw_write_valid";
    .port_info 3 /INPUT 1 "i_sw_write_enable";
    .port_info 4 /INPUT 1 "i_sw_read_valid";
    .port_info 5 /INPUT 10 "i_sw_mask";
    .port_info 6 /INPUT 10 "i_sw_write_data";
    .port_info 7 /OUTPUT 10 "o_sw_read_data";
    .port_info 8 /OUTPUT 10 "o_sw_value";
    .port_info 9 /OUTPUT 1 "o_write_trigger";
    .port_info 10 /OUTPUT 1 "o_read_trigger";
    .port_info 11 /INPUT 1 "i_hw_write_enable";
    .port_info 12 /INPUT 10 "i_hw_write_data";
    .port_info 13 /INPUT 10 "i_hw_set";
    .port_info 14 /INPUT 10 "i_hw_clear";
    .port_info 15 /INPUT 10 "i_value";
    .port_info 16 /INPUT 10 "i_mask";
    .port_info 17 /OUTPUT 10 "o_value";
    .port_info 18 /OUTPUT 10 "o_value_unmasked";
P_0x55558ed5f630 .param/l "EXTERNAL_MASK" 0 9 17, C4<0>;
P_0x55558ed5f670 .param/l "EXTERNAL_READ_DATA" 0 9 16, C4<0>;
P_0x55558ed5f6b0 .param/l "HW_ACCESS" 0 9 12, C4<000>;
P_0x55558ed5f6f0 .param/l "HW_CLEAR_WIDTH" 0 9 14, +C4<00000000000000000000000000001010>;
P_0x55558ed5f730 .param/l "HW_SET_WIDTH" 0 9 13, +C4<00000000000000000000000000001010>;
P_0x55558ed5f770 .param/l "HW_WRITE_ENABLE_POLARITY" 0 9 11, C4<1>;
P_0x55558ed5f7b0 .param/l "INITIAL_VALUE" 0 9 4, C4<1111111111>;
P_0x55558ed5f7f0 .param/l "PRECEDENCE_ACCESS" 0 9 5, +C4<00000000000000000000000000000001>;
P_0x55558ed5f830 .param/l "STORAGE" 0 9 15, C4<1>;
P_0x55558ed5f870 .param/l "SW_READABLE" 1 9 41, C4<1>;
P_0x55558ed5f8b0 .param/l "SW_READ_ACTION" 0 9 6, +C4<00000000000000000000000000000001>;
P_0x55558ed5f8f0 .param/l "SW_READ_UPDATE" 1 9 42, C4<0>;
P_0x55558ed5f930 .param/l "SW_WRITABLE" 1 9 40, C4<1>;
P_0x55558ed5f970 .param/l "SW_WRITE_ACTION" 0 9 7, +C4<00000000000000000000000000000001>;
P_0x55558ed5f9b0 .param/l "SW_WRITE_CONTROL" 0 9 8, C4<0>;
P_0x55558ed5f9f0 .param/l "SW_WRITE_ENABLE_POLARITY" 0 9 10, C4<1>;
P_0x55558ed5fa30 .param/l "SW_WRITE_ONCE" 0 9 9, +C4<00000000000000000000000000000000>;
P_0x55558ed5fa70 .param/l "TRIGGER" 0 9 18, +C4<00000000000000000000000000000000>;
P_0x55558ed5fab0 .param/l "WIDTH" 0 9 3, +C4<00000000000000000000000000001010>;
L_0x55558ed961e0 .functor BUFZ 10, L_0x55558ed960f0, C4<0000000000>, C4<0000000000>, C4<0000000000>;
L_0x55558ed962a0 .functor BUFZ 10, v0x55558ed61650_0, C4<0000000000>, C4<0000000000>, C4<0000000000>;
L_0x55558ed96500 .functor BUFZ 10, v0x55558ed61650_0, C4<0000000000>, C4<0000000000>, C4<0000000000>;
L_0x55558ed96690 .functor BUFZ 10, v0x55558ed61650_0, C4<0000000000>, C4<0000000000>, C4<0000000000>;
v0x55558ed63f80_0 .net "i_clk", 0 0, v0x55558ed7f980_0;  alias, 1 drivers
L_0x7fc7583350b0 .functor BUFT 1, C4<0000000000>, C4<0>, C4<0>, C4<0>;
v0x55558ed64040_0 .net "i_hw_clear", 9 0, L_0x7fc7583350b0;  1 drivers
L_0x7fc758335068 .functor BUFT 1, C4<0000000000>, C4<0>, C4<0>, C4<0>;
v0x55558ed64120_0 .net "i_hw_set", 9 0, L_0x7fc758335068;  1 drivers
L_0x7fc758335020 .functor BUFT 1, C4<0000000000>, C4<0>, C4<0>, C4<0>;
v0x55558ed641e0_0 .net "i_hw_write_data", 9 0, L_0x7fc758335020;  1 drivers
L_0x7fc758334fd8 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x55558ed642c0_0 .net "i_hw_write_enable", 0 0, L_0x7fc758334fd8;  1 drivers
L_0x7fc758335140 .functor BUFT 1, C4<1111111111>, C4<0>, C4<0>, C4<0>;
v0x55558ed643d0_0 .net "i_mask", 9 0, L_0x7fc758335140;  1 drivers
v0x55558ed644b0_0 .net "i_rst_n", 0 0, L_0x55558ed37990;  alias, 1 drivers
v0x55558ed64550_0 .net "i_sw_mask", 9 0, L_0x55558ed96760;  1 drivers
v0x55558ed64630_0 .net "i_sw_read_valid", 0 0, L_0x55558ed814f0;  alias, 1 drivers
v0x55558ed64760_0 .net "i_sw_write_data", 9 0, L_0x55558ed96800;  1 drivers
L_0x7fc758334f90 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v0x55558ed64840_0 .net "i_sw_write_enable", 0 0, L_0x7fc758334f90;  1 drivers
v0x55558ed64900_0 .net "i_sw_write_valid", 0 0, L_0x55558ed80e60;  alias, 1 drivers
L_0x7fc7583350f8 .functor BUFT 1, C4<0000000000>, C4<0>, C4<0>, C4<0>;
v0x55558ed649a0_0 .net "i_value", 9 0, L_0x7fc7583350f8;  1 drivers
v0x55558ed64a80_0 .net "o_read_trigger", 0 0, L_0x55558ed96430;  1 drivers
v0x55558ed64b40_0 .net "o_sw_read_data", 9 0, L_0x55558ed961e0;  1 drivers
v0x55558ed64c20_0 .net "o_sw_value", 9 0, L_0x55558ed962a0;  1 drivers
v0x55558ed64d00_0 .net "o_value", 9 0, L_0x55558ed96500;  alias, 1 drivers
v0x55558ed64ed0_0 .net "o_value_unmasked", 9 0, L_0x55558ed96690;  1 drivers
v0x55558ed64fb0_0 .net "o_write_trigger", 0 0, L_0x55558ed96310;  1 drivers
L_0x7fc758334e70 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x55558ed65070_0 .net "w_hw_update", 0 0, L_0x7fc758334e70;  1 drivers
v0x55558ed65130_0 .net "w_read_data", 9 0, L_0x55558ed960f0;  1 drivers
v0x55558ed65210_0 .net "w_sw_update", 1 0, L_0x55558ed95ab0;  1 drivers
L_0x7fc758334eb8 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x55558ed652f0_0 .net "w_sw_write_done", 0 0, L_0x7fc758334eb8;  1 drivers
v0x55558ed653b0_0 .net "w_trigger", 1 0, L_0x55558ed95ee0;  1 drivers
v0x55558ed65490_0 .net "w_value", 9 0, v0x55558ed61650_0;  1 drivers
L_0x7fc758334de0 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x55558ed95ab0 .concat8 [ 1 1 0 0], L_0x7fc758334de0, L_0x55558ed95d20;
L_0x7fc758334f00 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x7fc758334f48 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x55558ed95ee0 .concat8 [ 1 1 0 0], L_0x7fc758334f00, L_0x7fc758334f48;
L_0x55558ed96310 .part L_0x55558ed95ee0, 0, 1;
L_0x55558ed96430 .part L_0x55558ed95ee0, 1, 1;
S_0x55558ed60660 .scope generate, "g_read_data" "g_read_data" 9 382, 9 382 0, S_0x55558ed5f480;
 .timescale 0 0;
L_0x55558ed960f0 .functor BUFZ 10, v0x55558ed61650_0, C4<0000000000>, C4<0000000000>, C4<0000000000>;
S_0x55558ed607f0 .scope generate, "g_read_trigger" "g_read_trigger" 9 304, 9 304 0, S_0x55558ed5f480;
 .timescale 0 0;
v0x55558ed609f0_0 .net/2u *"_ivl_0", 0 0, L_0x7fc758334f48;  1 drivers
S_0x55558ed60ad0 .scope generate, "g_sw_read_update" "g_sw_read_update" 9 245, 9 245 0, S_0x55558ed5f480;
 .timescale 0 0;
v0x55558ed60ce0_0 .net/2u *"_ivl_0", 0 0, L_0x7fc758334de0;  1 drivers
S_0x55558ed60dc0 .scope generate, "g_sw_write_done" "g_sw_write_done" 9 268, 9 268 0, S_0x55558ed5f480;
 .timescale 0 0;
S_0x55558ed60fa0 .scope generate, "g_sw_write_update" "g_sw_write_update" 9 252, 9 252 0, S_0x55558ed5f480;
 .timescale 0 0;
v0x55558ed611d0_0 .net *"_ivl_0", 9 0, L_0x55558ed95bd0;  1 drivers
L_0x7fc758334e28 .functor BUFT 1, C4<000000000>, C4<0>, C4<0>, C4<0>;
v0x55558ed612d0_0 .net *"_ivl_3", 8 0, L_0x7fc758334e28;  1 drivers
v0x55558ed613b0_0 .net *"_ivl_5", 0 0, L_0x55558ed95d20;  1 drivers
L_0x55558ed95bd0 .concat [ 1 9 0 0], L_0x55558ed80e60, L_0x7fc758334e28;
L_0x55558ed95d20 .ufunc/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_wtocnt.u_bit_field.get_sw_write_update, 1, L_0x55558ed95bd0, L_0x7fc758334f90, L_0x7fc758334eb8 (v0x55558ed63e50_0, v0x55558ed63d90_0, v0x55558ed63cf0_0) S_0x55558ed63950;
S_0x55558ed61470 .scope generate, "g_value" "g_value" 9 326, 9 326 0, S_0x55558ed5f480;
 .timescale 0 0;
v0x55558ed61650_0 .var "r_value", 9 0;
S_0x55558ed61750 .scope generate, "g_write_trigger" "g_write_trigger" 9 287, 9 287 0, S_0x55558ed5f480;
 .timescale 0 0;
v0x55558ed61930_0 .net/2u *"_ivl_0", 0 0, L_0x7fc758334f00;  1 drivers
S_0x55558ed61a30 .scope generate, "genblk3" "genblk3" 9 259, 9 259 0, S_0x55558ed5f480;
 .timescale 0 0;
S_0x55558ed61c10 .scope autofunction.vec4.s10, "get_hw_next_value" "get_hw_next_value" 9 177, 9 177 0, S_0x55558ed5f480;
 .timescale 0 0;
v0x55558ed61df0_0 .var "clear", 9 0;
v0x55558ed61ef0_0 .var "current_value", 9 0;
; Variable get_hw_next_value is vec4 return value of scope S_0x55558ed61c10
v0x55558ed620c0_0 .var/i "i", 31 0;
v0x55558ed621a0_0 .var "set", 9 0;
v0x55558ed62280 .array "set_clear", 1 0, 9 0;
v0x55558ed62340_0 .var "value", 9 0;
v0x55558ed62420_0 .var "write_data", 9 0;
v0x55558ed62500_0 .var "write_enable", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_wtocnt.u_bit_field.get_hw_next_value ;
    %pushi/vec4 0, 0, 10;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x55558ed62280, 4, 0;
    %pushi/vec4 0, 0, 10;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v0x55558ed62280, 4, 0;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558ed620c0_0, 0, 32;
T_34.454 ; Top of for-loop
    %load/vec4 v0x55558ed620c0_0;
    %cmpi/s 10, 0, 32;
	  %jmp/0xz T_34.455, 5;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x55558ed62280, 4;
    %load/vec4 v0x55558ed620c0_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_34.457, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x55558ed620c0_0;
    %store/vec4 v0x55558ed62340_0, 4, 1;
    %jmp T_34.458;
T_34.457 ;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %load/vec4a v0x55558ed62280, 4;
    %load/vec4 v0x55558ed620c0_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_34.459, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x55558ed620c0_0;
    %store/vec4 v0x55558ed62340_0, 4, 1;
    %jmp T_34.460;
T_34.459 ;
    %load/vec4 v0x55558ed61ef0_0;
    %load/vec4 v0x55558ed620c0_0;
    %part/s 1;
    %ix/getv/s 4, v0x55558ed620c0_0;
    %store/vec4 v0x55558ed62340_0, 4, 1;
T_34.460 ;
T_34.458 ;
T_34.456 ; for-loop step statement
    %load/vec4 v0x55558ed620c0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558ed620c0_0, 0, 32;
    %jmp T_34.454;
T_34.455 ; for-loop exit label
    %load/vec4 v0x55558ed62340_0;
    %ret/vec4 0, 0, 10;  Assign to get_hw_next_value (store_vec4_to_lval)
    %end;
S_0x55558ed62650 .scope autofunction.vec4.s1, "get_hw_update" "get_hw_update" 9 72, 9 72 0, S_0x55558ed5f480;
 .timescale 0 0;
v0x55558ed627e0_0 .var "clear", 9 0;
; Variable get_hw_update is vec4 return value of scope S_0x55558ed62650
v0x55558ed629a0_0 .var "set", 9 0;
v0x55558ed62a60_0 .var "update", 2 0;
v0x55558ed62b40_0 .var "write_enable", 0 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_wtocnt.u_bit_field.get_hw_update ;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x55558ed62a60_0, 4, 1;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x55558ed62a60_0, 4, 1;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 2, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x55558ed62a60_0, 4, 1;
    %load/vec4 v0x55558ed62a60_0;
    %parti/s 1, 0, 2;
    %flag_set/vec4 8;
    %jmp/1 T_35.462, 8;
    %load/vec4 v0x55558ed62a60_0;
    %parti/s 1, 1, 2;
    %flag_set/vec4 9;
    %flag_or 8, 9;
T_35.462;
    %flag_get/vec4 8;
    %jmp/1 T_35.461, 8;
    %load/vec4 v0x55558ed62a60_0;
    %parti/s 1, 2, 3;
    %or;
T_35.461;
    %ret/vec4 0, 0, 1;  Assign to get_hw_update (store_vec4_to_lval)
    %end;
S_0x55558ed62c50 .scope autofunction.vec4.s10, "get_sw_read_next_value" "get_sw_read_next_value" 9 86, 9 86 0, S_0x55558ed5f480;
 .timescale 0 0;
v0x55558ed62e30_0 .var "current_value", 9 0;
; Variable get_sw_read_next_value is vec4 return value of scope S_0x55558ed62c50
v0x55558ed63010_0 .var "mask", 9 0;
v0x55558ed630d0_0 .var "value", 9 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_wtocnt.u_bit_field.get_sw_read_next_value ;
    %pushi/vec4 1, 0, 32;
    %dup/vec4;
    %pushi/vec4 2, 0, 32;
    %cmp/u;
    %jmp/1 T_36.463, 6;
    %dup/vec4;
    %pushi/vec4 3, 0, 32;
    %cmp/u;
    %jmp/1 T_36.464, 6;
    %load/vec4 v0x55558ed62e30_0;
    %store/vec4 v0x55558ed630d0_0, 0, 10;
    %jmp T_36.466;
T_36.463 ;
    %load/vec4 v0x55558ed63010_0;
    %cmpi/ne 0, 0, 10;
    %flag_mov 8, 4;
    %jmp/0 T_36.467, 8;
    %pushi/vec4 0, 0, 10;
    %jmp/1 T_36.468, 8;
T_36.467 ; End of true expr.
    %load/vec4 v0x55558ed62e30_0;
    %jmp/0 T_36.468, 8;
 ; End of false expr.
    %blend;
T_36.468;
    %store/vec4 v0x55558ed630d0_0, 0, 10;
    %jmp T_36.466;
T_36.464 ;
    %load/vec4 v0x55558ed63010_0;
    %cmpi/ne 0, 0, 10;
    %flag_mov 8, 4;
    %jmp/0 T_36.469, 8;
    %pushi/vec4 1023, 0, 10;
    %jmp/1 T_36.470, 8;
T_36.469 ; End of true expr.
    %load/vec4 v0x55558ed62e30_0;
    %jmp/0 T_36.470, 8;
 ; End of false expr.
    %blend;
T_36.470;
    %store/vec4 v0x55558ed630d0_0, 0, 10;
    %jmp T_36.466;
T_36.466 ;
    %pop/vec4 1;
    %load/vec4 v0x55558ed630d0_0;
    %ret/vec4 0, 0, 10;  Assign to get_sw_read_next_value (store_vec4_to_lval)
    %end;
S_0x55558ed631b0 .scope autofunction.vec4.s10, "get_sw_write_next_value" "get_sw_write_next_value" 9 101, 9 101 0, S_0x55558ed5f480;
 .timescale 0 0;
v0x55558ed63390_0 .var "current_value", 9 0;
; Variable get_sw_write_next_value is vec4 return value of scope S_0x55558ed631b0
v0x55558ed63570_0 .var/i "i", 31 0;
v0x55558ed63660_0 .var "mask", 9 0;
v0x55558ed63740_0 .var "value", 9 0;
v0x55558ed63870_0 .var "write_data", 9 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_wtocnt.u_bit_field.get_sw_write_next_value ;
    %load/vec4 v0x55558ed63390_0;
    %store/vec4 v0x55558ed63740_0, 0, 10;
    %pushi/vec4 1, 0, 32;
    %dup/vec4;
    %pushi/vec4 1, 0, 32;
    %cmp/u;
    %jmp/1 T_37.471, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 32;
    %cmp/u;
    %jmp/1 T_37.472, 6;
    %dup/vec4;
    %pushi/vec4 3, 0, 32;
    %cmp/u;
    %jmp/1 T_37.473, 6;
    %dup/vec4;
    %pushi/vec4 4, 0, 32;
    %cmp/u;
    %jmp/1 T_37.474, 6;
    %dup/vec4;
    %pushi/vec4 5, 0, 32;
    %cmp/u;
    %jmp/1 T_37.475, 6;
    %dup/vec4;
    %pushi/vec4 6, 0, 32;
    %cmp/u;
    %jmp/1 T_37.476, 6;
    %dup/vec4;
    %pushi/vec4 7, 0, 32;
    %cmp/u;
    %jmp/1 T_37.477, 6;
    %dup/vec4;
    %pushi/vec4 8, 0, 32;
    %cmp/u;
    %jmp/1 T_37.478, 6;
    %dup/vec4;
    %pushi/vec4 9, 0, 32;
    %cmp/u;
    %jmp/1 T_37.479, 6;
    %jmp T_37.481;
T_37.471 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558ed63570_0, 0, 32;
T_37.482 ; Top of for-loop
    %load/vec4 v0x55558ed63570_0;
    %cmpi/s 10, 0, 32;
	  %jmp/0xz T_37.483, 5;
    %load/vec4 v0x55558ed63660_0;
    %load/vec4 v0x55558ed63570_0;
    %part/s 1;
    %flag_set/vec4 8;
    %jmp/0xz  T_37.485, 8;
    %load/vec4 v0x55558ed63870_0;
    %load/vec4 v0x55558ed63570_0;
    %part/s 1;
    %ix/getv/s 4, v0x55558ed63570_0;
    %store/vec4 v0x55558ed63740_0, 4, 1;
T_37.485 ;
T_37.484 ; for-loop step statement
    %load/vec4 v0x55558ed63570_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558ed63570_0, 0, 32;
    %jmp T_37.482;
T_37.483 ; for-loop exit label
    %jmp T_37.481;
T_37.472 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558ed63570_0, 0, 32;
T_37.487 ; Top of for-loop
    %load/vec4 v0x55558ed63570_0;
    %cmpi/s 10, 0, 32;
	  %jmp/0xz T_37.488, 5;
    %load/vec4 v0x55558ed63660_0;
    %load/vec4 v0x55558ed63570_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_37.492, 9;
    %load/vec4 v0x55558ed63870_0;
    %load/vec4 v0x55558ed63570_0;
    %part/s 1;
    %nor/r;
    %and;
T_37.492;
    %flag_set/vec4 8;
    %jmp/0xz  T_37.490, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x55558ed63570_0;
    %store/vec4 v0x55558ed63740_0, 4, 1;
T_37.490 ;
T_37.489 ; for-loop step statement
    %load/vec4 v0x55558ed63570_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558ed63570_0, 0, 32;
    %jmp T_37.487;
T_37.488 ; for-loop exit label
    %jmp T_37.481;
T_37.473 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558ed63570_0, 0, 32;
T_37.493 ; Top of for-loop
    %load/vec4 v0x55558ed63570_0;
    %cmpi/s 10, 0, 32;
	  %jmp/0xz T_37.494, 5;
    %load/vec4 v0x55558ed63660_0;
    %load/vec4 v0x55558ed63570_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_37.498, 9;
    %load/vec4 v0x55558ed63870_0;
    %load/vec4 v0x55558ed63570_0;
    %part/s 1;
    %and;
T_37.498;
    %flag_set/vec4 8;
    %jmp/0xz  T_37.496, 8;
    %pushi/vec4 0, 0, 1;
    %ix/getv/s 4, v0x55558ed63570_0;
    %store/vec4 v0x55558ed63740_0, 4, 1;
T_37.496 ;
T_37.495 ; for-loop step statement
    %load/vec4 v0x55558ed63570_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558ed63570_0, 0, 32;
    %jmp T_37.493;
T_37.494 ; for-loop exit label
    %jmp T_37.481;
T_37.474 ;
    %load/vec4 v0x55558ed63660_0;
    %cmpi/ne 0, 0, 10;
    %jmp/0xz  T_37.499, 4;
    %pushi/vec4 0, 0, 10;
    %store/vec4 v0x55558ed63740_0, 0, 10;
T_37.499 ;
    %jmp T_37.481;
T_37.475 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558ed63570_0, 0, 32;
T_37.501 ; Top of for-loop
    %load/vec4 v0x55558ed63570_0;
    %cmpi/s 10, 0, 32;
	  %jmp/0xz T_37.502, 5;
    %load/vec4 v0x55558ed63660_0;
    %load/vec4 v0x55558ed63570_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_37.506, 9;
    %load/vec4 v0x55558ed63870_0;
    %load/vec4 v0x55558ed63570_0;
    %part/s 1;
    %nor/r;
    %and;
T_37.506;
    %flag_set/vec4 8;
    %jmp/0xz  T_37.504, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x55558ed63570_0;
    %store/vec4 v0x55558ed63740_0, 4, 1;
T_37.504 ;
T_37.503 ; for-loop step statement
    %load/vec4 v0x55558ed63570_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558ed63570_0, 0, 32;
    %jmp T_37.501;
T_37.502 ; for-loop exit label
    %jmp T_37.481;
T_37.476 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558ed63570_0, 0, 32;
T_37.507 ; Top of for-loop
    %load/vec4 v0x55558ed63570_0;
    %cmpi/s 10, 0, 32;
	  %jmp/0xz T_37.508, 5;
    %load/vec4 v0x55558ed63660_0;
    %load/vec4 v0x55558ed63570_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_37.512, 9;
    %load/vec4 v0x55558ed63870_0;
    %load/vec4 v0x55558ed63570_0;
    %part/s 1;
    %and;
T_37.512;
    %flag_set/vec4 8;
    %jmp/0xz  T_37.510, 8;
    %pushi/vec4 1, 0, 1;
    %ix/getv/s 4, v0x55558ed63570_0;
    %store/vec4 v0x55558ed63740_0, 4, 1;
T_37.510 ;
T_37.509 ; for-loop step statement
    %load/vec4 v0x55558ed63570_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558ed63570_0, 0, 32;
    %jmp T_37.507;
T_37.508 ; for-loop exit label
    %jmp T_37.481;
T_37.477 ;
    %load/vec4 v0x55558ed63660_0;
    %cmpi/ne 0, 0, 10;
    %jmp/0xz  T_37.513, 4;
    %pushi/vec4 1023, 0, 10;
    %store/vec4 v0x55558ed63740_0, 0, 10;
T_37.513 ;
    %jmp T_37.481;
T_37.478 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558ed63570_0, 0, 32;
T_37.515 ; Top of for-loop
    %load/vec4 v0x55558ed63570_0;
    %cmpi/s 10, 0, 32;
	  %jmp/0xz T_37.516, 5;
    %load/vec4 v0x55558ed63660_0;
    %load/vec4 v0x55558ed63570_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_37.520, 9;
    %load/vec4 v0x55558ed63870_0;
    %load/vec4 v0x55558ed63570_0;
    %part/s 1;
    %nor/r;
    %and;
T_37.520;
    %flag_set/vec4 8;
    %jmp/0xz  T_37.518, 8;
    %load/vec4 v0x55558ed63390_0;
    %load/vec4 v0x55558ed63570_0;
    %part/s 1;
    %inv;
    %ix/getv/s 4, v0x55558ed63570_0;
    %store/vec4 v0x55558ed63740_0, 4, 1;
T_37.518 ;
T_37.517 ; for-loop step statement
    %load/vec4 v0x55558ed63570_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558ed63570_0, 0, 32;
    %jmp T_37.515;
T_37.516 ; for-loop exit label
    %jmp T_37.481;
T_37.479 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558ed63570_0, 0, 32;
T_37.521 ; Top of for-loop
    %load/vec4 v0x55558ed63570_0;
    %cmpi/s 10, 0, 32;
	  %jmp/0xz T_37.522, 5;
    %load/vec4 v0x55558ed63660_0;
    %load/vec4 v0x55558ed63570_0;
    %part/s 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_37.526, 9;
    %load/vec4 v0x55558ed63870_0;
    %load/vec4 v0x55558ed63570_0;
    %part/s 1;
    %and;
T_37.526;
    %flag_set/vec4 8;
    %jmp/0xz  T_37.524, 8;
    %load/vec4 v0x55558ed63390_0;
    %load/vec4 v0x55558ed63570_0;
    %part/s 1;
    %inv;
    %ix/getv/s 4, v0x55558ed63570_0;
    %store/vec4 v0x55558ed63740_0, 4, 1;
T_37.524 ;
T_37.523 ; for-loop step statement
    %load/vec4 v0x55558ed63570_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558ed63570_0, 0, 32;
    %jmp T_37.521;
T_37.522 ; for-loop exit label
    %jmp T_37.481;
T_37.481 ;
    %pop/vec4 1;
    %load/vec4 v0x55558ed63740_0;
    %ret/vec4 0, 0, 10;  Assign to get_sw_write_next_value (store_vec4_to_lval)
    %end;
S_0x55558ed63950 .scope autofunction.vec4.s1, "get_sw_write_update" "get_sw_write_update" 9 47, 9 47 0, S_0x55558ed5f480;
 .timescale 0 0;
; Variable get_sw_write_update is vec4 return value of scope S_0x55558ed63950
v0x55558ed63c10_0 .var "update", 2 0;
v0x55558ed63cf0_0 .var "write_done", 0 0;
v0x55558ed63d90_0 .var "write_enable", 0 0;
v0x55558ed63e50_0 .var "write_valid", 9 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_wtocnt.u_bit_field.get_sw_write_update ;
    %load/vec4 v0x55558ed63e50_0;
    %pad/u 1;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x55558ed63c10_0, 4, 1;
    %pushi/vec4 1, 0, 1;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x55558ed63c10_0, 4, 1;
    %pushi/vec4 1, 0, 1;
    %ix/load 4, 2, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v0x55558ed63c10_0, 4, 1;
    %load/vec4 v0x55558ed63c10_0;
    %parti/s 1, 0, 2;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_38.528, 9;
    %load/vec4 v0x55558ed63c10_0;
    %parti/s 1, 1, 2;
    %and;
T_38.528;
    %flag_set/vec4 8;
    %flag_get/vec4 8;
    %jmp/0 T_38.527, 8;
    %load/vec4 v0x55558ed63c10_0;
    %parti/s 1, 2, 3;
    %and;
T_38.527;
    %ret/vec4 0, 0, 1;  Assign to get_sw_write_update (store_vec4_to_lval)
    %end;
S_0x55558ed65870 .scope module, "u_register" "rggen_default_register" 8 97, 10 1 0, S_0x55558ecfd810;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "i_clk";
    .port_info 1 /INPUT 1 "i_rst_n";
    .port_info 2 /INPUT 1 "i_register_valid";
    .port_info 3 /INPUT 2 "i_register_access";
    .port_info 4 /INPUT 3 "i_register_address";
    .port_info 5 /INPUT 32 "i_register_write_data";
    .port_info 6 /INPUT 32 "i_register_strobe";
    .port_info 7 /OUTPUT 1 "o_register_active";
    .port_info 8 /OUTPUT 1 "o_register_ready";
    .port_info 9 /OUTPUT 2 "o_register_status";
    .port_info 10 /OUTPUT 32 "o_register_read_data";
    .port_info 11 /OUTPUT 32 "o_register_value";
    .port_info 12 /OUTPUT 1 "o_bit_field_write_valid";
    .port_info 13 /OUTPUT 1 "o_bit_field_read_valid";
    .port_info 14 /OUTPUT 32 "o_bit_field_mask";
    .port_info 15 /OUTPUT 32 "o_bit_field_write_data";
    .port_info 16 /INPUT 32 "i_bit_field_read_data";
    .port_info 17 /INPUT 32 "i_bit_field_value";
P_0x55558ed65a00 .param/l "ADDRESS_WIDTH" 0 10 4, +C4<00000000000000000000000000000011>;
P_0x55558ed65a40 .param/l "BUS_WIDTH" 0 10 6, +C4<00000000000000000000000000100000>;
P_0x55558ed65a80 .param/l "DATA_WIDTH" 0 10 7, +C4<00000000000000000000000000100000>;
P_0x55558ed65ac0 .param/l "OFFSET_ADDRESS" 0 10 5, C4<000>;
P_0x55558ed65b00 .param/l "READABLE" 0 10 2, +C4<00000000000000000000000000000001>;
P_0x55558ed65b40 .param/l "WRITABLE" 0 10 3, +C4<00000000000000000000000000000001>;
v0x55558ed66a30_0 .net "i_bit_field_read_data", 31 0, L_0x55558ed97d20;  alias, 1 drivers
v0x55558ed6d190_0 .net "i_bit_field_value", 31 0, L_0x55558ed97fa0;  alias, 1 drivers
v0x55558ed6d250_0 .net "i_clk", 0 0, v0x55558ed7f980_0;  alias, 1 drivers
v0x55558ed6d2f0_0 .net "i_register_access", 1 0, L_0x55558ed9c200;  alias, 1 drivers
v0x55558ed6d390_0 .net "i_register_address", 2 0, L_0x55558ed9c270;  alias, 1 drivers
v0x55558ed6d480_0 .net "i_register_strobe", 31 0, L_0x55558ed9c380;  alias, 1 drivers
v0x55558ed6d540_0 .net "i_register_valid", 0 0, L_0x55558ed9c190;  alias, 1 drivers
v0x55558ed6d5e0_0 .net "i_register_write_data", 31 0, L_0x55558ed9c310;  alias, 1 drivers
v0x55558ed6d6a0_0 .net "i_rst_n", 0 0, L_0x55558ed37990;  alias, 1 drivers
v0x55558ed6d740_0 .net "o_bit_field_mask", 31 0, L_0x55558ed9fd70;  alias, 1 drivers
v0x55558ed6d800_0 .net "o_bit_field_read_valid", 0 0, L_0x55558ed814f0;  alias, 1 drivers
v0x55558ed6d8a0_0 .net "o_bit_field_write_data", 31 0, L_0x55558ed81be0;  alias, 1 drivers
v0x55558ed6d940_0 .net "o_bit_field_write_valid", 0 0, L_0x55558ed80e60;  alias, 1 drivers
v0x55558ed6d9e0_0 .net "o_register_active", 0 0, L_0x55558ed81920;  1 drivers
v0x55558ed6da80_0 .net "o_register_read_data", 31 0, L_0x55558ed81ad0;  1 drivers
v0x55558ed6db50_0 .net "o_register_ready", 0 0, L_0x55558ed81990;  1 drivers
v0x55558ed6dc20_0 .net "o_register_status", 1 0, L_0x7fc7583340f0;  1 drivers
v0x55558ed6dcf0_0 .net "o_register_value", 31 0, L_0x55558ed81c50;  1 drivers
S_0x55558ed660c0 .scope module, "u_register_common" "rggen_register_common" 10 35, 11 2 0, S_0x55558ed65870;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "i_clk";
    .port_info 1 /INPUT 1 "i_rst_n";
    .port_info 2 /INPUT 1 "i_register_valid";
    .port_info 3 /INPUT 2 "i_register_access";
    .port_info 4 /INPUT 3 "i_register_address";
    .port_info 5 /INPUT 32 "i_register_write_data";
    .port_info 6 /INPUT 32 "i_register_strobe";
    .port_info 7 /OUTPUT 1 "o_register_active";
    .port_info 8 /OUTPUT 1 "o_register_ready";
    .port_info 9 /OUTPUT 2 "o_register_status";
    .port_info 10 /OUTPUT 32 "o_register_read_data";
    .port_info 11 /OUTPUT 32 "o_register_value";
    .port_info 12 /INPUT 1 "i_additional_match";
    .port_info 13 /OUTPUT 1 "o_bit_field_write_valid";
    .port_info 14 /OUTPUT 1 "o_bit_field_read_valid";
    .port_info 15 /OUTPUT 32 "o_bit_field_mask";
    .port_info 16 /OUTPUT 32 "o_bit_field_write_data";
    .port_info 17 /INPUT 32 "i_bit_field_read_data";
    .port_info 18 /INPUT 32 "i_bit_field_value";
P_0x55558ed662a0 .param/l "ADDRESS_WIDTH" 0 11 5, +C4<00000000000000000000000000000011>;
P_0x55558ed662e0 .param/l "BUS_BYTE_WIDTH" 1 11 32, +C4<00000000000000000000000000000100>;
P_0x55558ed66320 .param/l "BUS_WIDTH" 0 11 7, +C4<00000000000000000000000000100000>;
P_0x55558ed66360 .param/l "DATA_BYTE_WIDTH" 1 11 33, +C4<00000000000000000000000000000100>;
P_0x55558ed663a0 .param/l "DATA_WIDTH" 0 11 8, +C4<00000000000000000000000000100000>;
P_0x55558ed663e0 .param/l "OFFSET_ADDRESS" 0 11 6, C4<000>;
P_0x55558ed66420 .param/l "READABLE" 0 11 3, +C4<00000000000000000000000000000001>;
P_0x55558ed66460 .param/l "USE_ADDITIONAL_MATCH" 0 11 9, C4<0>;
P_0x55558ed664a0 .param/l "WORDS" 1 11 31, +C4<00000000000000000000000000000001>;
P_0x55558ed664e0 .param/l "WRITABLE" 0 11 4, +C4<00000000000000000000000000000001>;
L_0x7fc758334180 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x55558ed80d10 .functor OR 1, L_0x55558ed81650, L_0x7fc758334180, C4<0>, C4<0>;
L_0x55558ed80d80 .functor AND 1, L_0x55558ed80d10, L_0x55558ed81710, C4<1>, C4<1>;
L_0x7fc758334138 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x7fc7583341c8 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x55558ed80df0 .functor AND 1, L_0x7fc758334138, L_0x7fc7583341c8, C4<1>, C4<1>;
L_0x55558ed80e60 .functor OR 1, L_0x55558ed80d80, L_0x55558ed80df0, C4<0>, C4<0>;
L_0x55558ed80fa0 .functor OR 1, L_0x55558ed81650, L_0x7fc758334180, C4<0>, C4<0>;
L_0x55558ed811a0 .functor AND 1, L_0x55558ed80fa0, L_0x55558ed810b0, C4<1>, C4<1>;
L_0x55558ed813e0 .functor AND 1, L_0x7fc758334138, L_0x55558ed812f0, C4<1>, C4<1>;
L_0x55558ed814f0 .functor OR 1, L_0x55558ed811a0, L_0x55558ed813e0, C4<0>, C4<0>;
L_0x55558ed81650 .functor AND 1, L_0x55558ed9c190, L_0x55558ed80ca0, C4<1>, C4<1>;
L_0x55558ed81850 .functor BUFZ 32, L_0x55558ed9c310, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0x55558ed81920 .functor BUFZ 1, L_0x55558ed80ca0, C4<0>, C4<0>, C4<0>;
L_0x55558ed81ad0 .functor BUFZ 32, L_0x55558ed81d10, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0x55558ed81c50 .functor BUFZ 32, L_0x55558ed97fa0, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0x55558ed9fd70 .functor BUFT 32, L_0x55558ed817b0, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0x55558ed81be0 .functor BUFT 32, L_0x55558ed81850, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
v0x55558ed6acf0_0 .net *"_ivl_1", 0 0, L_0x55558ed80d10;  1 drivers
v0x55558ed6adb0_0 .net *"_ivl_11", 0 0, L_0x55558ed80fa0;  1 drivers
v0x55558ed6ae70_0 .net *"_ivl_14", 0 0, L_0x55558ed810b0;  1 drivers
v0x55558ed6af40_0 .net *"_ivl_16", 0 0, L_0x55558ed811a0;  1 drivers
v0x55558ed6b000_0 .net *"_ivl_19", 0 0, L_0x55558ed812f0;  1 drivers
v0x55558ed6b110_0 .net *"_ivl_21", 0 0, L_0x55558ed813e0;  1 drivers
v0x55558ed6b1d0_0 .net *"_ivl_4", 0 0, L_0x55558ed80d80;  1 drivers
v0x55558ed6b290_0 .net *"_ivl_7", 0 0, L_0x55558ed80df0;  1 drivers
L_0x7fc7583342a0 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v0x55558ed6b350_0 .net "i_additional_match", 0 0, L_0x7fc7583342a0;  1 drivers
v0x55558ed6b3f0_0 .net "i_bit_field_read_data", 31 0, L_0x55558ed97d20;  alias, 1 drivers
v0x55558ed6b4c0_0 .net "i_bit_field_value", 31 0, L_0x55558ed97fa0;  alias, 1 drivers
v0x55558ed6b580_0 .net "i_clk", 0 0, v0x55558ed7f980_0;  alias, 1 drivers
v0x55558ed6b620_0 .net "i_register_access", 1 0, L_0x55558ed9c200;  alias, 1 drivers
v0x55558ed6b770_0 .net "i_register_address", 2 0, L_0x55558ed9c270;  alias, 1 drivers
v0x55558ed6b8c0_0 .net "i_register_strobe", 31 0, L_0x55558ed9c380;  alias, 1 drivers
v0x55558ed6b980_0 .net "i_register_valid", 0 0, L_0x55558ed9c190;  alias, 1 drivers
v0x55558ed6ba20_0 .net "i_register_write_data", 31 0, L_0x55558ed9c310;  alias, 1 drivers
v0x55558ed6bc40_0 .net "i_rst_n", 0 0, L_0x55558ed37990;  alias, 1 drivers
v0x55558ed6bce0_0 .net "o_bit_field_mask", 31 0, L_0x55558ed9fd70;  alias, 1 drivers
v0x55558ed6bdc0_0 .net "o_bit_field_read_valid", 0 0, L_0x55558ed814f0;  alias, 1 drivers
v0x55558ed6be60_0 .net "o_bit_field_write_data", 31 0, L_0x55558ed81be0;  alias, 1 drivers
v0x55558ed6bf40_0 .net "o_bit_field_write_valid", 0 0, L_0x55558ed80e60;  alias, 1 drivers
v0x55558ed6bfe0_0 .net "o_register_active", 0 0, L_0x55558ed81920;  alias, 1 drivers
v0x55558ed6c0a0_0 .net "o_register_read_data", 31 0, L_0x55558ed81ad0;  alias, 1 drivers
v0x55558ed6c180_0 .net "o_register_ready", 0 0, L_0x55558ed81990;  alias, 1 drivers
v0x55558ed6c240_0 .net "o_register_status", 1 0, L_0x7fc7583340f0;  alias, 1 drivers
v0x55558ed6c320_0 .net "o_register_value", 31 0, L_0x55558ed81c50;  alias, 1 drivers
v0x55558ed6c400_0 .net "w_active", 0 0, L_0x55558ed80ca0;  1 drivers
v0x55558ed6c4c0_0 .net "w_backdoor_valid", 0 0, L_0x7fc758334138;  1 drivers
v0x55558ed6c580_0 .net "w_frontdoor_valid", 0 0, L_0x55558ed81650;  1 drivers
v0x55558ed6c640 .array "w_mask", 1 0;
v0x55558ed6c640_0 .net v0x55558ed6c640 0, 31 0, L_0x55558ed817b0; 1 drivers
L_0x7fc758334210 .functor BUFT 1, C4<00000000000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x55558ed6c640_1 .net v0x55558ed6c640 1, 31 0, L_0x7fc758334210; 1 drivers
v0x55558ed6c760_0 .net "w_match", 0 0, L_0x55558ed80b90;  1 drivers
v0x55558ed6c870_0 .net "w_pending_valid", 0 0, L_0x7fc758334180;  1 drivers
v0x55558ed6cb40_0 .net "w_read_data", 31 0, L_0x55558ed81d10;  1 drivers
v0x55558ed6cc00 .array "w_write", 1 0;
v0x55558ed6cc00_0 .net v0x55558ed6cc00 0, 0 0, L_0x55558ed81710; 1 drivers
v0x55558ed6cc00_1 .net v0x55558ed6cc00 1, 0 0, L_0x7fc7583341c8; 1 drivers
v0x55558ed6cce0 .array "w_write_data", 1 0;
v0x55558ed6cce0_0 .net v0x55558ed6cce0 0, 31 0, L_0x55558ed81850; 1 drivers
L_0x7fc758334258 .functor BUFT 1, C4<00000000000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x55558ed6cce0_1 .net v0x55558ed6cce0 1, 31 0, L_0x7fc758334258; 1 drivers
L_0x55558ed810b0 .reduce/nor L_0x55558ed81710;
L_0x55558ed812f0 .reduce/nor L_0x7fc7583341c8;
L_0x55558ed81710 .part L_0x55558ed9c200, 0, 1;
L_0x55558ed817b0 .ufunc/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.u_register.u_register_common.get_mask, 32, L_0x55558ed80b90, L_0x55558ed9c380 (v0x55558ed6a1a0_0, v0x55558ed6a290_0) S_0x55558ed69e00;
L_0x55558ed81990 .reduce/nor L_0x7fc758334138;
S_0x55558ed66d40 .scope autofunction.vec4.s3, "calc_start_address" "calc_start_address" 11 67, 11 67 0, S_0x55558ed660c0;
 .timescale 0 0;
; Variable calc_start_address is vec4 return value of scope S_0x55558ed66d40
v0x55558ed67020_0 .var/i "delta", 31 0;
v0x55558ed67100_0 .var/i "index", 31 0;
v0x55558ed671f0_0 .var "offset_address", 2 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.u_register.u_register_common.calc_start_address ;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0x55558ed671f0_0, 0, 3;
    %load/vec4 v0x55558ed67100_0;
    %muli 4, 0, 32;
    %store/vec4 v0x55558ed67020_0, 0, 32;
    %load/vec4 v0x55558ed671f0_0;
    %load/vec4 v0x55558ed67020_0;
    %parti/s 3, 0, 2;
    %add;
    %ret/vec4 0, 0, 3;  Assign to calc_start_address (store_vec4_to_lval)
    %end;
S_0x55558ed672d0 .scope generate, "g_decoder[0]" "g_decoder[0]" 11 42, 11 42 0, S_0x55558ed660c0;
 .timescale 0 0;
P_0x55558ed674f0 .param/l "g_i" 1 11 42, +C4<00>;
S_0x55558ed675b0 .scope module, "u_decoder" "rggen_address_decoder" 11 51, 12 1 0, S_0x55558ed672d0;
 .timescale 0 0;
    .port_info 0 /INPUT 3 "i_address";
    .port_info 1 /INPUT 2 "i_access";
    .port_info 2 /INPUT 1 "i_additional_match";
    .port_info 3 /OUTPUT 1 "o_match";
P_0x55558ed67790 .param/l "ACCESS_BIT" 1 12 16, +C4<00000000000000000000000000000000>;
P_0x55558ed677d0 .param/l "BEGIN_ADDRESS" 1 12 17, C4<0>;
P_0x55558ed67810 .param/l "BEGIN_ADDRESS_ALL_0" 1 12 19, C4<1>;
P_0x55558ed67850 .param/l "BUS_WIDTH" 0 12 5, +C4<00000000000000000000000000100000>;
P_0x55558ed67890 .param/l "BYTE_SIZE" 0 12 7, +C4<00000000000000000000000000000100>;
P_0x55558ed678d0 .param/l "END_ADDRESS" 1 12 18, C4<0>;
P_0x55558ed67910 .param/l "END_ADDRESS_ALL_1" 1 12 20, C4<0>;
P_0x55558ed67950 .param/l "LSB" 1 12 15, +C4<000000000000000000000000000000010>;
P_0x55558ed67990 .param/l "READABLE" 0 12 2, +C4<00000000000000000000000000000001>;
P_0x55558ed679d0 .param/l "START_ADDRESS" 0 12 6, C4<000>;
P_0x55558ed67a10 .param/l "USE_ADDITIONAL_MATCH" 0 12 8, C4<0>;
P_0x55558ed67a50 .param/l "WIDTH" 0 12 4, +C4<00000000000000000000000000000011>;
P_0x55558ed67a90 .param/l "WRITABLE" 0 12 3, +C4<00000000000000000000000000000001>;
L_0x7fc758334060 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
L_0x55558ed80a80 .functor AND 1, L_0x55558ed80970, L_0x7fc758334060, C4<1>, C4<1>;
L_0x7fc7583340a8 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
L_0x55558ed80b90 .functor AND 1, L_0x55558ed80a80, L_0x7fc7583340a8, C4<1>, C4<1>;
v0x55558ed69550_0 .net *"_ivl_2", 0 0, L_0x55558ed80a80;  1 drivers
v0x55558ed69630_0 .net "i_access", 1 0, L_0x55558ed9c200;  alias, 1 drivers
v0x55558ed696f0_0 .net "i_additional_match", 0 0, L_0x7fc7583342a0;  alias, 1 drivers
v0x55558ed69790_0 .net "i_address", 2 0, L_0x55558ed9c270;  alias, 1 drivers
v0x55558ed69850_0 .net "o_match", 0 0, L_0x55558ed80b90;  alias, 1 drivers
v0x55558ed69960_0 .net "w_access_match", 0 0, L_0x7fc758334060;  1 drivers
v0x55558ed69a20_0 .net "w_additional_match", 0 0, L_0x7fc7583340a8;  1 drivers
v0x55558ed69ae0_0 .net "w_address_match", 0 0, L_0x55558ed80970;  1 drivers
L_0x55558ed808d0 .part L_0x55558ed9c270, 2, 1;
S_0x55558ed68150 .scope autofunction.vec4.s1, "calc_end_address" "calc_end_address" 12 38, 12 38 0, S_0x55558ed675b0;
 .timescale 0 0;
v0x55558ed68330_0 .var "address", 2 0;
v0x55558ed68430_0 .var/i "byte_size", 31 0;
; Variable calc_end_address is vec4 return value of scope S_0x55558ed68150
v0x55558ed68600_0 .var/i "delta", 31 0;
v0x55558ed686e0_0 .var "start_address", 2 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.u_register.u_register_common.g_decoder\x5B0\x5D.u_decoder.calc_end_address ;
    %load/vec4 v0x55558ed68430_0;
    %subi 1, 0, 32;
    %store/vec4 v0x55558ed68600_0, 0, 32;
    %load/vec4 v0x55558ed686e0_0;
    %load/vec4 v0x55558ed68600_0;
    %parti/s 3, 0, 2;
    %add;
    %store/vec4 v0x55558ed68330_0, 0, 3;
    %load/vec4 v0x55558ed68330_0;
    %parti/s 1, 2, 3;
    %ret/vec4 0, 0, 1;  Assign to calc_end_address (store_vec4_to_lval)
    %end;
S_0x55558ed68810 .scope autofunction.vec4.u32, "clog2" "clog2" 12 22, 12 22 0, S_0x55558ed675b0;
 .timescale 0 0;
; Variable clog2 is vec4 return value of scope S_0x55558ed68810
v0x55558ed68af0_0 .var/i "n", 31 0;
v0x55558ed68bd0_0 .var/i "result", 31 0;
v0x55558ed68c90_0 .var/i "value", 31 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.u_register.u_register_common.g_decoder\x5B0\x5D.u_decoder.clog2 ;
    %load/vec4 v0x55558ed68af0_0;
    %subi 1, 0, 32;
    %store/vec4 v0x55558ed68c90_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558ed68bd0_0, 0, 32;
T_41.529 ;
    %load/vec4 v0x55558ed68c90_0;
    %cmpi/s 0, 0, 32;
    %flag_or 5, 4; GT is !LE
    %flag_inv 5;
    %jmp/0xz T_41.530, 5;
    %load/vec4 v0x55558ed68bd0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558ed68bd0_0, 0, 32;
    %load/vec4 v0x55558ed68c90_0;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %shiftr 4;
    %store/vec4 v0x55558ed68c90_0, 0, 32;
    %jmp T_41.529;
T_41.530 ;
    %load/vec4 v0x55558ed68bd0_0;
    %ret/vec4 0, 0, 32;  Assign to clog2 (store_vec4_to_lval)
    %end;
S_0x55558ed68d70 .scope generate, "g_access_match" "g_access_match" 12 76, 12 76 0, S_0x55558ed675b0;
 .timescale 0 0;
S_0x55558ed68f80 .scope generate, "g_additional_match" "g_additional_match" 12 86, 12 86 0, S_0x55558ed675b0;
 .timescale 0 0;
S_0x55558ed69160 .scope generate, "g_address_match" "g_address_match" 12 58, 12 58 0, S_0x55558ed675b0;
 .timescale 0 0;
L_0x7fc758334018 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x55558ed80970 .functor XNOR 1, L_0x55558ed808d0, L_0x7fc758334018, C4<0>, C4<0>;
v0x55558ed69390_0 .net *"_ivl_0", 0 0, L_0x55558ed808d0;  1 drivers
v0x55558ed69470_0 .net/2u *"_ivl_1", 0 0, L_0x7fc758334018;  1 drivers
S_0x55558ed69c20 .scope generate, "g_match" "g_match" 11 59, 11 59 0, S_0x55558ed660c0;
 .timescale 0 0;
L_0x55558ed80ca0 .functor BUFZ 1, L_0x55558ed80b90, C4<0>, C4<0>, C4<0>;
S_0x55558ed69e00 .scope autofunction.vec4.s32, "get_mask" "get_mask" 11 97, 11 97 0, S_0x55558ed660c0;
 .timescale 0 0;
; Variable get_mask is vec4 return value of scope S_0x55558ed69e00
v0x55558ed6a0c0_0 .var "mask", 31 0;
v0x55558ed6a1a0_0 .var "match", 0 0;
v0x55558ed6a290_0 .var "strobe", 31 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.u_register.u_register_common.get_mask ;
    %load/vec4 v0x55558ed6a290_0;
    %store/vec4 v0x55558ed6a0c0_0, 0, 32;
    %load/vec4 v0x55558ed6a0c0_0;
    %ret/vec4 0, 0, 32;  Assign to get_mask (store_vec4_to_lval)
    %end;
S_0x55558ed6a370 .scope module, "u_read_data_mux" "rggen_mux" 11 134, 13 1 0, S_0x55558ed660c0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "i_select";
    .port_info 1 /INPUT 32 "i_data";
    .port_info 2 /OUTPUT 32 "o_data";
P_0x55558ed6a5a0 .param/l "ENTRIES" 0 13 3, +C4<00000000000000000000000000000001>;
P_0x55558ed6a5e0 .param/l "WIDTH" 0 13 2, +C4<00000000000000000000000000100000>;
v0x55558ed6a9b0_0 .net "i_data", 31 0, L_0x55558ed97d20;  alias, 1 drivers
v0x55558ed6aab0_0 .net "i_select", 0 0, L_0x55558ed80b90;  alias, 1 drivers
v0x55558ed6aba0_0 .net "o_data", 31 0, L_0x55558ed81d10;  alias, 1 drivers
S_0x55558ed6a7b0 .scope generate, "g" "g" 13 10, 13 10 0, S_0x55558ed6a370;
 .timescale 0 0;
L_0x55558ed81d10 .functor BUFZ 32, L_0x55558ed97d20, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
S_0x55558ed6e6f0 .scope module, "u_adapter" "rggen_wishbone_adapter" 8 58, 14 1 0, S_0x55558ecb6e40;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "i_clk";
    .port_info 1 /INPUT 1 "i_rst_n";
    .port_info 2 /INPUT 1 "i_wb_cyc";
    .port_info 3 /INPUT 1 "i_wb_stb";
    .port_info 4 /OUTPUT 1 "o_wb_stall";
    .port_info 5 /INPUT 32 "i_wb_adr";
    .port_info 6 /INPUT 1 "i_wb_we";
    .port_info 7 /INPUT 32 "i_wb_dat";
    .port_info 8 /INPUT 4 "i_wb_sel";
    .port_info 9 /OUTPUT 1 "o_wb_ack";
    .port_info 10 /OUTPUT 1 "o_wb_err";
    .port_info 11 /OUTPUT 1 "o_wb_rty";
    .port_info 12 /OUTPUT 32 "o_wb_dat";
    .port_info 13 /OUTPUT 1 "o_register_valid";
    .port_info 14 /OUTPUT 2 "o_register_access";
    .port_info 15 /OUTPUT 3 "o_register_address";
    .port_info 16 /OUTPUT 32 "o_register_write_data";
    .port_info 17 /OUTPUT 32 "o_register_strobe";
    .port_info 18 /INPUT 2 "i_register_active";
    .port_info 19 /INPUT 2 "i_register_ready";
    .port_info 20 /INPUT 4 "i_register_status";
    .port_info 21 /INPUT 64 "i_register_read_data";
P_0x55558ed41d70 .param/l "ADDRESS_WIDTH" 0 14 2, +C4<00000000000000000000000000100000>;
P_0x55558ed41db0 .param/l "BASE_ADDRESS" 0 14 7, C4<00000000000000000000000000000000>;
P_0x55558ed41df0 .param/l "BUS_WIDTH" 0 14 4, +C4<00000000000000000000000000100000>;
P_0x55558ed41e30 .param/l "BYTE_SIZE" 0 14 8, +C4<00000000000000000000000000001000>;
P_0x55558ed41e70 .param/l "DEFAULT_READ_DATA" 0 14 10, C4<00000000000000000000000000000000>;
P_0x55558ed41eb0 .param/l "ERROR_STATUS" 0 14 9, +C4<00000000000000000000000000000000>;
P_0x55558ed41ef0 .param/l "INSERT_SLICER" 0 14 11, +C4<00000000000000000000000000000000>;
P_0x55558ed41f30 .param/l "LOCAL_ADDRESS_WIDTH" 0 14 3, +C4<00000000000000000000000000000011>;
P_0x55558ed41f70 .param/l "PRE_DECODE" 0 14 6, +C4<00000000000000000000000000000000>;
P_0x55558ed41fb0 .param/l "REGISTERS" 0 14 5, +C4<00000000000000000000000000000010>;
P_0x55558ed41ff0 .param/l "USE_STALL" 0 14 12, +C4<00000000000000000000000000000000>;
L_0x55558ed9ad20 .functor BUFZ 32, v0x55558ed79e40_0, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0x55558ed9b040 .functor AND 1, L_0x55558ed9ae50, L_0x55558ed9af50, C4<1>, C4<1>;
L_0x55558ed9b990 .functor AND 1, v0x55558ed7fff0_0, v0x55558ed80370_0, C4<1>, C4<1>;
L_0x7fc758335cc8 .functor BUFT 1, C4<00>, C4<0>, C4<0>, C4<0>;
v0x55558ed6fe40_0 .net/2u *"_ivl_12", 1 0, L_0x7fc758335cc8;  1 drivers
v0x55558ed780d0_0 .net *"_ivl_14", 0 0, L_0x55558ed9ae50;  1 drivers
L_0x7fc758335d10 .functor BUFT 1, C4<00>, C4<0>, C4<0>, C4<0>;
v0x55558ed78190_0 .net/2u *"_ivl_16", 1 0, L_0x7fc758335d10;  1 drivers
v0x55558ed78280_0 .net *"_ivl_18", 0 0, L_0x55558ed9af50;  1 drivers
v0x55558ed78340_0 .net *"_ivl_23", 0 0, L_0x55558ed9b1a0;  1 drivers
L_0x7fc7583362f8 .functor BUFT 1, C4<10>, C4<0>, C4<0>, C4<0>;
v0x55558ed78420_0 .net *"_ivl_26", 1 0, L_0x7fc7583362f8;  1 drivers
L_0x7fc758335d58 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v0x55558ed78500_0 .net/2u *"_ivl_28", 0 0, L_0x7fc758335d58;  1 drivers
v0x55558ed785e0_0 .net *"_ivl_30", 1 0, L_0x55558ed9b280;  1 drivers
v0x55558ed786c0_0 .net *"_ivl_35", 0 0, L_0x55558ed9b590;  1 drivers
v0x55558ed78830_0 .net *"_ivl_39", 0 0, L_0x55558ed9b850;  1 drivers
v0x55558ed78910_0 .net *"_ivl_43", 0 0, L_0x55558ed9bb30;  1 drivers
v0x55558ed789f0_0 .net *"_ivl_50", 0 0, L_0x55558ed9b990;  1 drivers
v0x55558ed78ab0_0 .net "i_clk", 0 0, v0x55558ed7f980_0;  alias, 1 drivers
v0x55558ed78b50_0 .net "i_register_active", 1 0, L_0x55558ed99bc0;  alias, 1 drivers
v0x55558ed78c10_0 .net "i_register_read_data", 63 0, L_0x55558ed99da0;  alias, 1 drivers
v0x55558ed78cd0_0 .net "i_register_ready", 1 0, L_0x55558ed99c60;  alias, 1 drivers
v0x55558ed78d70_0 .net "i_register_status", 3 0, L_0x55558ed99d00;  alias, 1 drivers
v0x55558ed78f50_0 .net "i_rst_n", 0 0, L_0x55558ed37990;  alias, 1 drivers
v0x55558ed78ff0_0 .net "i_wb_adr", 31 0, v0x55558ed7ff30_0;  alias, 1 drivers
v0x55558ed790b0_0 .net "i_wb_cyc", 0 0, v0x55558ed7fff0_0;  alias, 1 drivers
v0x55558ed79170_0 .net "i_wb_dat", 31 0, v0x55558ed80150_0;  alias, 1 drivers
v0x55558ed79250_0 .net "i_wb_sel", 3 0, v0x55558ed80210_0;  alias, 1 drivers
v0x55558ed79330_0 .net "i_wb_stb", 0 0, v0x55558ed80370_0;  alias, 1 drivers
v0x55558ed793f0_0 .net "i_wb_we", 0 0, v0x55558ed80410_0;  alias, 1 drivers
v0x55558ed794b0_0 .net "o_register_access", 1 0, L_0x55558ed9c200;  alias, 1 drivers
v0x55558ed79570_0 .net "o_register_address", 2 0, L_0x55558ed9c270;  alias, 1 drivers
v0x55558ed79630_0 .net "o_register_strobe", 31 0, L_0x55558ed9c380;  alias, 1 drivers
v0x55558ed796f0_0 .net "o_register_valid", 0 0, L_0x55558ed9c190;  alias, 1 drivers
v0x55558ed79790_0 .net "o_register_write_data", 31 0, L_0x55558ed9c310;  alias, 1 drivers
v0x55558ed79850_0 .net "o_wb_ack", 0 0, L_0x55558ed9ab20;  alias, 1 drivers
v0x55558ed79910_0 .net "o_wb_dat", 31 0, L_0x55558ed9ad20;  alias, 1 drivers
v0x55558ed799f0_0 .net "o_wb_err", 0 0, L_0x55558ed9ac80;  alias, 1 drivers
v0x55558ed79ab0_0 .net "o_wb_rty", 0 0, L_0x7fc758335c80;  alias, 1 drivers
v0x55558ed79d80_0 .net "o_wb_stall", 0 0, L_0x55558ed9a9c0;  alias, 1 drivers
v0x55558ed79e40_0 .var "r_response_data", 31 0;
v0x55558ed79f20_0 .var "r_response_valid", 1 0;
v0x55558ed7a000_0 .net "w_bus_access", 1 0, L_0x55558ed9b3b0;  1 drivers
v0x55558ed7a0f0_0 .net "w_bus_address", 31 0, L_0x55558ed9b6c0;  1 drivers
v0x55558ed7a1c0_0 .net "w_bus_read_data", 31 0, L_0x55558ed9ddf0;  1 drivers
v0x55558ed7a290_0 .net "w_bus_ready", 0 0, L_0x55558ed9dbd0;  1 drivers
v0x55558ed7a360_0 .net "w_bus_status", 1 0, L_0x55558ed9dce0;  1 drivers
v0x55558ed7a430_0 .net "w_bus_strobe", 3 0, L_0x55558ed9bbd0;  1 drivers
v0x55558ed7a500_0 .net "w_bus_valid", 0 0, L_0x55558ed9b040;  1 drivers
v0x55558ed7a5d0_0 .net "w_bus_write_data", 31 0, L_0x55558ed9b8f0;  1 drivers
v0x55558ed7a6a0_0 .net "w_request_valid", 1 0, L_0x55558ed9be20;  1 drivers
L_0x7fc758335b60 .functor BUFT 1, C4<00000000000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x55558ed7a740_0 .net "w_wb_adr", 31 0, L_0x7fc758335b60;  1 drivers
L_0x7fc758335bf0 .functor BUFT 1, C4<00000000000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x55558ed7a800_0 .net "w_wb_dat", 31 0, L_0x7fc758335bf0;  1 drivers
L_0x7fc758335c38 .functor BUFT 1, C4<0000>, C4<0>, C4<0>, C4<0>;
v0x55558ed7a8e0_0 .net "w_wb_sel", 3 0, L_0x7fc758335c38;  1 drivers
L_0x7fc758335ba8 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
v0x55558ed7a9c0_0 .net "w_wb_we", 0 0, L_0x7fc758335ba8;  1 drivers
L_0x55558ed9a9c0 .part L_0x55558ed9be20, 1, 1;
L_0x55558ed9ab20 .part v0x55558ed79f20_0, 0, 1;
L_0x55558ed9ac80 .part v0x55558ed79f20_0, 1, 1;
L_0x55558ed9ae50 .cmp/ne 2, L_0x55558ed9be20, L_0x7fc758335cc8;
L_0x55558ed9af50 .cmp/eq 2, v0x55558ed79f20_0, L_0x7fc758335d10;
L_0x55558ed9b1a0 .part L_0x55558ed9be20, 1, 1;
L_0x55558ed9b280 .concat [ 1 1 0 0], v0x55558ed80410_0, L_0x7fc758335d58;
L_0x55558ed9b3b0 .functor MUXZ 2, L_0x55558ed9b280, L_0x7fc7583362f8, L_0x55558ed9b1a0, C4<>;
L_0x55558ed9b590 .part L_0x55558ed9be20, 1, 1;
L_0x55558ed9b6c0 .functor MUXZ 32, v0x55558ed7ff30_0, L_0x7fc758335b60, L_0x55558ed9b590, C4<>;
L_0x55558ed9b850 .part L_0x55558ed9be20, 1, 1;
L_0x55558ed9b8f0 .functor MUXZ 32, v0x55558ed80150_0, L_0x7fc758335bf0, L_0x55558ed9b850, C4<>;
L_0x55558ed9bb30 .part L_0x55558ed9be20, 1, 1;
L_0x55558ed9bbd0 .functor MUXZ 4, v0x55558ed80210_0, L_0x7fc758335c38, L_0x55558ed9bb30, C4<>;
L_0x7fc758335b18 .functor BUFT 1, C4<0>, C4<0>, C4<0>, C4<0>;
L_0x55558ed9be20 .concat8 [ 1 1 0 0], L_0x55558ed9b990, L_0x7fc758335b18;
S_0x55558ed6f0c0 .scope generate, "g_no_stall" "g_no_stall" 14 67, 14 67 0, S_0x55558ed6e6f0;
 .timescale 0 0;
v0x55558ed6f2a0_0 .net/2u *"_ivl_0", 0 0, L_0x7fc758335b18;  1 drivers
S_0x55558ed6f3a0 .scope module, "u_adapter_common" "rggen_adapter_common" 14 153, 15 2 0, S_0x55558ed6e6f0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "i_clk";
    .port_info 1 /INPUT 1 "i_rst_n";
    .port_info 2 /INPUT 1 "i_bus_valid";
    .port_info 3 /INPUT 2 "i_bus_access";
    .port_info 4 /INPUT 32 "i_bus_address";
    .port_info 5 /INPUT 32 "i_bus_write_data";
    .port_info 6 /INPUT 4 "i_bus_strobe";
    .port_info 7 /OUTPUT 1 "o_bus_ready";
    .port_info 8 /OUTPUT 2 "o_bus_status";
    .port_info 9 /OUTPUT 32 "o_bus_read_data";
    .port_info 10 /OUTPUT 1 "o_register_valid";
    .port_info 11 /OUTPUT 2 "o_register_access";
    .port_info 12 /OUTPUT 3 "o_register_address";
    .port_info 13 /OUTPUT 32 "o_register_write_data";
    .port_info 14 /OUTPUT 32 "o_register_strobe";
    .port_info 15 /INPUT 2 "i_register_active";
    .port_info 16 /INPUT 2 "i_register_ready";
    .port_info 17 /INPUT 4 "i_register_status";
    .port_info 18 /INPUT 64 "i_register_read_data";
P_0x55558ed6f5a0 .param/l "ADDRESS_WIDTH" 0 15 3, +C4<00000000000000000000000000100000>;
P_0x55558ed6f5e0 .param/l "BASE_ADDRESS" 0 15 9, C4<00000000000000000000000000000000>;
P_0x55558ed6f620 .param/l "BUS_WIDTH" 0 15 5, +C4<00000000000000000000000000100000>;
P_0x55558ed6f660 .param/l "BYTE_SIZE" 0 15 10, +C4<00000000000000000000000000001000>;
P_0x55558ed6f6a0 .param/l "DEFAULT_READ_DATA" 0 15 13, C4<00000000000000000000000000000000>;
P_0x55558ed6f6e0 .param/l "ERROR_STATUS" 0 15 12, +C4<00000000000000000000000000000000>;
P_0x55558ed6f720 .param/l "INSERT_SLICER" 0 15 14, +C4<00000000000000000000000000000000>;
P_0x55558ed6f760 .param/l "LOCAL_ADDRESS_WIDTH" 0 15 4, +C4<00000000000000000000000000000011>;
P_0x55558ed6f7a0 .param/l "PRE_DECODE" 0 15 8, +C4<00000000000000000000000000000000>;
P_0x55558ed6f7e0 .param/l "REGISTERS" 0 15 7, +C4<00000000000000000000000000000010>;
P_0x55558ed6f820 .param/l "RESPONSE_WIDTH" 1 15 36, +C4<00000000000000000000000000000100010>;
P_0x55558ed6f860 .param/l "STROBE_WIDTH" 0 15 6, +C4<00000000000000000000000000000100>;
P_0x55558ed6f8a0 .param/l "USE_READ_STROBE" 0 15 11, +C4<00000000000000000000000000000000>;
L_0x55558ed9dbd0 .functor BUFZ 1, L_0x55558ed9cef0, C4<0>, C4<0>, C4<0>;
L_0x7fc758335da0 .functor BUFT 1, C4<00>, C4<0>, C4<0>, C4<0>;
L_0x55558ed9dce0 .functor BUFZ 2, L_0x7fc758335da0, C4<00>, C4<00>, C4<00>;
L_0x55558ed9ddf0 .functor BUFZ 32, L_0x55558ed9c4b0, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0x55558ed9e0f0 .functor OR 1, L_0x55558ed9df00, L_0x55558ed9dff0, C4<0>, C4<0>;
v0x55558ed76370_0 .net *"_ivl_21", 0 0, L_0x55558ed9df00;  1 drivers
v0x55558ed76430_0 .net *"_ivl_23", 0 0, L_0x55558ed9dff0;  1 drivers
v0x55558ed764f0_0 .net "i_bus_access", 1 0, L_0x55558ed9b3b0;  alias, 1 drivers
v0x55558ed765e0_0 .net "i_bus_address", 31 0, L_0x55558ed9b6c0;  alias, 1 drivers
v0x55558ed766c0_0 .net "i_bus_strobe", 3 0, L_0x55558ed9bbd0;  alias, 1 drivers
v0x55558ed767f0_0 .net "i_bus_valid", 0 0, L_0x55558ed9b040;  alias, 1 drivers
v0x55558ed768b0_0 .net "i_bus_write_data", 31 0, L_0x55558ed9b8f0;  alias, 1 drivers
v0x55558ed76990_0 .net "i_clk", 0 0, v0x55558ed7f980_0;  alias, 1 drivers
v0x55558ed76a30_0 .net "i_register_active", 1 0, L_0x55558ed99bc0;  alias, 1 drivers
v0x55558ed76af0_0 .net "i_register_read_data", 63 0, L_0x55558ed99da0;  alias, 1 drivers
v0x55558ed76bb0_0 .net "i_register_ready", 1 0, L_0x55558ed99c60;  alias, 1 drivers
v0x55558ed76c90_0 .net "i_register_status", 3 0, L_0x55558ed99d00;  alias, 1 drivers
v0x55558ed76d70_0 .net "i_rst_n", 0 0, L_0x55558ed37990;  alias, 1 drivers
v0x55558ed76e10_0 .net "o_bus_read_data", 31 0, L_0x55558ed9ddf0;  alias, 1 drivers
v0x55558ed76ef0_0 .net "o_bus_ready", 0 0, L_0x55558ed9dbd0;  alias, 1 drivers
v0x55558ed76fb0_0 .net "o_bus_status", 1 0, L_0x55558ed9dce0;  alias, 1 drivers
v0x55558ed77090_0 .net "o_register_access", 1 0, L_0x55558ed9c200;  alias, 1 drivers
v0x55558ed77260_0 .net "o_register_address", 2 0, L_0x55558ed9c270;  alias, 1 drivers
v0x55558ed77320_0 .net "o_register_strobe", 31 0, L_0x55558ed9c380;  alias, 1 drivers
v0x55558ed773e0_0 .net "o_register_valid", 0 0, L_0x55558ed9c190;  alias, 1 drivers
v0x55558ed77480_0 .net "o_register_write_data", 31 0, L_0x55558ed9c310;  alias, 1 drivers
v0x55558ed775d0_0 .var "r_busy", 0 0;
v0x55558ed77690_0 .net "w_bus_ready", 0 0, L_0x55558ed9cef0;  1 drivers
L_0x7fc758335e78 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v0x55558ed77750_0 .net "w_inside_range", 0 0, L_0x7fc758335e78;  1 drivers
v0x55558ed77810_0 .net "w_register_active", 0 0, L_0x55558ed9c680;  1 drivers
v0x55558ed778d0_0 .net "w_register_inactive", 0 0, L_0x55558ed9e0f0;  1 drivers
v0x55558ed77990_0 .net "w_register_read_data", 31 0, L_0x55558ed9c4b0;  1 drivers
v0x55558ed77a70_0 .net "w_register_ready", 0 0, L_0x55558ed9c550;  1 drivers
v0x55558ed77b30_0 .net "w_register_response", 33 0, L_0x55558ed9d2a0;  1 drivers
v0x55558ed77bf0_0 .net "w_register_status", 1 0, L_0x7fc758335da0;  1 drivers
v0x55558ed77cd0_0 .net "w_response", 67 0, L_0x55558ed9ca50;  1 drivers
L_0x55558ed9c4b0 .part L_0x55558ed9d2a0, 2, 32;
L_0x55558ed9c550 .part L_0x55558ed9d2a0, 1, 1;
L_0x55558ed9c680 .part L_0x55558ed9d2a0, 0, 1;
L_0x55558ed9c720 .part L_0x55558ed99da0, 0, 32;
L_0x55558ed9c850 .part L_0x55558ed99c60, 0, 1;
L_0x55558ed9ca50 .concat8 [ 34 34 0 0], L_0x55558ed9c980, L_0x55558ed9cd10;
L_0x55558ed9cb80 .part L_0x55558ed99da0, 32, 32;
L_0x55558ed9cc20 .part L_0x55558ed99c60, 1, 1;
L_0x55558ed9df00 .reduce/nor L_0x55558ed9c680;
L_0x55558ed9dff0 .reduce/nor L_0x7fc758335e78;
S_0x55558ed70280 .scope generate, "g_no_request_slicer" "g_no_request_slicer" 15 82, 15 82 0, S_0x55558ed6f3a0;
 .timescale 0 0;
L_0x55558ed9c080 .functor AND 1, L_0x55558ed9b040, L_0x7fc758335e78, C4<1>, C4<1>;
L_0x55558ed9c190 .functor AND 1, L_0x55558ed9c080, L_0x55558ed9c0f0, C4<1>, C4<1>;
L_0x55558ed9c200 .functor BUFZ 2, L_0x55558ed9b3b0, C4<00>, C4<00>, C4<00>;
L_0x55558ed9c310 .functor BUFZ 32, L_0x55558ed9b8f0, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
v0x55558ed70460_0 .net *"_ivl_1", 0 0, L_0x55558ed9c080;  1 drivers
v0x55558ed70540_0 .net *"_ivl_3", 0 0, L_0x55558ed9c0f0;  1 drivers
L_0x55558ed9c0f0 .reduce/nor v0x55558ed775d0_0;
L_0x55558ed9c270 .ufunc/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.u_adapter.u_adapter_common.get_local_address, 3, L_0x55558ed9b6c0 (v0x55558ed718d0_0) S_0x55558ed716f0;
L_0x55558ed9c380 .ufunc/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.u_adapter.u_adapter_common.get_register_strobe, 32, L_0x55558ed9b3b0, L_0x55558ed9bbd0 (v0x55558ed71db0_0, v0x55558ed72130_0) S_0x55558ed71b80;
S_0x55558ed70600 .scope generate, "g_reponse" "g_reponse" 15 172, 15 172 0, S_0x55558ed6f3a0;
 .timescale 0 0;
S_0x55558ed70800 .scope generate, "g[0]" "g[0]" 15 188, 15 188 0, S_0x55558ed70600;
 .timescale 0 0;
P_0x55558ed70a00 .param/l "i" 1 15 188, +C4<00>;
v0x55558ed70ae0_0 .net *"_ivl_0", 31 0, L_0x55558ed9c720;  1 drivers
v0x55558ed70bc0_0 .net *"_ivl_1", 0 0, L_0x55558ed9c850;  1 drivers
L_0x7fc758335de8 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v0x55558ed70ca0_0 .net/2u *"_ivl_2", 0 0, L_0x7fc758335de8;  1 drivers
v0x55558ed70d90_0 .net *"_ivl_4", 33 0, L_0x55558ed9c980;  1 drivers
L_0x55558ed9c980 .concat [ 1 1 32 0], L_0x7fc758335de8, L_0x55558ed9c850, L_0x55558ed9c720;
S_0x55558ed70e70 .scope generate, "g[1]" "g[1]" 15 188, 15 188 0, S_0x55558ed70600;
 .timescale 0 0;
P_0x55558ed71090 .param/l "i" 1 15 188, +C4<01>;
v0x55558ed71150_0 .net *"_ivl_0", 31 0, L_0x55558ed9cb80;  1 drivers
v0x55558ed71230_0 .net *"_ivl_1", 0 0, L_0x55558ed9cc20;  1 drivers
L_0x7fc758335e30 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v0x55558ed71310_0 .net/2u *"_ivl_2", 0 0, L_0x7fc758335e30;  1 drivers
v0x55558ed71400_0 .net *"_ivl_4", 33 0, L_0x55558ed9cd10;  1 drivers
L_0x55558ed9cd10 .concat [ 1 1 32 0], L_0x7fc758335e30, L_0x55558ed9cc20, L_0x55558ed9cb80;
S_0x55558ed714e0 .scope generate, "g_response_ready" "g_response_ready" 15 218, 15 218 0, S_0x55558ed6f3a0;
 .timescale 0 0;
L_0x55558ed9cef0 .functor OR 1, L_0x55558ed9c550, L_0x55558ed9e0f0, C4<0>, C4<0>;
S_0x55558ed716f0 .scope autofunction.vec4.s3, "get_local_address" "get_local_address" 15 131, 15 131 0, S_0x55558ed6f3a0;
 .timescale 0 0;
v0x55558ed718d0_0 .var "address", 31 0;
; Variable get_local_address is vec4 return value of scope S_0x55558ed716f0
v0x55558ed71a90_0 .var "local_address", 31 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.u_adapter.u_adapter_common.get_local_address ;
    %load/vec4 v0x55558ed718d0_0;
    %store/vec4 v0x55558ed71a90_0, 0, 32;
    %load/vec4 v0x55558ed71a90_0;
    %parti/s 3, 0, 2;
    %ret/vec4 0, 0, 3;  Assign to get_local_address (store_vec4_to_lval)
    %end;
S_0x55558ed71b80 .scope autofunction.vec4.s32, "get_register_strobe" "get_register_strobe" 15 147, 15 147 0, S_0x55558ed6f3a0;
 .timescale 0 0;
v0x55558ed71db0_0 .var "access", 1 0;
; Variable get_register_strobe is vec4 return value of scope S_0x55558ed71b80
v0x55558ed71f90_0 .var/i "i", 31 0;
v0x55558ed72050_0 .var "register_strobe", 31 0;
v0x55558ed72130_0 .var "strobe", 3 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.u_adapter.u_adapter_common.get_register_strobe ;
    %pushi/vec4 1, 0, 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_44.533, 9;
    %load/vec4 v0x55558ed71db0_0;
    %pushi/vec4 2, 0, 2;
    %cmp/e;
    %flag_get/vec4 4;
    %and;
T_44.533;
    %flag_set/vec4 8;
    %jmp/0xz  T_44.531, 8;
    %pushi/vec4 4294967295, 0, 32;
    %store/vec4 v0x55558ed72050_0, 0, 32;
    %jmp T_44.532;
T_44.531 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558ed71f90_0, 0, 32;
T_44.534 ; Top of for-loop
    %load/vec4 v0x55558ed71f90_0;
    %cmpi/s 4, 0, 32;
	  %jmp/0xz T_44.535, 5;
    %load/vec4 v0x55558ed72130_0;
    %load/vec4 v0x55558ed71f90_0;
    %part/s 1;
    %replicate 8;
    %load/vec4 v0x55558ed71f90_0;
    %muli 8, 0, 32;
    %ix/vec4/s 4;
    %store/vec4 v0x55558ed72050_0, 4, 8;
T_44.536 ; for-loop step statement
    %load/vec4 v0x55558ed71f90_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558ed71f90_0, 0, 32;
    %jmp T_44.534;
T_44.535 ; for-loop exit label
T_44.532 ;
    %load/vec4 v0x55558ed72050_0;
    %ret/vec4 0, 0, 32;  Assign to get_register_strobe (store_vec4_to_lval)
    %end;
S_0x55558ed72260 .scope autofunction.vec4.s1, "pre_decode" "pre_decode" 15 66, 15 66 0, S_0x55558ed6f3a0;
 .timescale 0 0;
v0x55558ed72440_0 .var "address", 31 0;
v0x55558ed72540_0 .var "begin_address", 31 0;
v0x55558ed72620_0 .var/i "delta", 31 0;
v0x55558ed726e0_0 .var "end_address", 31 0;
; Variable pre_decode is vec4 return value of scope S_0x55558ed72260
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.u_adapter.u_adapter_common.pre_decode ;
    %pushi/vec4 7, 0, 32;
    %store/vec4 v0x55558ed72620_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558ed72540_0, 0, 32;
    %load/vec4 v0x55558ed72540_0;
    %load/vec4 v0x55558ed72620_0;
    %add;
    %store/vec4 v0x55558ed726e0_0, 0, 32;
    %load/vec4 v0x55558ed72540_0;
    %load/vec4 v0x55558ed72440_0;
    %cmp/u;
    %flag_or 5, 4;
    %flag_get/vec4 5;
    %jmp/0 T_45.537, 5;
    %load/vec4 v0x55558ed72440_0;
    %load/vec4 v0x55558ed726e0_0;
    %cmp/u;
    %flag_get/vec4 4;
    %flag_get/vec4 5;
    %or;
    %and;
T_45.537;
    %ret/vec4 0, 0, 1;  Assign to pre_decode (store_vec4_to_lval)
    %end;
S_0x55558ed728d0 .scope module, "u_response_mux" "rggen_mux" 15 206, 13 1 0, S_0x55558ed6f3a0;
 .timescale 0 0;
    .port_info 0 /INPUT 2 "i_select";
    .port_info 1 /INPUT 68 "i_data";
    .port_info 2 /OUTPUT 34 "o_data";
P_0x55558ed5e3b0 .param/l "ENTRIES" 0 13 3, +C4<00000000000000000000000000000010>;
P_0x55558ed5e3f0 .param/l "WIDTH" 0 13 2, +C4<00000000000000000000000000000100010>;
v0x55558ed76050_0 .net "i_data", 67 0, L_0x55558ed9ca50;  alias, 1 drivers
v0x55558ed76130_0 .net "i_select", 1 0, L_0x55558ed99bc0;  alias, 1 drivers
v0x55558ed76210_0 .net "o_data", 33 0, L_0x55558ed9d2a0;  alias, 1 drivers
L_0x55558ed9d360 .part L_0x55558ed9ca50, 0, 34;
L_0x55558ed9d400 .part L_0x55558ed99bc0, 0, 1;
L_0x55558ed9d7d0 .part L_0x55558ed9ca50, 34, 34;
L_0x55558ed9d900 .part L_0x55558ed99bc0, 1, 1;
S_0x55558ed72c40 .scope generate, "g" "g" 13 10, 13 10 0, S_0x55558ed728d0;
 .timescale 0 0;
v0x55558ed75f60_0 .net "masked_data", 67 0, L_0x55558ed9d6a0;  1 drivers
L_0x55558ed9d6a0 .concat8 [ 34 34 0 0], L_0x55558ed9d590, L_0x55558ed9da70;
S_0x55558ed72e40 .scope generate, "g[0]" "g[0]" 13 14, 13 14 0, S_0x55558ed72c40;
 .timescale 0 0;
P_0x55558ed73060 .param/l "i" 1 13 14, +C4<00>;
L_0x55558ed9d590 .functor AND 34, L_0x55558ed9d360, L_0x55558ed9d4a0, C4<1111111111111111111111111111111111>, C4<1111111111111111111111111111111111>;
v0x55558ed72b50_0 .net *"_ivl_0", 33 0, L_0x55558ed9d360;  1 drivers
v0x55558ed73180_0 .net *"_ivl_1", 0 0, L_0x55558ed9d400;  1 drivers
v0x55558ed73260_0 .net *"_ivl_3", 33 0, L_0x55558ed9d4a0;  1 drivers
v0x55558ed73350_0 .net *"_ivl_4", 33 0, L_0x55558ed9d590;  1 drivers
L_0x55558ed9d4a0 .repeat 34, 34, L_0x55558ed9d400;
S_0x55558ed73430 .scope generate, "g[1]" "g[1]" 13 14, 13 14 0, S_0x55558ed72c40;
 .timescale 0 0;
P_0x55558ed73650 .param/l "i" 1 13 14, +C4<01>;
L_0x55558ed9da70 .functor AND 34, L_0x55558ed9d7d0, L_0x55558ed9d9d0, C4<1111111111111111111111111111111111>, C4<1111111111111111111111111111111111>;
v0x55558ed73710_0 .net *"_ivl_0", 33 0, L_0x55558ed9d7d0;  1 drivers
v0x55558ed737f0_0 .net *"_ivl_1", 0 0, L_0x55558ed9d900;  1 drivers
v0x55558ed738d0_0 .net *"_ivl_3", 33 0, L_0x55558ed9d9d0;  1 drivers
v0x55558ed739c0_0 .net *"_ivl_4", 33 0, L_0x55558ed9da70;  1 drivers
L_0x55558ed9d9d0 .repeat 34, 34, L_0x55558ed9d900;
S_0x55558ed73aa0 .scope module, "u_reducer" "rggen_or_reducer" 13 21, 16 1 0, S_0x55558ed72c40;
 .timescale 0 0;
    .port_info 0 /INPUT 68 "i_data";
    .port_info 1 /OUTPUT 34 "o_result";
P_0x55558ed73cb0 .param/l "N" 0 16 3, +C4<00000000000000000000000000000010>;
P_0x55558ed73cf0 .param/l "NEXT_N" 1 16 79, +C4<00000000000000000000000000000001>;
P_0x55558ed73d30 .param/l "OFFSET_LIST" 1 16 78, C4<00000000000000100000000000000000>;
P_0x55558ed73d70 .param/l "SUB_N_LIST" 1 16 77, C4<00000000000000000000000000000010>;
P_0x55558ed73db0 .param/l "WIDTH" 0 16 2, +C4<00000000000000000000000000000100010>;
v0x55558ed75c60_0 .net "i_data", 67 0, L_0x55558ed9d6a0;  alias, 1 drivers
v0x55558ed75d60_0 .net "next_data", 33 0, L_0x55558ed9d190;  1 drivers
v0x55558ed75e40_0 .net "o_result", 33 0, L_0x55558ed9d2a0;  alias, 1 drivers
L_0x55558ed9d000 .part L_0x55558ed9d6a0, 0, 34;
L_0x55558ed9d0f0 .part L_0x55558ed9d6a0, 34, 34;
S_0x55558ed74170 .scope generate, "g_or_loop[0]" "g_or_loop[0]" 16 85, 16 85 0, S_0x55558ed73aa0;
 .timescale 0 0;
P_0x55558ed74390 .param/l "i" 1 16 85, +C4<00>;
S_0x55558ed74470 .scope generate, "g" "g" 16 94, 16 94 0, S_0x55558ed74170;
 .timescale 0 0;
L_0x55558ed9d190 .functor OR 34, L_0x55558ed9d000, L_0x55558ed9d0f0, C4<0000000000000000000000000000000000>, C4<0000000000000000000000000000000000>;
v0x55558ed74050_0 .net *"_ivl_0", 33 0, L_0x55558ed9d000;  1 drivers
v0x55558ed746b0_0 .net *"_ivl_1", 33 0, L_0x55558ed9d0f0;  1 drivers
S_0x55558ed74790 .scope generate, "g_reduce" "g_reduce" 16 102, 16 102 0, S_0x55558ed73aa0;
 .timescale 0 0;
L_0x55558ed9d2a0 .functor BUFZ 34, L_0x55558ed9d190, C4<0000000000000000000000000000000000>, C4<0000000000000000000000000000000000>, C4<0000000000000000000000000000000000>;
S_0x55558ed74990 .scope autofunction.vec4.u32, "get_next_n" "get_next_n" 16 62, 16 62 0, S_0x55558ed73aa0;
 .timescale 0 0;
; Variable get_next_n is vec4 return value of scope S_0x55558ed74990
v0x55558ed74c60_0 .var/i "i", 31 0;
v0x55558ed74d40_0 .var/i "next_n", 31 0;
v0x55558ed74e30_0 .var "sub_n_list", 31 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.u_adapter.u_adapter_common.u_response_mux.g.u_reducer.get_next_n ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558ed74d40_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558ed74c60_0, 0, 32;
T_46.538 ; Top of for-loop
    %load/vec4 v0x55558ed74c60_0;
    %cmpi/s 2, 0, 32;
	  %jmp/0xz T_46.539, 5;
    %load/vec4 v0x55558ed74d40_0;
    %load/vec4 v0x55558ed74e30_0;
    %load/vec4 v0x55558ed74c60_0;
    %muli 16, 0, 32;
    %part/s 16;
    %pad/u 32;
    %cmpi/ne 0, 0, 32;
    %flag_mov 8, 4;
    %jmp/0 T_46.541, 8;
    %pushi/vec4 1, 0, 32;
    %jmp/1 T_46.542, 8;
T_46.541 ; End of true expr.
    %pushi/vec4 0, 0, 32;
    %jmp/0 T_46.542, 8;
 ; End of false expr.
    %blend;
T_46.542;
    %add;
    %store/vec4 v0x55558ed74d40_0, 0, 32;
T_46.540 ; for-loop step statement
    %load/vec4 v0x55558ed74c60_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558ed74c60_0, 0, 32;
    %jmp T_46.538;
T_46.539 ; for-loop exit label
    %load/vec4 v0x55558ed74d40_0;
    %ret/vec4 0, 0, 32;  Assign to get_next_n (store_vec4_to_lval)
    %end;
S_0x55558ed74f10 .scope autofunction.vec4.s32, "get_offset_list" "get_offset_list" 16 43, 16 43 0, S_0x55558ed73aa0;
 .timescale 0 0;
; Variable get_offset_list is vec4 return value of scope S_0x55558ed74f10
v0x55558ed751f0_0 .var/i "i", 31 0;
v0x55558ed752d0_0 .var "list", 31 0;
v0x55558ed753c0_0 .var "sub_n_list", 31 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.u_adapter.u_adapter_common.u_response_mux.g.u_reducer.get_offset_list ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558ed751f0_0, 0, 32;
T_47.543 ; Top of for-loop
    %load/vec4 v0x55558ed751f0_0;
    %cmpi/s 2, 0, 32;
	  %jmp/0xz T_47.544, 5;
    %load/vec4 v0x55558ed751f0_0;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_47.546, 4;
    %pushi/vec4 0, 0, 16;
    %load/vec4 v0x55558ed751f0_0;
    %muli 16, 0, 32;
    %ix/vec4/s 4;
    %store/vec4 v0x55558ed752d0_0, 4, 16;
    %jmp T_47.547;
T_47.546 ;
    %load/vec4 v0x55558ed753c0_0;
    %load/vec4 v0x55558ed751f0_0;
    %subi 1, 0, 32;
    %muli 16, 0, 32;
    %part/s 16;
    %load/vec4 v0x55558ed752d0_0;
    %load/vec4 v0x55558ed751f0_0;
    %subi 1, 0, 32;
    %muli 16, 0, 32;
    %part/s 16;
    %add;
    %load/vec4 v0x55558ed751f0_0;
    %muli 16, 0, 32;
    %ix/vec4/s 4;
    %store/vec4 v0x55558ed752d0_0, 4, 16;
T_47.547 ;
T_47.545 ; for-loop step statement
    %load/vec4 v0x55558ed751f0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558ed751f0_0, 0, 32;
    %jmp T_47.543;
T_47.544 ; for-loop exit label
    %load/vec4 v0x55558ed752d0_0;
    %ret/vec4 0, 0, 32;  Assign to get_offset_list (store_vec4_to_lval)
    %end;
S_0x55558ed754a0 .scope autofunction.vec4.s32, "get_sub_n_list" "get_sub_n_list" 16 8, 16 8 0, S_0x55558ed73aa0;
 .timescale 0 0;
v0x55558ed756d0_0 .var "current_n", 15 0;
; Variable get_sub_n_list is vec4 return value of scope S_0x55558ed754a0
v0x55558ed758b0_0 .var "half_n", 15 0;
v0x55558ed75970_0 .var "list", 31 0;
v0x55558ed75a50_0 .var/i "list_index", 31 0;
v0x55558ed75b80_0 .var/i "n", 31 0;
TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.u_adapter.u_adapter_common.u_response_mux.g.u_reducer.get_sub_n_list ;
    %load/vec4 v0x55558ed75b80_0;
    %parti/s 16, 0, 2;
    %store/vec4 v0x55558ed756d0_0, 0, 16;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558ed75a50_0, 0, 32;
T_48.548 ;
    %load/vec4 v0x55558ed756d0_0;
    %pad/u 32;
    %cmpi/u 0, 0, 32;
    %flag_or 5, 4; GT is !LE
    %flag_inv 5;
    %jmp/0xz T_48.549, 5;
    %load/vec4 v0x55558ed756d0_0;
    %pad/u 32;
    %pushi/vec4 2, 0, 32;
    %div;
    %pad/u 16;
    %store/vec4 v0x55558ed758b0_0, 0, 16;
    %load/vec4 v0x55558ed756d0_0;
    %pad/u 32;
    %cmpi/u 4, 0, 32;
    %flag_or 5, 4; GT is !LE
    %flag_inv 5;
    %flag_get/vec4 5;
    %jmp/0 T_48.552, 5;
    %load/vec4 v0x55558ed758b0_0;
    %pad/u 32;
    %cmpi/u 4, 0, 32;
    %flag_get/vec4 4;
    %flag_get/vec4 5;
    %or;
    %and;
T_48.552;
    %flag_set/vec4 8;
    %jmp/0xz  T_48.550, 8;
    %load/vec4 v0x55558ed758b0_0;
    %load/vec4 v0x55558ed75a50_0;
    %muli 16, 0, 32;
    %ix/vec4/s 4;
    %store/vec4 v0x55558ed75970_0, 4, 16;
    %jmp T_48.551;
T_48.550 ;
    %load/vec4 v0x55558ed756d0_0;
    %pad/u 32;
    %cmpi/u 4, 0, 32;
    %flag_inv 5; GE is !LT
    %jmp/0xz  T_48.553, 5;
    %pushi/vec4 4, 0, 16;
    %load/vec4 v0x55558ed75a50_0;
    %muli 16, 0, 32;
    %ix/vec4/s 4;
    %store/vec4 v0x55558ed75970_0, 4, 16;
    %jmp T_48.554;
T_48.553 ;
    %load/vec4 v0x55558ed756d0_0;
    %load/vec4 v0x55558ed75a50_0;
    %muli 16, 0, 32;
    %ix/vec4/s 4;
    %store/vec4 v0x55558ed75970_0, 4, 16;
T_48.554 ;
T_48.551 ;
    %load/vec4 v0x55558ed756d0_0;
    %load/vec4 v0x55558ed75970_0;
    %load/vec4 v0x55558ed75a50_0;
    %muli 16, 0, 32;
    %part/s 16;
    %sub;
    %store/vec4 v0x55558ed756d0_0, 0, 16;
    %load/vec4 v0x55558ed75a50_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558ed75a50_0, 0, 32;
    %jmp T_48.548;
T_48.549 ;
T_48.555 ;
    %load/vec4 v0x55558ed75a50_0;
    %cmpi/s 2, 0, 32;
    %jmp/0xz T_48.556, 5;
    %pushi/vec4 0, 0, 16;
    %load/vec4 v0x55558ed75a50_0;
    %muli 16, 0, 32;
    %ix/vec4/s 4;
    %store/vec4 v0x55558ed75970_0, 4, 16;
    %load/vec4 v0x55558ed75a50_0;
    %addi 1, 0, 32;
    %store/vec4 v0x55558ed75a50_0, 0, 32;
    %jmp T_48.555;
T_48.556 ;
    %load/vec4 v0x55558ed75970_0;
    %ret/vec4 0, 0, 32;  Assign to get_sub_n_list (store_vec4_to_lval)
    %end;
S_0x55558ed7ea80 .scope autotask, "wishbone_readwdg" "wishbone_readwdg" 2 255, 2 255 0, S_0x55558eae28e0;
 .timescale -8 -9;
v0x55558ed7ec60_0 .var "rdata", 31 0;
TD_wdg_tb.wishbone_readwdg ;
    %alloc S_0x55558ed7f0e0;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x55558ed7f5b0_0, 0, 1;
    %pushi/vec4 4, 0, 32;
    %store/vec4 v0x55558ed7f310_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558ed7f670_0, 0, 32;
    %pushi/vec4 15, 0, 4;
    %store/vec4 v0x55558ed7f4f0_0, 0, 4;
    %fork TD_wdg_tb.wishbone_transaction, S_0x55558ed7f0e0;
    %join;
    %load/vec4 v0x55558ed7f410_0;
    %store/vec4 v0x55558ed7ec60_0, 0, 32;
    %free S_0x55558ed7f0e0;
    %vpi_call 2 266 "$display", "xxxxxxxxxxxxxxxxxxxxx" {0 0 0};
    %vpi_call 2 267 "$display", "!!!read data: %d !!!", v0x55558ed7ec60_0 {0 0 0};
    %vpi_call 2 268 "$display", "xxxxxxxxxxxxxxxxxxxxx" {0 0 0};
    %end;
S_0x55558ed7ed40 .scope autotask, "wishbone_set_wdcsr" "wishbone_set_wdcsr" 2 240, 2 240 0, S_0x55558eae28e0;
 .timescale -8 -9;
v0x55558ed7ef20_0 .var "en", 0 0;
v0x55558ed7f000_0 .var "wtocnt", 9 0;
TD_wdg_tb.wishbone_set_wdcsr ;
    %vpi_call 2 246 "$display", "-  Sending WDCSR Register Access -" {0 0 0};
    %vpi_call 2 247 "$display", "Enable     : 0x%08h", v0x55558ed7ef20_0 {0 0 0};
    %vpi_call 2 248 "$display", "WTOCNT     : 0x%08h", v0x55558ed7f000_0 {0 0 0};
    %alloc S_0x55558ed7f0e0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x55558ed7f5b0_0, 0, 1;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558ed7f310_0, 0, 32;
    %pushi/vec4 0, 0, 18;
    %load/vec4 v0x55558ed7f000_0;
    %concat/vec4; draw_concat_vec4
    %concati/vec4 0, 0, 2;
    %concati/vec4 0, 0, 1;
    %load/vec4 v0x55558ed7ef20_0;
    %concat/vec4; draw_concat_vec4
    %store/vec4 v0x55558ed7f670_0, 0, 32;
    %pushi/vec4 15, 0, 4;
    %store/vec4 v0x55558ed7f4f0_0, 0, 4;
    %fork TD_wdg_tb.wishbone_transaction, S_0x55558ed7f0e0;
    %join;
    %load/vec4 v0x55558ed7f410_0;
    %store/vec4 v0x55558ed7fc50_0, 0, 32;
    %free S_0x55558ed7f0e0;
    %end;
S_0x55558ed7f0e0 .scope autotask, "wishbone_transaction" "wishbone_transaction" 2 171, 2 171 0, S_0x55558eae28e0;
 .timescale -8 -9;
v0x55558ed7f310_0 .var "address", 31 0;
v0x55558ed7f410_0 .var "read_data", 31 0;
v0x55558ed7f4f0_0 .var "sel", 3 0;
v0x55558ed7f5b0_0 .var "write", 0 0;
v0x55558ed7f670_0 .var "write_data", 31 0;
TD_wdg_tb.wishbone_transaction ;
T_51.557 ;
    %load/vec4 v0x55558ed802d0_0;
    %flag_set/vec4 8;
    %jmp/0xz T_51.558, 8;
    %wait E_0x55558ebc2c00;
    %jmp T_51.557;
T_51.558 ;
    %load/vec4 v0x55558ed7f310_0;
    %store/vec4 v0x55558ed7ff30_0, 0, 32;
    %load/vec4 v0x55558ed7f670_0;
    %store/vec4 v0x55558ed80150_0, 0, 32;
    %load/vec4 v0x55558ed7f4f0_0;
    %store/vec4 v0x55558ed80210_0, 0, 4;
    %load/vec4 v0x55558ed7f5b0_0;
    %store/vec4 v0x55558ed80410_0, 0, 1;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x55558ed7fff0_0, 0, 1;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x55558ed80370_0, 0, 1;
    %wait E_0x55558ebc2c00;
    %vpi_call 2 196 "$display", "----------------------------------" {0 0 0};
    %vpi_call 2 197 "$display", "- Wishbone Transaction Initiated -" {0 0 0};
    %vpi_call 2 198 "$display", "----------------------------------" {0 0 0};
    %load/vec4 v0x55558ed7f5b0_0;
    %flag_set/vec4 8;
    %jmp/0 T_51.559, 8;
    %pushi/vec4 1465010516, 0, 32; draw_string_vec4
    %pushi/vec4 69, 0, 8; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %jmp/1 T_51.560, 8;
T_51.559 ; End of true expr.
    %pushi/vec4 5391681, 0, 32; draw_string_vec4
    %pushi/vec4 68, 0, 8; draw_string_vec4
    %concat/vec4; draw_string_vec4
    %jmp/0 T_51.560, 8;
 ; End of false expr.
    %blend;
T_51.560;
    %vpi_call 2 199 "$display", "Mode       : %s", S<0,vec4,u40> {1 0 0};
    %vpi_call 2 200 "$display", "Address    : 0x%08h", v0x55558ed7f310_0 {0 0 0};
    %vpi_call 2 201 "$display", "Write Data : 0x%08h", v0x55558ed7f670_0 {0 0 0};
    %vpi_call 2 202 "$display", "Byte Sel   : 0b%b", v0x55558ed7f4f0_0 {0 0 0};
    %vpi_call 2 203 "$display", "----------------------------------" {0 0 0};
    %vpi_call 2 209 "$display", "Waiting for ACK..." {0 0 0};
    %pushi/vec4 100000, 0, 32;
    %store/vec4 v0x55558ed7fdd0_0, 0, 32;
T_51.561 ;
    %load/vec4 v0x55558ed7fe90_0;
    %nor/r;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_51.563, 9;
    %pushi/vec4 0, 0, 32;
    %load/vec4 v0x55558ed7fdd0_0;
    %cmp/s;
    %flag_get/vec4 5;
    %and;
T_51.563;
    %flag_set/vec4 8;
    %jmp/0xz T_51.562, 8;
    %wait E_0x55558ebc2c00;
    %load/vec4 v0x55558ed7fdd0_0;
    %subi 1, 0, 32;
    %store/vec4 v0x55558ed7fdd0_0, 0, 32;
    %vpi_call 2 218 "$display", "timeout %d", v0x55558ed7fdd0_0 {0 0 0};
    %jmp T_51.561;
T_51.562 ;
    %load/vec4 v0x55558ed7fdd0_0;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_51.564, 4;
    %vpi_call 2 222 "$display", "ERROR: Timeout waiting for ACK!" {0 0 0};
    %jmp T_51.565;
T_51.564 ;
    %vpi_call 2 225 "$display", "Received ACK" {0 0 0};
    %load/vec4 v0x55558ed7f5b0_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_51.566, 8;
    %load/vec4 v0x55558ed80090_0;
    %store/vec4 v0x55558ed7f410_0, 0, 32;
T_51.566 ;
T_51.565 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x55558ed7fff0_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x55558ed80370_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x55558ed80410_0, 0, 1;
    %end;
    .scope S_0x55558ed5ae20;
T_52 ;
    %wait E_0x55558ed44af0;
    %load/vec4 v0x55558ed5de30_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_52.0, 8;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x55558ed5b000_0, 0;
    %jmp T_52.1;
T_52.0 ;
    %pushi/vec4 1, 0, 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_52.4, 9;
    %load/vec4 v0x55558ed5ec90_0;
    %parti/s 1, 1, 2;
    %and;
T_52.4;
    %flag_set/vec4 8;
    %jmp/0xz  T_52.2, 8;
    %alloc S_0x55558ed5cb30;
    %load/vec4 v0x55558ed5b000_0;
    %load/vec4 v0x55558ed5ded0_0;
    %load/vec4 v0x55558ed5e170_0;
    %store/vec4 v0x55558ed5d1f0_0, 0, 1;
    %store/vec4 v0x55558ed5cfe0_0, 0, 1;
    %store/vec4 v0x55558ed5cd10_0, 0, 1;
    %callf/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_wden.u_bit_field.get_sw_write_next_value, S_0x55558ed5cb30;
    %free S_0x55558ed5cb30;
    %assign/vec4 v0x55558ed5b000_0, 0;
T_52.2 ;
T_52.1 ;
    %jmp T_52;
    .thread T_52;
    .scope S_0x55558ed4e6e0;
T_53 ;
    %wait E_0x55558ed44af0;
    %load/vec4 v0x55558ed513f0_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_53.0, 8;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x55558ed4e9c0_0, 0;
    %jmp T_53.1;
T_53.0 ;
    %load/vec4 v0x55558ed520f0_0;
    %parti/s 1, 1, 2;
    %flag_set/vec4 8;
    %flag_get/vec4 8;
    %jmp/0 T_53.2, 8;
    %load/vec4 v0x55558ed51490_0;
    %pushi/vec4 0, 0, 1;
    %cmp/ne;
    %flag_get/vec4 4;
    %and;
T_53.2;
    %assign/vec4 v0x55558ed4e9c0_0, 0;
T_53.1 ;
    %jmp T_53;
    .thread T_53;
    .scope S_0x55558ed4d880;
T_54 ;
    %wait E_0x55558ed44af0;
    %load/vec4 v0x55558ed513f0_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_54.0, 8;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x55558ed4db50_0, 0;
    %jmp T_54.1;
T_54.0 ;
    %load/vec4 v0x55558ed51570_0;
    %flag_set/vec4 8;
    %flag_get/vec4 8;
    %jmp/0 T_54.2, 8;
    %load/vec4 v0x55558ed51310_0;
    %pushi/vec4 0, 0, 1;
    %cmp/ne;
    %flag_get/vec4 4;
    %and;
T_54.2;
    %assign/vec4 v0x55558ed4db50_0, 0;
T_54.1 ;
    %jmp T_54;
    .thread T_54;
    .scope S_0x55558ed4e400;
T_55 ;
    %wait E_0x55558ed44af0;
    %load/vec4 v0x55558ed513f0_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_55.0, 8;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x55558ed4e5e0_0, 0;
    %jmp T_55.1;
T_55.0 ;
    %pushi/vec4 1, 0, 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_55.4, 9;
    %load/vec4 v0x55558ed51f70_0;
    %and;
T_55.4;
    %flag_set/vec4 8;
    %jmp/0xz  T_55.2, 8;
    %alloc S_0x55558ed4ea80;
    %load/vec4 v0x55558ed4e5e0_0;
    %load/vec4 v0x55558ed51200_0;
    %load/vec4 v0x55558ed51610_0;
    %load/vec4 v0x55558ed51070_0;
    %load/vec4 v0x55558ed50f90_0;
    %store/vec4 v0x55558ed4ec60_0, 0, 1;
    %store/vec4 v0x55558ed4efe0_0, 0, 1;
    %store/vec4 v0x55558ed4f260_0, 0, 1;
    %store/vec4 v0x55558ed4f340_0, 0, 1;
    %store/vec4 v0x55558ed4ed60_0, 0, 1;
    %callf/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_s1wto.u_bit_field.get_hw_next_value, S_0x55558ed4ea80;
    %free S_0x55558ed4ea80;
    %assign/vec4 v0x55558ed4e5e0_0, 0;
    %jmp T_55.3;
T_55.2 ;
    %pushi/vec4 1, 0, 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_55.7, 9;
    %load/vec4 v0x55558ed520f0_0;
    %parti/s 1, 1, 2;
    %and;
T_55.7;
    %flag_set/vec4 8;
    %jmp/0xz  T_55.5, 8;
    %alloc S_0x55558ed4fff0;
    %load/vec4 v0x55558ed4e5e0_0;
    %load/vec4 v0x55558ed51490_0;
    %load/vec4 v0x55558ed51610_0;
    %store/vec4 v0x55558ed506b0_0, 0, 1;
    %store/vec4 v0x55558ed504a0_0, 0, 1;
    %store/vec4 v0x55558ed501d0_0, 0, 1;
    %callf/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_s1wto.u_bit_field.get_sw_write_next_value, S_0x55558ed4fff0;
    %free S_0x55558ed4fff0;
    %assign/vec4 v0x55558ed4e5e0_0, 0;
T_55.5 ;
T_55.3 ;
T_55.1 ;
    %jmp T_55;
    .thread T_55;
    .scope S_0x55558ed54d80;
T_56 ;
    %wait E_0x55558ed44af0;
    %load/vec4 v0x55558ed57980_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_56.0, 8;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x55558ed55060_0, 0;
    %jmp T_56.1;
T_56.0 ;
    %load/vec4 v0x55558ed58740_0;
    %parti/s 1, 1, 2;
    %flag_set/vec4 8;
    %flag_get/vec4 8;
    %jmp/0 T_56.2, 8;
    %load/vec4 v0x55558ed57b30_0;
    %pushi/vec4 0, 0, 1;
    %cmp/ne;
    %flag_get/vec4 4;
    %and;
T_56.2;
    %assign/vec4 v0x55558ed55060_0, 0;
T_56.1 ;
    %jmp T_56;
    .thread T_56;
    .scope S_0x55558ed53f20;
T_57 ;
    %wait E_0x55558ed44af0;
    %load/vec4 v0x55558ed57980_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_57.0, 8;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x55558ed541f0_0, 0;
    %jmp T_57.1;
T_57.0 ;
    %load/vec4 v0x55558ed57c10_0;
    %flag_set/vec4 8;
    %flag_get/vec4 8;
    %jmp/0 T_57.2, 8;
    %load/vec4 v0x55558ed578a0_0;
    %pushi/vec4 0, 0, 1;
    %cmp/ne;
    %flag_get/vec4 4;
    %and;
T_57.2;
    %assign/vec4 v0x55558ed541f0_0, 0;
T_57.1 ;
    %jmp T_57;
    .thread T_57;
    .scope S_0x55558ed54aa0;
T_58 ;
    %wait E_0x55558ed44af0;
    %load/vec4 v0x55558ed57980_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_58.0, 8;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x55558ed54c80_0, 0;
    %jmp T_58.1;
T_58.0 ;
    %pushi/vec4 1, 0, 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_58.4, 9;
    %load/vec4 v0x55558ed585c0_0;
    %and;
T_58.4;
    %flag_set/vec4 8;
    %jmp/0xz  T_58.2, 8;
    %alloc S_0x55558ed55120;
    %load/vec4 v0x55558ed54c80_0;
    %load/vec4 v0x55558ed57790_0;
    %load/vec4 v0x55558ed57cb0_0;
    %load/vec4 v0x55558ed57600_0;
    %load/vec4 v0x55558ed57520_0;
    %store/vec4 v0x55558ed55300_0, 0, 1;
    %store/vec4 v0x55558ed55680_0, 0, 1;
    %store/vec4 v0x55558ed55900_0, 0, 1;
    %store/vec4 v0x55558ed559e0_0, 0, 1;
    %store/vec4 v0x55558ed55400_0, 0, 1;
    %callf/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_s2wto.u_bit_field.get_hw_next_value, S_0x55558ed55120;
    %free S_0x55558ed55120;
    %assign/vec4 v0x55558ed54c80_0, 0;
    %jmp T_58.3;
T_58.2 ;
    %pushi/vec4 1, 0, 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_58.7, 9;
    %load/vec4 v0x55558ed58740_0;
    %parti/s 1, 1, 2;
    %and;
T_58.7;
    %flag_set/vec4 8;
    %jmp/0xz  T_58.5, 8;
    %alloc S_0x55558ed56690;
    %load/vec4 v0x55558ed54c80_0;
    %load/vec4 v0x55558ed57b30_0;
    %load/vec4 v0x55558ed57cb0_0;
    %store/vec4 v0x55558ed56d50_0, 0, 1;
    %store/vec4 v0x55558ed56b40_0, 0, 1;
    %store/vec4 v0x55558ed56870_0, 0, 1;
    %callf/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_s2wto.u_bit_field.get_sw_write_next_value, S_0x55558ed56690;
    %free S_0x55558ed56690;
    %assign/vec4 v0x55558ed54c80_0, 0;
T_58.5 ;
T_58.3 ;
T_58.1 ;
    %jmp T_58;
    .thread T_58;
    .scope S_0x55558ed61470;
T_59 ;
    %wait E_0x55558ed44af0;
    %load/vec4 v0x55558ed644b0_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_59.0, 8;
    %pushi/vec4 1023, 0, 10;
    %assign/vec4 v0x55558ed61650_0, 0;
    %jmp T_59.1;
T_59.0 ;
    %pushi/vec4 1, 0, 1;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_59.4, 9;
    %load/vec4 v0x55558ed65210_0;
    %parti/s 1, 1, 2;
    %and;
T_59.4;
    %flag_set/vec4 8;
    %jmp/0xz  T_59.2, 8;
    %alloc S_0x55558ed631b0;
    %load/vec4 v0x55558ed61650_0;
    %load/vec4 v0x55558ed64550_0;
    %load/vec4 v0x55558ed64760_0;
    %store/vec4 v0x55558ed63870_0, 0, 10;
    %store/vec4 v0x55558ed63660_0, 0, 10;
    %store/vec4 v0x55558ed63390_0, 0, 10;
    %callf/vec4 TD_wdg_tb.wdg_rv_inst.wdgrv_regs_inst.g_wdcsr.g_wtocnt.u_bit_field.get_sw_write_next_value, S_0x55558ed631b0;
    %free S_0x55558ed631b0;
    %assign/vec4 v0x55558ed61650_0, 0;
T_59.2 ;
T_59.1 ;
    %jmp T_59;
    .thread T_59;
    .scope S_0x55558ed6f3a0;
T_60 ;
    %wait E_0x55558ed44af0;
    %load/vec4 v0x55558ed76d70_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_60.0, 8;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x55558ed775d0_0, 0;
    %jmp T_60.1;
T_60.0 ;
    %load/vec4 v0x55558ed77690_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_60.2, 8;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x55558ed775d0_0, 0;
    %jmp T_60.3;
T_60.2 ;
    %load/vec4 v0x55558ed767f0_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_60.4, 8;
    %pushi/vec4 1, 0, 1;
    %assign/vec4 v0x55558ed775d0_0, 0;
T_60.4 ;
T_60.3 ;
T_60.1 ;
    %jmp T_60;
    .thread T_60;
    .scope S_0x55558ed6e6f0;
T_61 ;
    %wait E_0x55558ed44af0;
    %load/vec4 v0x55558ed78f50_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_61.0, 8;
    %pushi/vec4 0, 0, 2;
    %assign/vec4 v0x55558ed79f20_0, 0;
    %jmp T_61.1;
T_61.0 ;
    %load/vec4 v0x55558ed79f20_0;
    %cmpi/ne 0, 0, 2;
    %jmp/0xz  T_61.2, 4;
    %pushi/vec4 0, 0, 2;
    %assign/vec4 v0x55558ed79f20_0, 0;
    %jmp T_61.3;
T_61.2 ;
    %load/vec4 v0x55558ed7a500_0;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_61.6, 9;
    %load/vec4 v0x55558ed7a290_0;
    %and;
T_61.6;
    %flag_set/vec4 8;
    %jmp/0xz  T_61.4, 8;
    %load/vec4 v0x55558ed7a360_0;
    %parti/s 1, 1, 2;
    %flag_set/vec4 8;
    %jmp/0xz  T_61.7, 8;
    %pushi/vec4 2, 0, 2;
    %assign/vec4 v0x55558ed79f20_0, 0;
    %jmp T_61.8;
T_61.7 ;
    %pushi/vec4 1, 0, 2;
    %assign/vec4 v0x55558ed79f20_0, 0;
T_61.8 ;
T_61.4 ;
T_61.3 ;
T_61.1 ;
    %jmp T_61;
    .thread T_61;
    .scope S_0x55558ed6e6f0;
T_62 ;
    %wait E_0x55558ed44af0;
    %load/vec4 v0x55558ed78f50_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_62.0, 8;
    %pushi/vec4 0, 0, 32;
    %assign/vec4 v0x55558ed79e40_0, 0;
    %jmp T_62.1;
T_62.0 ;
    %load/vec4 v0x55558ed7a500_0;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_62.4, 9;
    %load/vec4 v0x55558ed7a290_0;
    %and;
T_62.4;
    %flag_set/vec4 8;
    %jmp/0xz  T_62.2, 8;
    %load/vec4 v0x55558ed7a1c0_0;
    %assign/vec4 v0x55558ed79e40_0, 0;
T_62.2 ;
T_62.1 ;
    %jmp T_62;
    .thread T_62;
    .scope S_0x55558ed1a320;
T_63 ;
    %wait E_0x55558eb945c0;
    %load/vec4 v0x55558eae5c50_0;
    %load/vec4 v0x55558ea7d9c0_0;
    %concat/vec4; draw_concat_vec4
    %dup/vec4;
    %pushi/vec4 56, 56, 7;
    %cmp/x;
    %jmp/1 T_63.0, 4;
    %dup/vec4;
    %pushi/vec4 120, 104, 7;
    %cmp/x;
    %jmp/1 T_63.1, 4;
    %dup/vec4;
    %pushi/vec4 120, 112, 7;
    %cmp/x;
    %jmp/1 T_63.2, 4;
    %dup/vec4;
    %pushi/vec4 120, 56, 7;
    %cmp/x;
    %jmp/1 T_63.3, 4;
    %dup/vec4;
    %pushi/vec4 57, 56, 7;
    %cmp/x;
    %jmp/1 T_63.4, 4;
    %dup/vec4;
    %pushi/vec4 121, 104, 7;
    %cmp/x;
    %jmp/1 T_63.5, 4;
    %dup/vec4;
    %pushi/vec4 121, 112, 7;
    %cmp/x;
    %jmp/1 T_63.6, 4;
    %dup/vec4;
    %pushi/vec4 65, 0, 7;
    %cmp/x;
    %jmp/1 T_63.7, 4;
    %dup/vec4;
    %pushi/vec4 121, 24, 7;
    %cmp/x;
    %jmp/1 T_63.8, 4;
    %dup/vec4;
    %pushi/vec4 58, 56, 7;
    %cmp/x;
    %jmp/1 T_63.9, 4;
    %dup/vec4;
    %pushi/vec4 122, 104, 7;
    %cmp/x;
    %jmp/1 T_63.10, 4;
    %dup/vec4;
    %pushi/vec4 122, 112, 7;
    %cmp/x;
    %jmp/1 T_63.11, 4;
    %dup/vec4;
    %pushi/vec4 122, 120, 7;
    %cmp/x;
    %jmp/1 T_63.12, 4;
    %dup/vec4;
    %pushi/vec4 59, 56, 7;
    %cmp/x;
    %jmp/1 T_63.13, 4;
    %dup/vec4;
    %pushi/vec4 123, 104, 7;
    %cmp/x;
    %jmp/1 T_63.14, 4;
    %dup/vec4;
    %pushi/vec4 123, 112, 7;
    %cmp/x;
    %jmp/1 T_63.15, 4;
    %dup/vec4;
    %pushi/vec4 67, 0, 7;
    %cmp/x;
    %jmp/1 T_63.16, 4;
    %dup/vec4;
    %pushi/vec4 123, 24, 7;
    %cmp/x;
    %jmp/1 T_63.17, 4;
    %dup/vec4;
    %pushi/vec4 62, 56, 7;
    %cmp/x;
    %jmp/1 T_63.18, 4;
    %dup/vec4;
    %pushi/vec4 126, 104, 7;
    %cmp/x;
    %jmp/1 T_63.19, 4;
    %dup/vec4;
    %pushi/vec4 126, 112, 7;
    %cmp/x;
    %jmp/1 T_63.20, 4;
    %dup/vec4;
    %pushi/vec4 126, 120, 7;
    %cmp/x;
    %jmp/1 T_63.21, 4;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0x55558ead6760_0, 0, 3;
    %jmp T_63.23;
T_63.0 ;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0x55558ead6760_0, 0, 3;
    %jmp T_63.23;
T_63.1 ;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0x55558ead6760_0, 0, 3;
    %jmp T_63.23;
T_63.2 ;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0x55558ead6760_0, 0, 3;
    %jmp T_63.23;
T_63.3 ;
    %pushi/vec4 1, 0, 3;
    %store/vec4 v0x55558ead6760_0, 0, 3;
    %jmp T_63.23;
T_63.4 ;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0x55558ead6760_0, 0, 3;
    %jmp T_63.23;
T_63.5 ;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0x55558ead6760_0, 0, 3;
    %jmp T_63.23;
T_63.6 ;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0x55558ead6760_0, 0, 3;
    %jmp T_63.23;
T_63.7 ;
    %pushi/vec4 1, 0, 3;
    %store/vec4 v0x55558ead6760_0, 0, 3;
    %jmp T_63.23;
T_63.8 ;
    %pushi/vec4 2, 0, 3;
    %store/vec4 v0x55558ead6760_0, 0, 3;
    %jmp T_63.23;
T_63.9 ;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0x55558ead6760_0, 0, 3;
    %jmp T_63.23;
T_63.10 ;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0x55558ead6760_0, 0, 3;
    %jmp T_63.23;
T_63.11 ;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0x55558ead6760_0, 0, 3;
    %jmp T_63.23;
T_63.12 ;
    %pushi/vec4 3, 0, 3;
    %store/vec4 v0x55558ead6760_0, 0, 3;
    %jmp T_63.23;
T_63.13 ;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0x55558ead6760_0, 0, 3;
    %jmp T_63.23;
T_63.14 ;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0x55558ead6760_0, 0, 3;
    %jmp T_63.23;
T_63.15 ;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0x55558ead6760_0, 0, 3;
    %jmp T_63.23;
T_63.16 ;
    %pushi/vec4 3, 0, 3;
    %store/vec4 v0x55558ead6760_0, 0, 3;
    %jmp T_63.23;
T_63.17 ;
    %pushi/vec4 6, 0, 3;
    %store/vec4 v0x55558ead6760_0, 0, 3;
    %jmp T_63.23;
T_63.18 ;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0x55558ead6760_0, 0, 3;
    %jmp T_63.23;
T_63.19 ;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0x55558ead6760_0, 0, 3;
    %jmp T_63.23;
T_63.20 ;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0x55558ead6760_0, 0, 3;
    %jmp T_63.23;
T_63.21 ;
    %pushi/vec4 6, 0, 3;
    %store/vec4 v0x55558ead6760_0, 0, 3;
    %jmp T_63.23;
T_63.23 ;
    %pop/vec4 1;
    %jmp T_63;
    .thread T_63, $push;
    .scope S_0x55558ed1a320;
T_64 ;
    %wait E_0x55558ed44af0;
    %load/vec4 v0x55558eb65ee0_0;
    %inv;
    %flag_set/vec4 8;
    %jmp/0xz  T_64.0, 8;
    %pushi/vec4 0, 0, 3;
    %assign/vec4 v0x55558ea7d9c0_0, 0;
    %jmp T_64.1;
T_64.0 ;
    %load/vec4 v0x55558ead6760_0;
    %assign/vec4 v0x55558ea7d9c0_0, 0;
T_64.1 ;
    %jmp T_64;
    .thread T_64;
    .scope S_0x55558eca61e0;
T_65 ;
    %wait E_0x55558e9e8c60;
    %load/vec4 v0x55558ead6a30_0;
    %inv;
    %flag_set/vec4 8;
    %jmp/0xz  T_65.0, 8;
    %pushi/vec4 0, 0, 10;
    %assign/vec4 v0x55558eb74730_0, 0;
    %jmp T_65.1;
T_65.0 ;
    %load/vec4 v0x55558eb74730_0;
    %load/vec4 v0x55558eb770a0_0;
    %cmp/e;
    %jmp/0xz  T_65.2, 4;
    %pushi/vec4 0, 0, 10;
    %assign/vec4 v0x55558eb74730_0, 0;
    %jmp T_65.3;
T_65.2 ;
    %load/vec4 v0x55558eb74730_0;
    %addi 1, 0, 10;
    %assign/vec4 v0x55558eb74730_0, 0;
T_65.3 ;
T_65.1 ;
    %jmp T_65;
    .thread T_65;
    .scope S_0x55558ecec970;
T_66 ;
    %wait E_0x55558ebc2c00;
    %load/vec4 v0x55558eb41e80_0;
    %inv;
    %flag_set/vec4 8;
    %jmp/0xz  T_66.0, 8;
    %pushi/vec4 0, 0, 20;
    %assign/vec4 v0x55558eb42e30_0, 0;
    %jmp T_66.1;
T_66.0 ;
    %load/vec4 v0x55558eb42e30_0;
    %addi 1, 0, 20;
    %assign/vec4 v0x55558eb42e30_0, 0;
T_66.1 ;
    %jmp T_66;
    .thread T_66;
    .scope S_0x55558ec88e40;
T_67 ;
    %wait E_0x55558ebc3340;
    %load/vec4 v0x55558eb87570_0;
    %load/vec4 v0x55558eb9eba0_0;
    %concat/vec4; draw_concat_vec4
    %dup/vec4;
    %pushi/vec4 6, 56, 7;
    %cmp/z;
    %jmp/1 T_67.0, 4;
    %dup/vec4;
    %pushi/vec4 70, 56, 7;
    %cmp/z;
    %jmp/1 T_67.1, 4;
    %dup/vec4;
    %pushi/vec4 3, 88, 7;
    %cmp/z;
    %jmp/1 T_67.2, 4;
    %dup/vec4;
    %pushi/vec4 35, 88, 7;
    %cmp/z;
    %jmp/1 T_67.3, 4;
    %dup/vec4;
    %pushi/vec4 7, 104, 7;
    %cmp/z;
    %jmp/1 T_67.4, 4;
    %dup/vec4;
    %pushi/vec4 23, 104, 7;
    %cmp/z;
    %jmp/1 T_67.5, 4;
    %dup/vec4;
    %pushi/vec4 5, 112, 7;
    %cmp/z;
    %jmp/1 T_67.6, 4;
    %dup/vec4;
    %pushi/vec4 13, 112, 7;
    %cmp/z;
    %jmp/1 T_67.7, 4;
    %load/vec4 v0x55558eb9eba0_0;
    %store/vec4 v0x55558eb87290_0, 0, 3;
    %jmp T_67.9;
T_67.0 ;
    %pushi/vec4 6, 0, 3;
    %store/vec4 v0x55558eb87290_0, 0, 3;
    %jmp T_67.9;
T_67.1 ;
    %pushi/vec4 3, 0, 3;
    %store/vec4 v0x55558eb87290_0, 0, 3;
    %jmp T_67.9;
T_67.2 ;
    %pushi/vec4 3, 0, 3;
    %store/vec4 v0x55558eb87290_0, 0, 3;
    %jmp T_67.9;
T_67.3 ;
    %pushi/vec4 7, 0, 3;
    %store/vec4 v0x55558eb87290_0, 0, 3;
    %jmp T_67.9;
T_67.4 ;
    %pushi/vec4 7, 0, 3;
    %store/vec4 v0x55558eb87290_0, 0, 3;
    %jmp T_67.9;
T_67.5 ;
    %pushi/vec4 5, 0, 3;
    %store/vec4 v0x55558eb87290_0, 0, 3;
    %jmp T_67.9;
T_67.6 ;
    %pushi/vec4 5, 0, 3;
    %store/vec4 v0x55558eb87290_0, 0, 3;
    %jmp T_67.9;
T_67.7 ;
    %pushi/vec4 6, 0, 3;
    %store/vec4 v0x55558eb87290_0, 0, 3;
    %jmp T_67.9;
T_67.9 ;
    %pop/vec4 1;
    %jmp T_67;
    .thread T_67, $push;
    .scope S_0x55558ec88e40;
T_68 ;
    %wait E_0x55558ebc2c00;
    %load/vec4 v0x55558eb9ea30_0;
    %inv;
    %flag_set/vec4 8;
    %jmp/0xz  T_68.0, 8;
    %pushi/vec4 6, 0, 3;
    %assign/vec4 v0x55558eb9eba0_0, 0;
    %jmp T_68.1;
T_68.0 ;
    %load/vec4 v0x55558eb87290_0;
    %assign/vec4 v0x55558eb9eba0_0, 0;
T_68.1 ;
    %jmp T_68;
    .thread T_68;
    .scope S_0x55558ec88e40;
T_69 ;
    %wait E_0x55558ebc2c00;
    %load/vec4 v0x55558eb9ea30_0;
    %inv;
    %flag_set/vec4 8;
    %jmp/0xz  T_69.0, 8;
    %pushi/vec4 0, 0, 7;
    %assign/vec4 v0x55558ecc8690_0, 0;
    %jmp T_69.1;
T_69.0 ;
    %load/vec4 v0x55558eca5a30_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_69.2, 8;
    %load/vec4 v0x55558ecc8690_0;
    %addi 1, 0, 7;
    %assign/vec4 v0x55558ecc8690_0, 0;
    %jmp T_69.3;
T_69.2 ;
    %pushi/vec4 0, 0, 7;
    %assign/vec4 v0x55558ecc8690_0, 0;
T_69.3 ;
T_69.1 ;
    %jmp T_69;
    .thread T_69;
    .scope S_0x55558eae28e0;
T_70 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x55558ed7f980_0, 0, 1;
T_70.0 ;
    %delay 10, 0;
    %load/vec4 v0x55558ed7f980_0;
    %inv;
    %store/vec4 v0x55558ed7f980_0, 0, 1;
    %jmp T_70.0;
T_70.1 ;
    %end;
    .thread T_70;
    .scope S_0x55558eae28e0;
T_71 ;
    %vpi_call 2 101 "$dumpfile", "sim/out/wdg_rv_out.vcd" {0 0 0};
    %vpi_call 2 102 "$dumpvars", 32'sb00000000000000000000000000000000, S_0x55558eae28e0 {0 0 0};
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x55558ed7fff0_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x55558ed80370_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x55558ed80410_0, 0, 1;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558ed7ff30_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x55558ed80150_0, 0, 32;
    %pushi/vec4 0, 0, 4;
    %store/vec4 v0x55558ed80210_0, 0, 4;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x55558ed7fbb0_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x55558ed7fd30_0, 0, 1;
    %delay 200, 0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x55558ed7fd30_0, 0, 1;
    %delay 1000, 0;
    %delay 2000, 0;
    %alloc S_0x55558ed7ed40;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x55558ed7ef20_0, 0, 1;
    %pushi/vec4 16, 0, 10;
    %store/vec4 v0x55558ed7f000_0, 0, 10;
    %fork TD_wdg_tb.wishbone_set_wdcsr, S_0x55558ed7ed40;
    %join;
    %free S_0x55558ed7ed40;
    %delay 200, 0;
    %alloc S_0x55558ed7ed40;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x55558ed7ef20_0, 0, 1;
    %pushi/vec4 16, 0, 10;
    %store/vec4 v0x55558ed7f000_0, 0, 10;
    %fork TD_wdg_tb.wishbone_set_wdcsr, S_0x55558ed7ed40;
    %join;
    %free S_0x55558ed7ed40;
    %delay 2000, 0;
    %alloc S_0x55558ed7ed40;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x55558ed7ef20_0, 0, 1;
    %pushi/vec4 16, 0, 10;
    %store/vec4 v0x55558ed7f000_0, 0, 10;
    %fork TD_wdg_tb.wishbone_set_wdcsr, S_0x55558ed7ed40;
    %join;
    %free S_0x55558ed7ed40;
    %vpi_call 2 138 "$display", "Sequence of reading the watchdog timer value" {0 0 0};
    %alloc S_0x55558ed7ea80;
    %fork TD_wdg_tb.wishbone_readwdg, S_0x55558ed7ea80;
    %join;
    %free S_0x55558ed7ea80;
    %delay 10, 0;
    %alloc S_0x55558ed7ea80;
    %fork TD_wdg_tb.wishbone_readwdg, S_0x55558ed7ea80;
    %join;
    %free S_0x55558ed7ea80;
    %delay 100, 0;
    %alloc S_0x55558ed7ea80;
    %fork TD_wdg_tb.wishbone_readwdg, S_0x55558ed7ea80;
    %join;
    %free S_0x55558ed7ea80;
    %delay 100, 0;
    %alloc S_0x55558ed7ea80;
    %fork TD_wdg_tb.wishbone_readwdg, S_0x55558ed7ea80;
    %join;
    %free S_0x55558ed7ea80;
    %delay 3000, 0;
    %alloc S_0x55558ed7ed40;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x55558ed7ef20_0, 0, 1;
    %pushi/vec4 16, 0, 10;
    %store/vec4 v0x55558ed7f000_0, 0, 10;
    %fork TD_wdg_tb.wishbone_set_wdcsr, S_0x55558ed7ed40;
    %join;
    %free S_0x55558ed7ed40;
    %delay 2000, 0;
    %delay 5000, 0;
    %alloc S_0x55558ed7ed40;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x55558ed7ef20_0, 0, 1;
    %pushi/vec4 16, 0, 10;
    %store/vec4 v0x55558ed7f000_0, 0, 10;
    %fork TD_wdg_tb.wishbone_set_wdcsr, S_0x55558ed7ed40;
    %join;
    %free S_0x55558ed7ed40;
    %delay 2000, 0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x55558ed7fbb0_0, 0, 1;
    %delay 20000, 0;
    %vpi_call 2 166 "$finish" {0 0 0};
    %end;
    .thread T_71;
# The file index is used to find the file name in the following table.
:file_names 17;
    "N/A";
    "<interactive>";
    "sim/wdg_tb.v";
    "rtl/reset_ctrl.v";
    "rtl/wdg_top.v";
    "rtl/clkdiv.v";
    "rtl/cntr.v";
    "rtl/fsm.v";
    "rtl/reg/wdgrv_regs.v";
    "./submodules/rggen-verilog-rtl/rggen_bit_field.v";
    "./submodules/rggen-verilog-rtl/rggen_default_register.v";
    "./submodules/rggen-verilog-rtl/rggen_register_common.v";
    "./submodules/rggen-verilog-rtl/rggen_address_decoder.v";
    "./submodules/rggen-verilog-rtl/rggen_mux.v";
    "./submodules/rggen-verilog-rtl/rggen_wishbone_adapter.v";
    "./submodules/rggen-verilog-rtl/rggen_adapter_common.v";
    "./submodules/rggen-verilog-rtl/rggen_or_reducer.v";
